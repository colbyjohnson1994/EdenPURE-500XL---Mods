

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Jun 01 21:22:06 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1847
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    16                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cinit,global,class=CODE,merge=1,delta=2
    18                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    23                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    24                           	psect	clrtext,global,class=CODE,delta=2
    25                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    26                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    27                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    28                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    29                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    30                           	psect	text1,local,class=CODE,merge=1,delta=2
    31                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text4,local,class=CODE,merge=1,delta=2
    34                           	psect	text5,local,class=CODE,merge=1,delta=2
    35                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text15,local,class=CODE,merge=1,delta=2
    45                           	psect	text16,local,class=CODE,merge=1,delta=2
    46                           	psect	text17,local,class=CODE,merge=1,delta=2
    47                           	psect	text18,local,class=CODE,merge=1,delta=2
    48                           	psect	text19,local,class=CODE,merge=1,delta=2
    49                           	psect	text20,local,class=CODE,merge=1,delta=2
    50                           	psect	text21,local,class=CODE,merge=1,delta=2
    51                           	psect	text22,local,class=CODE,merge=1,delta=2
    52                           	psect	text23,local,class=CODE,merge=1,delta=2
    53                           	psect	text24,local,class=CODE,merge=1,delta=2
    54                           	psect	text25,local,class=CODE,merge=1,delta=2
    55                           	psect	text26,local,class=CODE,merge=1,delta=2
    56                           	psect	text27,local,class=CODE,merge=1,delta=2
    57                           	psect	text28,local,class=CODE,merge=1,delta=2
    58                           	psect	text29,local,class=CODE,merge=1,delta=2
    59                           	psect	text30,local,class=CODE,merge=1,delta=2
    60                           	psect	text31,local,class=CODE,merge=1,delta=2
    61                           	psect	text32,local,class=CODE,merge=1,delta=2
    62                           	psect	text33,local,class=CODE,merge=1,delta=2
    63                           	psect	text34,local,class=CODE,merge=1,delta=2
    64                           	psect	intentry,global,class=CODE,delta=2
    65                           	psect	text36,local,class=CODE,merge=1,delta=2
    66                           	psect	text37,local,class=CODE,merge=1,delta=2
    67                           	psect	text38,local,class=CODE,merge=1,delta=2
    68                           	psect	text39,local,class=CODE,merge=1,delta=2
    69                           	psect	text40,local,class=CODE,merge=1,delta=2
    70                           	psect	text41,local,class=CODE,merge=1,delta=2
    71                           	psect	text42,local,class=CODE,merge=1,delta=2
    72                           	psect	text43,local,class=CODE,merge=1,delta=2
    73                           	psect	text44,local,class=CODE,merge=1,delta=2
    74                           	psect	text45,local,class=CODE,merge=1,delta=2
    75                           	psect	text46,local,class=CODE,merge=1,delta=2
    76                           	psect	text47,local,class=CODE,merge=1,delta=2
    77                           	psect	text48,local,class=CODE,merge=1,delta=2
    78                           	psect	text49,local,class=CODE,merge=1,delta=2
    79                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    80                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    81                           	dabs	1,0x7E,2
    82     0000                     
    83                           ; Version 2.40
    84                           ; Generated 17/11/2021 GMT
    85                           ; 
    86                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution. Publication is not required when
   100                           ;        this file is used in an embedded application.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC16F1847 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118     0000                     	;# 
   119     0001                     	;# 
   120     0002                     	;# 
   121     0003                     	;# 
   122     0004                     	;# 
   123     0005                     	;# 
   124     0006                     	;# 
   125     0007                     	;# 
   126     0008                     	;# 
   127     0009                     	;# 
   128     000A                     	;# 
   129     000B                     	;# 
   130     000C                     	;# 
   131     000D                     	;# 
   132     0011                     	;# 
   133     0012                     	;# 
   134     0013                     	;# 
   135     0014                     	;# 
   136     0015                     	;# 
   137     0016                     	;# 
   138     0016                     	;# 
   139     0017                     	;# 
   140     0018                     	;# 
   141     0019                     	;# 
   142     001A                     	;# 
   143     001B                     	;# 
   144     001C                     	;# 
   145     001E                     	;# 
   146     001F                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     0091                     	;# 
   150     0092                     	;# 
   151     0093                     	;# 
   152     0094                     	;# 
   153     0095                     	;# 
   154     0096                     	;# 
   155     0097                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009A                     	;# 
   159     009B                     	;# 
   160     009B                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     0111                     	;# 
   167     0112                     	;# 
   168     0113                     	;# 
   169     0114                     	;# 
   170     0115                     	;# 
   171     0116                     	;# 
   172     0117                     	;# 
   173     0118                     	;# 
   174     0119                     	;# 
   175     011A                     	;# 
   176     011B                     	;# 
   177     011D                     	;# 
   178     011E                     	;# 
   179     018C                     	;# 
   180     018D                     	;# 
   181     0191                     	;# 
   182     0191                     	;# 
   183     0192                     	;# 
   184     0193                     	;# 
   185     0193                     	;# 
   186     0193                     	;# 
   187     0194                     	;# 
   188     0195                     	;# 
   189     0196                     	;# 
   190     0199                     	;# 
   191     019A                     	;# 
   192     019B                     	;# 
   193     019B                     	;# 
   194     019B                     	;# 
   195     019B                     	;# 
   196     019C                     	;# 
   197     019C                     	;# 
   198     019D                     	;# 
   199     019E                     	;# 
   200     019F                     	;# 
   201     020C                     	;# 
   202     020D                     	;# 
   203     0211                     	;# 
   204     0211                     	;# 
   205     0212                     	;# 
   206     0212                     	;# 
   207     0213                     	;# 
   208     0213                     	;# 
   209     0214                     	;# 
   210     0214                     	;# 
   211     0215                     	;# 
   212     0215                     	;# 
   213     0215                     	;# 
   214     0216                     	;# 
   215     0216                     	;# 
   216     0217                     	;# 
   217     0217                     	;# 
   218     0219                     	;# 
   219     021A                     	;# 
   220     021B                     	;# 
   221     021C                     	;# 
   222     021D                     	;# 
   223     021E                     	;# 
   224     021F                     	;# 
   225     0291                     	;# 
   226     0291                     	;# 
   227     0292                     	;# 
   228     0293                     	;# 
   229     0294                     	;# 
   230     0295                     	;# 
   231     0295                     	;# 
   232     0296                     	;# 
   233     0298                     	;# 
   234     0298                     	;# 
   235     0299                     	;# 
   236     029A                     	;# 
   237     029B                     	;# 
   238     029C                     	;# 
   239     029C                     	;# 
   240     029D                     	;# 
   241     029E                     	;# 
   242     029E                     	;# 
   243     0311                     	;# 
   244     0311                     	;# 
   245     0312                     	;# 
   246     0313                     	;# 
   247     0318                     	;# 
   248     0318                     	;# 
   249     0319                     	;# 
   250     031A                     	;# 
   251     0394                     	;# 
   252     0395                     	;# 
   253     0396                     	;# 
   254     039A                     	;# 
   255     039C                     	;# 
   256     039D                     	;# 
   257     039E                     	;# 
   258     039F                     	;# 
   259     0415                     	;# 
   260     0416                     	;# 
   261     0417                     	;# 
   262     041C                     	;# 
   263     041D                     	;# 
   264     041E                     	;# 
   265     0FE4                     	;# 
   266     0FE5                     	;# 
   267     0FE6                     	;# 
   268     0FE7                     	;# 
   269     0FE8                     	;# 
   270     0FE9                     	;# 
   271     0FEA                     	;# 
   272     0FEB                     	;# 
   273     0FED                     	;# 
   274     0FEE                     	;# 
   275     0FEF                     	;# 
   276     0000                     	;# 
   277     0001                     	;# 
   278     0002                     	;# 
   279     0003                     	;# 
   280     0004                     	;# 
   281     0005                     	;# 
   282     0006                     	;# 
   283     0007                     	;# 
   284     0008                     	;# 
   285     0009                     	;# 
   286     000A                     	;# 
   287     000B                     	;# 
   288     000C                     	;# 
   289     000D                     	;# 
   290     0011                     	;# 
   291     0012                     	;# 
   292     0013                     	;# 
   293     0014                     	;# 
   294     0015                     	;# 
   295     0016                     	;# 
   296     0016                     	;# 
   297     0017                     	;# 
   298     0018                     	;# 
   299     0019                     	;# 
   300     001A                     	;# 
   301     001B                     	;# 
   302     001C                     	;# 
   303     001E                     	;# 
   304     001F                     	;# 
   305     008C                     	;# 
   306     008D                     	;# 
   307     0091                     	;# 
   308     0092                     	;# 
   309     0093                     	;# 
   310     0094                     	;# 
   311     0095                     	;# 
   312     0096                     	;# 
   313     0097                     	;# 
   314     0098                     	;# 
   315     0099                     	;# 
   316     009A                     	;# 
   317     009B                     	;# 
   318     009B                     	;# 
   319     009C                     	;# 
   320     009D                     	;# 
   321     009E                     	;# 
   322     010C                     	;# 
   323     010D                     	;# 
   324     0111                     	;# 
   325     0112                     	;# 
   326     0113                     	;# 
   327     0114                     	;# 
   328     0115                     	;# 
   329     0116                     	;# 
   330     0117                     	;# 
   331     0118                     	;# 
   332     0119                     	;# 
   333     011A                     	;# 
   334     011B                     	;# 
   335     011D                     	;# 
   336     011E                     	;# 
   337     018C                     	;# 
   338     018D                     	;# 
   339     0191                     	;# 
   340     0191                     	;# 
   341     0192                     	;# 
   342     0193                     	;# 
   343     0193                     	;# 
   344     0193                     	;# 
   345     0194                     	;# 
   346     0195                     	;# 
   347     0196                     	;# 
   348     0199                     	;# 
   349     019A                     	;# 
   350     019B                     	;# 
   351     019B                     	;# 
   352     019B                     	;# 
   353     019B                     	;# 
   354     019C                     	;# 
   355     019C                     	;# 
   356     019D                     	;# 
   357     019E                     	;# 
   358     019F                     	;# 
   359     020C                     	;# 
   360     020D                     	;# 
   361     0211                     	;# 
   362     0211                     	;# 
   363     0212                     	;# 
   364     0212                     	;# 
   365     0213                     	;# 
   366     0213                     	;# 
   367     0214                     	;# 
   368     0214                     	;# 
   369     0215                     	;# 
   370     0215                     	;# 
   371     0215                     	;# 
   372     0216                     	;# 
   373     0216                     	;# 
   374     0217                     	;# 
   375     0217                     	;# 
   376     0219                     	;# 
   377     021A                     	;# 
   378     021B                     	;# 
   379     021C                     	;# 
   380     021D                     	;# 
   381     021E                     	;# 
   382     021F                     	;# 
   383     0291                     	;# 
   384     0291                     	;# 
   385     0292                     	;# 
   386     0293                     	;# 
   387     0294                     	;# 
   388     0295                     	;# 
   389     0295                     	;# 
   390     0296                     	;# 
   391     0298                     	;# 
   392     0298                     	;# 
   393     0299                     	;# 
   394     029A                     	;# 
   395     029B                     	;# 
   396     029C                     	;# 
   397     029C                     	;# 
   398     029D                     	;# 
   399     029E                     	;# 
   400     029E                     	;# 
   401     0311                     	;# 
   402     0311                     	;# 
   403     0312                     	;# 
   404     0313                     	;# 
   405     0318                     	;# 
   406     0318                     	;# 
   407     0319                     	;# 
   408     031A                     	;# 
   409     0394                     	;# 
   410     0395                     	;# 
   411     0396                     	;# 
   412     039A                     	;# 
   413     039C                     	;# 
   414     039D                     	;# 
   415     039E                     	;# 
   416     039F                     	;# 
   417     0415                     	;# 
   418     0416                     	;# 
   419     0417                     	;# 
   420     041C                     	;# 
   421     041D                     	;# 
   422     041E                     	;# 
   423     0FE4                     	;# 
   424     0FE5                     	;# 
   425     0FE6                     	;# 
   426     0FE7                     	;# 
   427     0FE8                     	;# 
   428     0FE9                     	;# 
   429     0FEA                     	;# 
   430     0FEB                     	;# 
   431     0FED                     	;# 
   432     0FEE                     	;# 
   433     0FEF                     	;# 
   434     0000                     	;# 
   435     0001                     	;# 
   436     0002                     	;# 
   437     0003                     	;# 
   438     0004                     	;# 
   439     0005                     	;# 
   440     0006                     	;# 
   441     0007                     	;# 
   442     0008                     	;# 
   443     0009                     	;# 
   444     000A                     	;# 
   445     000B                     	;# 
   446     000C                     	;# 
   447     000D                     	;# 
   448     0011                     	;# 
   449     0012                     	;# 
   450     0013                     	;# 
   451     0014                     	;# 
   452     0015                     	;# 
   453     0016                     	;# 
   454     0016                     	;# 
   455     0017                     	;# 
   456     0018                     	;# 
   457     0019                     	;# 
   458     001A                     	;# 
   459     001B                     	;# 
   460     001C                     	;# 
   461     001E                     	;# 
   462     001F                     	;# 
   463     008C                     	;# 
   464     008D                     	;# 
   465     0091                     	;# 
   466     0092                     	;# 
   467     0093                     	;# 
   468     0094                     	;# 
   469     0095                     	;# 
   470     0096                     	;# 
   471     0097                     	;# 
   472     0098                     	;# 
   473     0099                     	;# 
   474     009A                     	;# 
   475     009B                     	;# 
   476     009B                     	;# 
   477     009C                     	;# 
   478     009D                     	;# 
   479     009E                     	;# 
   480     010C                     	;# 
   481     010D                     	;# 
   482     0111                     	;# 
   483     0112                     	;# 
   484     0113                     	;# 
   485     0114                     	;# 
   486     0115                     	;# 
   487     0116                     	;# 
   488     0117                     	;# 
   489     0118                     	;# 
   490     0119                     	;# 
   491     011A                     	;# 
   492     011B                     	;# 
   493     011D                     	;# 
   494     011E                     	;# 
   495     018C                     	;# 
   496     018D                     	;# 
   497     0191                     	;# 
   498     0191                     	;# 
   499     0192                     	;# 
   500     0193                     	;# 
   501     0193                     	;# 
   502     0193                     	;# 
   503     0194                     	;# 
   504     0195                     	;# 
   505     0196                     	;# 
   506     0199                     	;# 
   507     019A                     	;# 
   508     019B                     	;# 
   509     019B                     	;# 
   510     019B                     	;# 
   511     019B                     	;# 
   512     019C                     	;# 
   513     019C                     	;# 
   514     019D                     	;# 
   515     019E                     	;# 
   516     019F                     	;# 
   517     020C                     	;# 
   518     020D                     	;# 
   519     0211                     	;# 
   520     0211                     	;# 
   521     0212                     	;# 
   522     0212                     	;# 
   523     0213                     	;# 
   524     0213                     	;# 
   525     0214                     	;# 
   526     0214                     	;# 
   527     0215                     	;# 
   528     0215                     	;# 
   529     0215                     	;# 
   530     0216                     	;# 
   531     0216                     	;# 
   532     0217                     	;# 
   533     0217                     	;# 
   534     0219                     	;# 
   535     021A                     	;# 
   536     021B                     	;# 
   537     021C                     	;# 
   538     021D                     	;# 
   539     021E                     	;# 
   540     021F                     	;# 
   541     0291                     	;# 
   542     0291                     	;# 
   543     0292                     	;# 
   544     0293                     	;# 
   545     0294                     	;# 
   546     0295                     	;# 
   547     0295                     	;# 
   548     0296                     	;# 
   549     0298                     	;# 
   550     0298                     	;# 
   551     0299                     	;# 
   552     029A                     	;# 
   553     029B                     	;# 
   554     029C                     	;# 
   555     029C                     	;# 
   556     029D                     	;# 
   557     029E                     	;# 
   558     029E                     	;# 
   559     0311                     	;# 
   560     0311                     	;# 
   561     0312                     	;# 
   562     0313                     	;# 
   563     0318                     	;# 
   564     0318                     	;# 
   565     0319                     	;# 
   566     031A                     	;# 
   567     0394                     	;# 
   568     0395                     	;# 
   569     0396                     	;# 
   570     039A                     	;# 
   571     039C                     	;# 
   572     039D                     	;# 
   573     039E                     	;# 
   574     039F                     	;# 
   575     0415                     	;# 
   576     0416                     	;# 
   577     0417                     	;# 
   578     041C                     	;# 
   579     041D                     	;# 
   580     041E                     	;# 
   581     0FE4                     	;# 
   582     0FE5                     	;# 
   583     0FE6                     	;# 
   584     0FE7                     	;# 
   585     0FE8                     	;# 
   586     0FE9                     	;# 
   587     0FEA                     	;# 
   588     0FEB                     	;# 
   589     0FED                     	;# 
   590     0FEE                     	;# 
   591     0FEF                     	;# 
   592     0000                     	;# 
   593     0001                     	;# 
   594     0002                     	;# 
   595     0003                     	;# 
   596     0004                     	;# 
   597     0005                     	;# 
   598     0006                     	;# 
   599     0007                     	;# 
   600     0008                     	;# 
   601     0009                     	;# 
   602     000A                     	;# 
   603     000B                     	;# 
   604     000C                     	;# 
   605     000D                     	;# 
   606     0011                     	;# 
   607     0012                     	;# 
   608     0013                     	;# 
   609     0014                     	;# 
   610     0015                     	;# 
   611     0016                     	;# 
   612     0016                     	;# 
   613     0017                     	;# 
   614     0018                     	;# 
   615     0019                     	;# 
   616     001A                     	;# 
   617     001B                     	;# 
   618     001C                     	;# 
   619     001E                     	;# 
   620     001F                     	;# 
   621     008C                     	;# 
   622     008D                     	;# 
   623     0091                     	;# 
   624     0092                     	;# 
   625     0093                     	;# 
   626     0094                     	;# 
   627     0095                     	;# 
   628     0096                     	;# 
   629     0097                     	;# 
   630     0098                     	;# 
   631     0099                     	;# 
   632     009A                     	;# 
   633     009B                     	;# 
   634     009B                     	;# 
   635     009C                     	;# 
   636     009D                     	;# 
   637     009E                     	;# 
   638     010C                     	;# 
   639     010D                     	;# 
   640     0111                     	;# 
   641     0112                     	;# 
   642     0113                     	;# 
   643     0114                     	;# 
   644     0115                     	;# 
   645     0116                     	;# 
   646     0117                     	;# 
   647     0118                     	;# 
   648     0119                     	;# 
   649     011A                     	;# 
   650     011B                     	;# 
   651     011D                     	;# 
   652     011E                     	;# 
   653     018C                     	;# 
   654     018D                     	;# 
   655     0191                     	;# 
   656     0191                     	;# 
   657     0192                     	;# 
   658     0193                     	;# 
   659     0193                     	;# 
   660     0193                     	;# 
   661     0194                     	;# 
   662     0195                     	;# 
   663     0196                     	;# 
   664     0199                     	;# 
   665     019A                     	;# 
   666     019B                     	;# 
   667     019B                     	;# 
   668     019B                     	;# 
   669     019B                     	;# 
   670     019C                     	;# 
   671     019C                     	;# 
   672     019D                     	;# 
   673     019E                     	;# 
   674     019F                     	;# 
   675     020C                     	;# 
   676     020D                     	;# 
   677     0211                     	;# 
   678     0211                     	;# 
   679     0212                     	;# 
   680     0212                     	;# 
   681     0213                     	;# 
   682     0213                     	;# 
   683     0214                     	;# 
   684     0214                     	;# 
   685     0215                     	;# 
   686     0215                     	;# 
   687     0215                     	;# 
   688     0216                     	;# 
   689     0216                     	;# 
   690     0217                     	;# 
   691     0217                     	;# 
   692     0219                     	;# 
   693     021A                     	;# 
   694     021B                     	;# 
   695     021C                     	;# 
   696     021D                     	;# 
   697     021E                     	;# 
   698     021F                     	;# 
   699     0291                     	;# 
   700     0291                     	;# 
   701     0292                     	;# 
   702     0293                     	;# 
   703     0294                     	;# 
   704     0295                     	;# 
   705     0295                     	;# 
   706     0296                     	;# 
   707     0298                     	;# 
   708     0298                     	;# 
   709     0299                     	;# 
   710     029A                     	;# 
   711     029B                     	;# 
   712     029C                     	;# 
   713     029C                     	;# 
   714     029D                     	;# 
   715     029E                     	;# 
   716     029E                     	;# 
   717     0311                     	;# 
   718     0311                     	;# 
   719     0312                     	;# 
   720     0313                     	;# 
   721     0318                     	;# 
   722     0318                     	;# 
   723     0319                     	;# 
   724     031A                     	;# 
   725     0394                     	;# 
   726     0395                     	;# 
   727     0396                     	;# 
   728     039A                     	;# 
   729     039C                     	;# 
   730     039D                     	;# 
   731     039E                     	;# 
   732     039F                     	;# 
   733     0415                     	;# 
   734     0416                     	;# 
   735     0417                     	;# 
   736     041C                     	;# 
   737     041D                     	;# 
   738     041E                     	;# 
   739     0FE4                     	;# 
   740     0FE5                     	;# 
   741     0FE6                     	;# 
   742     0FE7                     	;# 
   743     0FE8                     	;# 
   744     0FE9                     	;# 
   745     0FEA                     	;# 
   746     0FEB                     	;# 
   747     0FED                     	;# 
   748     0FEE                     	;# 
   749     0FEF                     	;# 
   750     0000                     	;# 
   751     0001                     	;# 
   752     0002                     	;# 
   753     0003                     	;# 
   754     0004                     	;# 
   755     0005                     	;# 
   756     0006                     	;# 
   757     0007                     	;# 
   758     0008                     	;# 
   759     0009                     	;# 
   760     000A                     	;# 
   761     000B                     	;# 
   762     000C                     	;# 
   763     000D                     	;# 
   764     0011                     	;# 
   765     0012                     	;# 
   766     0013                     	;# 
   767     0014                     	;# 
   768     0015                     	;# 
   769     0016                     	;# 
   770     0016                     	;# 
   771     0017                     	;# 
   772     0018                     	;# 
   773     0019                     	;# 
   774     001A                     	;# 
   775     001B                     	;# 
   776     001C                     	;# 
   777     001E                     	;# 
   778     001F                     	;# 
   779     008C                     	;# 
   780     008D                     	;# 
   781     0091                     	;# 
   782     0092                     	;# 
   783     0093                     	;# 
   784     0094                     	;# 
   785     0095                     	;# 
   786     0096                     	;# 
   787     0097                     	;# 
   788     0098                     	;# 
   789     0099                     	;# 
   790     009A                     	;# 
   791     009B                     	;# 
   792     009B                     	;# 
   793     009C                     	;# 
   794     009D                     	;# 
   795     009E                     	;# 
   796     010C                     	;# 
   797     010D                     	;# 
   798     0111                     	;# 
   799     0112                     	;# 
   800     0113                     	;# 
   801     0114                     	;# 
   802     0115                     	;# 
   803     0116                     	;# 
   804     0117                     	;# 
   805     0118                     	;# 
   806     0119                     	;# 
   807     011A                     	;# 
   808     011B                     	;# 
   809     011D                     	;# 
   810     011E                     	;# 
   811     018C                     	;# 
   812     018D                     	;# 
   813     0191                     	;# 
   814     0191                     	;# 
   815     0192                     	;# 
   816     0193                     	;# 
   817     0193                     	;# 
   818     0193                     	;# 
   819     0194                     	;# 
   820     0195                     	;# 
   821     0196                     	;# 
   822     0199                     	;# 
   823     019A                     	;# 
   824     019B                     	;# 
   825     019B                     	;# 
   826     019B                     	;# 
   827     019B                     	;# 
   828     019C                     	;# 
   829     019C                     	;# 
   830     019D                     	;# 
   831     019E                     	;# 
   832     019F                     	;# 
   833     020C                     	;# 
   834     020D                     	;# 
   835     0211                     	;# 
   836     0211                     	;# 
   837     0212                     	;# 
   838     0212                     	;# 
   839     0213                     	;# 
   840     0213                     	;# 
   841     0214                     	;# 
   842     0214                     	;# 
   843     0215                     	;# 
   844     0215                     	;# 
   845     0215                     	;# 
   846     0216                     	;# 
   847     0216                     	;# 
   848     0217                     	;# 
   849     0217                     	;# 
   850     0219                     	;# 
   851     021A                     	;# 
   852     021B                     	;# 
   853     021C                     	;# 
   854     021D                     	;# 
   855     021E                     	;# 
   856     021F                     	;# 
   857     0291                     	;# 
   858     0291                     	;# 
   859     0292                     	;# 
   860     0293                     	;# 
   861     0294                     	;# 
   862     0295                     	;# 
   863     0295                     	;# 
   864     0296                     	;# 
   865     0298                     	;# 
   866     0298                     	;# 
   867     0299                     	;# 
   868     029A                     	;# 
   869     029B                     	;# 
   870     029C                     	;# 
   871     029C                     	;# 
   872     029D                     	;# 
   873     029E                     	;# 
   874     029E                     	;# 
   875     0311                     	;# 
   876     0311                     	;# 
   877     0312                     	;# 
   878     0313                     	;# 
   879     0318                     	;# 
   880     0318                     	;# 
   881     0319                     	;# 
   882     031A                     	;# 
   883     0394                     	;# 
   884     0395                     	;# 
   885     0396                     	;# 
   886     039A                     	;# 
   887     039C                     	;# 
   888     039D                     	;# 
   889     039E                     	;# 
   890     039F                     	;# 
   891     0415                     	;# 
   892     0416                     	;# 
   893     0417                     	;# 
   894     041C                     	;# 
   895     041D                     	;# 
   896     041E                     	;# 
   897     0FE4                     	;# 
   898     0FE5                     	;# 
   899     0FE6                     	;# 
   900     0FE7                     	;# 
   901     0FE8                     	;# 
   902     0FE9                     	;# 
   903     0FEA                     	;# 
   904     0FEB                     	;# 
   905     0FED                     	;# 
   906     0FEE                     	;# 
   907     0FEF                     	;# 
   908     0000                     	;# 
   909     0001                     	;# 
   910     0002                     	;# 
   911     0003                     	;# 
   912     0004                     	;# 
   913     0005                     	;# 
   914     0006                     	;# 
   915     0007                     	;# 
   916     0008                     	;# 
   917     0009                     	;# 
   918     000A                     	;# 
   919     000B                     	;# 
   920     000C                     	;# 
   921     000D                     	;# 
   922     0011                     	;# 
   923     0012                     	;# 
   924     0013                     	;# 
   925     0014                     	;# 
   926     0015                     	;# 
   927     0016                     	;# 
   928     0016                     	;# 
   929     0017                     	;# 
   930     0018                     	;# 
   931     0019                     	;# 
   932     001A                     	;# 
   933     001B                     	;# 
   934     001C                     	;# 
   935     001E                     	;# 
   936     001F                     	;# 
   937     008C                     	;# 
   938     008D                     	;# 
   939     0091                     	;# 
   940     0092                     	;# 
   941     0093                     	;# 
   942     0094                     	;# 
   943     0095                     	;# 
   944     0096                     	;# 
   945     0097                     	;# 
   946     0098                     	;# 
   947     0099                     	;# 
   948     009A                     	;# 
   949     009B                     	;# 
   950     009B                     	;# 
   951     009C                     	;# 
   952     009D                     	;# 
   953     009E                     	;# 
   954     010C                     	;# 
   955     010D                     	;# 
   956     0111                     	;# 
   957     0112                     	;# 
   958     0113                     	;# 
   959     0114                     	;# 
   960     0115                     	;# 
   961     0116                     	;# 
   962     0117                     	;# 
   963     0118                     	;# 
   964     0119                     	;# 
   965     011A                     	;# 
   966     011B                     	;# 
   967     011D                     	;# 
   968     011E                     	;# 
   969     018C                     	;# 
   970     018D                     	;# 
   971     0191                     	;# 
   972     0191                     	;# 
   973     0192                     	;# 
   974     0193                     	;# 
   975     0193                     	;# 
   976     0193                     	;# 
   977     0194                     	;# 
   978     0195                     	;# 
   979     0196                     	;# 
   980     0199                     	;# 
   981     019A                     	;# 
   982     019B                     	;# 
   983     019B                     	;# 
   984     019B                     	;# 
   985     019B                     	;# 
   986     019C                     	;# 
   987     019C                     	;# 
   988     019D                     	;# 
   989     019E                     	;# 
   990     019F                     	;# 
   991     020C                     	;# 
   992     020D                     	;# 
   993     0211                     	;# 
   994     0211                     	;# 
   995     0212                     	;# 
   996     0212                     	;# 
   997     0213                     	;# 
   998     0213                     	;# 
   999     0214                     	;# 
  1000     0214                     	;# 
  1001     0215                     	;# 
  1002     0215                     	;# 
  1003     0215                     	;# 
  1004     0216                     	;# 
  1005     0216                     	;# 
  1006     0217                     	;# 
  1007     0217                     	;# 
  1008     0219                     	;# 
  1009     021A                     	;# 
  1010     021B                     	;# 
  1011     021C                     	;# 
  1012     021D                     	;# 
  1013     021E                     	;# 
  1014     021F                     	;# 
  1015     0291                     	;# 
  1016     0291                     	;# 
  1017     0292                     	;# 
  1018     0293                     	;# 
  1019     0294                     	;# 
  1020     0295                     	;# 
  1021     0295                     	;# 
  1022     0296                     	;# 
  1023     0298                     	;# 
  1024     0298                     	;# 
  1025     0299                     	;# 
  1026     029A                     	;# 
  1027     029B                     	;# 
  1028     029C                     	;# 
  1029     029C                     	;# 
  1030     029D                     	;# 
  1031     029E                     	;# 
  1032     029E                     	;# 
  1033     0311                     	;# 
  1034     0311                     	;# 
  1035     0312                     	;# 
  1036     0313                     	;# 
  1037     0318                     	;# 
  1038     0318                     	;# 
  1039     0319                     	;# 
  1040     031A                     	;# 
  1041     0394                     	;# 
  1042     0395                     	;# 
  1043     0396                     	;# 
  1044     039A                     	;# 
  1045     039C                     	;# 
  1046     039D                     	;# 
  1047     039E                     	;# 
  1048     039F                     	;# 
  1049     0415                     	;# 
  1050     0416                     	;# 
  1051     0417                     	;# 
  1052     041C                     	;# 
  1053     041D                     	;# 
  1054     041E                     	;# 
  1055     0FE4                     	;# 
  1056     0FE5                     	;# 
  1057     0FE6                     	;# 
  1058     0FE7                     	;# 
  1059     0FE8                     	;# 
  1060     0FE9                     	;# 
  1061     0FEA                     	;# 
  1062     0FEB                     	;# 
  1063     0FED                     	;# 
  1064     0FEE                     	;# 
  1065     0FEF                     	;# 
  1066     0000                     	;# 
  1067     0001                     	;# 
  1068     0002                     	;# 
  1069     0003                     	;# 
  1070     0004                     	;# 
  1071     0005                     	;# 
  1072     0006                     	;# 
  1073     0007                     	;# 
  1074     0008                     	;# 
  1075     0009                     	;# 
  1076     000A                     	;# 
  1077     000B                     	;# 
  1078     000C                     	;# 
  1079     000D                     	;# 
  1080     0011                     	;# 
  1081     0012                     	;# 
  1082     0013                     	;# 
  1083     0014                     	;# 
  1084     0015                     	;# 
  1085     0016                     	;# 
  1086     0016                     	;# 
  1087     0017                     	;# 
  1088     0018                     	;# 
  1089     0019                     	;# 
  1090     001A                     	;# 
  1091     001B                     	;# 
  1092     001C                     	;# 
  1093     001E                     	;# 
  1094     001F                     	;# 
  1095     008C                     	;# 
  1096     008D                     	;# 
  1097     0091                     	;# 
  1098     0092                     	;# 
  1099     0093                     	;# 
  1100     0094                     	;# 
  1101     0095                     	;# 
  1102     0096                     	;# 
  1103     0097                     	;# 
  1104     0098                     	;# 
  1105     0099                     	;# 
  1106     009A                     	;# 
  1107     009B                     	;# 
  1108     009B                     	;# 
  1109     009C                     	;# 
  1110     009D                     	;# 
  1111     009E                     	;# 
  1112     010C                     	;# 
  1113     010D                     	;# 
  1114     0111                     	;# 
  1115     0112                     	;# 
  1116     0113                     	;# 
  1117     0114                     	;# 
  1118     0115                     	;# 
  1119     0116                     	;# 
  1120     0117                     	;# 
  1121     0118                     	;# 
  1122     0119                     	;# 
  1123     011A                     	;# 
  1124     011B                     	;# 
  1125     011D                     	;# 
  1126     011E                     	;# 
  1127     018C                     	;# 
  1128     018D                     	;# 
  1129     0191                     	;# 
  1130     0191                     	;# 
  1131     0192                     	;# 
  1132     0193                     	;# 
  1133     0193                     	;# 
  1134     0193                     	;# 
  1135     0194                     	;# 
  1136     0195                     	;# 
  1137     0196                     	;# 
  1138     0199                     	;# 
  1139     019A                     	;# 
  1140     019B                     	;# 
  1141     019B                     	;# 
  1142     019B                     	;# 
  1143     019B                     	;# 
  1144     019C                     	;# 
  1145     019C                     	;# 
  1146     019D                     	;# 
  1147     019E                     	;# 
  1148     019F                     	;# 
  1149     020C                     	;# 
  1150     020D                     	;# 
  1151     0211                     	;# 
  1152     0211                     	;# 
  1153     0212                     	;# 
  1154     0212                     	;# 
  1155     0213                     	;# 
  1156     0213                     	;# 
  1157     0214                     	;# 
  1158     0214                     	;# 
  1159     0215                     	;# 
  1160     0215                     	;# 
  1161     0215                     	;# 
  1162     0216                     	;# 
  1163     0216                     	;# 
  1164     0217                     	;# 
  1165     0217                     	;# 
  1166     0219                     	;# 
  1167     021A                     	;# 
  1168     021B                     	;# 
  1169     021C                     	;# 
  1170     021D                     	;# 
  1171     021E                     	;# 
  1172     021F                     	;# 
  1173     0291                     	;# 
  1174     0291                     	;# 
  1175     0292                     	;# 
  1176     0293                     	;# 
  1177     0294                     	;# 
  1178     0295                     	;# 
  1179     0295                     	;# 
  1180     0296                     	;# 
  1181     0298                     	;# 
  1182     0298                     	;# 
  1183     0299                     	;# 
  1184     029A                     	;# 
  1185     029B                     	;# 
  1186     029C                     	;# 
  1187     029C                     	;# 
  1188     029D                     	;# 
  1189     029E                     	;# 
  1190     029E                     	;# 
  1191     0311                     	;# 
  1192     0311                     	;# 
  1193     0312                     	;# 
  1194     0313                     	;# 
  1195     0318                     	;# 
  1196     0318                     	;# 
  1197     0319                     	;# 
  1198     031A                     	;# 
  1199     0394                     	;# 
  1200     0395                     	;# 
  1201     0396                     	;# 
  1202     039A                     	;# 
  1203     039C                     	;# 
  1204     039D                     	;# 
  1205     039E                     	;# 
  1206     039F                     	;# 
  1207     0415                     	;# 
  1208     0416                     	;# 
  1209     0417                     	;# 
  1210     041C                     	;# 
  1211     041D                     	;# 
  1212     041E                     	;# 
  1213     0FE4                     	;# 
  1214     0FE5                     	;# 
  1215     0FE6                     	;# 
  1216     0FE7                     	;# 
  1217     0FE8                     	;# 
  1218     0FE9                     	;# 
  1219     0FEA                     	;# 
  1220     0FEB                     	;# 
  1221     0FED                     	;# 
  1222     0FEE                     	;# 
  1223     0FEF                     	;# 
  1224     0000                     	;# 
  1225     0001                     	;# 
  1226     0002                     	;# 
  1227     0003                     	;# 
  1228     0004                     	;# 
  1229     0005                     	;# 
  1230     0006                     	;# 
  1231     0007                     	;# 
  1232     0008                     	;# 
  1233     0009                     	;# 
  1234     000A                     	;# 
  1235     000B                     	;# 
  1236     000C                     	;# 
  1237     000D                     	;# 
  1238     0011                     	;# 
  1239     0012                     	;# 
  1240     0013                     	;# 
  1241     0014                     	;# 
  1242     0015                     	;# 
  1243     0016                     	;# 
  1244     0016                     	;# 
  1245     0017                     	;# 
  1246     0018                     	;# 
  1247     0019                     	;# 
  1248     001A                     	;# 
  1249     001B                     	;# 
  1250     001C                     	;# 
  1251     001E                     	;# 
  1252     001F                     	;# 
  1253     008C                     	;# 
  1254     008D                     	;# 
  1255     0091                     	;# 
  1256     0092                     	;# 
  1257     0093                     	;# 
  1258     0094                     	;# 
  1259     0095                     	;# 
  1260     0096                     	;# 
  1261     0097                     	;# 
  1262     0098                     	;# 
  1263     0099                     	;# 
  1264     009A                     	;# 
  1265     009B                     	;# 
  1266     009B                     	;# 
  1267     009C                     	;# 
  1268     009D                     	;# 
  1269     009E                     	;# 
  1270     010C                     	;# 
  1271     010D                     	;# 
  1272     0111                     	;# 
  1273     0112                     	;# 
  1274     0113                     	;# 
  1275     0114                     	;# 
  1276     0115                     	;# 
  1277     0116                     	;# 
  1278     0117                     	;# 
  1279     0118                     	;# 
  1280     0119                     	;# 
  1281     011A                     	;# 
  1282     011B                     	;# 
  1283     011D                     	;# 
  1284     011E                     	;# 
  1285     018C                     	;# 
  1286     018D                     	;# 
  1287     0191                     	;# 
  1288     0191                     	;# 
  1289     0192                     	;# 
  1290     0193                     	;# 
  1291     0193                     	;# 
  1292     0193                     	;# 
  1293     0194                     	;# 
  1294     0195                     	;# 
  1295     0196                     	;# 
  1296     0199                     	;# 
  1297     019A                     	;# 
  1298     019B                     	;# 
  1299     019B                     	;# 
  1300     019B                     	;# 
  1301     019B                     	;# 
  1302     019C                     	;# 
  1303     019C                     	;# 
  1304     019D                     	;# 
  1305     019E                     	;# 
  1306     019F                     	;# 
  1307     020C                     	;# 
  1308     020D                     	;# 
  1309     0211                     	;# 
  1310     0211                     	;# 
  1311     0212                     	;# 
  1312     0212                     	;# 
  1313     0213                     	;# 
  1314     0213                     	;# 
  1315     0214                     	;# 
  1316     0214                     	;# 
  1317     0215                     	;# 
  1318     0215                     	;# 
  1319     0215                     	;# 
  1320     0216                     	;# 
  1321     0216                     	;# 
  1322     0217                     	;# 
  1323     0217                     	;# 
  1324     0219                     	;# 
  1325     021A                     	;# 
  1326     021B                     	;# 
  1327     021C                     	;# 
  1328     021D                     	;# 
  1329     021E                     	;# 
  1330     021F                     	;# 
  1331     0291                     	;# 
  1332     0291                     	;# 
  1333     0292                     	;# 
  1334     0293                     	;# 
  1335     0294                     	;# 
  1336     0295                     	;# 
  1337     0295                     	;# 
  1338     0296                     	;# 
  1339     0298                     	;# 
  1340     0298                     	;# 
  1341     0299                     	;# 
  1342     029A                     	;# 
  1343     029B                     	;# 
  1344     029C                     	;# 
  1345     029C                     	;# 
  1346     029D                     	;# 
  1347     029E                     	;# 
  1348     029E                     	;# 
  1349     0311                     	;# 
  1350     0311                     	;# 
  1351     0312                     	;# 
  1352     0313                     	;# 
  1353     0318                     	;# 
  1354     0318                     	;# 
  1355     0319                     	;# 
  1356     031A                     	;# 
  1357     0394                     	;# 
  1358     0395                     	;# 
  1359     0396                     	;# 
  1360     039A                     	;# 
  1361     039C                     	;# 
  1362     039D                     	;# 
  1363     039E                     	;# 
  1364     039F                     	;# 
  1365     0415                     	;# 
  1366     0416                     	;# 
  1367     0417                     	;# 
  1368     041C                     	;# 
  1369     041D                     	;# 
  1370     041E                     	;# 
  1371     0FE4                     	;# 
  1372     0FE5                     	;# 
  1373     0FE6                     	;# 
  1374     0FE7                     	;# 
  1375     0FE8                     	;# 
  1376     0FE9                     	;# 
  1377     0FEA                     	;# 
  1378     0FEB                     	;# 
  1379     0FED                     	;# 
  1380     0FEE                     	;# 
  1381     0FEF                     	;# 
  1382     0000                     	;# 
  1383     0001                     	;# 
  1384     0002                     	;# 
  1385     0003                     	;# 
  1386     0004                     	;# 
  1387     0005                     	;# 
  1388     0006                     	;# 
  1389     0007                     	;# 
  1390     0008                     	;# 
  1391     0009                     	;# 
  1392     000A                     	;# 
  1393     000B                     	;# 
  1394     000C                     	;# 
  1395     000D                     	;# 
  1396     0011                     	;# 
  1397     0012                     	;# 
  1398     0013                     	;# 
  1399     0014                     	;# 
  1400     0015                     	;# 
  1401     0016                     	;# 
  1402     0016                     	;# 
  1403     0017                     	;# 
  1404     0018                     	;# 
  1405     0019                     	;# 
  1406     001A                     	;# 
  1407     001B                     	;# 
  1408     001C                     	;# 
  1409     001E                     	;# 
  1410     001F                     	;# 
  1411     008C                     	;# 
  1412     008D                     	;# 
  1413     0091                     	;# 
  1414     0092                     	;# 
  1415     0093                     	;# 
  1416     0094                     	;# 
  1417     0095                     	;# 
  1418     0096                     	;# 
  1419     0097                     	;# 
  1420     0098                     	;# 
  1421     0099                     	;# 
  1422     009A                     	;# 
  1423     009B                     	;# 
  1424     009B                     	;# 
  1425     009C                     	;# 
  1426     009D                     	;# 
  1427     009E                     	;# 
  1428     010C                     	;# 
  1429     010D                     	;# 
  1430     0111                     	;# 
  1431     0112                     	;# 
  1432     0113                     	;# 
  1433     0114                     	;# 
  1434     0115                     	;# 
  1435     0116                     	;# 
  1436     0117                     	;# 
  1437     0118                     	;# 
  1438     0119                     	;# 
  1439     011A                     	;# 
  1440     011B                     	;# 
  1441     011D                     	;# 
  1442     011E                     	;# 
  1443     018C                     	;# 
  1444     018D                     	;# 
  1445     0191                     	;# 
  1446     0191                     	;# 
  1447     0192                     	;# 
  1448     0193                     	;# 
  1449     0193                     	;# 
  1450     0193                     	;# 
  1451     0194                     	;# 
  1452     0195                     	;# 
  1453     0196                     	;# 
  1454     0199                     	;# 
  1455     019A                     	;# 
  1456     019B                     	;# 
  1457     019B                     	;# 
  1458     019B                     	;# 
  1459     019B                     	;# 
  1460     019C                     	;# 
  1461     019C                     	;# 
  1462     019D                     	;# 
  1463     019E                     	;# 
  1464     019F                     	;# 
  1465     020C                     	;# 
  1466     020D                     	;# 
  1467     0211                     	;# 
  1468     0211                     	;# 
  1469     0212                     	;# 
  1470     0212                     	;# 
  1471     0213                     	;# 
  1472     0213                     	;# 
  1473     0214                     	;# 
  1474     0214                     	;# 
  1475     0215                     	;# 
  1476     0215                     	;# 
  1477     0215                     	;# 
  1478     0216                     	;# 
  1479     0216                     	;# 
  1480     0217                     	;# 
  1481     0217                     	;# 
  1482     0219                     	;# 
  1483     021A                     	;# 
  1484     021B                     	;# 
  1485     021C                     	;# 
  1486     021D                     	;# 
  1487     021E                     	;# 
  1488     021F                     	;# 
  1489     0291                     	;# 
  1490     0291                     	;# 
  1491     0292                     	;# 
  1492     0293                     	;# 
  1493     0294                     	;# 
  1494     0295                     	;# 
  1495     0295                     	;# 
  1496     0296                     	;# 
  1497     0298                     	;# 
  1498     0298                     	;# 
  1499     0299                     	;# 
  1500     029A                     	;# 
  1501     029B                     	;# 
  1502     029C                     	;# 
  1503     029C                     	;# 
  1504     029D                     	;# 
  1505     029E                     	;# 
  1506     029E                     	;# 
  1507     0311                     	;# 
  1508     0311                     	;# 
  1509     0312                     	;# 
  1510     0313                     	;# 
  1511     0318                     	;# 
  1512     0318                     	;# 
  1513     0319                     	;# 
  1514     031A                     	;# 
  1515     0394                     	;# 
  1516     0395                     	;# 
  1517     0396                     	;# 
  1518     039A                     	;# 
  1519     039C                     	;# 
  1520     039D                     	;# 
  1521     039E                     	;# 
  1522     039F                     	;# 
  1523     0415                     	;# 
  1524     0416                     	;# 
  1525     0417                     	;# 
  1526     041C                     	;# 
  1527     041D                     	;# 
  1528     041E                     	;# 
  1529     0FE4                     	;# 
  1530     0FE5                     	;# 
  1531     0FE6                     	;# 
  1532     0FE7                     	;# 
  1533     0FE8                     	;# 
  1534     0FE9                     	;# 
  1535     0FEA                     	;# 
  1536     0FEB                     	;# 
  1537     0FED                     	;# 
  1538     0FEE                     	;# 
  1539     0FEF                     	;# 
  1540                           
  1541                           	psect	eeprom_data
  1542     0000  0000 0001 0002 0003 0004 0005 0006 0007 	db	0,1,2,3,4,5,6,7	;# 
  1543     0008  0008 0009 000A 000B 000C 000D 000E 000F 	db	8,9,10,11,12,13,14,15	;# 
  1544     0000                     	;# 
  1545     0001                     	;# 
  1546     0002                     	;# 
  1547     0003                     	;# 
  1548     0004                     	;# 
  1549     0005                     	;# 
  1550     0006                     	;# 
  1551     0007                     	;# 
  1552     0008                     	;# 
  1553     0009                     	;# 
  1554     000A                     	;# 
  1555     000B                     	;# 
  1556     000C                     	;# 
  1557     000D                     	;# 
  1558     0011                     	;# 
  1559     0012                     	;# 
  1560     0013                     	;# 
  1561     0014                     	;# 
  1562     0015                     	;# 
  1563     0016                     	;# 
  1564     0016                     	;# 
  1565     0017                     	;# 
  1566     0018                     	;# 
  1567     0019                     	;# 
  1568     001A                     	;# 
  1569     001B                     	;# 
  1570     001C                     	;# 
  1571     001E                     	;# 
  1572     001F                     	;# 
  1573     008C                     	;# 
  1574     008D                     	;# 
  1575     0091                     	;# 
  1576     0092                     	;# 
  1577     0093                     	;# 
  1578     0094                     	;# 
  1579     0095                     	;# 
  1580     0096                     	;# 
  1581     0097                     	;# 
  1582     0098                     	;# 
  1583     0099                     	;# 
  1584     009A                     	;# 
  1585     009B                     	;# 
  1586     009B                     	;# 
  1587     009C                     	;# 
  1588     009D                     	;# 
  1589     009E                     	;# 
  1590     010C                     	;# 
  1591     010D                     	;# 
  1592     0111                     	;# 
  1593     0112                     	;# 
  1594     0113                     	;# 
  1595     0114                     	;# 
  1596     0115                     	;# 
  1597     0116                     	;# 
  1598     0117                     	;# 
  1599     0118                     	;# 
  1600     0119                     	;# 
  1601     011A                     	;# 
  1602     011B                     	;# 
  1603     011D                     	;# 
  1604     011E                     	;# 
  1605     018C                     	;# 
  1606     018D                     	;# 
  1607     0191                     	;# 
  1608     0191                     	;# 
  1609     0192                     	;# 
  1610     0193                     	;# 
  1611     0193                     	;# 
  1612     0193                     	;# 
  1613     0194                     	;# 
  1614     0195                     	;# 
  1615     0196                     	;# 
  1616     0199                     	;# 
  1617     019A                     	;# 
  1618     019B                     	;# 
  1619     019B                     	;# 
  1620     019B                     	;# 
  1621     019B                     	;# 
  1622     019C                     	;# 
  1623     019C                     	;# 
  1624     019D                     	;# 
  1625     019E                     	;# 
  1626     019F                     	;# 
  1627     020C                     	;# 
  1628     020D                     	;# 
  1629     0211                     	;# 
  1630     0211                     	;# 
  1631     0212                     	;# 
  1632     0212                     	;# 
  1633     0213                     	;# 
  1634     0213                     	;# 
  1635     0214                     	;# 
  1636     0214                     	;# 
  1637     0215                     	;# 
  1638     0215                     	;# 
  1639     0215                     	;# 
  1640     0216                     	;# 
  1641     0216                     	;# 
  1642     0217                     	;# 
  1643     0217                     	;# 
  1644     0219                     	;# 
  1645     021A                     	;# 
  1646     021B                     	;# 
  1647     021C                     	;# 
  1648     021D                     	;# 
  1649     021E                     	;# 
  1650     021F                     	;# 
  1651     0291                     	;# 
  1652     0291                     	;# 
  1653     0292                     	;# 
  1654     0293                     	;# 
  1655     0294                     	;# 
  1656     0295                     	;# 
  1657     0295                     	;# 
  1658     0296                     	;# 
  1659     0298                     	;# 
  1660     0298                     	;# 
  1661     0299                     	;# 
  1662     029A                     	;# 
  1663     029B                     	;# 
  1664     029C                     	;# 
  1665     029C                     	;# 
  1666     029D                     	;# 
  1667     029E                     	;# 
  1668     029E                     	;# 
  1669     0311                     	;# 
  1670     0311                     	;# 
  1671     0312                     	;# 
  1672     0313                     	;# 
  1673     0318                     	;# 
  1674     0318                     	;# 
  1675     0319                     	;# 
  1676     031A                     	;# 
  1677     0394                     	;# 
  1678     0395                     	;# 
  1679     0396                     	;# 
  1680     039A                     	;# 
  1681     039C                     	;# 
  1682     039D                     	;# 
  1683     039E                     	;# 
  1684     039F                     	;# 
  1685     0415                     	;# 
  1686     0416                     	;# 
  1687     0417                     	;# 
  1688     041C                     	;# 
  1689     041D                     	;# 
  1690     041E                     	;# 
  1691     0FE4                     	;# 
  1692     0FE5                     	;# 
  1693     0FE6                     	;# 
  1694     0FE7                     	;# 
  1695     0FE8                     	;# 
  1696     0FE9                     	;# 
  1697     0FEA                     	;# 
  1698     0FEB                     	;# 
  1699     0FED                     	;# 
  1700     0FEE                     	;# 
  1701     0FEF                     	;# 
  1702     0000                     	;# 
  1703     0001                     	;# 
  1704     0002                     	;# 
  1705     0003                     	;# 
  1706     0004                     	;# 
  1707     0005                     	;# 
  1708     0006                     	;# 
  1709     0007                     	;# 
  1710     0008                     	;# 
  1711     0009                     	;# 
  1712     000A                     	;# 
  1713     000B                     	;# 
  1714     000C                     	;# 
  1715     000D                     	;# 
  1716     0011                     	;# 
  1717     0012                     	;# 
  1718     0013                     	;# 
  1719     0014                     	;# 
  1720     0015                     	;# 
  1721     0016                     	;# 
  1722     0016                     	;# 
  1723     0017                     	;# 
  1724     0018                     	;# 
  1725     0019                     	;# 
  1726     001A                     	;# 
  1727     001B                     	;# 
  1728     001C                     	;# 
  1729     001E                     	;# 
  1730     001F                     	;# 
  1731     008C                     	;# 
  1732     008D                     	;# 
  1733     0091                     	;# 
  1734     0092                     	;# 
  1735     0093                     	;# 
  1736     0094                     	;# 
  1737     0095                     	;# 
  1738     0096                     	;# 
  1739     0097                     	;# 
  1740     0098                     	;# 
  1741     0099                     	;# 
  1742     009A                     	;# 
  1743     009B                     	;# 
  1744     009B                     	;# 
  1745     009C                     	;# 
  1746     009D                     	;# 
  1747     009E                     	;# 
  1748     010C                     	;# 
  1749     010D                     	;# 
  1750     0111                     	;# 
  1751     0112                     	;# 
  1752     0113                     	;# 
  1753     0114                     	;# 
  1754     0115                     	;# 
  1755     0116                     	;# 
  1756     0117                     	;# 
  1757     0118                     	;# 
  1758     0119                     	;# 
  1759     011A                     	;# 
  1760     011B                     	;# 
  1761     011D                     	;# 
  1762     011E                     	;# 
  1763     018C                     	;# 
  1764     018D                     	;# 
  1765     0191                     	;# 
  1766     0191                     	;# 
  1767     0192                     	;# 
  1768     0193                     	;# 
  1769     0193                     	;# 
  1770     0193                     	;# 
  1771     0194                     	;# 
  1772     0195                     	;# 
  1773     0196                     	;# 
  1774     0199                     	;# 
  1775     019A                     	;# 
  1776     019B                     	;# 
  1777     019B                     	;# 
  1778     019B                     	;# 
  1779     019B                     	;# 
  1780     019C                     	;# 
  1781     019C                     	;# 
  1782     019D                     	;# 
  1783     019E                     	;# 
  1784     019F                     	;# 
  1785     020C                     	;# 
  1786     020D                     	;# 
  1787     0211                     	;# 
  1788     0211                     	;# 
  1789     0212                     	;# 
  1790     0212                     	;# 
  1791     0213                     	;# 
  1792     0213                     	;# 
  1793     0214                     	;# 
  1794     0214                     	;# 
  1795     0215                     	;# 
  1796     0215                     	;# 
  1797     0215                     	;# 
  1798     0216                     	;# 
  1799     0216                     	;# 
  1800     0217                     	;# 
  1801     0217                     	;# 
  1802     0219                     	;# 
  1803     021A                     	;# 
  1804     021B                     	;# 
  1805     021C                     	;# 
  1806     021D                     	;# 
  1807     021E                     	;# 
  1808     021F                     	;# 
  1809     0291                     	;# 
  1810     0291                     	;# 
  1811     0292                     	;# 
  1812     0293                     	;# 
  1813     0294                     	;# 
  1814     0295                     	;# 
  1815     0295                     	;# 
  1816     0296                     	;# 
  1817     0298                     	;# 
  1818     0298                     	;# 
  1819     0299                     	;# 
  1820     029A                     	;# 
  1821     029B                     	;# 
  1822     029C                     	;# 
  1823     029C                     	;# 
  1824     029D                     	;# 
  1825     029E                     	;# 
  1826     029E                     	;# 
  1827     0311                     	;# 
  1828     0311                     	;# 
  1829     0312                     	;# 
  1830     0313                     	;# 
  1831     0318                     	;# 
  1832     0318                     	;# 
  1833     0319                     	;# 
  1834     031A                     	;# 
  1835     0394                     	;# 
  1836     0395                     	;# 
  1837     0396                     	;# 
  1838     039A                     	;# 
  1839     039C                     	;# 
  1840     039D                     	;# 
  1841     039E                     	;# 
  1842     039F                     	;# 
  1843     0415                     	;# 
  1844     0416                     	;# 
  1845     0417                     	;# 
  1846     041C                     	;# 
  1847     041D                     	;# 
  1848     041E                     	;# 
  1849     0FE4                     	;# 
  1850     0FE5                     	;# 
  1851     0FE6                     	;# 
  1852     0FE7                     	;# 
  1853     0FE8                     	;# 
  1854     0FE9                     	;# 
  1855     0FEA                     	;# 
  1856     0FEB                     	;# 
  1857     0FED                     	;# 
  1858     0FEE                     	;# 
  1859     0FEF                     	;# 
  1860                           
  1861 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1862     0000                     
  1863 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1864     0000                     
  1865 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1866     0000                     
  1867                           	psect	idataBANK1
  1868     0002                     __pidataBANK1:
  1869                           
  1870                           ;initializer for _SPKR_COUNT
  1871     0002  3464               	retlw	100
  1872                           
  1873                           ;initializer for _SPKR_DURATION
  1874     0003  3402               	retlw	2
  1875                           
  1876                           	psect	idataBANK2
  1877     16E9                     __pidataBANK2:
  1878                           
  1879                           ;initializer for _HEAT_CALL_TICKS
  1880     16E9  343C               	retlw	60
  1881     16EA  3400               	retlw	0
  1882                           
  1883                           	psect	stringtext1
  1884     1800                     __pstringtext1:
  1885     1800                     _SETPOINTS:
  1886     1800  3400               	retlw	0
  1887     1801  3400               	retlw	0
  1888     1802  3441               	retlw	65
  1889     1803  3400               	retlw	0
  1890     1804  3444               	retlw	68
  1891     1805  3400               	retlw	0
  1892     1806  3447               	retlw	71
  1893     1807  3400               	retlw	0
  1894     1808  344A               	retlw	74
  1895     1809  3400               	retlw	0
  1896     180A  344D               	retlw	77
  1897     180B  3400               	retlw	0
  1898     180C                     __end_of_SETPOINTS:
  1899                           
  1900                           	psect	stringtext2
  1901     180C                     __pstringtext2:
  1902     180C                     _C:
  1903     180C  3480               	retlw	128
  1904     180D  3425               	retlw	37
  1905     180E  34C4               	retlw	196
  1906     180F  3433               	retlw	51
  1907     1810                     __end_of_C:
  1908                           
  1909                           	psect	stringtext3
  1910     1810                     __pstringtext3:
  1911     1810                     _B:
  1912     1810  3416               	retlw	22
  1913     1811  342D               	retlw	45
  1914     1812  3478               	retlw	120
  1915     1813  3439               	retlw	57
  1916     1814                     __end_of_B:
  1917                           
  1918                           	psect	stringtext4
  1919     1814                     __pstringtext4:
  1920     1814                     _A:
  1921     1814  3410               	retlw	16
  1922     1815  3400               	retlw	0
  1923     1816  34A8               	retlw	168
  1924     1817  343A               	retlw	58
  1925     1818                     __end_of_A:
  1926                           
  1927                           	psect	stringtext5
  1928     1818                     __pstringtext5:
  1929     1818                     _ONE_SECOND:
  1930     1818  340A               	retlw	10
  1931     1819  3400               	retlw	0
  1932     181A                     __end_of_ONE_SECOND:
  1933                           
  1934                           	psect	stringtext6
  1935     181A                     __pstringtext6:
  1936     181A                     _TURN_ON:
  1937     181A  3401               	retlw	1
  1938     181B  3400               	retlw	0
  1939     181C                     __end_of_TURN_ON:
  1940                           
  1941                           	psect	stringtext7
  1942     181C                     __pstringtext7:
  1943     181C                     _SHUT_OFF:
  1944     181C  3402               	retlw	2
  1945     181D  3400               	retlw	0
  1946     181E                     __end_of_SHUT_OFF:
  1947                           
  1948                           	psect	stringtext8
  1949     181E                     __pstringtext8:
  1950     181E                     _MIN_IDLE_TIME:
  1951     181E  3401               	retlw	1
  1952     181F  3400               	retlw	0
  1953     1820                     __end_of_MIN_IDLE_TIME:
  1954                           
  1955                           	psect	stringtext9
  1956     1820                     __pstringtext9:
  1957     1820                     _MIN_RUN_TIME:
  1958     1820  3401               	retlw	1
  1959     1821  3400               	retlw	0
  1960     1822                     __end_of_MIN_RUN_TIME:
  1961                           
  1962                           	psect	nvBANK1
  1963     00D1                     __pnvBANK1:
  1964     00D1                     _TMR2_InterruptHandler:
  1965     00D1                     	ds	2
  1966     00D3                     _EUSART_ErrorHandler:
  1967     00D3                     	ds	2
  1968     00D5                     _EUSART_OverrunErrorHandler:
  1969     00D5                     	ds	2
  1970     00D7                     _EUSART_FramingErrorHandler:
  1971     00D7                     	ds	2
  1972     00D9                     _TMR1_InterruptHandler:
  1973     00D9                     	ds	2
  1974     00DB                     _TMR0_InterruptHandler:
  1975     00DB                     	ds	2
  1976     001C                     _T2CONbits	set	28
  1977     001C                     _T2CON	set	28
  1978     001A                     _TMR2	set	26
  1979     001B                     _PR2	set	27
  1980     000D                     _PORTBbits	set	13
  1981     000C                     _PORTAbits	set	12
  1982     0019                     _T1GCONbits	set	25
  1983     0018                     _T1CONbits	set	24
  1984     0018                     _T1CON	set	24
  1985     0016                     _TMR1L	set	22
  1986     0017                     _TMR1H	set	23
  1987     0019                     _T1GCON	set	25
  1988     0011                     _PIR1bits	set	17
  1989     000B                     _INTCONbits	set	11
  1990     0015                     _TMR0	set	21
  1991     008D                     _TRISBbits	set	141
  1992     008C                     _TRISAbits	set	140
  1993     0091                     _PIE1bits	set	145
  1994     0095                     _OPTION_REG	set	149
  1995     009D                     _ADCON0bits	set	157
  1996     009D                     _ADCON0	set	157
  1997     009C                     _ADRESH	set	156
  1998     009B                     _ADRESL	set	155
  1999     009E                     _ADCON1	set	158
  2000     0097                     _WDTCON	set	151
  2001     0098                     _OSCTUNE	set	152
  2002     0099                     _OSCCON	set	153
  2003     0095                     _OPTION_REGbits	set	149
  2004     008D                     _TRISB	set	141
  2005     008C                     _TRISA	set	140
  2006     010D                     _LATBbits	set	269
  2007     010C                     _LATAbits	set	268
  2008     0116                     _BORCON	set	278
  2009     011E                     _APFCON1	set	286
  2010     011D                     _APFCON0	set	285
  2011     010D                     _LATB	set	269
  2012     010C                     _LATA	set	268
  2013     0196                     _EECON2	set	406
  2014     0193                     _EEDATL	set	403
  2015     0194                     _EEDATH	set	404
  2016     0195                     _EECON1bits	set	405
  2017     0192                     _EEADRH	set	402
  2018     0191                     _EEADRL	set	401
  2019     019A                     _TXREG	set	410
  2020     0199                     _RCREG	set	409
  2021     019D                     _RCSTAbits	set	413
  2022     019E                     _TXSTAbits	set	414
  2023     019C                     _SPBRGH	set	412
  2024     019B                     _SPBRGL	set	411
  2025     019E                     _TXSTA	set	414
  2026     019D                     _RCSTA	set	413
  2027     019F                     _BAUDCON	set	415
  2028     018C                     _ANSELA	set	396
  2029     018D                     _ANSELB	set	397
  2030     020C                     _WPUA	set	524
  2031     020D                     _WPUB	set	525
  2032                           
  2033                           	psect	cinit
  2034     0025                     start_initialization:	
  2035                           ; #config settings
  2036                           
  2037     0025                     __initialization:
  2038                           
  2039                           ; Initialize objects allocated to BANK1
  2040     0025  0021               	movlb	1	; select bank1
  2041     0026  3180  2002  3180   	fcall	__pidataBANK1	;fetch initializer
  2042     0029  00DD               	movwf	__pdataBANK1& (0+127)
  2043     002A  3180  2003  3180   	fcall	__pidataBANK1+1	;fetch initializer
  2044     002D  00DE               	movwf	(__pdataBANK1+1)& (0+127)
  2045                           
  2046                           ; Initialize objects allocated to BANK2
  2047     002E  0022               	movlb	2	; select bank2
  2048     002F  3196  26E9  3180   	fcall	__pidataBANK2	;fetch initializer
  2049     0032  00D8               	movwf	__pdataBANK2& (0+127)
  2050     0033  3196  26EA  3180   	fcall	__pidataBANK2+1	;fetch initializer
  2051     0036  00D9               	movwf	(__pdataBANK2+1)& (0+127)
  2052                           
  2053                           ; Clear objects allocated to COMMON
  2054     0037  01F6               	clrf	__pbssCOMMON& (0+127)
  2055     0038  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  2056     0039  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  2057     003A  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  2058                           
  2059                           ; Clear objects allocated to BANK0
  2060     003B  0020               	movlb	0	; select bank0
  2061     003C  01EF               	clrf	__pbssBANK0& (0+127)
  2062                           
  2063                           ; Clear objects allocated to BANK1
  2064     003D  30C3               	movlw	low __pbssBANK1
  2065     003E  0084               	movwf	4
  2066     003F  3000               	movlw	high __pbssBANK1
  2067     0040  0085               	movwf	5
  2068     0041  300E               	movlw	14
  2069     0042  3197  2718         	fcall	clear_ram0
  2070                           
  2071                           ; Clear objects allocated to BANK2
  2072     0044  0022               	movlb	2	; select bank2
  2073     0045  01D2               	clrf	__pbssBANK2& (0+127)
  2074     0046  01D3               	clrf	(__pbssBANK2+1)& (0+127)
  2075     0047  01D4               	clrf	(__pbssBANK2+2)& (0+127)
  2076     0048  01D5               	clrf	(__pbssBANK2+3)& (0+127)
  2077     0049  01D6               	clrf	(__pbssBANK2+4)& (0+127)
  2078     004A  01D7               	clrf	(__pbssBANK2+5)& (0+127)
  2079     004B                     end_of_initialization:	
  2080                           ;End of C runtime variable initialization code
  2081                           
  2082     004B                     __end_of__initialization:
  2083     004B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2084     004C  0020               	movlb	0
  2085     004D  3187  2F54         	ljmp	_main	;jump to C main() function
  2086                           
  2087                           	psect	bssCOMMON
  2088     0076                     __pbssCOMMON:
  2089     0076                     _CURRENT_MODE:
  2090     0076                     	ds	2
  2091     0078                     _LOGIC_TICK:
  2092     0078                     	ds	1
  2093     0079                     _timer0ReloadVal:
  2094     0079                     	ds	1
  2095                           
  2096                           	psect	bssBANK0
  2097     006F                     __pbssBANK0:
  2098     006F                     _RELAY_STATUS:
  2099     006F                     	ds	1
  2100                           
  2101                           	psect	bssBANK1
  2102     00C3                     __pbssBANK1:
  2103     00C3                     _READING_ITER:
  2104     00C3                     	ds	2
  2105     00C5                     _DISP_STATE:
  2106     00C5                     	ds	2
  2107     00C7                     _timer1ReloadVal:
  2108     00C7                     	ds	2
  2109     00C9                     _ADC_InterruptHandler:
  2110     00C9                     	ds	2
  2111     00CB                     _DN_CLICKED:
  2112     00CB                     	ds	1
  2113     00CC                     _SPKR_DC:
  2114     00CC                     	ds	1
  2115     00CD                     _FULL_SAMPLE:
  2116     00CD                     	ds	1
  2117     00CE                     __LastDownState:
  2118     00CE                     	ds	1
  2119     00CF                     __LastUpState:
  2120     00CF                     	ds	1
  2121     00D0                     _eusartRxLastError:
  2122     00D0                     	ds	1
  2123                           
  2124                           	psect	dataBANK1
  2125     00DD                     __pdataBANK1:
  2126     00DD                     _SPKR_COUNT:
  2127     00DD                     	ds	1
  2128     00DE                     _SPKR_DURATION:
  2129     00DE                     	ds	1
  2130                           
  2131                           	psect	bssBANK2
  2132     0152                     __pbssBANK2:
  2133     0152                     _TEMP:
  2134     0152                     	ds	2
  2135     0154                     _LOGIC_FLAG:
  2136     0154                     	ds	1
  2137     0155                     _UART_FLAG:
  2138     0155                     	ds	1
  2139     0156                     _READ_FLAG:
  2140     0156                     	ds	1
  2141     0157                     __SaveMemory:
  2142     0157                     	ds	1
  2143                           
  2144                           	psect	dataBANK2
  2145     0158                     __pdataBANK2:
  2146     0158                     _HEAT_CALL_TICKS:
  2147     0158                     	ds	2
  2148                           
  2149                           	psect	clrtext
  2150     1718                     clear_ram0:	
  2151                           ;	Called with FSR0 containing the base address, and
  2152                           ;	WREG with the size to clear
  2153                           
  2154     1718  0064               	clrwdt	;clear the watchdog before getting into this loop
  2155     1719                     clrloop0:
  2156     1719  0180               	clrf	0	;clear RAM location pointed to by FSR
  2157     171A  3101               	addfsr 0,1
  2158     171B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2159     171C  2F19               	goto	clrloop0	;have we reached the end yet?
  2160     171D  3400               	retlw	0	;all done for this memory range, return
  2161                           
  2162                           	psect	cstackBANK2
  2163     0120                     __pcstackBANK2:
  2164     0120                     __ReadSensor@Vout:
  2165                           
  2166                           ; 4 bytes @ 0x0
  2167     0120                     	ds	4
  2168     0124                     __ReadSensor@Rpullup:
  2169                           
  2170                           ; 4 bytes @ 0x4
  2171     0124                     	ds	4
  2172     0128                     __ReadSensor@Vcc:
  2173                           
  2174                           ; 4 bytes @ 0x8
  2175     0128                     	ds	4
  2176     012C                     __ReadSensor@Rntc:
  2177                           
  2178                           ; 4 bytes @ 0xC
  2179     012C                     	ds	4
  2180     0130                     __ReadSensor@invT:
  2181                           
  2182                           ; 4 bytes @ 0x10
  2183     0130                     	ds	4
  2184     0134                     __ReadSensor@T:
  2185                           
  2186                           ; 4 bytes @ 0x14
  2187     0134                     	ds	4
  2188     0138                     __ReadSensor@Tc:
  2189                           
  2190                           ; 4 bytes @ 0x18
  2191     0138                     	ds	4
  2192     013C                     __ReadSensor@Tf:
  2193                           
  2194                           ; 4 bytes @ 0x1C
  2195     013C                     	ds	4
  2196     0140                     __ReadSensor$1847:
  2197                           
  2198                           ; 4 bytes @ 0x20
  2199     0140                     	ds	4
  2200     0144                     __ReadSensor$1848:
  2201                           
  2202                           ; 4 bytes @ 0x24
  2203     0144                     	ds	4
  2204     0148                     __ReadSensor$1849:
  2205                           
  2206                           ; 4 bytes @ 0x28
  2207     0148                     	ds	4
  2208     014C                     __ReadSensor@adcValue:
  2209                           
  2210                           ; 2 bytes @ 0x2C
  2211     014C                     	ds	2
  2212     014E                     __ReadSensor@logR:
  2213                           
  2214                           ; 4 bytes @ 0x2E
  2215     014E                     	ds	4
  2216                           
  2217                           	psect	cstackBANK1
  2218     00A0                     __pcstackBANK1:
  2219     00A0                     ___flmul@sign:
  2220                           
  2221                           ; 1 bytes @ 0x0
  2222     00A0                     	ds	1
  2223     00A1                     ___flmul@aexp:
  2224                           
  2225                           ; 1 bytes @ 0x1
  2226     00A1                     	ds	1
  2227     00A2                     ___flmul@grs:
  2228                           
  2229                           ; 4 bytes @ 0x2
  2230     00A2                     	ds	4
  2231     00A6                     ___flmul@bexp:
  2232                           
  2233                           ; 1 bytes @ 0x6
  2234     00A6                     	ds	1
  2235     00A7                     ___flmul@prod:
  2236                           
  2237                           ; 4 bytes @ 0x7
  2238     00A7                     	ds	4
  2239     00AB                     ___flmul@temp:
  2240                           
  2241                           ; 2 bytes @ 0xB
  2242     00AB                     	ds	2
  2243     00AD                     _my_log$1850:
  2244                           
  2245                           ; 4 bytes @ 0xD
  2246     00AD                     	ds	4
  2247     00B1                     my_log@result:
  2248                           
  2249                           ; 4 bytes @ 0x11
  2250     00B1                     	ds	4
  2251     00B5                     my_log@sum:
  2252                           
  2253                           ; 4 bytes @ 0x15
  2254     00B5                     	ds	4
  2255     00B9                     my_log@n:
  2256                           
  2257                           ; 2 bytes @ 0x19
  2258     00B9                     	ds	2
  2259     00BB                     my_log@term:
  2260                           
  2261                           ; 4 bytes @ 0x1B
  2262     00BB                     	ds	4
  2263     00BF                     main@savedRelay:
  2264                           
  2265                           ; 1 bytes @ 0x1F
  2266     00BF                     	ds	1
  2267     00C0                     main@saveVal:
  2268                           
  2269                           ; 1 bytes @ 0x20
  2270     00C0                     	ds	1
  2271     00C1                     main@readVal_992:
  2272                           
  2273                           ; 1 bytes @ 0x21
  2274     00C1                     	ds	1
  2275     00C2                     main@readVal:
  2276                           
  2277                           ; 1 bytes @ 0x22
  2278     00C2                     	ds	1
  2279                           
  2280                           	psect	cstackCOMMON
  2281     0070                     __pcstackCOMMON:
  2282     0070                     ?_OSCILLATOR_Initialize:
  2283     0070                     ?_WDT_Initialize:	
  2284                           ; 1 bytes @ 0x0
  2285                           
  2286     0070                     ?_ADC_Initialize:	
  2287                           ; 1 bytes @ 0x0
  2288                           
  2289     0070                     ?_TMR2_Initialize:	
  2290                           ; 1 bytes @ 0x0
  2291                           
  2292     0070                     ?_TMR1_Initialize:	
  2293                           ; 1 bytes @ 0x0
  2294                           
  2295     0070                     ?_TMR0_Initialize:	
  2296                           ; 1 bytes @ 0x0
  2297                           
  2298     0070                     ?_EUSART_Initialize:	
  2299                           ; 1 bytes @ 0x0
  2300                           
  2301     0070                     ?_TMR0_DefaultInterruptHandler:	
  2302                           ; 1 bytes @ 0x0
  2303                           
  2304     0070                     ??_TMR0_DefaultInterruptHandler:	
  2305                           ; 1 bytes @ 0x0
  2306                           
  2307     0070                     ?_TMR0_CallBack:	
  2308                           ; 1 bytes @ 0x0
  2309                           
  2310     0070                     ?_TMR2_ISR:	
  2311                           ; 1 bytes @ 0x0
  2312                           
  2313     0070                     ?_TMR1_ISR:	
  2314                           ; 1 bytes @ 0x0
  2315                           
  2316     0070                     ?_TMR1_DefaultInterruptHandler:	
  2317                           ; 1 bytes @ 0x0
  2318                           
  2319     0070                     ??_TMR1_DefaultInterruptHandler:	
  2320                           ; 1 bytes @ 0x0
  2321                           
  2322     0070                     ?_TMR1_CallBack:	
  2323                           ; 1 bytes @ 0x0
  2324                           
  2325     0070                     ?__UIControlISR:	
  2326                           ; 1 bytes @ 0x0
  2327                           
  2328     0070                     ?__LogicControlISR:	
  2329                           ; 1 bytes @ 0x0
  2330                           
  2331     0070                     ??__LogicControlISR:	
  2332                           ; 1 bytes @ 0x0
  2333                           
  2334     0070                     ?__SpkrControlISR:	
  2335                           ; 1 bytes @ 0x0
  2336                           
  2337     0070                     ??__SpkrControlISR:	
  2338                           ; 1 bytes @ 0x0
  2339                           
  2340     0070                     ?__ReadSensor:	
  2341                           ; 1 bytes @ 0x0
  2342                           
  2343     0070                     ?__SendDataToConsole:	
  2344                           ; 1 bytes @ 0x0
  2345                           
  2346     0070                     ?__ControlHeat:	
  2347                           ; 1 bytes @ 0x0
  2348                           
  2349     0070                     ?_TMR2_DefaultInterruptHandler:	
  2350                           ; 1 bytes @ 0x0
  2351                           
  2352     0070                     ??_TMR2_DefaultInterruptHandler:	
  2353                           ; 1 bytes @ 0x0
  2354                           
  2355     0070                     ?_TMR2_CallBack:	
  2356                           ; 1 bytes @ 0x0
  2357                           
  2358     0070                     ?_PIN_MANAGER_Initialize:	
  2359                           ; 1 bytes @ 0x0
  2360                           
  2361     0070                     ?_SYSTEM_Initialize:	
  2362                           ; 1 bytes @ 0x0
  2363                           
  2364     0070                     ?_TMR0_ISR:	
  2365                           ; 1 bytes @ 0x0
  2366                           
  2367     0070                     ?_INTERRUPT_InterruptManager:	
  2368                           ; 1 bytes @ 0x0
  2369                           
  2370     0070                     ?_TMR1_WriteTimer:	
  2371                           ; 1 bytes @ 0x0
  2372                           
  2373     0070                     ?_EUSART_Write:	
  2374                           ; 1 bytes @ 0x0
  2375                           
  2376     0070                     ?_DATAEE_ReadByte:	
  2377                           ; 1 bytes @ 0x0
  2378                           
  2379     0070                     ?_main:	
  2380                           ; 1 bytes @ 0x0
  2381                           
  2382     0070                     ?i1_EUSART_Write:	
  2383                           ; 1 bytes @ 0x0
  2384                           
  2385     0070                     ??i1_EUSART_Write:	
  2386                           ; 1 bytes @ 0x0
  2387                           
  2388     0070                     i1EUSART_Write@txData:	
  2389                           ; 1 bytes @ 0x0
  2390                           
  2391     0070                     TMR1_WriteTimer@timerVal:	
  2392                           ; 1 bytes @ 0x0
  2393                           
  2394                           
  2395                           ; 2 bytes @ 0x0
  2396     0070                     	ds	1
  2397     0071                     ??_TMR2_ISR:
  2398     0071                     ??_TMR1_CallBack:	
  2399                           ; 1 bytes @ 0x1
  2400                           
  2401     0071                     ??__UIControlISR:	
  2402                           ; 1 bytes @ 0x1
  2403                           
  2404     0071                     ??_TMR2_CallBack:	
  2405                           ; 1 bytes @ 0x1
  2406                           
  2407                           
  2408                           ; 1 bytes @ 0x1
  2409     0071                     	ds	1
  2410     0072                     ??_TMR1_ISR:
  2411     0072                     ??_TMR1_WriteTimer:	
  2412                           ; 1 bytes @ 0x2
  2413                           
  2414     0072                     __UIControlISR@btnUpRead:	
  2415                           ; 1 bytes @ 0x2
  2416                           
  2417                           
  2418                           ; 1 bytes @ 0x2
  2419     0072                     	ds	1
  2420     0073                     __UIControlISR@btnDnRead:
  2421                           
  2422                           ; 1 bytes @ 0x3
  2423     0073                     	ds	1
  2424     0074                     ??_OSCILLATOR_Initialize:
  2425     0074                     ??_WDT_Initialize:	
  2426                           ; 1 bytes @ 0x4
  2427                           
  2428     0074                     ??_ADC_Initialize:	
  2429                           ; 1 bytes @ 0x4
  2430                           
  2431     0074                     ?_TMR0_SetInterruptHandler:	
  2432                           ; 1 bytes @ 0x4
  2433                           
  2434     0074                     ??_TMR0_CallBack:	
  2435                           ; 1 bytes @ 0x4
  2436                           
  2437     0074                     ?_TMR1_SetInterruptHandler:	
  2438                           ; 1 bytes @ 0x4
  2439                           
  2440     0074                     ?_EUSART_SetFramingErrorHandler:	
  2441                           ; 1 bytes @ 0x4
  2442                           
  2443     0074                     ?_EUSART_SetOverrunErrorHandler:	
  2444                           ; 1 bytes @ 0x4
  2445                           
  2446     0074                     ?_EUSART_SetErrorHandler:	
  2447                           ; 1 bytes @ 0x4
  2448                           
  2449     0074                     ?_TMR2_SetInterruptHandler:	
  2450                           ; 1 bytes @ 0x4
  2451                           
  2452     0074                     ??_PIN_MANAGER_Initialize:	
  2453                           ; 1 bytes @ 0x4
  2454                           
  2455     0074                     ??_TMR0_ISR:	
  2456                           ; 1 bytes @ 0x4
  2457                           
  2458     0074                     ??_INTERRUPT_InterruptManager:	
  2459                           ; 1 bytes @ 0x4
  2460                           
  2461     0074                     ??_EUSART_Write:	
  2462                           ; 1 bytes @ 0x4
  2463                           
  2464     0074                     ?_DATAEE_WriteByte:	
  2465                           ; 1 bytes @ 0x4
  2466                           
  2467     0074                     ??_DATAEE_ReadByte:	
  2468                           ; 1 bytes @ 0x4
  2469                           
  2470     0074                     ??___wmul:	
  2471                           ; 1 bytes @ 0x4
  2472                           
  2473     0074                     ??___flneg:	
  2474                           ; 1 bytes @ 0x4
  2475                           
  2476     0074                     ?__Umul8_16:	
  2477                           ; 1 bytes @ 0x4
  2478                           
  2479     0074                     ?_ADC_GetConversion:	
  2480                           ; 2 bytes @ 0x4
  2481                           
  2482     0074                     EUSART_Write@txData:	
  2483                           ; 2 bytes @ 0x4
  2484                           
  2485     0074                     DATAEE_WriteByte@bData:	
  2486                           ; 1 bytes @ 0x4
  2487                           
  2488     0074                     DATAEE_ReadByte@bAdd:	
  2489                           ; 1 bytes @ 0x4
  2490                           
  2491     0074                     ___fltol@sign1:	
  2492                           ; 1 bytes @ 0x4
  2493                           
  2494     0074                     __Umul8_16@multiplicand:	
  2495                           ; 1 bytes @ 0x4
  2496                           
  2497     0074                     TMR0_SetInterruptHandler@InterruptHandler:	
  2498                           ; 1 bytes @ 0x4
  2499                           
  2500     0074                     TMR1_SetInterruptHandler@InterruptHandler:	
  2501                           ; 2 bytes @ 0x4
  2502                           
  2503     0074                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2504                           ; 2 bytes @ 0x4
  2505                           
  2506     0074                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2507                           ; 2 bytes @ 0x4
  2508                           
  2509     0074                     EUSART_SetErrorHandler@interruptHandler:	
  2510                           ; 2 bytes @ 0x4
  2511                           
  2512     0074                     TMR2_SetInterruptHandler@InterruptHandler:	
  2513                           ; 2 bytes @ 0x4
  2514                           
  2515     0074                     ___wmul@product:	
  2516                           ; 2 bytes @ 0x4
  2517                           
  2518                           
  2519                           ; 2 bytes @ 0x4
  2520     0074                     	ds	1
  2521     0075                     ??_DATAEE_WriteByte:
  2522     0075                     ___fltol@exp1:	
  2523                           ; 1 bytes @ 0x5
  2524                           
  2525                           
  2526                           ; 1 bytes @ 0x5
  2527     0075                     	ds	1
  2528     0076                     ??_TMR2_Initialize:
  2529     0076                     ??_TMR1_Initialize:	
  2530                           ; 1 bytes @ 0x6
  2531                           
  2532     0076                     ??_TMR0_Initialize:	
  2533                           ; 1 bytes @ 0x6
  2534                           
  2535     0076                     ??_EUSART_Initialize:	
  2536                           ; 1 bytes @ 0x6
  2537                           
  2538     0076                     ??_TMR0_SetInterruptHandler:	
  2539                           ; 1 bytes @ 0x6
  2540                           
  2541     0076                     ??_TMR1_SetInterruptHandler:	
  2542                           ; 1 bytes @ 0x6
  2543                           
  2544     0076                     ??_EUSART_SetFramingErrorHandler:	
  2545                           ; 1 bytes @ 0x6
  2546                           
  2547     0076                     ??_EUSART_SetOverrunErrorHandler:	
  2548                           ; 1 bytes @ 0x6
  2549                           
  2550     0076                     ??_EUSART_SetErrorHandler:	
  2551                           ; 1 bytes @ 0x6
  2552                           
  2553     0076                     ??_TMR2_SetInterruptHandler:	
  2554                           ; 1 bytes @ 0x6
  2555                           
  2556     0076                     ??__ReadSensor:	
  2557                           ; 1 bytes @ 0x6
  2558                           
  2559     0076                     ??_my_log:	
  2560                           ; 1 bytes @ 0x6
  2561                           
  2562     0076                     ??_SYSTEM_Initialize:	
  2563                           ; 1 bytes @ 0x6
  2564                           
  2565     0076                     ??___flsub:	
  2566                           ; 1 bytes @ 0x6
  2567                           
  2568                           
  2569                           	psect	cstackBANK0
  2570     0020                     __pcstackBANK0:	
  2571                           ; 1 bytes @ 0x6
  2572                           
  2573     0020                     ?___flge:
  2574     0020                     ??__ControlHeat:	
  2575                           ; 1 bit 
  2576                           
  2577     0020                     ??__Umul8_16:	
  2578                           ; 1 bytes @ 0x0
  2579                           
  2580     0020                     ??_ADC_GetConversion:	
  2581                           ; 1 bytes @ 0x0
  2582                           
  2583     0020                     ?___wmul:	
  2584                           ; 1 bytes @ 0x0
  2585                           
  2586     0020                     ?___flneg:	
  2587                           ; 2 bytes @ 0x0
  2588                           
  2589     0020                     ?___fltol:	
  2590                           ; 4 bytes @ 0x0
  2591                           
  2592     0020                     ?___xxtofl:	
  2593                           ; 4 bytes @ 0x0
  2594                           
  2595     0020                     DATAEE_WriteByte@bAdd:	
  2596                           ; 4 bytes @ 0x0
  2597                           
  2598     0020                     ___wmul@multiplier:	
  2599                           ; 1 bytes @ 0x0
  2600                           
  2601     0020                     ___flge@ff1:	
  2602                           ; 2 bytes @ 0x0
  2603                           
  2604     0020                     ___flneg@f1:	
  2605                           ; 4 bytes @ 0x0
  2606                           
  2607     0020                     ___fltol@f1:	
  2608                           ; 4 bytes @ 0x0
  2609                           
  2610     0020                     ___xxtofl@val:	
  2611                           ; 4 bytes @ 0x0
  2612                           
  2613                           
  2614                           ; 4 bytes @ 0x0
  2615     0020                     	ds	1
  2616     0021                     ADC_GetConversion@channel:
  2617     0021                     DATAEE_WriteByte@GIEBitValue:	
  2618                           ; 1 bytes @ 0x1
  2619                           
  2620                           
  2621                           ; 1 bytes @ 0x1
  2622     0021                     	ds	1
  2623     0022                     ___wmul@multiplicand:
  2624     0022                     __Umul8_16@product:	
  2625                           ; 2 bytes @ 0x2
  2626                           
  2627                           
  2628                           ; 2 bytes @ 0x2
  2629     0022                     	ds	2
  2630     0024                     ??___fltol:
  2631     0024                     ??___xxtofl:	
  2632                           ; 1 bytes @ 0x4
  2633                           
  2634     0024                     ?___awdiv:	
  2635                           ; 1 bytes @ 0x4
  2636                           
  2637     0024                     ___awdiv@divisor:	
  2638                           ; 2 bytes @ 0x4
  2639                           
  2640     0024                     __Umul8_16@word_mpld:	
  2641                           ; 2 bytes @ 0x4
  2642                           
  2643     0024                     ___flge@ff2:	
  2644                           ; 2 bytes @ 0x4
  2645                           
  2646                           
  2647                           ; 4 bytes @ 0x4
  2648     0024                     	ds	2
  2649     0026                     __Umul8_16@multiplier:
  2650     0026                     ___awdiv@dividend:	
  2651                           ; 1 bytes @ 0x6
  2652                           
  2653                           
  2654                           ; 2 bytes @ 0x6
  2655     0026                     	ds	2
  2656     0028                     ??___awdiv:
  2657     0028                     ??___flge:	
  2658                           ; 1 bytes @ 0x8
  2659                           
  2660     0028                     ___xxtofl@sign:	
  2661                           ; 1 bytes @ 0x8
  2662                           
  2663                           
  2664                           ; 1 bytes @ 0x8
  2665     0028                     	ds	1
  2666     0029                     ___awdiv@counter:
  2667     0029                     ___xxtofl@exp:	
  2668                           ; 1 bytes @ 0x9
  2669                           
  2670                           
  2671                           ; 1 bytes @ 0x9
  2672     0029                     	ds	1
  2673     002A                     ___awdiv@sign:
  2674     002A                     ___xxtofl@arg:	
  2675                           ; 1 bytes @ 0xA
  2676                           
  2677                           
  2678                           ; 4 bytes @ 0xA
  2679     002A                     	ds	1
  2680     002B                     ___awdiv@quotient:
  2681                           
  2682                           ; 2 bytes @ 0xB
  2683     002B                     	ds	2
  2684     002D                     ??__SendDataToConsole:
  2685                           
  2686                           ; 1 bytes @ 0xD
  2687     002D                     	ds	1
  2688     002E                     ?___fldiv:
  2689     002E                     ___fldiv@a:	
  2690                           ; 4 bytes @ 0xE
  2691                           
  2692                           
  2693                           ; 4 bytes @ 0xE
  2694     002E                     	ds	3
  2695     0031                     __SendDataToConsole@ones:
  2696                           
  2697                           ; 2 bytes @ 0x11
  2698     0031                     	ds	1
  2699     0032                     ___fldiv@b:
  2700                           
  2701                           ; 4 bytes @ 0x12
  2702     0032                     	ds	1
  2703     0033                     __SendDataToConsole@tens:
  2704                           
  2705                           ; 2 bytes @ 0x13
  2706     0033                     	ds	2
  2707     0035                     __SendDataToConsole@huns:
  2708                           
  2709                           ; 2 bytes @ 0x15
  2710     0035                     	ds	1
  2711     0036                     ??___fldiv:
  2712                           
  2713                           ; 1 bytes @ 0x16
  2714     0036                     	ds	5
  2715     003B                     ___fldiv@rem:
  2716                           
  2717                           ; 4 bytes @ 0x1B
  2718     003B                     	ds	4
  2719     003F                     ___fldiv@sign:
  2720                           
  2721                           ; 1 bytes @ 0x1F
  2722     003F                     	ds	1
  2723     0040                     ___fldiv@new_exp:
  2724                           
  2725                           ; 2 bytes @ 0x20
  2726     0040                     	ds	2
  2727     0042                     ___fldiv@grs:
  2728                           
  2729                           ; 4 bytes @ 0x22
  2730     0042                     	ds	4
  2731     0046                     ___fldiv@bexp:
  2732                           
  2733                           ; 1 bytes @ 0x26
  2734     0046                     	ds	1
  2735     0047                     ___fldiv@aexp:
  2736                           
  2737                           ; 1 bytes @ 0x27
  2738     0047                     	ds	1
  2739     0048                     ?___fladd:
  2740     0048                     ___fladd@b:	
  2741                           ; 4 bytes @ 0x28
  2742                           
  2743                           
  2744                           ; 4 bytes @ 0x28
  2745     0048                     	ds	4
  2746     004C                     ___fladd@a:
  2747                           
  2748                           ; 4 bytes @ 0x2C
  2749     004C                     	ds	4
  2750     0050                     ??___fladd:
  2751                           
  2752                           ; 1 bytes @ 0x30
  2753     0050                     	ds	8
  2754     0058                     ___fladd@signs:
  2755                           
  2756                           ; 1 bytes @ 0x38
  2757     0058                     	ds	1
  2758     0059                     ___fladd@aexp:
  2759                           
  2760                           ; 1 bytes @ 0x39
  2761     0059                     	ds	1
  2762     005A                     ___fladd@bexp:
  2763                           
  2764                           ; 1 bytes @ 0x3A
  2765     005A                     	ds	1
  2766     005B                     ___fladd@grs:
  2767                           
  2768                           ; 1 bytes @ 0x3B
  2769     005B                     	ds	1
  2770     005C                     ?___flsub:
  2771     005C                     ?___flmul:	
  2772                           ; 4 bytes @ 0x3C
  2773                           
  2774     005C                     ___flsub@a:	
  2775                           ; 4 bytes @ 0x3C
  2776                           
  2777     005C                     ___flmul@b:	
  2778                           ; 4 bytes @ 0x3C
  2779                           
  2780                           
  2781                           ; 4 bytes @ 0x3C
  2782     005C                     	ds	4
  2783     0060                     ___flsub@b:
  2784     0060                     ___flmul@a:	
  2785                           ; 4 bytes @ 0x40
  2786                           
  2787                           
  2788                           ; 4 bytes @ 0x40
  2789     0060                     	ds	4
  2790     0064                     ??___flmul:
  2791                           
  2792                           ; 1 bytes @ 0x44
  2793     0064                     	ds	5
  2794     0069                     ?_my_log:
  2795     0069                     my_log@x:	
  2796                           ; 4 bytes @ 0x49
  2797                           
  2798                           
  2799                           ; 4 bytes @ 0x49
  2800     0069                     	ds	4
  2801     006D                     ??_main:
  2802                           
  2803                           ; 1 bytes @ 0x4D
  2804     006D                     	ds	2
  2805                           
  2806                           	psect	maintext
  2807     0754                     __pmaintext:	
  2808 ;;
  2809 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2810 ;;
  2811 ;; *************** function _main *****************
  2812 ;; Defined at:
  2813 ;;		line 55 in file "main.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;		None
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  readVal         1   33[BANK1 ] unsigned char 
  2818 ;;  saveVal         1   32[BANK1 ] unsigned char 
  2819 ;;  savedRelay      1   31[BANK1 ] _Bool 
  2820 ;;  readVal         1   34[BANK1 ] unsigned char 
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  1    wreg      void 
  2823 ;; Registers used:
  2824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2825 ;; Tracked objects:
  2826 ;;		On entry : B1F/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2831 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2832 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2833 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2834 ;;Total ram usage:        6 bytes
  2835 ;; Hardware stack levels required when called: 9
  2836 ;; This function calls:
  2837 ;;		_DATAEE_ReadByte
  2838 ;;		_DATAEE_WriteByte
  2839 ;;		_EUSART_Write
  2840 ;;		_SYSTEM_Initialize
  2841 ;;		_TMR0_SetInterruptHandler
  2842 ;;		_TMR1_SetInterruptHandler
  2843 ;;		_TMR2_SetInterruptHandler
  2844 ;;		__ControlHeat
  2845 ;;		__ReadSensor
  2846 ;;		__SendDataToConsole
  2847 ;; This function is called by:
  2848 ;;		Startup code after reset
  2849 ;; This function uses a non-reentrant model
  2850 ;;
  2851                           
  2852     0754                     _main:	
  2853                           ;psect for function _main
  2854                           
  2855                           
  2856                           ;main.c: 58:     SYSTEM_Initialize();
  2857                           
  2858                           ;incstack = 0
  2859                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2860     0754  3188  2000  3187   	fcall	_SYSTEM_Initialize
  2861                           
  2862                           ;main.c: 60:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  2863     0757  300B               	movlw	11
  2864     0758  0020               	movlb	0	; select bank0
  2865     0759  00EE               	movwf	??_main+1
  2866     075A  3026               	movlw	38
  2867     075B  00ED               	movwf	??_main
  2868     075C  305D               	movlw	93
  2869     075D                     u6067:
  2870     075D  0B89               	decfsz	9,f
  2871     075E  2F5D               	goto	u6067
  2872     075F  0BED               	decfsz	??_main,f
  2873     0760  2F5D               	goto	u6067
  2874     0761  0BEE               	decfsz	??_main+1,f
  2875     0762  2F5D               	goto	u6067
  2876     0763  3200               	nop2
  2877                           
  2878                           ;main.c: 66:     (INTCONbits.GIE = 1);
  2879     0764  178B               	bsf	11,7	;volatile
  2880                           
  2881                           ;main.c: 69:     (INTCONbits.PEIE = 1);
  2882     0765  170B               	bsf	11,6	;volatile
  2883                           
  2884                           ;main.c: 77:     TMR0_SetInterruptHandler(_UIControlISR);
  2885     0766  304C               	movlw	low __UIControlISR
  2886     0767  00F4               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2887     0768  300B               	movlw	high __UIControlISR
  2888     0769  00F5               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2889     076A  3197  2706  3187   	fcall	_TMR0_SetInterruptHandler
  2890                           
  2891                           ;main.c: 78:     TMR1_SetInterruptHandler(_LogicControlISR);
  2892     076D  30B7               	movlw	low __LogicControlISR
  2893     076E  00F4               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  2894     076F  3008               	movlw	high __LogicControlISR
  2895     0770  00F5               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  2896     0771  3197  270C  3187   	fcall	_TMR1_SetInterruptHandler
  2897                           
  2898                           ;main.c: 79:     TMR2_SetInterruptHandler(_SpkrControlISR);
  2899     0774  30DD               	movlw	low __SpkrControlISR
  2900     0775  00F4               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2901     0776  3008               	movlw	high __SpkrControlISR
  2902     0777  00F5               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2903     0778  3197  2712  3187   	fcall	_TMR2_SetInterruptHandler
  2904                           
  2905                           ;main.c: 82:     uint8_t readVal = DATAEE_ReadByte(10);
  2906     077B  300A               	movlw	10
  2907     077C  3197  2771  3187   	fcall	_DATAEE_ReadByte
  2908     077F  0021               	movlb	1	; select bank1
  2909     0780  00C2               	movwf	main@readVal^(0+128)
  2910                           
  2911                           ;main.c: 93:     if (readVal < 25 || readVal > (25 + HEAT_MODE_5))
  2912                           
  2913                           ;main.c: 84:     if (1 == 4)
  2914     0781  3019               	movlw	25
  2915     0782  0242               	subwf	main@readVal^(0+128),w
  2916     0783  1C03               	skipc
  2917     0784  2F89               	goto	l4806
  2918     0785  301F               	movlw	31
  2919     0786  0242               	subwf	main@readVal^(0+128),w
  2920     0787  1C03               	skipc
  2921     0788  2F91               	goto	l4810
  2922     0789                     l4806:
  2923                           
  2924                           ;main.c: 103:         CURRENT_MODE = HEAT_MODE_3;
  2925     0789  3003               	movlw	3
  2926     078A  00F6               	movwf	_CURRENT_MODE
  2927     078B  3000               	movlw	0
  2928     078C  00F7               	movwf	_CURRENT_MODE+1
  2929                           
  2930                           ;main.c: 104:         _SaveMemory = 1;
  2931     078D  0022               	movlb	2	; select bank2
  2932     078E  01D7               	clrf	__SaveMemory^(0+256)
  2933     078F  0AD7               	incf	__SaveMemory^(0+256),f
  2934                           
  2935                           ;main.c: 105:     }
  2936     0790  2F98               	goto	l480
  2937     0791                     l4810:
  2938                           
  2939                           ;main.c: 107:     {;main.c: 109:         CURRENT_MODE = readVal - 25;
  2940     0791  0842               	movf	main@readVal^(0+128),w
  2941     0792  3EE7               	addlw	231
  2942     0793  00F6               	movwf	_CURRENT_MODE
  2943     0794  30FF               	movlw	255
  2944     0795  1803               	skipnc
  2945     0796  3000               	movlw	0
  2946     0797  00F7               	movwf	_CURRENT_MODE+1
  2947     0798                     l480:	
  2948                           ;main.c: 122:     while (1)
  2949                           
  2950     0798  0064               	clrwdt	;# 
  2951                           
  2952                           ;main.c: 126:         _Bool savedRelay;;main.c: 129:         if (READ_FLAG)
  2953     0799  0022               	movlb	2	; select bank2
  2954     079A  0856               	movf	_READ_FLAG^(0+256),w
  2955     079B  1903               	btfsc	3,2
  2956     079C  2FA1               	goto	l4820
  2957                           
  2958                           ;main.c: 130:         {;main.c: 131:             READ_FLAG = 0;
  2959     079D  01D6               	clrf	_READ_FLAG^(0+256)
  2960                           
  2961                           ;main.c: 132:             _ReadSensor();
  2962     079E  3182  22EE  3187   	fcall	__ReadSensor
  2963     07A1                     l4820:
  2964                           
  2965                           ;main.c: 135:         if (UART_FLAG)
  2966     07A1  0022               	movlb	2	; select bank2
  2967     07A2  0855               	movf	_UART_FLAG^(0+256),w
  2968     07A3  1903               	btfsc	3,2
  2969     07A4  2FA9               	goto	l4826
  2970                           
  2971                           ;main.c: 138:             if (1 == 1)
  2972     07A5  01D5               	clrf	_UART_FLAG^(0+256)
  2973                           
  2974                           ;main.c: 139:                 _SendDataToConsole();
  2975     07A6  318C  2414  3187   	fcall	__SendDataToConsole
  2976     07A9                     l4826:
  2977                           
  2978                           ;main.c: 142:         if (LOGIC_FLAG)
  2979     07A9  0022               	movlb	2	; select bank2
  2980     07AA  0854               	movf	_LOGIC_FLAG^(0+256),w
  2981     07AB  1903               	btfsc	3,2
  2982     07AC  2F98               	goto	l480
  2983                           
  2984                           ;main.c: 143:         {;main.c: 144:             LOGIC_FLAG = 0;
  2985     07AD  01D4               	clrf	_LOGIC_FLAG^(0+256)
  2986                           
  2987                           ;main.c: 146:             if (_SaveMemory)
  2988     07AE  0857               	movf	__SaveMemory^(0+256),w
  2989     07AF  1903               	btfsc	3,2
  2990     07B0  2FC8               	goto	l4848
  2991                           
  2992                           ;main.c: 147:             {;main.c: 148:                 uint8_t saveVal = CURRENT_MODE 
      +                          + 25;
  2993     07B1  0876               	movf	_CURRENT_MODE,w
  2994     07B2  3E19               	addlw	25
  2995     07B3  0021               	movlb	1	; select bank1
  2996     07B4  00C0               	movwf	main@saveVal^(0+128)
  2997                           
  2998                           ;main.c: 149:                 uint8_t readVal = DATAEE_ReadByte(10);
  2999     07B5  300A               	movlw	10
  3000     07B6  3197  2771  3187   	fcall	_DATAEE_ReadByte
  3001     07B9  0021               	movlb	1	; select bank1
  3002     07BA  00C1               	movwf	main@readVal_992^(0+128)
  3003                           
  3004                           ;main.c: 161:                 if (readVal == saveVal)
  3005                           
  3006                           ;main.c: 151:                 if (1 == 4)
  3007     07BB  0841               	movf	main@readVal_992^(0+128),w
  3008     07BC  0640               	xorwf	main@saveVal^(0+128),w
  3009     07BD  1D03               	skipz
  3010     07BE  2FC2               	goto	l4844
  3011                           
  3012                           ;main.c: 162:                 {;main.c: 165:                     _SaveMemory = 0;
  3013     07BF  0022               	movlb	2	; select bank2
  3014     07C0  01D7               	clrf	__SaveMemory^(0+256)
  3015                           
  3016                           ;main.c: 167:                     if (1 == 4)
  3017     07C1  2FC8               	goto	l4848
  3018     07C2                     l4844:
  3019                           
  3020                           ;main.c: 176:                 {;main.c: 178:                     DATAEE_WriteByte(10, sa
      +                          veVal);
  3021     07C2  0840               	movf	main@saveVal^(0+128),w
  3022     07C3  00F4               	movwf	DATAEE_WriteByte@bData
  3023     07C4  300A               	movlw	10
  3024     07C5  3188  2094  3187   	fcall	_DATAEE_WriteByte
  3025     07C8                     l4848:	
  3026                           ;main.c: 180:                     if (1 == 4)
  3027                           
  3028                           
  3029                           ;main.c: 190:             savedRelay = RELAY_STATUS;
  3030     07C8  0020               	movlb	0	; select bank0
  3031     07C9  086F               	movf	_RELAY_STATUS,w
  3032     07CA  0021               	movlb	1	; select bank1
  3033     07CB  00BF               	movwf	main@savedRelay^(0+128)
  3034                           
  3035                           ;main.c: 193:             HEAT_CALL_TICKS++;
  3036     07CC  3001               	movlw	1
  3037     07CD  0022               	movlb	2	; select bank2
  3038     07CE  07D8               	addwf	_HEAT_CALL_TICKS^(0+256),f
  3039     07CF  3000               	movlw	0
  3040     07D0  3DD9               	addwfc	(_HEAT_CALL_TICKS+1)^(0+256),f
  3041                           
  3042                           ;main.c: 194:             if (RELAY_STATUS)
  3043     07D1  0020               	movlb	0	; select bank0
  3044     07D2  086F               	movf	_RELAY_STATUS,w
  3045     07D3  3000               	movlw	0
  3046     07D4  0022               	movlb	2	; select bank2
  3047     07D5  0259               	subwf	(_HEAT_CALL_TICKS+1)^(0+256),w
  3048     07D6  303D               	movlw	61
  3049     07D7  1903               	skipnz
  3050     07D8  0258               	subwf	_HEAT_CALL_TICKS^(0+256),w
  3051     07D9  1C03               	skipc
  3052     07DA  2FDF               	goto	l4862
  3053     07DB  303D               	movlw	61
  3054     07DC  00D8               	movwf	_HEAT_CALL_TICKS^(0+256)
  3055     07DD  3000               	movlw	0
  3056     07DE  00D9               	movwf	(_HEAT_CALL_TICKS^(0+256)+1)
  3057     07DF                     l4862:
  3058                           
  3059                           ;main.c: 208:             _ControlHeat();
  3060     07DF  3189  21D3  3187   	fcall	__ControlHeat
  3061                           
  3062                           ;main.c: 210:             if (savedRelay != RELAY_STATUS)
  3063     07E2  0021               	movlb	1	; select bank1
  3064     07E3  083F               	movf	main@savedRelay^(0+128),w
  3065     07E4  0020               	movlb	0	; select bank0
  3066     07E5  066F               	xorwf	_RELAY_STATUS,w
  3067     07E6  1903               	skipnz
  3068     07E7  2FEB               	goto	l4868
  3069                           
  3070                           ;main.c: 211:             {;main.c: 213:                 HEAT_CALL_TICKS = 0;
  3071     07E8  0022               	movlb	2	; select bank2
  3072     07E9  01D8               	clrf	_HEAT_CALL_TICKS^(0+256)
  3073     07EA  01D9               	clrf	(_HEAT_CALL_TICKS+1)^(0+256)
  3074     07EB                     l4868:
  3075                           
  3076                           ;main.c: 216:             if (RELAY_STATUS)
  3077     07EB  0020               	movlb	0	; select bank0
  3078     07EC  086F               	movf	_RELAY_STATUS,w
  3079     07ED  1903               	btfsc	3,2
  3080     07EE  2FF2               	goto	l500
  3081                           
  3082                           ;main.c: 217:                 do { LATAbits.LATA2 = 0; } while(0);
  3083     07EF  0022               	movlb	2	; select bank2
  3084     07F0  110C               	bcf	12,2	;volatile
  3085     07F1  2F98               	goto	l480
  3086     07F2                     l500:	
  3087                           ;main.c: 219:                 do { LATAbits.LATA2 = 1; } while(0);
  3088                           
  3089     07F2  0022               	movlb	2	; select bank2
  3090     07F3  150C               	bsf	12,2	;volatile
  3091     07F4  2F98               	goto	l480
  3092     07F5                     __end_of_main:
  3093                           
  3094                           	psect	text1
  3095     0C14                     __ptext1:	
  3096 ;; *************** function __SendDataToConsole *****************
  3097 ;; Defined at:
  3098 ;;		line 518 in file "main.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;		None
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;  huns            2   21[BANK0 ] int 
  3103 ;;  tens            2   19[BANK0 ] int 
  3104 ;;  ones            2   17[BANK0 ] int 
  3105 ;; Return value:  Size  Location     Type
  3106 ;;                  1    wreg      void 
  3107 ;; Registers used:
  3108 ;;		wreg, status,2, status,0, pclath, cstack
  3109 ;; Tracked objects:
  3110 ;;		On entry : 0/0
  3111 ;;		On exit  : 0/0
  3112 ;;		Unchanged: 0/0
  3113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3115 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3116 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3117 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3118 ;;Total ram usage:       10 bytes
  3119 ;; Hardware stack levels used: 1
  3120 ;; Hardware stack levels required when called: 6
  3121 ;; This function calls:
  3122 ;;		_EUSART_Write
  3123 ;;		___awdiv
  3124 ;;		___wmul
  3125 ;; This function is called by:
  3126 ;;		_main
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130     0C14                     __SendDataToConsole:	
  3131                           ;psect for function __SendDataToConsole
  3132                           
  3133                           
  3134                           ;main.c: 522:     int huns, tens, ones;;main.c: 524:     huns = TEMP / 100;
  3135                           
  3136                           ;incstack = 0
  3137                           ; Regs used in __SendDataToConsole: [wreg+status,2+status,0+pclath+cstack]
  3138     0C14  3064               	movlw	100
  3139     0C15  0020               	movlb	0	; select bank0
  3140     0C16  00A4               	movwf	___awdiv@divisor
  3141     0C17  3000               	movlw	0
  3142     0C18  00A5               	movwf	___awdiv@divisor+1
  3143     0C19  0022               	movlb	2	; select bank2
  3144     0C1A  0853               	movf	(_TEMP+1)^(0+256),w
  3145     0C1B  0020               	movlb	0	; select bank0
  3146     0C1C  00A7               	movwf	___awdiv@dividend+1
  3147     0C1D  0022               	movlb	2	; select bank2
  3148     0C1E  0852               	movf	_TEMP^(0+256),w
  3149     0C1F  0020               	movlb	0	; select bank0
  3150     0C20  00A6               	movwf	___awdiv@dividend
  3151     0C21  3189  211F  318C   	fcall	___awdiv
  3152     0C24  0020               	movlb	0	; select bank0
  3153     0C25  0825               	movf	?___awdiv+1,w
  3154     0C26  00B6               	movwf	__SendDataToConsole@huns+1
  3155     0C27  0824               	movf	?___awdiv,w
  3156     0C28  00B5               	movwf	__SendDataToConsole@huns
  3157                           
  3158                           ;main.c: 525:     tens = (TEMP - huns * 100) / 10;
  3159     0C29  300A               	movlw	10
  3160     0C2A  00A4               	movwf	___awdiv@divisor
  3161     0C2B  3000               	movlw	0
  3162     0C2C  00A5               	movwf	___awdiv@divisor+1
  3163     0C2D  0836               	movf	__SendDataToConsole@huns+1,w
  3164     0C2E  00A1               	movwf	___wmul@multiplier+1
  3165     0C2F  0835               	movf	__SendDataToConsole@huns,w
  3166     0C30  00A0               	movwf	___wmul@multiplier
  3167     0C31  309C               	movlw	156
  3168     0C32  00A2               	movwf	___wmul@multiplicand
  3169     0C33  30FF               	movlw	255
  3170     0C34  00A3               	movwf	___wmul@multiplicand+1
  3171     0C35  3188  2018  318C   	fcall	___wmul
  3172     0C38  0022               	movlb	2	; select bank2
  3173     0C39  0852               	movf	_TEMP^(0+256),w
  3174     0C3A  0020               	movlb	0	; select bank0
  3175     0C3B  0720               	addwf	?___wmul,w
  3176     0C3C  00A6               	movwf	___awdiv@dividend
  3177     0C3D  0022               	movlb	2	; select bank2
  3178     0C3E  0853               	movf	(_TEMP+1)^(0+256),w
  3179     0C3F  0020               	movlb	0	; select bank0
  3180     0C40  3D21               	addwfc	?___wmul+1,w
  3181     0C41  00A7               	movwf	___awdiv@dividend+1
  3182     0C42  3189  211F  318C   	fcall	___awdiv
  3183     0C45  0020               	movlb	0	; select bank0
  3184     0C46  0825               	movf	?___awdiv+1,w
  3185     0C47  00B4               	movwf	__SendDataToConsole@tens+1
  3186     0C48  0824               	movf	?___awdiv,w
  3187     0C49  00B3               	movwf	__SendDataToConsole@tens
  3188                           
  3189                           ;main.c: 526:     ones = (TEMP - huns * 100 - tens * 10);
  3190     0C4A  0836               	movf	__SendDataToConsole@huns+1,w
  3191     0C4B  00A1               	movwf	___wmul@multiplier+1
  3192     0C4C  0835               	movf	__SendDataToConsole@huns,w
  3193     0C4D  00A0               	movwf	___wmul@multiplier
  3194     0C4E  309C               	movlw	156
  3195     0C4F  00A2               	movwf	___wmul@multiplicand
  3196     0C50  30FF               	movlw	255
  3197     0C51  00A3               	movwf	___wmul@multiplicand+1
  3198     0C52  3188  2018  318C   	fcall	___wmul
  3199     0C55  0020               	movlb	0	; select bank0
  3200     0C56  0820               	movf	?___wmul,w
  3201     0C57  00AD               	movwf	??__SendDataToConsole
  3202     0C58  0821               	movf	?___wmul+1,w
  3203     0C59  00AE               	movwf	??__SendDataToConsole+1
  3204     0C5A  0834               	movf	__SendDataToConsole@tens+1,w
  3205     0C5B  00A1               	movwf	___wmul@multiplier+1
  3206     0C5C  0833               	movf	__SendDataToConsole@tens,w
  3207     0C5D  00A0               	movwf	___wmul@multiplier
  3208     0C5E  30F6               	movlw	246
  3209     0C5F  00A2               	movwf	___wmul@multiplicand
  3210     0C60  30FF               	movlw	255
  3211     0C61  00A3               	movwf	___wmul@multiplicand+1
  3212     0C62  3188  2018  318C   	fcall	___wmul
  3213     0C65  0020               	movlb	0	; select bank0
  3214     0C66  0820               	movf	?___wmul,w
  3215     0C67  072D               	addwf	??__SendDataToConsole,w
  3216     0C68  00AF               	movwf	??__SendDataToConsole+2
  3217     0C69  0821               	movf	?___wmul+1,w
  3218     0C6A  3D2E               	addwfc	??__SendDataToConsole+1,w
  3219     0C6B  00B0               	movwf	??__SendDataToConsole+3
  3220     0C6C  0022               	movlb	2	; select bank2
  3221     0C6D  0852               	movf	_TEMP^(0+256),w
  3222     0C6E  0020               	movlb	0	; select bank0
  3223     0C6F  072F               	addwf	??__SendDataToConsole+2,w
  3224     0C70  00B1               	movwf	__SendDataToConsole@ones
  3225     0C71  0022               	movlb	2	; select bank2
  3226     0C72  0853               	movf	(_TEMP+1)^(0+256),w
  3227     0C73  0020               	movlb	0	; select bank0
  3228     0C74  3D30               	addwfc	??__SendDataToConsole+3,w
  3229     0C75  00B2               	movwf	__SendDataToConsole@ones+1
  3230                           
  3231                           ;main.c: 529:     EUSART_Write('T');
  3232     0C76  3054               	movlw	84
  3233     0C77  3197  273C  318C   	fcall	_EUSART_Write
  3234                           
  3235                           ;main.c: 530:     EUSART_Write(':');
  3236     0C7A  303A               	movlw	58
  3237     0C7B  3197  273C  318C   	fcall	_EUSART_Write
  3238                           
  3239                           ;main.c: 531:     if (TEMP < 0)
  3240     0C7E  0022               	movlb	2	; select bank2
  3241     0C7F  1FD3               	btfss	(_TEMP+1)^(0+256),7
  3242     0C80  2C85               	goto	l4732
  3243                           
  3244                           ;main.c: 532:         EUSART_Write('-');
  3245     0C81  302D               	movlw	45
  3246     0C82  3197  273C  318C   	fcall	_EUSART_Write
  3247     0C85                     l4732:
  3248                           
  3249                           ;main.c: 533:     if (huns > 0)
  3250     0C85  0020               	movlb	0	; select bank0
  3251     0C86  0836               	movf	__SendDataToConsole@huns+1,w
  3252     0C87  3A80               	xorlw	128
  3253     0C88  00AD               	movwf	??__SendDataToConsole
  3254     0C89  3080               	movlw	128
  3255     0C8A  022D               	subwf	??__SendDataToConsole,w
  3256     0C8B  1D03               	skipz
  3257     0C8C  2C8F               	goto	u5875
  3258     0C8D  3001               	movlw	1
  3259     0C8E  0235               	subwf	__SendDataToConsole@huns,w
  3260     0C8F                     u5875:
  3261     0C8F  1C03               	skipc
  3262     0C90  2C97               	goto	l4736
  3263                           
  3264                           ;main.c: 534:         EUSART_Write(huns + 48);
  3265     0C91  0020               	movlb	0	; select bank0
  3266     0C92  0835               	movf	__SendDataToConsole@huns,w
  3267     0C93  3E30               	addlw	48
  3268     0C94  3197  273C  318C   	fcall	_EUSART_Write
  3269     0C97                     l4736:
  3270                           
  3271                           ;main.c: 535:     if (tens > 0)
  3272     0C97  0020               	movlb	0	; select bank0
  3273     0C98  0834               	movf	__SendDataToConsole@tens+1,w
  3274     0C99  3A80               	xorlw	128
  3275     0C9A  00AD               	movwf	??__SendDataToConsole
  3276     0C9B  3080               	movlw	128
  3277     0C9C  022D               	subwf	??__SendDataToConsole,w
  3278     0C9D  1D03               	skipz
  3279     0C9E  2CA1               	goto	u5885
  3280     0C9F  3001               	movlw	1
  3281     0CA0  0233               	subwf	__SendDataToConsole@tens,w
  3282     0CA1                     u5885:
  3283     0CA1  1C03               	skipc
  3284     0CA2  2CA9               	goto	l628
  3285                           
  3286                           ;main.c: 536:         EUSART_Write(tens + 48);
  3287     0CA3  0020               	movlb	0	; select bank0
  3288     0CA4  0833               	movf	__SendDataToConsole@tens,w
  3289     0CA5  3E30               	addlw	48
  3290     0CA6  3197  273C  318C   	fcall	_EUSART_Write
  3291     0CA9                     l628:
  3292                           
  3293                           ;main.c: 537:     EUSART_Write(ones + 48);
  3294     0CA9  0020               	movlb	0	; select bank0
  3295     0CAA  0831               	movf	__SendDataToConsole@ones,w
  3296     0CAB  3E30               	addlw	48
  3297     0CAC  3197  273C  318C   	fcall	_EUSART_Write
  3298                           
  3299                           ;main.c: 538:     EUSART_Write('F');
  3300     0CAF  3046               	movlw	70
  3301     0CB0  3197  273C  318C   	fcall	_EUSART_Write
  3302                           
  3303                           ;main.c: 539:     EUSART_Write('\t');
  3304     0CB3  3009               	movlw	9
  3305     0CB4  3197  273C  318C   	fcall	_EUSART_Write
  3306                           
  3307                           ;main.c: 540:     EUSART_Write('M');
  3308     0CB7  304D               	movlw	77
  3309     0CB8  3197  273C  318C   	fcall	_EUSART_Write
  3310                           
  3311                           ;main.c: 541:     EUSART_Write(':');
  3312     0CBB  303A               	movlw	58
  3313     0CBC  3197  273C  318C   	fcall	_EUSART_Write
  3314                           
  3315                           ;main.c: 542:     EUSART_Write(CURRENT_MODE + 48);
  3316     0CBF  0876               	movf	_CURRENT_MODE,w
  3317     0CC0  3E30               	addlw	48
  3318     0CC1  3197  273C  318C   	fcall	_EUSART_Write
  3319                           
  3320                           ;main.c: 543:     EUSART_Write('\t');
  3321     0CC4  3009               	movlw	9
  3322     0CC5  3197  273C  318C   	fcall	_EUSART_Write
  3323                           
  3324                           ;main.c: 544:     EUSART_Write('H');
  3325     0CC8  3048               	movlw	72
  3326     0CC9  3197  273C  318C   	fcall	_EUSART_Write
  3327                           
  3328                           ;main.c: 545:     EUSART_Write(':');
  3329     0CCC  303A               	movlw	58
  3330     0CCD  3197  273C  318C   	fcall	_EUSART_Write
  3331                           
  3332                           ;main.c: 546:     EUSART_Write(RELAY_STATUS + 48);
  3333     0CD0  0020               	movlb	0	; select bank0
  3334     0CD1  086F               	movf	_RELAY_STATUS,w
  3335     0CD2  3E30               	addlw	48
  3336     0CD3  3197  273C  318C   	fcall	_EUSART_Write
  3337                           
  3338                           ;main.c: 547:     EUSART_Write('\r');
  3339     0CD6  300D               	movlw	13
  3340     0CD7  3197  273C  318C   	fcall	_EUSART_Write
  3341                           
  3342                           ;main.c: 548:     EUSART_Write('\n');
  3343     0CDA  300A               	movlw	10
  3344     0CDB  3197  273C         	fcall	_EUSART_Write
  3345     0CDD  0008               	return
  3346     0CDE                     __end_of__SendDataToConsole:
  3347                           
  3348                           	psect	text2
  3349     0818                     __ptext2:	
  3350 ;; *************** function ___wmul *****************
  3351 ;; Defined at:
  3352 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3355 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;  product         2    4[COMMON] unsigned int 
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  2    0[BANK0 ] unsigned int 
  3360 ;; Registers used:
  3361 ;;		wreg, status,2, status,0
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3367 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3368 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3370 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3371 ;;Total ram usage:        6 bytes
  3372 ;; Hardware stack levels used: 1
  3373 ;; Hardware stack levels required when called: 5
  3374 ;; This function calls:
  3375 ;;		Nothing
  3376 ;; This function is called by:
  3377 ;;		__SendDataToConsole
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381     0818                     ___wmul:	
  3382                           ;psect for function ___wmul
  3383                           
  3384                           
  3385                           ;incstack = 0
  3386                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3387     0818  01F4               	clrf	___wmul@product
  3388     0819  01F5               	clrf	___wmul@product+1
  3389     081A                     l4590:
  3390     081A  0020               	movlb	0	; select bank0
  3391     081B  1C20               	btfss	___wmul@multiplier,0
  3392     081C  2821               	goto	l840
  3393     081D  0822               	movf	___wmul@multiplicand,w
  3394     081E  07F4               	addwf	___wmul@product,f
  3395     081F  0823               	movf	___wmul@multiplicand+1,w
  3396     0820  3DF5               	addwfc	___wmul@product+1,f
  3397     0821                     l840:
  3398     0821  3001               	movlw	1
  3399     0822                     u5625:
  3400     0822  35A2               	lslf	___wmul@multiplicand,f
  3401     0823  0DA3               	rlf	___wmul@multiplicand+1,f
  3402     0824  0B89               	decfsz	9,f
  3403     0825  2822               	goto	u5625
  3404     0826  3001               	movlw	1
  3405     0827                     u5635:
  3406     0827  36A1               	lsrf	___wmul@multiplier+1,f
  3407     0828  0CA0               	rrf	___wmul@multiplier,f
  3408     0829  0B89               	decfsz	9,f
  3409     082A  2827               	goto	u5635
  3410     082B  0820               	movf	___wmul@multiplier,w
  3411     082C  0421               	iorwf	___wmul@multiplier+1,w
  3412     082D  1D03               	btfss	3,2
  3413     082E  281A               	goto	l4590
  3414     082F  0875               	movf	___wmul@product+1,w
  3415     0830  00A1               	movwf	?___wmul+1
  3416     0831  0874               	movf	___wmul@product,w
  3417     0832  00A0               	movwf	?___wmul
  3418     0833  0008               	return
  3419     0834                     __end_of___wmul:
  3420                           
  3421                           	psect	text3
  3422     091F                     __ptext3:	
  3423 ;; *************** function ___awdiv *****************
  3424 ;; Defined at:
  3425 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  divisor         2    4[BANK0 ] int 
  3428 ;;  dividend        2    6[BANK0 ] int 
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;  quotient        2   11[BANK0 ] int 
  3431 ;;  sign            1   10[BANK0 ] unsigned char 
  3432 ;;  counter         1    9[BANK0 ] unsigned char 
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  2    4[BANK0 ] int 
  3435 ;; Registers used:
  3436 ;;		wreg, status,2, status,0
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3442 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3443 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3444 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3445 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3446 ;;Total ram usage:        9 bytes
  3447 ;; Hardware stack levels used: 1
  3448 ;; Hardware stack levels required when called: 5
  3449 ;; This function calls:
  3450 ;;		Nothing
  3451 ;; This function is called by:
  3452 ;;		__SendDataToConsole
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456     091F                     ___awdiv:	
  3457                           ;psect for function ___awdiv
  3458                           
  3459                           
  3460                           ;incstack = 0
  3461                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3462     091F  0020               	movlb	0	; select bank0
  3463     0920  01AA               	clrf	___awdiv@sign
  3464     0921  1FA5               	btfss	___awdiv@divisor+1,7
  3465     0922  292A               	goto	l4610
  3466     0923  09A4               	comf	___awdiv@divisor,f
  3467     0924  09A5               	comf	___awdiv@divisor+1,f
  3468     0925  0AA4               	incf	___awdiv@divisor,f
  3469     0926  1903               	skipnz
  3470     0927  0AA5               	incf	___awdiv@divisor+1,f
  3471     0928  01AA               	clrf	___awdiv@sign
  3472     0929  0AAA               	incf	___awdiv@sign,f
  3473     092A                     l4610:
  3474     092A  1FA7               	btfss	___awdiv@dividend+1,7
  3475     092B  2935               	goto	l4616
  3476     092C  09A6               	comf	___awdiv@dividend,f
  3477     092D  09A7               	comf	___awdiv@dividend+1,f
  3478     092E  0AA6               	incf	___awdiv@dividend,f
  3479     092F  1903               	skipnz
  3480     0930  0AA7               	incf	___awdiv@dividend+1,f
  3481     0931  3001               	movlw	1
  3482     0932  00A8               	movwf	??___awdiv
  3483     0933  0828               	movf	??___awdiv,w
  3484     0934  06AA               	xorwf	___awdiv@sign,f
  3485     0935                     l4616:
  3486     0935  01AB               	clrf	___awdiv@quotient
  3487     0936  01AC               	clrf	___awdiv@quotient+1
  3488     0937  0824               	movf	___awdiv@divisor,w
  3489     0938  0425               	iorwf	___awdiv@divisor+1,w
  3490     0939  1903               	btfsc	3,2
  3491     093A  2964               	goto	l4638
  3492     093B  01A9               	clrf	___awdiv@counter
  3493     093C  0AA9               	incf	___awdiv@counter,f
  3494     093D                     l4626:
  3495     093D  1BA5               	btfsc	___awdiv@divisor+1,7
  3496     093E  2949               	goto	l4628
  3497     093F  3001               	movlw	1
  3498     0940                     u5685:
  3499     0940  35A4               	lslf	___awdiv@divisor,f
  3500     0941  0DA5               	rlf	___awdiv@divisor+1,f
  3501     0942  0B89               	decfsz	9,f
  3502     0943  2940               	goto	u5685
  3503     0944  3001               	movlw	1
  3504     0945  00A8               	movwf	??___awdiv
  3505     0946  0828               	movf	??___awdiv,w
  3506     0947  07A9               	addwf	___awdiv@counter,f
  3507     0948  293D               	goto	l4626
  3508     0949                     l4628:
  3509     0949  3001               	movlw	1
  3510     094A                     u5705:
  3511     094A  35AB               	lslf	___awdiv@quotient,f
  3512     094B  0DAC               	rlf	___awdiv@quotient+1,f
  3513     094C  0B89               	decfsz	9,f
  3514     094D  294A               	goto	u5705
  3515     094E  0825               	movf	___awdiv@divisor+1,w
  3516     094F  0227               	subwf	___awdiv@dividend+1,w
  3517     0950  1D03               	skipz
  3518     0951  2954               	goto	u5715
  3519     0952  0824               	movf	___awdiv@divisor,w
  3520     0953  0226               	subwf	___awdiv@dividend,w
  3521     0954                     u5715:
  3522     0954  1C03               	skipc
  3523     0955  295B               	goto	l4634
  3524     0956  0824               	movf	___awdiv@divisor,w
  3525     0957  02A6               	subwf	___awdiv@dividend,f
  3526     0958  0825               	movf	___awdiv@divisor+1,w
  3527     0959  3BA7               	subwfb	___awdiv@dividend+1,f
  3528     095A  142B               	bsf	___awdiv@quotient,0
  3529     095B                     l4634:
  3530     095B  3001               	movlw	1
  3531     095C                     u5725:
  3532     095C  36A5               	lsrf	___awdiv@divisor+1,f
  3533     095D  0CA4               	rrf	___awdiv@divisor,f
  3534     095E  0B89               	decfsz	9,f
  3535     095F  295C               	goto	u5725
  3536     0960  3001               	movlw	1
  3537     0961  02A9               	subwf	___awdiv@counter,f
  3538     0962  1D03               	btfss	3,2
  3539     0963  2949               	goto	l4628
  3540     0964                     l4638:
  3541     0964  082A               	movf	___awdiv@sign,w
  3542     0965  1903               	btfsc	3,2
  3543     0966  296C               	goto	l4642
  3544     0967  09AB               	comf	___awdiv@quotient,f
  3545     0968  09AC               	comf	___awdiv@quotient+1,f
  3546     0969  0AAB               	incf	___awdiv@quotient,f
  3547     096A  1903               	skipnz
  3548     096B  0AAC               	incf	___awdiv@quotient+1,f
  3549     096C                     l4642:
  3550     096C  082C               	movf	___awdiv@quotient+1,w
  3551     096D  00A5               	movwf	?___awdiv+1
  3552     096E  082B               	movf	___awdiv@quotient,w
  3553     096F  00A4               	movwf	?___awdiv
  3554     0970  0008               	return
  3555     0971                     __end_of___awdiv:
  3556                           
  3557                           	psect	text4
  3558     02EE                     __ptext4:	
  3559 ;; *************** function __ReadSensor *****************
  3560 ;; Defined at:
  3561 ;;		line 450 in file "main.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;		None
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;  logR            4   46[BANK2 ] float 
  3566 ;;  Tf              4   28[BANK2 ] float 
  3567 ;;  Tc              4   24[BANK2 ] float 
  3568 ;;  T               4   20[BANK2 ] float 
  3569 ;;  invT            4   16[BANK2 ] float 
  3570 ;;  Rntc            4   12[BANK2 ] float 
  3571 ;;  Vcc             4    8[BANK2 ] float 
  3572 ;;  Rpullup         4    4[BANK2 ] float 
  3573 ;;  Vout            4    0[BANK2 ] float 
  3574 ;;  adcValue        2   44[BANK2 ] unsigned short 
  3575 ;; Return value:  Size  Location     Type
  3576 ;;                  1    wreg      void 
  3577 ;; Registers used:
  3578 ;;		wreg, status,2, status,0, pclath, cstack
  3579 ;; Tracked objects:
  3580 ;;		On entry : 0/0
  3581 ;;		On exit  : 0/0
  3582 ;;		Unchanged: 0/0
  3583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3585 ;;      Locals:         0       0       0      50       0       0       0       0       0       0       0       0       
      +0       0
  3586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3587 ;;      Totals:         0       0       0      50       0       0       0       0       0       0       0       0       
      +0       0
  3588 ;;Total ram usage:       50 bytes
  3589 ;; Hardware stack levels used: 1
  3590 ;; Hardware stack levels required when called: 8
  3591 ;; This function calls:
  3592 ;;		_ADC_GetConversion
  3593 ;;		___fladd
  3594 ;;		___fldiv
  3595 ;;		___flmul
  3596 ;;		___fltol
  3597 ;;		___xxtofl
  3598 ;;		_my_log
  3599 ;; This function is called by:
  3600 ;;		_main
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604     02EE                     __ReadSensor:	
  3605                           ;psect for function __ReadSensor
  3606                           
  3607                           
  3608                           ;main.c: 453:     uint16_t adcValue = ADC_GetConversion(NTC);
  3609                           
  3610                           ;incstack = 0
  3611                           ; Regs used in __ReadSensor: [wreg+status,2+status,0+pclath+cstack]
  3612     02EE  3006               	movlw	6
  3613     02EF  3197  27E4  3182   	fcall	_ADC_GetConversion
  3614     02F2  0875               	movf	?_ADC_GetConversion+1,w
  3615     02F3  0022               	movlb	2	; select bank2
  3616     02F4  00CD               	movwf	(__ReadSensor@adcValue+1)^(0+256)
  3617     02F5  0874               	movf	?_ADC_GetConversion,w
  3618     02F6  00CC               	movwf	__ReadSensor@adcValue^(0+256)
  3619                           
  3620                           ;main.c: 454:     float Vout = adcValue * (5.0f / 1023.0f);
  3621     02F7  303B               	movlw	59
  3622     02F8  0020               	movlb	0	; select bank0
  3623     02F9  00DF               	movwf	___flmul@b+3
  3624     02FA  30A0               	movlw	160
  3625     02FB  00DE               	movwf	___flmul@b+2
  3626     02FC  3028               	movlw	40
  3627     02FD  00DD               	movwf	___flmul@b+1
  3628     02FE  300A               	movlw	10
  3629     02FF  00DC               	movwf	___flmul@b
  3630     0300  0022               	movlb	2	; select bank2
  3631     0301  084C               	movf	__ReadSensor@adcValue^(0+256),w
  3632     0302  0020               	movlb	0	; select bank0
  3633     0303  00A0               	movwf	___xxtofl@val
  3634     0304  0022               	movlb	2	; select bank2
  3635     0305  084D               	movf	(__ReadSensor@adcValue+1)^(0+256),w
  3636     0306  0020               	movlb	0	; select bank0
  3637     0307  00A1               	movwf	___xxtofl@val+1
  3638     0308  01A2               	clrf	___xxtofl@val+2
  3639     0309  01A3               	clrf	___xxtofl@val+3
  3640     030A  3000               	movlw	0
  3641     030B  318A  22B8  3182   	fcall	___xxtofl
  3642     030E  0020               	movlb	0	; select bank0
  3643     030F  0823               	movf	?___xxtofl+3,w
  3644     0310  00E3               	movwf	___flmul@a+3
  3645     0311  0822               	movf	?___xxtofl+2,w
  3646     0312  00E2               	movwf	___flmul@a+2
  3647     0313  0821               	movf	?___xxtofl+1,w
  3648     0314  00E1               	movwf	___flmul@a+1
  3649     0315  0820               	movf	?___xxtofl,w
  3650     0316  00E0               	movwf	___flmul@a
  3651     0317  3180  204F  3182   	fcall	___flmul
  3652     031A  0020               	movlb	0	; select bank0
  3653     031B  085F               	movf	?___flmul+3,w
  3654     031C  0022               	movlb	2	; select bank2
  3655     031D  00A3               	movwf	(__ReadSensor@Vout+3)^(0+256)
  3656     031E  0020               	movlb	0	; select bank0
  3657     031F  085E               	movf	?___flmul+2,w
  3658     0320  0022               	movlb	2	; select bank2
  3659     0321  00A2               	movwf	(__ReadSensor@Vout+2)^(0+256)
  3660     0322  0020               	movlb	0	; select bank0
  3661     0323  085D               	movf	?___flmul+1,w
  3662     0324  0022               	movlb	2	; select bank2
  3663     0325  00A1               	movwf	(__ReadSensor@Vout+1)^(0+256)
  3664     0326  0020               	movlb	0	; select bank0
  3665     0327  085C               	movf	?___flmul,w
  3666     0328  0022               	movlb	2	; select bank2
  3667     0329  00A0               	movwf	__ReadSensor@Vout^(0+256)
  3668                           
  3669                           ;main.c: 457:     float Rpullup = 10000.0;
  3670     032A  3046               	movlw	70
  3671     032B  00A7               	movwf	(__ReadSensor@Rpullup+3)^(0+256)
  3672     032C  301C               	movlw	28
  3673     032D  00A6               	movwf	(__ReadSensor@Rpullup+2)^(0+256)
  3674     032E  3040               	movlw	64
  3675     032F  00A5               	movwf	(__ReadSensor@Rpullup+1)^(0+256)
  3676     0330  3000               	movlw	0
  3677     0331  00A4               	movwf	__ReadSensor@Rpullup^(0+256)
  3678                           
  3679                           ;main.c: 458:     float Vcc = 5.0;
  3680     0332  3040               	movlw	64
  3681     0333  00AB               	movwf	(__ReadSensor@Vcc+3)^(0+256)
  3682     0334  30A0               	movlw	160
  3683     0335  00AA               	movwf	(__ReadSensor@Vcc+2)^(0+256)
  3684     0336  3000               	movlw	0
  3685     0337  00A9               	movwf	(__ReadSensor@Vcc+1)^(0+256)
  3686     0338  3000               	movlw	0
  3687     0339  00A8               	movwf	__ReadSensor@Vcc^(0+256)
  3688                           
  3689                           ;main.c: 459:     float Rntc = Rpullup * (Vcc / Vout - 1.0f);
  3690     033A  0827               	movf	(__ReadSensor@Rpullup+3)^(0+256),w
  3691     033B  0020               	movlb	0	; select bank0
  3692     033C  00DF               	movwf	___flmul@b+3
  3693     033D  0022               	movlb	2	; select bank2
  3694     033E  0826               	movf	(__ReadSensor@Rpullup+2)^(0+256),w
  3695     033F  0020               	movlb	0	; select bank0
  3696     0340  00DE               	movwf	___flmul@b+2
  3697     0341  0022               	movlb	2	; select bank2
  3698     0342  0825               	movf	(__ReadSensor@Rpullup+1)^(0+256),w
  3699     0343  0020               	movlb	0	; select bank0
  3700     0344  00DD               	movwf	___flmul@b+1
  3701     0345  0022               	movlb	2	; select bank2
  3702     0346  0824               	movf	__ReadSensor@Rpullup^(0+256),w
  3703     0347  0020               	movlb	0	; select bank0
  3704     0348  00DC               	movwf	___flmul@b
  3705     0349  30BF               	movlw	191
  3706     034A  00CB               	movwf	___fladd@b+3
  3707     034B  3080               	movlw	128
  3708     034C  00CA               	movwf	___fladd@b+2
  3709     034D  3000               	movlw	0
  3710     034E  00C9               	movwf	___fladd@b+1
  3711     034F  3000               	movlw	0
  3712     0350  00C8               	movwf	___fladd@b
  3713     0351  0022               	movlb	2	; select bank2
  3714     0352  0823               	movf	(__ReadSensor@Vout+3)^(0+256),w
  3715     0353  0020               	movlb	0	; select bank0
  3716     0354  00B1               	movwf	___fldiv@a+3
  3717     0355  0022               	movlb	2	; select bank2
  3718     0356  0822               	movf	(__ReadSensor@Vout+2)^(0+256),w
  3719     0357  0020               	movlb	0	; select bank0
  3720     0358  00B0               	movwf	___fldiv@a+2
  3721     0359  0022               	movlb	2	; select bank2
  3722     035A  0821               	movf	(__ReadSensor@Vout+1)^(0+256),w
  3723     035B  0020               	movlb	0	; select bank0
  3724     035C  00AF               	movwf	___fldiv@a+1
  3725     035D  0022               	movlb	2	; select bank2
  3726     035E  0820               	movf	__ReadSensor@Vout^(0+256),w
  3727     035F  0020               	movlb	0	; select bank0
  3728     0360  00AE               	movwf	___fldiv@a
  3729     0361  0022               	movlb	2	; select bank2
  3730     0362  082B               	movf	(__ReadSensor@Vcc+3)^(0+256),w
  3731     0363  0020               	movlb	0	; select bank0
  3732     0364  00B5               	movwf	___fldiv@b+3
  3733     0365  0022               	movlb	2	; select bank2
  3734     0366  082A               	movf	(__ReadSensor@Vcc+2)^(0+256),w
  3735     0367  0020               	movlb	0	; select bank0
  3736     0368  00B4               	movwf	___fldiv@b+2
  3737     0369  0022               	movlb	2	; select bank2
  3738     036A  0829               	movf	(__ReadSensor@Vcc+1)^(0+256),w
  3739     036B  0020               	movlb	0	; select bank0
  3740     036C  00B3               	movwf	___fldiv@b+1
  3741     036D  0022               	movlb	2	; select bank2
  3742     036E  0828               	movf	__ReadSensor@Vcc^(0+256),w
  3743     036F  0020               	movlb	0	; select bank0
  3744     0370  00B2               	movwf	___fldiv@b
  3745     0371  318C  24DE  3182   	fcall	___fldiv
  3746     0374  0020               	movlb	0	; select bank0
  3747     0375  0831               	movf	?___fldiv+3,w
  3748     0376  00CF               	movwf	___fladd@a+3
  3749     0377  0830               	movf	?___fldiv+2,w
  3750     0378  00CE               	movwf	___fladd@a+2
  3751     0379  082F               	movf	?___fldiv+1,w
  3752     037A  00CD               	movwf	___fladd@a+1
  3753     037B  082E               	movf	?___fldiv,w
  3754     037C  00CC               	movwf	___fladd@a
  3755     037D  318E  264E  3182   	fcall	___fladd
  3756     0380  0020               	movlb	0	; select bank0
  3757     0381  084B               	movf	?___fladd+3,w
  3758     0382  00E3               	movwf	___flmul@a+3
  3759     0383  084A               	movf	?___fladd+2,w
  3760     0384  00E2               	movwf	___flmul@a+2
  3761     0385  0849               	movf	?___fladd+1,w
  3762     0386  00E1               	movwf	___flmul@a+1
  3763     0387  0848               	movf	?___fladd,w
  3764     0388  00E0               	movwf	___flmul@a
  3765     0389  3180  204F  3182   	fcall	___flmul
  3766     038C  0020               	movlb	0	; select bank0
  3767     038D  085F               	movf	?___flmul+3,w
  3768     038E  0022               	movlb	2	; select bank2
  3769     038F  00AF               	movwf	(__ReadSensor@Rntc+3)^(0+256)
  3770     0390  0020               	movlb	0	; select bank0
  3771     0391  085E               	movf	?___flmul+2,w
  3772     0392  0022               	movlb	2	; select bank2
  3773     0393  00AE               	movwf	(__ReadSensor@Rntc+2)^(0+256)
  3774     0394  0020               	movlb	0	; select bank0
  3775     0395  085D               	movf	?___flmul+1,w
  3776     0396  0022               	movlb	2	; select bank2
  3777     0397  00AD               	movwf	(__ReadSensor@Rntc+1)^(0+256)
  3778     0398  0020               	movlb	0	; select bank0
  3779     0399  085C               	movf	?___flmul,w
  3780     039A  0022               	movlb	2	; select bank2
  3781     039B  00AC               	movwf	__ReadSensor@Rntc^(0+256)
  3782                           
  3783                           ;main.c: 462:     float logR = my_log(Rntc);
  3784     039C  082F               	movf	(__ReadSensor@Rntc+3)^(0+256),w
  3785     039D  0020               	movlb	0	; select bank0
  3786     039E  00EC               	movwf	my_log@x+3
  3787     039F  0022               	movlb	2	; select bank2
  3788     03A0  082E               	movf	(__ReadSensor@Rntc+2)^(0+256),w
  3789     03A1  0020               	movlb	0	; select bank0
  3790     03A2  00EB               	movwf	my_log@x+2
  3791     03A3  0022               	movlb	2	; select bank2
  3792     03A4  082D               	movf	(__ReadSensor@Rntc+1)^(0+256),w
  3793     03A5  0020               	movlb	0	; select bank0
  3794     03A6  00EA               	movwf	my_log@x+1
  3795     03A7  0022               	movlb	2	; select bank2
  3796     03A8  082C               	movf	__ReadSensor@Rntc^(0+256),w
  3797     03A9  0020               	movlb	0	; select bank0
  3798     03AA  00E9               	movwf	my_log@x
  3799     03AB  3185  255C  3182   	fcall	_my_log
  3800     03AE  0020               	movlb	0	; select bank0
  3801     03AF  086C               	movf	?_my_log+3,w
  3802     03B0  0022               	movlb	2	; select bank2
  3803     03B1  00D1               	movwf	(__ReadSensor@logR+3)^(0+256)
  3804     03B2  0020               	movlb	0	; select bank0
  3805     03B3  086B               	movf	?_my_log+2,w
  3806     03B4  0022               	movlb	2	; select bank2
  3807     03B5  00D0               	movwf	(__ReadSensor@logR+2)^(0+256)
  3808     03B6  0020               	movlb	0	; select bank0
  3809     03B7  086A               	movf	?_my_log+1,w
  3810     03B8  0022               	movlb	2	; select bank2
  3811     03B9  00CF               	movwf	(__ReadSensor@logR+1)^(0+256)
  3812     03BA  0020               	movlb	0	; select bank0
  3813     03BB  0869               	movf	?_my_log,w
  3814     03BC  0022               	movlb	2	; select bank2
  3815     03BD  00CE               	movwf	__ReadSensor@logR^(0+256)
  3816     03BE  3033               	movlw	51
  3817     03BF  0020               	movlb	0	; select bank0
  3818     03C0  00DF               	movwf	___flmul@b+3
  3819     03C1  30C4               	movlw	196
  3820     03C2  00DE               	movwf	___flmul@b+2
  3821     03C3  3025               	movlw	37
  3822     03C4  00DD               	movwf	___flmul@b+1
  3823     03C5  3080               	movlw	128
  3824     03C6  00DC               	movwf	___flmul@b
  3825     03C7  0022               	movlb	2	; select bank2
  3826     03C8  0851               	movf	(__ReadSensor@logR+3)^(0+256),w
  3827     03C9  0020               	movlb	0	; select bank0
  3828     03CA  00E3               	movwf	___flmul@a+3
  3829     03CB  0022               	movlb	2	; select bank2
  3830     03CC  0850               	movf	(__ReadSensor@logR+2)^(0+256),w
  3831     03CD  0020               	movlb	0	; select bank0
  3832     03CE  00E2               	movwf	___flmul@a+2
  3833     03CF  0022               	movlb	2	; select bank2
  3834     03D0  084F               	movf	(__ReadSensor@logR+1)^(0+256),w
  3835     03D1  0020               	movlb	0	; select bank0
  3836     03D2  00E1               	movwf	___flmul@a+1
  3837     03D3  0022               	movlb	2	; select bank2
  3838     03D4  084E               	movf	__ReadSensor@logR^(0+256),w
  3839     03D5  0020               	movlb	0	; select bank0
  3840     03D6  00E0               	movwf	___flmul@a
  3841     03D7  3180  204F  3182   	fcall	___flmul
  3842     03DA  0020               	movlb	0	; select bank0
  3843     03DB  085F               	movf	?___flmul+3,w
  3844     03DC  0022               	movlb	2	; select bank2
  3845     03DD  00C3               	movwf	(__ReadSensor$1847+3)^(0+256)
  3846     03DE  0020               	movlb	0	; select bank0
  3847     03DF  085E               	movf	?___flmul+2,w
  3848     03E0  0022               	movlb	2	; select bank2
  3849     03E1  00C2               	movwf	(__ReadSensor$1847+2)^(0+256)
  3850     03E2  0020               	movlb	0	; select bank0
  3851     03E3  085D               	movf	?___flmul+1,w
  3852     03E4  0022               	movlb	2	; select bank2
  3853     03E5  00C1               	movwf	(__ReadSensor$1847+1)^(0+256)
  3854     03E6  0020               	movlb	0	; select bank0
  3855     03E7  085C               	movf	?___flmul,w
  3856     03E8  0022               	movlb	2	; select bank2
  3857     03E9  00C0               	movwf	__ReadSensor$1847^(0+256)
  3858     03EA  0851               	movf	(__ReadSensor@logR+3)^(0+256),w
  3859     03EB  0020               	movlb	0	; select bank0
  3860     03EC  00DF               	movwf	___flmul@b+3
  3861     03ED  0022               	movlb	2	; select bank2
  3862     03EE  0850               	movf	(__ReadSensor@logR+2)^(0+256),w
  3863     03EF  0020               	movlb	0	; select bank0
  3864     03F0  00DE               	movwf	___flmul@b+2
  3865     03F1  0022               	movlb	2	; select bank2
  3866     03F2  084F               	movf	(__ReadSensor@logR+1)^(0+256),w
  3867     03F3  0020               	movlb	0	; select bank0
  3868     03F4  00DD               	movwf	___flmul@b+1
  3869     03F5  0022               	movlb	2	; select bank2
  3870     03F6  084E               	movf	__ReadSensor@logR^(0+256),w
  3871     03F7  0020               	movlb	0	; select bank0
  3872     03F8  00DC               	movwf	___flmul@b
  3873     03F9  0022               	movlb	2	; select bank2
  3874     03FA  0843               	movf	(__ReadSensor$1847+3)^(0+256),w
  3875     03FB  0020               	movlb	0	; select bank0
  3876     03FC  00E3               	movwf	___flmul@a+3
  3877     03FD  0022               	movlb	2	; select bank2
  3878     03FE  0842               	movf	(__ReadSensor$1847+2)^(0+256),w
  3879     03FF  0020               	movlb	0	; select bank0
  3880     0400  00E2               	movwf	___flmul@a+2
  3881     0401  0022               	movlb	2	; select bank2
  3882     0402  0841               	movf	(__ReadSensor$1847+1)^(0+256),w
  3883     0403  0020               	movlb	0	; select bank0
  3884     0404  00E1               	movwf	___flmul@a+1
  3885     0405  0022               	movlb	2	; select bank2
  3886     0406  0840               	movf	__ReadSensor$1847^(0+256),w
  3887     0407  0020               	movlb	0	; select bank0
  3888     0408  00E0               	movwf	___flmul@a
  3889     0409  3180  204F  3182   	fcall	___flmul
  3890     040C  0020               	movlb	0	; select bank0
  3891     040D  085F               	movf	?___flmul+3,w
  3892     040E  0022               	movlb	2	; select bank2
  3893     040F  00C7               	movwf	(__ReadSensor$1848+3)^(0+256)
  3894     0410  0020               	movlb	0	; select bank0
  3895     0411  085E               	movf	?___flmul+2,w
  3896     0412  0022               	movlb	2	; select bank2
  3897     0413  00C6               	movwf	(__ReadSensor$1848+2)^(0+256)
  3898     0414  0020               	movlb	0	; select bank0
  3899     0415  085D               	movf	?___flmul+1,w
  3900     0416  0022               	movlb	2	; select bank2
  3901     0417  00C5               	movwf	(__ReadSensor$1848+1)^(0+256)
  3902     0418  0020               	movlb	0	; select bank0
  3903     0419  085C               	movf	?___flmul,w
  3904     041A  0022               	movlb	2	; select bank2
  3905     041B  00C4               	movwf	__ReadSensor$1848^(0+256)
  3906     041C  303A               	movlw	58
  3907     041D  0020               	movlb	0	; select bank0
  3908     041E  00CB               	movwf	___fladd@b+3
  3909     041F  30A8               	movlw	168
  3910     0420  00CA               	movwf	___fladd@b+2
  3911     0421  3000               	movlw	0
  3912     0422  00C9               	movwf	___fladd@b+1
  3913     0423  3010               	movlw	16
  3914     0424  00C8               	movwf	___fladd@b
  3915     0425  3039               	movlw	57
  3916     0426  00DF               	movwf	___flmul@b+3
  3917     0427  3078               	movlw	120
  3918     0428  00DE               	movwf	___flmul@b+2
  3919     0429  302D               	movlw	45
  3920     042A  00DD               	movwf	___flmul@b+1
  3921     042B  3016               	movlw	22
  3922     042C  00DC               	movwf	___flmul@b
  3923     042D  0022               	movlb	2	; select bank2
  3924     042E  0851               	movf	(__ReadSensor@logR+3)^(0+256),w
  3925     042F  0020               	movlb	0	; select bank0
  3926     0430  00E3               	movwf	___flmul@a+3
  3927     0431  0022               	movlb	2	; select bank2
  3928     0432  0850               	movf	(__ReadSensor@logR+2)^(0+256),w
  3929     0433  0020               	movlb	0	; select bank0
  3930     0434  00E2               	movwf	___flmul@a+2
  3931     0435  0022               	movlb	2	; select bank2
  3932     0436  084F               	movf	(__ReadSensor@logR+1)^(0+256),w
  3933     0437  0020               	movlb	0	; select bank0
  3934     0438  00E1               	movwf	___flmul@a+1
  3935     0439  0022               	movlb	2	; select bank2
  3936     043A  084E               	movf	__ReadSensor@logR^(0+256),w
  3937     043B  0020               	movlb	0	; select bank0
  3938     043C  00E0               	movwf	___flmul@a
  3939     043D  3180  204F  3182   	fcall	___flmul
  3940     0440  0020               	movlb	0	; select bank0
  3941     0441  085F               	movf	?___flmul+3,w
  3942     0442  00CF               	movwf	___fladd@a+3
  3943     0443  085E               	movf	?___flmul+2,w
  3944     0444  00CE               	movwf	___fladd@a+2
  3945     0445  085D               	movf	?___flmul+1,w
  3946     0446  00CD               	movwf	___fladd@a+1
  3947     0447  085C               	movf	?___flmul,w
  3948     0448  00CC               	movwf	___fladd@a
  3949     0449  318E  264E  3182   	fcall	___fladd
  3950     044C  0020               	movlb	0	; select bank0
  3951     044D  084B               	movf	?___fladd+3,w
  3952     044E  0022               	movlb	2	; select bank2
  3953     044F  00CB               	movwf	(__ReadSensor$1849+3)^(0+256)
  3954     0450  0020               	movlb	0	; select bank0
  3955     0451  084A               	movf	?___fladd+2,w
  3956     0452  0022               	movlb	2	; select bank2
  3957     0453  00CA               	movwf	(__ReadSensor$1849+2)^(0+256)
  3958     0454  0020               	movlb	0	; select bank0
  3959     0455  0849               	movf	?___fladd+1,w
  3960     0456  0022               	movlb	2	; select bank2
  3961     0457  00C9               	movwf	(__ReadSensor$1849+1)^(0+256)
  3962     0458  0020               	movlb	0	; select bank0
  3963     0459  0848               	movf	?___fladd,w
  3964     045A  0022               	movlb	2	; select bank2
  3965     045B  00C8               	movwf	__ReadSensor$1849^(0+256)
  3966     045C  0851               	movf	(__ReadSensor@logR+3)^(0+256),w
  3967     045D  0020               	movlb	0	; select bank0
  3968     045E  00DF               	movwf	___flmul@b+3
  3969     045F  0022               	movlb	2	; select bank2
  3970     0460  0850               	movf	(__ReadSensor@logR+2)^(0+256),w
  3971     0461  0020               	movlb	0	; select bank0
  3972     0462  00DE               	movwf	___flmul@b+2
  3973     0463  0022               	movlb	2	; select bank2
  3974     0464  084F               	movf	(__ReadSensor@logR+1)^(0+256),w
  3975     0465  0020               	movlb	0	; select bank0
  3976     0466  00DD               	movwf	___flmul@b+1
  3977     0467  0022               	movlb	2	; select bank2
  3978     0468  084E               	movf	__ReadSensor@logR^(0+256),w
  3979     0469  0020               	movlb	0	; select bank0
  3980     046A  00DC               	movwf	___flmul@b
  3981     046B  0022               	movlb	2	; select bank2
  3982     046C  0847               	movf	(__ReadSensor$1848+3)^(0+256),w
  3983     046D  0020               	movlb	0	; select bank0
  3984     046E  00E3               	movwf	___flmul@a+3
  3985     046F  0022               	movlb	2	; select bank2
  3986     0470  0846               	movf	(__ReadSensor$1848+2)^(0+256),w
  3987     0471  0020               	movlb	0	; select bank0
  3988     0472  00E2               	movwf	___flmul@a+2
  3989     0473  0022               	movlb	2	; select bank2
  3990     0474  0845               	movf	(__ReadSensor$1848+1)^(0+256),w
  3991     0475  0020               	movlb	0	; select bank0
  3992     0476  00E1               	movwf	___flmul@a+1
  3993     0477  0022               	movlb	2	; select bank2
  3994     0478  0844               	movf	__ReadSensor$1848^(0+256),w
  3995     0479  0020               	movlb	0	; select bank0
  3996     047A  00E0               	movwf	___flmul@a
  3997     047B  3180  204F  3182   	fcall	___flmul
  3998     047E  0020               	movlb	0	; select bank0
  3999     047F  085F               	movf	?___flmul+3,w
  4000     0480  00CB               	movwf	___fladd@b+3
  4001     0481  085E               	movf	?___flmul+2,w
  4002     0482  00CA               	movwf	___fladd@b+2
  4003     0483  085D               	movf	?___flmul+1,w
  4004     0484  00C9               	movwf	___fladd@b+1
  4005     0485  085C               	movf	?___flmul,w
  4006     0486  00C8               	movwf	___fladd@b
  4007     0487  0022               	movlb	2	; select bank2
  4008     0488  084B               	movf	(__ReadSensor$1849+3)^(0+256),w
  4009     0489  0020               	movlb	0	; select bank0
  4010     048A  00CF               	movwf	___fladd@a+3
  4011     048B  0022               	movlb	2	; select bank2
  4012     048C  084A               	movf	(__ReadSensor$1849+2)^(0+256),w
  4013     048D  0020               	movlb	0	; select bank0
  4014     048E  00CE               	movwf	___fladd@a+2
  4015     048F  0022               	movlb	2	; select bank2
  4016     0490  0849               	movf	(__ReadSensor$1849+1)^(0+256),w
  4017     0491  0020               	movlb	0	; select bank0
  4018     0492  00CD               	movwf	___fladd@a+1
  4019     0493  0022               	movlb	2	; select bank2
  4020     0494  0848               	movf	__ReadSensor$1849^(0+256),w
  4021     0495  0020               	movlb	0	; select bank0
  4022     0496  00CC               	movwf	___fladd@a
  4023     0497  318E  264E  3182   	fcall	___fladd
  4024     049A  0020               	movlb	0	; select bank0
  4025     049B  084B               	movf	?___fladd+3,w
  4026     049C  0022               	movlb	2	; select bank2
  4027     049D  00B3               	movwf	(__ReadSensor@invT+3)^(0+256)
  4028     049E  0020               	movlb	0	; select bank0
  4029     049F  084A               	movf	?___fladd+2,w
  4030     04A0  0022               	movlb	2	; select bank2
  4031     04A1  00B2               	movwf	(__ReadSensor@invT+2)^(0+256)
  4032     04A2  0020               	movlb	0	; select bank0
  4033     04A3  0849               	movf	?___fladd+1,w
  4034     04A4  0022               	movlb	2	; select bank2
  4035     04A5  00B1               	movwf	(__ReadSensor@invT+1)^(0+256)
  4036     04A6  0020               	movlb	0	; select bank0
  4037     04A7  0848               	movf	?___fladd,w
  4038     04A8  0022               	movlb	2	; select bank2
  4039     04A9  00B0               	movwf	__ReadSensor@invT^(0+256)
  4040                           
  4041                           ;main.c: 466:     float T = 1.0f / invT;
  4042     04AA  0833               	movf	(__ReadSensor@invT+3)^(0+256),w
  4043     04AB  0020               	movlb	0	; select bank0
  4044     04AC  00B1               	movwf	___fldiv@a+3
  4045     04AD  0022               	movlb	2	; select bank2
  4046     04AE  0832               	movf	(__ReadSensor@invT+2)^(0+256),w
  4047     04AF  0020               	movlb	0	; select bank0
  4048     04B0  00B0               	movwf	___fldiv@a+2
  4049     04B1  0022               	movlb	2	; select bank2
  4050     04B2  0831               	movf	(__ReadSensor@invT+1)^(0+256),w
  4051     04B3  0020               	movlb	0	; select bank0
  4052     04B4  00AF               	movwf	___fldiv@a+1
  4053     04B5  0022               	movlb	2	; select bank2
  4054     04B6  0830               	movf	__ReadSensor@invT^(0+256),w
  4055     04B7  0020               	movlb	0	; select bank0
  4056     04B8  00AE               	movwf	___fldiv@a
  4057     04B9  303F               	movlw	63
  4058     04BA  00B5               	movwf	___fldiv@b+3
  4059     04BB  3080               	movlw	128
  4060     04BC  00B4               	movwf	___fldiv@b+2
  4061     04BD  3000               	movlw	0
  4062     04BE  00B3               	movwf	___fldiv@b+1
  4063     04BF  3000               	movlw	0
  4064     04C0  00B2               	movwf	___fldiv@b
  4065     04C1  318C  24DE  3182   	fcall	___fldiv
  4066     04C4  0020               	movlb	0	; select bank0
  4067     04C5  0831               	movf	?___fldiv+3,w
  4068     04C6  0022               	movlb	2	; select bank2
  4069     04C7  00B7               	movwf	(__ReadSensor@T+3)^(0+256)
  4070     04C8  0020               	movlb	0	; select bank0
  4071     04C9  0830               	movf	?___fldiv+2,w
  4072     04CA  0022               	movlb	2	; select bank2
  4073     04CB  00B6               	movwf	(__ReadSensor@T+2)^(0+256)
  4074     04CC  0020               	movlb	0	; select bank0
  4075     04CD  082F               	movf	?___fldiv+1,w
  4076     04CE  0022               	movlb	2	; select bank2
  4077     04CF  00B5               	movwf	(__ReadSensor@T+1)^(0+256)
  4078     04D0  0020               	movlb	0	; select bank0
  4079     04D1  082E               	movf	?___fldiv,w
  4080     04D2  0022               	movlb	2	; select bank2
  4081     04D3  00B4               	movwf	__ReadSensor@T^(0+256)
  4082                           
  4083                           ;main.c: 467:     float Tc = T - 273.15f;
  4084     04D4  30C3               	movlw	195
  4085     04D5  0020               	movlb	0	; select bank0
  4086     04D6  00CB               	movwf	___fladd@b+3
  4087     04D7  3088               	movlw	136
  4088     04D8  00CA               	movwf	___fladd@b+2
  4089     04D9  3093               	movlw	147
  4090     04DA  00C9               	movwf	___fladd@b+1
  4091     04DB  3033               	movlw	51
  4092     04DC  00C8               	movwf	___fladd@b
  4093     04DD  0022               	movlb	2	; select bank2
  4094     04DE  0837               	movf	(__ReadSensor@T+3)^(0+256),w
  4095     04DF  0020               	movlb	0	; select bank0
  4096     04E0  00CF               	movwf	___fladd@a+3
  4097     04E1  0022               	movlb	2	; select bank2
  4098     04E2  0836               	movf	(__ReadSensor@T+2)^(0+256),w
  4099     04E3  0020               	movlb	0	; select bank0
  4100     04E4  00CE               	movwf	___fladd@a+2
  4101     04E5  0022               	movlb	2	; select bank2
  4102     04E6  0835               	movf	(__ReadSensor@T+1)^(0+256),w
  4103     04E7  0020               	movlb	0	; select bank0
  4104     04E8  00CD               	movwf	___fladd@a+1
  4105     04E9  0022               	movlb	2	; select bank2
  4106     04EA  0834               	movf	__ReadSensor@T^(0+256),w
  4107     04EB  0020               	movlb	0	; select bank0
  4108     04EC  00CC               	movwf	___fladd@a
  4109     04ED  318E  264E  3182   	fcall	___fladd
  4110     04F0  0020               	movlb	0	; select bank0
  4111     04F1  084B               	movf	?___fladd+3,w
  4112     04F2  0022               	movlb	2	; select bank2
  4113     04F3  00BB               	movwf	(__ReadSensor@Tc+3)^(0+256)
  4114     04F4  0020               	movlb	0	; select bank0
  4115     04F5  084A               	movf	?___fladd+2,w
  4116     04F6  0022               	movlb	2	; select bank2
  4117     04F7  00BA               	movwf	(__ReadSensor@Tc+2)^(0+256)
  4118     04F8  0020               	movlb	0	; select bank0
  4119     04F9  0849               	movf	?___fladd+1,w
  4120     04FA  0022               	movlb	2	; select bank2
  4121     04FB  00B9               	movwf	(__ReadSensor@Tc+1)^(0+256)
  4122     04FC  0020               	movlb	0	; select bank0
  4123     04FD  0848               	movf	?___fladd,w
  4124     04FE  0022               	movlb	2	; select bank2
  4125     04FF  00B8               	movwf	__ReadSensor@Tc^(0+256)
  4126                           
  4127                           ;main.c: 468:     float Tf = (1.8f * Tc) + 32.0f;
  4128     0500  3042               	movlw	66
  4129     0501  0020               	movlb	0	; select bank0
  4130     0502  00CB               	movwf	___fladd@b+3
  4131     0503  3000               	movlw	0
  4132     0504  00CA               	movwf	___fladd@b+2
  4133     0505  3000               	movlw	0
  4134     0506  00C9               	movwf	___fladd@b+1
  4135     0507  3000               	movlw	0
  4136     0508  00C8               	movwf	___fladd@b
  4137     0509  303F               	movlw	63
  4138     050A  00DF               	movwf	___flmul@b+3
  4139     050B  30E6               	movlw	230
  4140     050C  00DE               	movwf	___flmul@b+2
  4141     050D  3066               	movlw	102
  4142     050E  00DD               	movwf	___flmul@b+1
  4143     050F  3066               	movlw	102
  4144     0510  00DC               	movwf	___flmul@b
  4145     0511  0022               	movlb	2	; select bank2
  4146     0512  083B               	movf	(__ReadSensor@Tc+3)^(0+256),w
  4147     0513  0020               	movlb	0	; select bank0
  4148     0514  00E3               	movwf	___flmul@a+3
  4149     0515  0022               	movlb	2	; select bank2
  4150     0516  083A               	movf	(__ReadSensor@Tc+2)^(0+256),w
  4151     0517  0020               	movlb	0	; select bank0
  4152     0518  00E2               	movwf	___flmul@a+2
  4153     0519  0022               	movlb	2	; select bank2
  4154     051A  0839               	movf	(__ReadSensor@Tc+1)^(0+256),w
  4155     051B  0020               	movlb	0	; select bank0
  4156     051C  00E1               	movwf	___flmul@a+1
  4157     051D  0022               	movlb	2	; select bank2
  4158     051E  0838               	movf	__ReadSensor@Tc^(0+256),w
  4159     051F  0020               	movlb	0	; select bank0
  4160     0520  00E0               	movwf	___flmul@a
  4161     0521  3180  204F  3182   	fcall	___flmul
  4162     0524  0020               	movlb	0	; select bank0
  4163     0525  085F               	movf	?___flmul+3,w
  4164     0526  00CF               	movwf	___fladd@a+3
  4165     0527  085E               	movf	?___flmul+2,w
  4166     0528  00CE               	movwf	___fladd@a+2
  4167     0529  085D               	movf	?___flmul+1,w
  4168     052A  00CD               	movwf	___fladd@a+1
  4169     052B  085C               	movf	?___flmul,w
  4170     052C  00CC               	movwf	___fladd@a
  4171     052D  318E  264E  3182   	fcall	___fladd
  4172     0530  0020               	movlb	0	; select bank0
  4173     0531  084B               	movf	?___fladd+3,w
  4174     0532  0022               	movlb	2	; select bank2
  4175     0533  00BF               	movwf	(__ReadSensor@Tf+3)^(0+256)
  4176     0534  0020               	movlb	0	; select bank0
  4177     0535  084A               	movf	?___fladd+2,w
  4178     0536  0022               	movlb	2	; select bank2
  4179     0537  00BE               	movwf	(__ReadSensor@Tf+2)^(0+256)
  4180     0538  0020               	movlb	0	; select bank0
  4181     0539  0849               	movf	?___fladd+1,w
  4182     053A  0022               	movlb	2	; select bank2
  4183     053B  00BD               	movwf	(__ReadSensor@Tf+1)^(0+256)
  4184     053C  0020               	movlb	0	; select bank0
  4185     053D  0848               	movf	?___fladd,w
  4186     053E  0022               	movlb	2	; select bank2
  4187     053F  00BC               	movwf	__ReadSensor@Tf^(0+256)
  4188                           
  4189                           ;main.c: 470:     TEMP = (int)Tf + -3;
  4190     0540  083F               	movf	(__ReadSensor@Tf+3)^(0+256),w
  4191     0541  0020               	movlb	0	; select bank0
  4192     0542  00A3               	movwf	___fltol@f1+3
  4193     0543  0022               	movlb	2	; select bank2
  4194     0544  083E               	movf	(__ReadSensor@Tf+2)^(0+256),w
  4195     0545  0020               	movlb	0	; select bank0
  4196     0546  00A2               	movwf	___fltol@f1+2
  4197     0547  0022               	movlb	2	; select bank2
  4198     0548  083D               	movf	(__ReadSensor@Tf+1)^(0+256),w
  4199     0549  0020               	movlb	0	; select bank0
  4200     054A  00A1               	movwf	___fltol@f1+1
  4201     054B  0022               	movlb	2	; select bank2
  4202     054C  083C               	movf	__ReadSensor@Tf^(0+256),w
  4203     054D  0020               	movlb	0	; select bank0
  4204     054E  00A0               	movwf	___fltol@f1
  4205     054F  3189  2171         	fcall	___fltol
  4206     0551  0020               	movlb	0	; select bank0
  4207     0552  0820               	movf	?___fltol,w
  4208     0553  3EFD               	addlw	253
  4209     0554  0022               	movlb	2	; select bank2
  4210     0555  00D2               	movwf	_TEMP^(0+256)
  4211     0556  30FF               	movlw	255
  4212     0557  0020               	movlb	0	; select bank0
  4213     0558  3D21               	addwfc	?___fltol+1,w
  4214     0559  0022               	movlb	2	; select bank2
  4215     055A  00D3               	movwf	(_TEMP+1)^(0+256)
  4216     055B  0008               	return
  4217     055C                     __end_of__ReadSensor:
  4218                           
  4219                           	psect	text5
  4220     055C                     __ptext5:	
  4221 ;; *************** function _my_log *****************
  4222 ;; Defined at:
  4223 ;;		line 4 in file "custom_math.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;  x               4   73[BANK0 ] float 
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;  term            4   27[BANK1 ] float 
  4228 ;;  sum             4   21[BANK1 ] float 
  4229 ;;  result          4   17[BANK1 ] float 
  4230 ;;  n               2   25[BANK1 ] int 
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  4   73[BANK0 ] float 
  4233 ;; Registers used:
  4234 ;;		wreg, status,2, status,0, pclath, cstack
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4240 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4241 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  4242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4243 ;;      Totals:         0       4      18       0       0       0       0       0       0       0       0       0       
      +0       0
  4244 ;;Total ram usage:       22 bytes
  4245 ;; Hardware stack levels used: 1
  4246 ;; Hardware stack levels required when called: 7
  4247 ;; This function calls:
  4248 ;;		___fladd
  4249 ;;		___fldiv
  4250 ;;		___flge
  4251 ;;		___flmul
  4252 ;;		___flneg
  4253 ;;		___flsub
  4254 ;;		___xxtofl
  4255 ;; This function is called by:
  4256 ;;		__ReadSensor
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260     055C                     _my_log:	
  4261                           ;psect for function _my_log
  4262                           
  4263                           
  4264                           ;custom_math.c: 5:     if (x <= 0) {
  4265                           
  4266                           ;incstack = 0
  4267                           ; Regs used in _my_log: [wreg+status,2+status,0+pclath+cstack]
  4268     055C  3000               	movlw	0
  4269     055D  0020               	movlb	0	; select bank0
  4270     055E  00A3               	movwf	___flge@ff1+3
  4271     055F  3000               	movlw	0
  4272     0560  00A2               	movwf	___flge@ff1+2
  4273     0561  3000               	movlw	0
  4274     0562  00A1               	movwf	___flge@ff1+1
  4275     0563  3000               	movlw	0
  4276     0564  00A0               	movwf	___flge@ff1
  4277     0565  086C               	movf	my_log@x+3,w
  4278     0566  00A7               	movwf	___flge@ff2+3
  4279     0567  086B               	movf	my_log@x+2,w
  4280     0568  00A6               	movwf	___flge@ff2+2
  4281     0569  086A               	movf	my_log@x+1,w
  4282     056A  00A5               	movwf	___flge@ff2+1
  4283     056B  0869               	movf	my_log@x,w
  4284     056C  00A4               	movwf	___flge@ff2
  4285     056D  318A  223C  3185   	fcall	___flge
  4286     0570  1C03               	btfss	3,0
  4287     0571  2D7C               	goto	l4560
  4288                           
  4289                           ;custom_math.c: 6:         return 0.0f;
  4290     0572  3000               	movlw	0
  4291     0573  0020               	movlb	0	; select bank0
  4292     0574  00EC               	movwf	?_my_log+3
  4293     0575  3000               	movlw	0
  4294     0576  00EB               	movwf	?_my_log+2
  4295     0577  3000               	movlw	0
  4296     0578  00EA               	movwf	?_my_log+1
  4297     0579  3000               	movlw	0
  4298     057A  00E9               	movwf	?_my_log
  4299     057B  0008               	return
  4300     057C                     l4560:
  4301                           
  4302                           ;custom_math.c: 10:     float result = 0.0f;
  4303     057C  3000               	movlw	0
  4304     057D  0021               	movlb	1	; select bank1
  4305     057E  00B4               	movwf	(my_log@result+3)^(0+128)
  4306     057F  3000               	movlw	0
  4307     0580  00B3               	movwf	(my_log@result+2)^(0+128)
  4308     0581  3000               	movlw	0
  4309     0582  00B2               	movwf	(my_log@result+1)^(0+128)
  4310     0583  3000               	movlw	0
  4311     0584                     L1:
  4312     0584  00B1               	movwf	my_log@result^(0+128)
  4313                           
  4314                           ;custom_math.c: 11:     while (x > 1.5f) {
  4315                           
  4316                           ;custom_math.c: 14:     }
  4317     0585  303F               	movlw	63
  4318     0586  0020               	movlb	0	; select bank0
  4319     0587  00A3               	movwf	___flge@ff1+3
  4320     0588  30C0               	movlw	192
  4321     0589  00A2               	movwf	___flge@ff1+2
  4322     058A  3000               	movlw	0
  4323     058B  00A1               	movwf	___flge@ff1+1
  4324     058C  3000               	movlw	0
  4325     058D  00A0               	movwf	___flge@ff1
  4326     058E  086C               	movf	my_log@x+3,w
  4327     058F  00A7               	movwf	___flge@ff2+3
  4328     0590  086B               	movf	my_log@x+2,w
  4329     0591  00A6               	movwf	___flge@ff2+2
  4330     0592  086A               	movf	my_log@x+1,w
  4331     0593  00A5               	movwf	___flge@ff2+1
  4332     0594  0869               	movf	my_log@x,w
  4333     0595  00A4               	movwf	___flge@ff2
  4334     0596  318A  223C  3185   	fcall	___flge
  4335     0599  1803               	btfsc	3,0
  4336     059A  2DE3               	goto	l4564
  4337                           
  4338                           ;custom_math.c: 12:         x /= 2.718281828459045f;
  4339                           
  4340                           ;custom_math.c: 11:     while (x > 1.5f) {
  4341     059B  3040               	movlw	64
  4342     059C  0020               	movlb	0	; select bank0
  4343     059D  00B1               	movwf	___fldiv@a+3
  4344     059E  302D               	movlw	45
  4345     059F  00B0               	movwf	___fldiv@a+2
  4346     05A0  30F8               	movlw	248
  4347     05A1  00AF               	movwf	___fldiv@a+1
  4348     05A2  3054               	movlw	84
  4349     05A3  00AE               	movwf	___fldiv@a
  4350     05A4  086C               	movf	my_log@x+3,w
  4351     05A5  00B5               	movwf	___fldiv@b+3
  4352     05A6  086B               	movf	my_log@x+2,w
  4353     05A7  00B4               	movwf	___fldiv@b+2
  4354     05A8  086A               	movf	my_log@x+1,w
  4355     05A9  00B3               	movwf	___fldiv@b+1
  4356     05AA  0869               	movf	my_log@x,w
  4357     05AB  00B2               	movwf	___fldiv@b
  4358     05AC  318C  24DE  3185   	fcall	___fldiv
  4359     05AF  0020               	movlb	0	; select bank0
  4360     05B0  0831               	movf	?___fldiv+3,w
  4361     05B1  00EC               	movwf	my_log@x+3
  4362     05B2  0830               	movf	?___fldiv+2,w
  4363     05B3  00EB               	movwf	my_log@x+2
  4364     05B4  082F               	movf	?___fldiv+1,w
  4365     05B5  00EA               	movwf	my_log@x+1
  4366     05B6  082E               	movf	?___fldiv,w
  4367     05B7  00E9               	movwf	my_log@x
  4368                           
  4369                           ;custom_math.c: 13:         result += 1.0f;
  4370     05B8  303F               	movlw	63
  4371     05B9  00CB               	movwf	___fladd@b+3
  4372     05BA  3080               	movlw	128
  4373     05BB  00CA               	movwf	___fladd@b+2
  4374     05BC  3000               	movlw	0
  4375     05BD  00C9               	movwf	___fladd@b+1
  4376     05BE  3000               	movlw	0
  4377     05BF  00C8               	movwf	___fladd@b
  4378     05C0  0021               	movlb	1	; select bank1
  4379     05C1  0834               	movf	(my_log@result+3)^(0+128),w
  4380     05C2  0020               	movlb	0	; select bank0
  4381     05C3  00CF               	movwf	___fladd@a+3
  4382     05C4  0021               	movlb	1	; select bank1
  4383     05C5  0833               	movf	(my_log@result+2)^(0+128),w
  4384     05C6  0020               	movlb	0	; select bank0
  4385     05C7  00CE               	movwf	___fladd@a+2
  4386     05C8  0021               	movlb	1	; select bank1
  4387     05C9  0832               	movf	(my_log@result+1)^(0+128),w
  4388     05CA  0020               	movlb	0	; select bank0
  4389     05CB  00CD               	movwf	___fladd@a+1
  4390     05CC  0021               	movlb	1	; select bank1
  4391     05CD  0831               	movf	my_log@result^(0+128),w
  4392     05CE  0020               	movlb	0	; select bank0
  4393     05CF  00CC               	movwf	___fladd@a
  4394     05D0  318E  264E  3185   	fcall	___fladd
  4395     05D3  0020               	movlb	0	; select bank0
  4396     05D4  084B               	movf	?___fladd+3,w
  4397     05D5  0021               	movlb	1	; select bank1
  4398     05D6  00B4               	movwf	(my_log@result+3)^(0+128)
  4399     05D7  0020               	movlb	0	; select bank0
  4400     05D8  084A               	movf	?___fladd+2,w
  4401     05D9  0021               	movlb	1	; select bank1
  4402     05DA  00B3               	movwf	(my_log@result+2)^(0+128)
  4403     05DB  0020               	movlb	0	; select bank0
  4404     05DC  0849               	movf	?___fladd+1,w
  4405     05DD  0021               	movlb	1	; select bank1
  4406     05DE  00B2               	movwf	(my_log@result+1)^(0+128)
  4407     05DF  0020               	movlb	0	; select bank0
  4408     05E0  0848               	movf	?___fladd,w
  4409     05E1  0021               	movlb	1	; select bank1
  4410     05E2  2D84               	goto	L1
  4411     05E3                     l4564:
  4412                           
  4413                           ;custom_math.c: 16:     x -= 1.0f;
  4414     05E3  303F               	movlw	63
  4415     05E4  0020               	movlb	0	; select bank0
  4416     05E5  00DF               	movwf	___flsub@a+3
  4417     05E6  3080               	movlw	128
  4418     05E7  00DE               	movwf	___flsub@a+2
  4419     05E8  3000               	movlw	0
  4420     05E9  00DD               	movwf	___flsub@a+1
  4421     05EA  3000               	movlw	0
  4422     05EB  00DC               	movwf	___flsub@a
  4423     05EC  086C               	movf	my_log@x+3,w
  4424     05ED  00E3               	movwf	___flsub@b+3
  4425     05EE  086B               	movf	my_log@x+2,w
  4426     05EF  00E2               	movwf	___flsub@b+2
  4427     05F0  086A               	movf	my_log@x+1,w
  4428     05F1  00E1               	movwf	___flsub@b+1
  4429     05F2  0869               	movf	my_log@x,w
  4430     05F3  00E0               	movwf	___flsub@b
  4431     05F4  3188  2034  3185   	fcall	___flsub
  4432     05F7  0020               	movlb	0	; select bank0
  4433     05F8  085F               	movf	?___flsub+3,w
  4434     05F9  00EC               	movwf	my_log@x+3
  4435     05FA  085E               	movf	?___flsub+2,w
  4436     05FB  00EB               	movwf	my_log@x+2
  4437     05FC  085D               	movf	?___flsub+1,w
  4438     05FD  00EA               	movwf	my_log@x+1
  4439     05FE  085C               	movf	?___flsub,w
  4440     05FF  00E9               	movwf	my_log@x
  4441                           
  4442                           ;custom_math.c: 19:     float term = x;
  4443     0600  086C               	movf	my_log@x+3,w
  4444     0601  0021               	movlb	1	; select bank1
  4445     0602  00BE               	movwf	(my_log@term+3)^(0+128)
  4446     0603  0020               	movlb	0	; select bank0
  4447     0604  086B               	movf	my_log@x+2,w
  4448     0605  0021               	movlb	1	; select bank1
  4449     0606  00BD               	movwf	(my_log@term+2)^(0+128)
  4450     0607  0020               	movlb	0	; select bank0
  4451     0608  086A               	movf	my_log@x+1,w
  4452     0609  0021               	movlb	1	; select bank1
  4453     060A  00BC               	movwf	(my_log@term+1)^(0+128)
  4454     060B  0020               	movlb	0	; select bank0
  4455     060C  0869               	movf	my_log@x,w
  4456     060D  0021               	movlb	1	; select bank1
  4457     060E  00BB               	movwf	my_log@term^(0+128)
  4458                           
  4459                           ;custom_math.c: 20:     float sum = 0.0f;
  4460     060F  3000               	movlw	0
  4461     0610  00B8               	movwf	(my_log@sum+3)^(0+128)
  4462     0611  3000               	movlw	0
  4463     0612  00B7               	movwf	(my_log@sum+2)^(0+128)
  4464     0613  3000               	movlw	0
  4465     0614  00B6               	movwf	(my_log@sum+1)^(0+128)
  4466     0615  3000               	movlw	0
  4467     0616  00B5               	movwf	my_log@sum^(0+128)
  4468                           
  4469                           ;custom_math.c: 21:     int n = 1;
  4470     0617  3001               	movlw	1
  4471     0618  00B9               	movwf	my_log@n^(0+128)
  4472     0619  3000               	movlw	0
  4473     061A  00BA               	movwf	(my_log@n^(0+128)+1)
  4474     061B                     l4580:	
  4475                           ;custom_math.c: 23:     while (term > 1e-7f || term < -1e-7f) {
  4476                           
  4477                           
  4478                           ;custom_math.c: 23:     while (term > 1e-7f || term < -1e-7f) {
  4479     061B  3033               	movlw	51
  4480     061C  0020               	movlb	0	; select bank0
  4481     061D  00A3               	movwf	___flge@ff1+3
  4482     061E  30D6               	movlw	214
  4483     061F  00A2               	movwf	___flge@ff1+2
  4484     0620  30BF               	movlw	191
  4485     0621  00A1               	movwf	___flge@ff1+1
  4486     0622  3095               	movlw	149
  4487     0623  00A0               	movwf	___flge@ff1
  4488     0624  0021               	movlb	1	; select bank1
  4489     0625  083E               	movf	(my_log@term+3)^(0+128),w
  4490     0626  0020               	movlb	0	; select bank0
  4491     0627  00A7               	movwf	___flge@ff2+3
  4492     0628  0021               	movlb	1	; select bank1
  4493     0629  083D               	movf	(my_log@term+2)^(0+128),w
  4494     062A  0020               	movlb	0	; select bank0
  4495     062B  00A6               	movwf	___flge@ff2+2
  4496     062C  0021               	movlb	1	; select bank1
  4497     062D  083C               	movf	(my_log@term+1)^(0+128),w
  4498     062E  0020               	movlb	0	; select bank0
  4499     062F  00A5               	movwf	___flge@ff2+1
  4500     0630  0021               	movlb	1	; select bank1
  4501     0631  083B               	movf	my_log@term^(0+128),w
  4502     0632  0020               	movlb	0	; select bank0
  4503     0633  00A4               	movwf	___flge@ff2
  4504     0634  318A  223C  3185   	fcall	___flge
  4505     0637  1803               	btfsc	3,0
  4506     0638  2F0B               	goto	l4582
  4507     0639                     l4572:
  4508                           
  4509                           ;custom_math.c: 24:         sum += term;
  4510     0639  0021               	movlb	1	; select bank1
  4511     063A  083E               	movf	(my_log@term+3)^(0+128),w
  4512     063B  0020               	movlb	0	; select bank0
  4513     063C  00CB               	movwf	___fladd@b+3
  4514     063D  0021               	movlb	1	; select bank1
  4515     063E  083D               	movf	(my_log@term+2)^(0+128),w
  4516     063F  0020               	movlb	0	; select bank0
  4517     0640  00CA               	movwf	___fladd@b+2
  4518     0641  0021               	movlb	1	; select bank1
  4519     0642  083C               	movf	(my_log@term+1)^(0+128),w
  4520     0643  0020               	movlb	0	; select bank0
  4521     0644  00C9               	movwf	___fladd@b+1
  4522     0645  0021               	movlb	1	; select bank1
  4523     0646  083B               	movf	my_log@term^(0+128),w
  4524     0647  0020               	movlb	0	; select bank0
  4525     0648  00C8               	movwf	___fladd@b
  4526     0649  0021               	movlb	1	; select bank1
  4527     064A  0838               	movf	(my_log@sum+3)^(0+128),w
  4528     064B  0020               	movlb	0	; select bank0
  4529     064C  00CF               	movwf	___fladd@a+3
  4530     064D  0021               	movlb	1	; select bank1
  4531     064E  0837               	movf	(my_log@sum+2)^(0+128),w
  4532     064F  0020               	movlb	0	; select bank0
  4533     0650  00CE               	movwf	___fladd@a+2
  4534     0651  0021               	movlb	1	; select bank1
  4535     0652  0836               	movf	(my_log@sum+1)^(0+128),w
  4536     0653  0020               	movlb	0	; select bank0
  4537     0654  00CD               	movwf	___fladd@a+1
  4538     0655  0021               	movlb	1	; select bank1
  4539     0656  0835               	movf	my_log@sum^(0+128),w
  4540     0657  0020               	movlb	0	; select bank0
  4541     0658  00CC               	movwf	___fladd@a
  4542     0659  318E  264E  3185   	fcall	___fladd
  4543     065C  0020               	movlb	0	; select bank0
  4544     065D  084B               	movf	?___fladd+3,w
  4545     065E  0021               	movlb	1	; select bank1
  4546     065F  00B8               	movwf	(my_log@sum+3)^(0+128)
  4547     0660  0020               	movlb	0	; select bank0
  4548     0661  084A               	movf	?___fladd+2,w
  4549     0662  0021               	movlb	1	; select bank1
  4550     0663  00B7               	movwf	(my_log@sum+2)^(0+128)
  4551     0664  0020               	movlb	0	; select bank0
  4552     0665  0849               	movf	?___fladd+1,w
  4553     0666  0021               	movlb	1	; select bank1
  4554     0667  00B6               	movwf	(my_log@sum+1)^(0+128)
  4555     0668  0020               	movlb	0	; select bank0
  4556     0669  0848               	movf	?___fladd,w
  4557     066A  0021               	movlb	1	; select bank1
  4558     066B  00B5               	movwf	my_log@sum^(0+128)
  4559                           
  4560                           ;custom_math.c: 25:         n++;
  4561     066C  3001               	movlw	1
  4562     066D  07B9               	addwf	my_log@n^(0+128),f
  4563     066E  3000               	movlw	0
  4564     066F  3DBA               	addwfc	(my_log@n+1)^(0+128),f
  4565                           
  4566                           ;custom_math.c: 26:         term *= -x * (n - 1) / n;
  4567     0670  0839               	movf	my_log@n^(0+128),w
  4568     0671  3EFF               	addlw	255
  4569     0672  0020               	movlb	0	; select bank0
  4570     0673  00A0               	movwf	___xxtofl@val
  4571     0674  30FF               	movlw	255
  4572     0675  0021               	movlb	1	; select bank1
  4573     0676  3D3A               	addwfc	(my_log@n+1)^(0+128),w
  4574     0677  0020               	movlb	0	; select bank0
  4575     0678  00A1               	movwf	___xxtofl@val+1
  4576     0679  01A2               	clrf	___xxtofl@val+2
  4577     067A  1BA1               	btfsc	___xxtofl@val+1,7
  4578     067B  03A2               	decf	___xxtofl@val+2,f
  4579     067C  0822               	movf	___xxtofl@val+2,w
  4580     067D  00A3               	movwf	___xxtofl@val+3
  4581     067E  3001               	movlw	1
  4582     067F  318A  22B8  3185   	fcall	___xxtofl
  4583     0682  0020               	movlb	0	; select bank0
  4584     0683  0823               	movf	?___xxtofl+3,w
  4585     0684  00E3               	movwf	___flmul@a+3
  4586     0685  0822               	movf	?___xxtofl+2,w
  4587     0686  00E2               	movwf	___flmul@a+2
  4588     0687  0821               	movf	?___xxtofl+1,w
  4589     0688  00E1               	movwf	___flmul@a+1
  4590     0689  0820               	movf	?___xxtofl,w
  4591     068A  00E0               	movwf	___flmul@a
  4592     068B  086C               	movf	my_log@x+3,w
  4593     068C  00A3               	movwf	___flneg@f1+3
  4594     068D  086B               	movf	my_log@x+2,w
  4595     068E  00A2               	movwf	___flneg@f1+2
  4596     068F  086A               	movf	my_log@x+1,w
  4597     0690  00A1               	movwf	___flneg@f1+1
  4598     0691  0869               	movf	my_log@x,w
  4599     0692  00A0               	movwf	___flneg@f1
  4600     0693  3197  2744  3185   	fcall	___flneg
  4601     0696  0020               	movlb	0	; select bank0
  4602     0697  0823               	movf	?___flneg+3,w
  4603     0698  00DF               	movwf	___flmul@b+3
  4604     0699  0822               	movf	?___flneg+2,w
  4605     069A  00DE               	movwf	___flmul@b+2
  4606     069B  0821               	movf	?___flneg+1,w
  4607     069C  00DD               	movwf	___flmul@b+1
  4608     069D  0820               	movf	?___flneg,w
  4609     069E  00DC               	movwf	___flmul@b
  4610     069F  3180  204F  3185   	fcall	___flmul
  4611     06A2  0020               	movlb	0	; select bank0
  4612     06A3  085F               	movf	?___flmul+3,w
  4613     06A4  00B5               	movwf	___fldiv@b+3
  4614     06A5  085E               	movf	?___flmul+2,w
  4615     06A6  00B4               	movwf	___fldiv@b+2
  4616     06A7  085D               	movf	?___flmul+1,w
  4617     06A8  00B3               	movwf	___fldiv@b+1
  4618     06A9  085C               	movf	?___flmul,w
  4619     06AA  00B2               	movwf	___fldiv@b
  4620     06AB  0021               	movlb	1	; select bank1
  4621     06AC  0839               	movf	my_log@n^(0+128),w
  4622     06AD  0020               	movlb	0	; select bank0
  4623     06AE  00A0               	movwf	___xxtofl@val
  4624     06AF  0021               	movlb	1	; select bank1
  4625     06B0  083A               	movf	(my_log@n+1)^(0+128),w
  4626     06B1  0020               	movlb	0	; select bank0
  4627     06B2  00A1               	movwf	___xxtofl@val+1
  4628     06B3  0D89               	rlf	9,f
  4629     06B4  3B89               	subwfb	9,f
  4630     06B5  0989               	comf	9,f
  4631     06B6  00A2               	movwf	___xxtofl@val+2
  4632     06B7  00A3               	movwf	___xxtofl@val+3
  4633     06B8  3001               	movlw	1
  4634     06B9  318A  22B8  3185   	fcall	___xxtofl
  4635     06BC  0020               	movlb	0	; select bank0
  4636     06BD  0823               	movf	?___xxtofl+3,w
  4637     06BE  00B1               	movwf	___fldiv@a+3
  4638     06BF  0822               	movf	?___xxtofl+2,w
  4639     06C0  00B0               	movwf	___fldiv@a+2
  4640     06C1  0821               	movf	?___xxtofl+1,w
  4641     06C2  00AF               	movwf	___fldiv@a+1
  4642     06C3  0820               	movf	?___xxtofl,w
  4643     06C4  00AE               	movwf	___fldiv@a
  4644     06C5  318C  24DE  3185   	fcall	___fldiv
  4645     06C8  0020               	movlb	0	; select bank0
  4646     06C9  0831               	movf	?___fldiv+3,w
  4647     06CA  0021               	movlb	1	; select bank1
  4648     06CB  00B0               	movwf	(_my_log$1850+3)^(0+128)
  4649     06CC  0020               	movlb	0	; select bank0
  4650     06CD  0830               	movf	?___fldiv+2,w
  4651     06CE  0021               	movlb	1	; select bank1
  4652     06CF  00AF               	movwf	(_my_log$1850+2)^(0+128)
  4653     06D0  0020               	movlb	0	; select bank0
  4654     06D1  082F               	movf	?___fldiv+1,w
  4655     06D2  0021               	movlb	1	; select bank1
  4656     06D3  00AE               	movwf	(_my_log$1850+1)^(0+128)
  4657     06D4  0020               	movlb	0	; select bank0
  4658     06D5  082E               	movf	?___fldiv,w
  4659     06D6  0021               	movlb	1	; select bank1
  4660     06D7  00AD               	movwf	_my_log$1850^(0+128)
  4661                           
  4662                           ;custom_math.c: 26:         term *= -x * (n - 1) / n;
  4663     06D8  0830               	movf	(_my_log$1850+3)^(0+128),w
  4664     06D9  0020               	movlb	0	; select bank0
  4665     06DA  00DF               	movwf	___flmul@b+3
  4666     06DB  0021               	movlb	1	; select bank1
  4667     06DC  082F               	movf	(_my_log$1850+2)^(0+128),w
  4668     06DD  0020               	movlb	0	; select bank0
  4669     06DE  00DE               	movwf	___flmul@b+2
  4670     06DF  0021               	movlb	1	; select bank1
  4671     06E0  082E               	movf	(_my_log$1850+1)^(0+128),w
  4672     06E1  0020               	movlb	0	; select bank0
  4673     06E2  00DD               	movwf	___flmul@b+1
  4674     06E3  0021               	movlb	1	; select bank1
  4675     06E4  082D               	movf	_my_log$1850^(0+128),w
  4676     06E5  0020               	movlb	0	; select bank0
  4677     06E6  00DC               	movwf	___flmul@b
  4678     06E7  0021               	movlb	1	; select bank1
  4679     06E8  083E               	movf	(my_log@term+3)^(0+128),w
  4680     06E9  0020               	movlb	0	; select bank0
  4681     06EA  00E3               	movwf	___flmul@a+3
  4682     06EB  0021               	movlb	1	; select bank1
  4683     06EC  083D               	movf	(my_log@term+2)^(0+128),w
  4684     06ED  0020               	movlb	0	; select bank0
  4685     06EE  00E2               	movwf	___flmul@a+2
  4686     06EF  0021               	movlb	1	; select bank1
  4687     06F0  083C               	movf	(my_log@term+1)^(0+128),w
  4688     06F1  0020               	movlb	0	; select bank0
  4689     06F2  00E1               	movwf	___flmul@a+1
  4690     06F3  0021               	movlb	1	; select bank1
  4691     06F4  083B               	movf	my_log@term^(0+128),w
  4692     06F5  0020               	movlb	0	; select bank0
  4693     06F6  00E0               	movwf	___flmul@a
  4694     06F7  3180  204F  3185   	fcall	___flmul
  4695     06FA  0020               	movlb	0	; select bank0
  4696     06FB  085F               	movf	?___flmul+3,w
  4697     06FC  0021               	movlb	1	; select bank1
  4698     06FD  00BE               	movwf	(my_log@term+3)^(0+128)
  4699     06FE  0020               	movlb	0	; select bank0
  4700     06FF  085E               	movf	?___flmul+2,w
  4701     0700  0021               	movlb	1	; select bank1
  4702     0701  00BD               	movwf	(my_log@term+2)^(0+128)
  4703     0702  0020               	movlb	0	; select bank0
  4704     0703  085D               	movf	?___flmul+1,w
  4705     0704  0021               	movlb	1	; select bank1
  4706     0705  00BC               	movwf	(my_log@term+1)^(0+128)
  4707     0706  0020               	movlb	0	; select bank0
  4708     0707  085C               	movf	?___flmul,w
  4709     0708  0021               	movlb	1	; select bank1
  4710     0709  00BB               	movwf	my_log@term^(0+128)
  4711     070A  2E1B               	goto	l4580
  4712     070B                     l4582:
  4713     070B  0021               	movlb	1	; select bank1
  4714     070C  083E               	movf	(my_log@term+3)^(0+128),w
  4715     070D  0020               	movlb	0	; select bank0
  4716     070E  00A3               	movwf	___flge@ff1+3
  4717     070F  0021               	movlb	1	; select bank1
  4718     0710  083D               	movf	(my_log@term+2)^(0+128),w
  4719     0711  0020               	movlb	0	; select bank0
  4720     0712  00A2               	movwf	___flge@ff1+2
  4721     0713  0021               	movlb	1	; select bank1
  4722     0714  083C               	movf	(my_log@term+1)^(0+128),w
  4723     0715  0020               	movlb	0	; select bank0
  4724     0716  00A1               	movwf	___flge@ff1+1
  4725     0717  0021               	movlb	1	; select bank1
  4726     0718  083B               	movf	my_log@term^(0+128),w
  4727     0719  0020               	movlb	0	; select bank0
  4728     071A  00A0               	movwf	___flge@ff1
  4729     071B  30B3               	movlw	179
  4730     071C  00A7               	movwf	___flge@ff2+3
  4731     071D  30D6               	movlw	214
  4732     071E  00A6               	movwf	___flge@ff2+2
  4733     071F  30BF               	movlw	191
  4734     0720  00A5               	movwf	___flge@ff2+1
  4735     0721  3095               	movlw	149
  4736     0722  00A4               	movwf	___flge@ff2
  4737     0723  318A  223C  3185   	fcall	___flge
  4738     0726  1C03               	btfss	3,0
  4739     0727  2E39               	goto	l4572
  4740                           
  4741                           ;custom_math.c: 29:     return result + sum;
  4742     0728  0021               	movlb	1	; select bank1
  4743     0729  0838               	movf	(my_log@sum+3)^(0+128),w
  4744     072A  0020               	movlb	0	; select bank0
  4745     072B  00CB               	movwf	___fladd@b+3
  4746     072C  0021               	movlb	1	; select bank1
  4747     072D  0837               	movf	(my_log@sum+2)^(0+128),w
  4748     072E  0020               	movlb	0	; select bank0
  4749     072F  00CA               	movwf	___fladd@b+2
  4750     0730  0021               	movlb	1	; select bank1
  4751     0731  0836               	movf	(my_log@sum+1)^(0+128),w
  4752     0732  0020               	movlb	0	; select bank0
  4753     0733  00C9               	movwf	___fladd@b+1
  4754     0734  0021               	movlb	1	; select bank1
  4755     0735  0835               	movf	my_log@sum^(0+128),w
  4756     0736  0020               	movlb	0	; select bank0
  4757     0737  00C8               	movwf	___fladd@b
  4758     0738  0021               	movlb	1	; select bank1
  4759     0739  0834               	movf	(my_log@result+3)^(0+128),w
  4760     073A  0020               	movlb	0	; select bank0
  4761     073B  00CF               	movwf	___fladd@a+3
  4762     073C  0021               	movlb	1	; select bank1
  4763     073D  0833               	movf	(my_log@result+2)^(0+128),w
  4764     073E  0020               	movlb	0	; select bank0
  4765     073F  00CE               	movwf	___fladd@a+2
  4766     0740  0021               	movlb	1	; select bank1
  4767     0741  0832               	movf	(my_log@result+1)^(0+128),w
  4768     0742  0020               	movlb	0	; select bank0
  4769     0743  00CD               	movwf	___fladd@a+1
  4770     0744  0021               	movlb	1	; select bank1
  4771     0745  0831               	movf	my_log@result^(0+128),w
  4772     0746  0020               	movlb	0	; select bank0
  4773     0747  00CC               	movwf	___fladd@a
  4774     0748  318E  264E         	fcall	___fladd
  4775     074A  0020               	movlb	0	; select bank0
  4776     074B  084B               	movf	?___fladd+3,w
  4777     074C  00EC               	movwf	?_my_log+3
  4778     074D  084A               	movf	?___fladd+2,w
  4779     074E  00EB               	movwf	?_my_log+2
  4780     074F  0849               	movf	?___fladd+1,w
  4781     0750  00EA               	movwf	?_my_log+1
  4782     0751  0848               	movf	?___fladd,w
  4783     0752  00E9               	movwf	?_my_log
  4784     0753  0008               	return
  4785     0754                     __end_of_my_log:
  4786                           
  4787                           	psect	text6
  4788     0AB8                     __ptext6:	
  4789 ;; *************** function ___xxtofl *****************
  4790 ;; Defined at:
  4791 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  4792 ;; Parameters:    Size  Location     Type
  4793 ;;  sign            1    wreg     unsigned char 
  4794 ;;  val             4    0[BANK0 ] long 
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;  sign            1    8[BANK0 ] unsigned char 
  4797 ;;  arg             4   10[BANK0 ] unsigned long 
  4798 ;;  exp             1    9[BANK0 ] unsigned char 
  4799 ;; Return value:  Size  Location     Type
  4800 ;;                  4    0[BANK0 ] unsigned char 
  4801 ;; Registers used:
  4802 ;;		wreg, status,2, status,0
  4803 ;; Tracked objects:
  4804 ;;		On entry : 0/0
  4805 ;;		On exit  : 0/0
  4806 ;;		Unchanged: 0/0
  4807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4808 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4809 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4810 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4811 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4812 ;;Total ram usage:       14 bytes
  4813 ;; Hardware stack levels used: 1
  4814 ;; Hardware stack levels required when called: 5
  4815 ;; This function calls:
  4816 ;;		Nothing
  4817 ;; This function is called by:
  4818 ;;		__ReadSensor
  4819 ;;		_my_log
  4820 ;; This function uses a non-reentrant model
  4821 ;;
  4822                           
  4823     0AB8                     ___xxtofl:	
  4824                           ;psect for function ___xxtofl
  4825                           
  4826                           
  4827                           ;incstack = 0
  4828                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4829                           ;___xxtofl@sign stored from wreg
  4830     0AB8  0020               	movlb	0	; select bank0
  4831     0AB9  00A8               	movwf	___xxtofl@sign
  4832     0ABA  0828               	movf	___xxtofl@sign,w
  4833     0ABB  1D03               	btfss	3,2
  4834     0ABC  1FA3               	btfss	___xxtofl@val+3,7
  4835     0ABD  2ACE               	goto	l4426
  4836     0ABE  0920               	comf	___xxtofl@val,w
  4837     0ABF  00AA               	movwf	___xxtofl@arg
  4838     0AC0  0921               	comf	___xxtofl@val+1,w
  4839     0AC1  00AB               	movwf	___xxtofl@arg+1
  4840     0AC2  0922               	comf	___xxtofl@val+2,w
  4841     0AC3  00AC               	movwf	___xxtofl@arg+2
  4842     0AC4  0923               	comf	___xxtofl@val+3,w
  4843     0AC5  00AD               	movwf	___xxtofl@arg+3
  4844     0AC6  0AAA               	incf	___xxtofl@arg,f
  4845     0AC7  1903               	skipnz
  4846     0AC8  0AAB               	incf	___xxtofl@arg+1,f
  4847     0AC9  1903               	skipnz
  4848     0ACA  0AAC               	incf	___xxtofl@arg+2,f
  4849     0ACB  1903               	skipnz
  4850     0ACC  0AAD               	incf	___xxtofl@arg+3,f
  4851     0ACD  2AD6               	goto	l1281
  4852     0ACE                     l4426:
  4853     0ACE  0823               	movf	___xxtofl@val+3,w
  4854     0ACF  00AD               	movwf	___xxtofl@arg+3
  4855     0AD0  0822               	movf	___xxtofl@val+2,w
  4856     0AD1  00AC               	movwf	___xxtofl@arg+2
  4857     0AD2  0821               	movf	___xxtofl@val+1,w
  4858     0AD3  00AB               	movwf	___xxtofl@arg+1
  4859     0AD4  0820               	movf	___xxtofl@val,w
  4860     0AD5  00AA               	movwf	___xxtofl@arg
  4861     0AD6                     l1281:
  4862     0AD6  0823               	movf	___xxtofl@val+3,w
  4863     0AD7  0422               	iorwf	___xxtofl@val+2,w
  4864     0AD8  0421               	iorwf	___xxtofl@val+1,w
  4865     0AD9  0420               	iorwf	___xxtofl@val,w
  4866     0ADA  1D03               	skipz
  4867     0ADB  2AE5               	goto	l4432
  4868     0ADC  3000               	movlw	0
  4869     0ADD  00A3               	movwf	?___xxtofl+3
  4870     0ADE  3000               	movlw	0
  4871     0ADF  00A2               	movwf	?___xxtofl+2
  4872     0AE0  3000               	movlw	0
  4873     0AE1  00A1               	movwf	?___xxtofl+1
  4874     0AE2  3000               	movlw	0
  4875     0AE3  00A0               	movwf	?___xxtofl
  4876     0AE4  0008               	return
  4877     0AE5                     l4432:
  4878     0AE5  3096               	movlw	150
  4879     0AE6  00A9               	movwf	___xxtofl@exp
  4880     0AE7                     l4436:
  4881     0AE7  30FE               	movlw	254
  4882     0AE8  052D               	andwf	___xxtofl@arg+3,w
  4883     0AE9  1903               	btfsc	3,2
  4884     0AEA  2B0A               	goto	l1287
  4885     0AEB  3001               	movlw	1
  4886     0AEC  00A4               	movwf	??___xxtofl
  4887     0AED  0824               	movf	??___xxtofl,w
  4888     0AEE  07A9               	addwf	___xxtofl@exp,f
  4889     0AEF  3001               	movlw	1
  4890     0AF0                     u5445:
  4891     0AF0  36AD               	lsrf	___xxtofl@arg+3,f
  4892     0AF1  0CAC               	rrf	___xxtofl@arg+2,f
  4893     0AF2  0CAB               	rrf	___xxtofl@arg+1,f
  4894     0AF3  0CAA               	rrf	___xxtofl@arg,f
  4895     0AF4  0B89               	decfsz	9,f
  4896     0AF5  2AF0               	goto	u5445
  4897     0AF6  2AE7               	goto	l4436
  4898     0AF7                     l4438:
  4899     0AF7  3001               	movlw	1
  4900     0AF8  00A4               	movwf	??___xxtofl
  4901     0AF9  0824               	movf	??___xxtofl,w
  4902     0AFA  07A9               	addwf	___xxtofl@exp,f
  4903     0AFB  3001               	movlw	1
  4904     0AFC  07AA               	addwf	___xxtofl@arg,f
  4905     0AFD  3000               	movlw	0
  4906     0AFE  3DAB               	addwfc	___xxtofl@arg+1,f
  4907     0AFF  3000               	movlw	0
  4908     0B00  3DAC               	addwfc	___xxtofl@arg+2,f
  4909     0B01  3000               	movlw	0
  4910     0B02  3DAD               	addwfc	___xxtofl@arg+3,f
  4911     0B03  3001               	movlw	1
  4912     0B04                     u5465:
  4913     0B04  36AD               	lsrf	___xxtofl@arg+3,f
  4914     0B05  0CAC               	rrf	___xxtofl@arg+2,f
  4915     0B06  0CAB               	rrf	___xxtofl@arg+1,f
  4916     0B07  0CAA               	rrf	___xxtofl@arg,f
  4917     0B08  0B89               	decfsz	9,f
  4918     0B09  2B04               	goto	u5465
  4919     0B0A                     l1287:
  4920     0B0A  30FF               	movlw	255
  4921     0B0B  052D               	andwf	___xxtofl@arg+3,w
  4922     0B0C  1903               	btfsc	3,2
  4923     0B0D  2B1C               	goto	l4446
  4924     0B0E  2AF7               	goto	l4438
  4925     0B0F                     l4448:
  4926     0B0F  3002               	movlw	2
  4927     0B10  0229               	subwf	___xxtofl@exp,w
  4928     0B11  1C03               	btfss	3,0
  4929     0B12  2B1E               	goto	l1294
  4930     0B13  3001               	movlw	1
  4931     0B14  02A9               	subwf	___xxtofl@exp,f
  4932     0B15  3001               	movlw	1
  4933     0B16                     u5485:
  4934     0B16  35AA               	lslf	___xxtofl@arg,f
  4935     0B17  0DAB               	rlf	___xxtofl@arg+1,f
  4936     0B18  0DAC               	rlf	___xxtofl@arg+2,f
  4937     0B19  0DAD               	rlf	___xxtofl@arg+3,f
  4938     0B1A  0B89               	decfsz	9,f
  4939     0B1B  2B16               	goto	u5485
  4940     0B1C                     l4446:
  4941     0B1C  1FAC               	btfss	___xxtofl@arg+2,7
  4942     0B1D  2B0F               	goto	l4448
  4943     0B1E                     l1294:
  4944     0B1E  1829               	btfsc	___xxtofl@exp,0
  4945     0B1F  2B28               	goto	l1295
  4946     0B20  30FF               	movlw	255
  4947     0B21  05AA               	andwf	___xxtofl@arg,f
  4948     0B22  30FF               	movlw	255
  4949     0B23  05AB               	andwf	___xxtofl@arg+1,f
  4950     0B24  307F               	movlw	127
  4951     0B25  05AC               	andwf	___xxtofl@arg+2,f
  4952     0B26  30FF               	movlw	255
  4953     0B27  05AD               	andwf	___xxtofl@arg+3,f
  4954     0B28                     l1295:
  4955     0B28  1003               	clrc
  4956     0B29  0CA9               	rrf	___xxtofl@exp,f
  4957     0B2A  0829               	movf	___xxtofl@exp,w
  4958     0B2B  00A4               	movwf	??___xxtofl
  4959     0B2C  01A5               	clrf	??___xxtofl+1
  4960     0B2D  01A6               	clrf	??___xxtofl+2
  4961     0B2E  01A7               	clrf	??___xxtofl+3
  4962     0B2F  3018               	movlw	24
  4963     0B30                     u5525:
  4964     0B30  35A4               	lslf	??___xxtofl,f
  4965     0B31  0DA5               	rlf	??___xxtofl+1,f
  4966     0B32  0DA6               	rlf	??___xxtofl+2,f
  4967     0B33  0DA7               	rlf	??___xxtofl+3,f
  4968     0B34  0B89               	decfsz	9,f
  4969     0B35  2B30               	goto	u5525
  4970     0B36  0824               	movf	??___xxtofl,w
  4971     0B37  04AA               	iorwf	___xxtofl@arg,f
  4972     0B38  0825               	movf	??___xxtofl+1,w
  4973     0B39  04AB               	iorwf	___xxtofl@arg+1,f
  4974     0B3A  0826               	movf	??___xxtofl+2,w
  4975     0B3B  04AC               	iorwf	___xxtofl@arg+2,f
  4976     0B3C  0827               	movf	??___xxtofl+3,w
  4977     0B3D  04AD               	iorwf	___xxtofl@arg+3,f
  4978     0B3E  0828               	movf	___xxtofl@sign,w
  4979     0B3F  1D03               	btfss	3,2
  4980     0B40  1FA3               	btfss	___xxtofl@val+3,7
  4981     0B41  2B43               	goto	l4460
  4982     0B42  17AD               	bsf	___xxtofl@arg+3,7
  4983     0B43                     l4460:
  4984     0B43  082D               	movf	___xxtofl@arg+3,w
  4985     0B44  00A3               	movwf	?___xxtofl+3
  4986     0B45  082C               	movf	___xxtofl@arg+2,w
  4987     0B46  00A2               	movwf	?___xxtofl+2
  4988     0B47  082B               	movf	___xxtofl@arg+1,w
  4989     0B48  00A1               	movwf	?___xxtofl+1
  4990     0B49  082A               	movf	___xxtofl@arg,w
  4991     0B4A  00A0               	movwf	?___xxtofl
  4992     0B4B  0008               	return
  4993     0B4C                     __end_of___xxtofl:
  4994                           
  4995                           	psect	text7
  4996     0834                     __ptext7:	
  4997 ;; *************** function ___flsub *****************
  4998 ;; Defined at:
  4999 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  5000 ;; Parameters:    Size  Location     Type
  5001 ;;  a               4   60[BANK0 ] unsigned char 
  5002 ;;  b               4   64[BANK0 ] unsigned char 
  5003 ;; Auto vars:     Size  Location     Type
  5004 ;;		None
  5005 ;; Return value:  Size  Location     Type
  5006 ;;                  4   60[BANK0 ] unsigned char 
  5007 ;; Registers used:
  5008 ;;		wreg, status,2, status,0, pclath, cstack
  5009 ;; Tracked objects:
  5010 ;;		On entry : 0/0
  5011 ;;		On exit  : 0/0
  5012 ;;		Unchanged: 0/0
  5013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5014 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5017 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5018 ;;Total ram usage:        8 bytes
  5019 ;; Hardware stack levels used: 1
  5020 ;; Hardware stack levels required when called: 6
  5021 ;; This function calls:
  5022 ;;		___fladd
  5023 ;; This function is called by:
  5024 ;;		_my_log
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028     0834                     ___flsub:	
  5029                           ;psect for function ___flsub
  5030                           
  5031                           
  5032                           ;incstack = 0
  5033                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  5034     0834  3080               	movlw	128
  5035     0835  0020               	movlb	0	; select bank0
  5036     0836  06DF               	xorwf	___flsub@a+3,f
  5037     0837  0863               	movf	___flsub@b+3,w
  5038     0838  00CB               	movwf	___fladd@b+3
  5039     0839  0862               	movf	___flsub@b+2,w
  5040     083A  00CA               	movwf	___fladd@b+2
  5041     083B  0861               	movf	___flsub@b+1,w
  5042     083C  00C9               	movwf	___fladd@b+1
  5043     083D  0860               	movf	___flsub@b,w
  5044     083E  00C8               	movwf	___fladd@b
  5045     083F  085F               	movf	___flsub@a+3,w
  5046     0840  00CF               	movwf	___fladd@a+3
  5047     0841  085E               	movf	___flsub@a+2,w
  5048     0842  00CE               	movwf	___fladd@a+2
  5049     0843  085D               	movf	___flsub@a+1,w
  5050     0844  00CD               	movwf	___fladd@a+1
  5051     0845  085C               	movf	___flsub@a,w
  5052     0846  00CC               	movwf	___fladd@a
  5053     0847  318E  264E         	fcall	___fladd
  5054     0849  0020               	movlb	0	; select bank0
  5055     084A  084B               	movf	?___fladd+3,w
  5056     084B  00DF               	movwf	?___flsub+3
  5057     084C  084A               	movf	?___fladd+2,w
  5058     084D  00DE               	movwf	?___flsub+2
  5059     084E  0849               	movf	?___fladd+1,w
  5060     084F  00DD               	movwf	?___flsub+1
  5061     0850  0848               	movf	?___fladd,w
  5062     0851  00DC               	movwf	?___flsub
  5063     0852  0008               	return
  5064     0853                     __end_of___flsub:
  5065                           
  5066                           	psect	text8
  5067     0E4E                     __ptext8:	
  5068 ;; *************** function ___fladd *****************
  5069 ;; Defined at:
  5070 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  5071 ;; Parameters:    Size  Location     Type
  5072 ;;  b               4   40[BANK0 ] unsigned char 
  5073 ;;  a               4   44[BANK0 ] unsigned char 
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;  grs             1   59[BANK0 ] unsigned char 
  5076 ;;  bexp            1   58[BANK0 ] unsigned char 
  5077 ;;  aexp            1   57[BANK0 ] unsigned char 
  5078 ;;  signs           1   56[BANK0 ] unsigned char 
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  4   40[BANK0 ] unsigned char 
  5081 ;; Registers used:
  5082 ;;		wreg, status,2, status,0
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5088 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5089 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5090 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5091 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5092 ;;Total ram usage:       20 bytes
  5093 ;; Hardware stack levels used: 1
  5094 ;; Hardware stack levels required when called: 5
  5095 ;; This function calls:
  5096 ;;		Nothing
  5097 ;; This function is called by:
  5098 ;;		__ReadSensor
  5099 ;;		_my_log
  5100 ;;		___flsub
  5101 ;; This function uses a non-reentrant model
  5102 ;;
  5103                           
  5104     0E4E                     ___fladd:	
  5105                           ;psect for function ___fladd
  5106                           
  5107                           
  5108                           ;incstack = 0
  5109                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  5110     0E4E  0020               	movlb	0	; select bank0
  5111     0E4F  084B               	movf	___fladd@b+3,w
  5112     0E50  3980               	andlw	128
  5113     0E51  00D8               	movwf	___fladd@signs
  5114     0E52  354B               	lslf	___fladd@b+3,w
  5115     0E53  00DA               	movwf	___fladd@bexp
  5116     0E54  1BCA               	btfsc	___fladd@b+2,7
  5117     0E55  145A               	bsf	___fladd@bexp,0
  5118     0E56  085A               	movf	___fladd@bexp,w
  5119     0E57  1903               	btfsc	3,2
  5120     0E58  2E67               	goto	l3904
  5121     0E59  0A5A               	incf	___fladd@bexp,w
  5122     0E5A  1D03               	btfss	3,2
  5123     0E5B  2E64               	goto	l3900
  5124     0E5C  3000               	movlw	0
  5125     0E5D  00CB               	movwf	___fladd@b+3
  5126     0E5E  3000               	movlw	0
  5127     0E5F  00CA               	movwf	___fladd@b+2
  5128     0E60  3000               	movlw	0
  5129     0E61  00C9               	movwf	___fladd@b+1
  5130     0E62  3000               	movlw	0
  5131     0E63  00C8               	movwf	___fladd@b
  5132     0E64                     l3900:
  5133     0E64  17CA               	bsf	___fladd@b+2,7
  5134     0E65  01CB               	clrf	___fladd@b+3
  5135     0E66  2E6F               	goto	l3906
  5136     0E67                     l3904:
  5137     0E67  3000               	movlw	0
  5138     0E68  00CB               	movwf	___fladd@b+3
  5139     0E69  3000               	movlw	0
  5140     0E6A  00CA               	movwf	___fladd@b+2
  5141     0E6B  3000               	movlw	0
  5142     0E6C  00C9               	movwf	___fladd@b+1
  5143     0E6D  3000               	movlw	0
  5144     0E6E  00C8               	movwf	___fladd@b
  5145     0E6F                     l3906:
  5146     0E6F  084F               	movf	___fladd@a+3,w
  5147     0E70  3980               	andlw	128
  5148     0E71  00D9               	movwf	___fladd@aexp
  5149     0E72  0859               	movf	___fladd@aexp,w
  5150     0E73  0658               	xorwf	___fladd@signs,w
  5151     0E74  1D03               	btfss	3,2
  5152     0E75  1758               	bsf	___fladd@signs,6
  5153     0E76  354F               	lslf	___fladd@a+3,w
  5154     0E77  00D9               	movwf	___fladd@aexp
  5155     0E78  1BCE               	btfsc	___fladd@a+2,7
  5156     0E79  1459               	bsf	___fladd@aexp,0
  5157     0E7A  0859               	movf	___fladd@aexp,w
  5158     0E7B  1903               	btfsc	3,2
  5159     0E7C  2E8B               	goto	l3928
  5160     0E7D  0A59               	incf	___fladd@aexp,w
  5161     0E7E  1D03               	btfss	3,2
  5162     0E7F  2E88               	goto	l3924
  5163     0E80  3000               	movlw	0
  5164     0E81  00CF               	movwf	___fladd@a+3
  5165     0E82  3000               	movlw	0
  5166     0E83  00CE               	movwf	___fladd@a+2
  5167     0E84  3000               	movlw	0
  5168     0E85  00CD               	movwf	___fladd@a+1
  5169     0E86  3000               	movlw	0
  5170     0E87  00CC               	movwf	___fladd@a
  5171     0E88                     l3924:
  5172     0E88  17CE               	bsf	___fladd@a+2,7
  5173     0E89  01CF               	clrf	___fladd@a+3
  5174     0E8A  2E93               	goto	l1141
  5175     0E8B                     l3928:
  5176     0E8B  3000               	movlw	0
  5177     0E8C  00CF               	movwf	___fladd@a+3
  5178     0E8D  3000               	movlw	0
  5179     0E8E  00CE               	movwf	___fladd@a+2
  5180     0E8F  3000               	movlw	0
  5181     0E90  00CD               	movwf	___fladd@a+1
  5182     0E91  3000               	movlw	0
  5183     0E92  00CC               	movwf	___fladd@a
  5184     0E93                     l1141:
  5185     0E93  085A               	movf	___fladd@bexp,w
  5186     0E94  0259               	subwf	___fladd@aexp,w
  5187     0E95  1803               	skipnc
  5188     0E96  2EBB               	goto	l3964
  5189     0E97  1F58               	btfss	___fladd@signs,6
  5190     0E98  2E9D               	goto	l3934
  5191     0E99  3080               	movlw	128
  5192     0E9A  00D0               	movwf	??___fladd
  5193     0E9B  0850               	movf	??___fladd,w
  5194     0E9C  06D8               	xorwf	___fladd@signs,f
  5195     0E9D                     l3934:
  5196     0E9D  085A               	movf	___fladd@bexp,w
  5197     0E9E  00DB               	movwf	___fladd@grs
  5198     0E9F  0859               	movf	___fladd@aexp,w
  5199     0EA0  00DA               	movwf	___fladd@bexp
  5200     0EA1  085B               	movf	___fladd@grs,w
  5201     0EA2  00D9               	movwf	___fladd@aexp
  5202     0EA3  0848               	movf	___fladd@b,w
  5203     0EA4  00DB               	movwf	___fladd@grs
  5204     0EA5  084C               	movf	___fladd@a,w
  5205     0EA6  00C8               	movwf	___fladd@b
  5206     0EA7  085B               	movf	___fladd@grs,w
  5207     0EA8  00CC               	movwf	___fladd@a
  5208     0EA9  0849               	movf	___fladd@b+1,w
  5209     0EAA  00DB               	movwf	___fladd@grs
  5210     0EAB  084D               	movf	___fladd@a+1,w
  5211     0EAC  00C9               	movwf	___fladd@b+1
  5212     0EAD  085B               	movf	___fladd@grs,w
  5213     0EAE  00CD               	movwf	___fladd@a+1
  5214     0EAF  084A               	movf	___fladd@b+2,w
  5215     0EB0  00DB               	movwf	___fladd@grs
  5216     0EB1  084E               	movf	___fladd@a+2,w
  5217     0EB2  00CA               	movwf	___fladd@b+2
  5218     0EB3  085B               	movf	___fladd@grs,w
  5219     0EB4  00CE               	movwf	___fladd@a+2
  5220     0EB5  084B               	movf	___fladd@b+3,w
  5221     0EB6  00DB               	movwf	___fladd@grs
  5222     0EB7  084F               	movf	___fladd@a+3,w
  5223     0EB8  00CB               	movwf	___fladd@b+3
  5224     0EB9  085B               	movf	___fladd@grs,w
  5225     0EBA  00CF               	movwf	___fladd@a+3
  5226     0EBB                     l3964:
  5227     0EBB  01DB               	clrf	___fladd@grs
  5228     0EBC  0859               	movf	___fladd@aexp,w
  5229     0EBD  00D0               	movwf	??___fladd
  5230     0EBE  01D1               	clrf	??___fladd+1
  5231     0EBF  0851               	movf	??___fladd+1,w
  5232     0EC0  00D3               	movwf	??___fladd+3
  5233     0EC1  085A               	movf	___fladd@bexp,w
  5234     0EC2  0250               	subwf	??___fladd,w
  5235     0EC3  00D2               	movwf	??___fladd+2
  5236     0EC4  1C03               	skipc
  5237     0EC5  03D3               	decf	??___fladd+3,f
  5238     0EC6  0853               	movf	??___fladd+3,w
  5239     0EC7  3A80               	xorlw	128
  5240     0EC8  00D4               	movwf	??___fladd+4
  5241     0EC9  3080               	movlw	128
  5242     0ECA  0254               	subwf	??___fladd+4,w
  5243     0ECB  1D03               	skipz
  5244     0ECC  2ECF               	goto	u4435
  5245     0ECD  301A               	movlw	26
  5246     0ECE  0252               	subwf	??___fladd+2,w
  5247     0ECF                     u4435:
  5248     0ECF  1C03               	skipc
  5249     0ED0  2EFD               	goto	l3982
  5250     0ED1  0020               	movlb	0	; select bank0
  5251     0ED2  084B               	movf	___fladd@b+3,w
  5252     0ED3  044A               	iorwf	___fladd@b+2,w
  5253     0ED4  0449               	iorwf	___fladd@b+1,w
  5254     0ED5  0448               	iorwf	___fladd@b,w
  5255     0ED6  1903               	btfsc	3,2
  5256     0ED7  2EDA               	goto	u4440
  5257     0ED8  3001               	movlw	1
  5258     0ED9  2EDB               	goto	u4450
  5259     0EDA                     u4440:
  5260     0EDA  3000               	movlw	0
  5261     0EDB                     u4450:
  5262     0EDB  00DB               	movwf	___fladd@grs
  5263     0EDC  3000               	movlw	0
  5264     0EDD  00CB               	movwf	___fladd@b+3
  5265     0EDE  3000               	movlw	0
  5266     0EDF  00CA               	movwf	___fladd@b+2
  5267     0EE0  3000               	movlw	0
  5268     0EE1  00C9               	movwf	___fladd@b+1
  5269     0EE2  3000               	movlw	0
  5270     0EE3  00C8               	movwf	___fladd@b
  5271     0EE4  0859               	movf	___fladd@aexp,w
  5272     0EE5  00DA               	movwf	___fladd@bexp
  5273     0EE6  2F02               	goto	l1145
  5274     0EE7                     l1147:
  5275     0EE7  1C5B               	btfss	___fladd@grs,0
  5276     0EE8  2EED               	goto	l3972
  5277     0EE9  365B               	lsrf	___fladd@grs,w
  5278     0EEA  3801               	iorlw	1
  5279     0EEB  00DB               	movwf	___fladd@grs
  5280     0EEC  2EEF               	goto	l3974
  5281     0EED                     l3972:
  5282     0EED  1003               	clrc
  5283     0EEE  0CDB               	rrf	___fladd@grs,f
  5284     0EEF                     l3974:
  5285     0EEF  1848               	btfsc	___fladd@b,0
  5286     0EF0  17DB               	bsf	___fladd@grs,7
  5287     0EF1  3001               	movlw	1
  5288     0EF2  00D0               	movwf	??___fladd
  5289     0EF3                     u4485:
  5290     0EF3  37CB               	asrf	___fladd@b+3,f
  5291     0EF4  0CCA               	rrf	___fladd@b+2,f
  5292     0EF5  0CC9               	rrf	___fladd@b+1,f
  5293     0EF6  0CC8               	rrf	___fladd@b,f
  5294     0EF7  0BD0               	decfsz	??___fladd& (0+127),f
  5295     0EF8  2EF3               	goto	u4485
  5296     0EF9  3001               	movlw	1
  5297     0EFA  00D0               	movwf	??___fladd
  5298     0EFB  0850               	movf	??___fladd,w
  5299     0EFC  07DA               	addwf	___fladd@bexp,f
  5300     0EFD                     l3982:
  5301     0EFD  0020               	movlb	0	; select bank0
  5302     0EFE  0859               	movf	___fladd@aexp,w
  5303     0EFF  025A               	subwf	___fladd@bexp,w
  5304     0F00  1C03               	skipc
  5305     0F01  2EE7               	goto	l1147
  5306     0F02                     l1145:
  5307     0F02  1B58               	btfsc	___fladd@signs,6
  5308     0F03  2F31               	goto	l4008
  5309     0F04  085A               	movf	___fladd@bexp,w
  5310     0F05  1D03               	btfss	3,2
  5311     0F06  2F10               	goto	l3990
  5312     0F07  3000               	movlw	0
  5313     0F08  00CB               	movwf	?___fladd+3
  5314     0F09  3000               	movlw	0
  5315     0F0A  00CA               	movwf	?___fladd+2
  5316     0F0B  3000               	movlw	0
  5317     0F0C  00C9               	movwf	?___fladd+1
  5318     0F0D  3000               	movlw	0
  5319     0F0E  00C8               	movwf	?___fladd
  5320     0F0F  0008               	return
  5321     0F10                     l3990:
  5322     0F10  084C               	movf	___fladd@a,w
  5323     0F11  07C8               	addwf	___fladd@b,f
  5324     0F12  084D               	movf	___fladd@a+1,w
  5325     0F13  3DC9               	addwfc	___fladd@b+1,f
  5326     0F14  084E               	movf	___fladd@a+2,w
  5327     0F15  3DCA               	addwfc	___fladd@b+2,f
  5328     0F16  084F               	movf	___fladd@a+3,w
  5329     0F17  3DCB               	addwfc	___fladd@b+3,f
  5330     0F18  1C4B               	btfss	___fladd@b+3,0
  5331     0F19  2FAB               	goto	l4042
  5332     0F1A  1C5B               	btfss	___fladd@grs,0
  5333     0F1B  2F20               	goto	l3998
  5334     0F1C  365B               	lsrf	___fladd@grs,w
  5335     0F1D  3801               	iorlw	1
  5336     0F1E  00DB               	movwf	___fladd@grs
  5337     0F1F  2F22               	goto	l4000
  5338     0F20                     l3998:
  5339     0F20  1003               	clrc
  5340     0F21  0CDB               	rrf	___fladd@grs,f
  5341     0F22                     l4000:
  5342     0F22  1848               	btfsc	___fladd@b,0
  5343     0F23  17DB               	bsf	___fladd@grs,7
  5344     0F24  3001               	movlw	1
  5345     0F25  00D0               	movwf	??___fladd
  5346     0F26                     u4555:
  5347     0F26  37CB               	asrf	___fladd@b+3,f
  5348     0F27  0CCA               	rrf	___fladd@b+2,f
  5349     0F28  0CC9               	rrf	___fladd@b+1,f
  5350     0F29  0CC8               	rrf	___fladd@b,f
  5351     0F2A  0BD0               	decfsz	??___fladd& (0+127),f
  5352     0F2B  2F26               	goto	u4555
  5353     0F2C  3001               	movlw	1
  5354     0F2D  00D0               	movwf	??___fladd
  5355     0F2E  0850               	movf	??___fladd,w
  5356     0F2F  07DA               	addwf	___fladd@bexp,f
  5357     0F30  2FAB               	goto	l4042
  5358     0F31                     l4008:
  5359     0F31  084B               	movf	___fladd@b+3,w
  5360     0F32  3A80               	xorlw	128
  5361     0F33  00D0               	movwf	??___fladd
  5362     0F34  084F               	movf	___fladd@a+3,w
  5363     0F35  3A80               	xorlw	128
  5364     0F36  0250               	subwf	??___fladd,w
  5365     0F37  1D03               	skipz
  5366     0F38  2F43               	goto	u4563
  5367     0F39  084E               	movf	___fladd@a+2,w
  5368     0F3A  024A               	subwf	___fladd@b+2,w
  5369     0F3B  1D03               	skipz
  5370     0F3C  2F43               	goto	u4563
  5371     0F3D  084D               	movf	___fladd@a+1,w
  5372     0F3E  0249               	subwf	___fladd@b+1,w
  5373     0F3F  1D03               	skipz
  5374     0F40  2F43               	goto	u4563
  5375     0F41  084C               	movf	___fladd@a,w
  5376     0F42  0248               	subwf	___fladd@b,w
  5377     0F43                     u4563:
  5378     0F43  1803               	skipnc
  5379     0F44  2F7B               	goto	l4018
  5380     0F45  30FF               	movlw	255
  5381     0F46  00D0               	movwf	??___fladd
  5382     0F47  30FF               	movlw	255
  5383     0F48  00D1               	movwf	??___fladd+1
  5384     0F49  30FF               	movlw	255
  5385     0F4A  00D2               	movwf	??___fladd+2
  5386     0F4B  30FF               	movlw	255
  5387     0F4C  00D3               	movwf	??___fladd+3
  5388     0F4D  0848               	movf	___fladd@b,w
  5389     0F4E  024C               	subwf	___fladd@a,w
  5390     0F4F  00D4               	movwf	??___fladd+4
  5391     0F50  0849               	movf	___fladd@b+1,w
  5392     0F51  3B4D               	subwfb	___fladd@a+1,w
  5393     0F52  00D5               	movwf	??___fladd+5
  5394     0F53  084A               	movf	___fladd@b+2,w
  5395     0F54  3B4E               	subwfb	___fladd@a+2,w
  5396     0F55  00D6               	movwf	??___fladd+6
  5397     0F56  084B               	movf	___fladd@b+3,w
  5398     0F57  3B4F               	subwfb	___fladd@a+3,w
  5399     0F58  00D7               	movwf	??___fladd+7
  5400     0F59  0854               	movf	??___fladd+4,w
  5401     0F5A  07D0               	addwf	??___fladd,f
  5402     0F5B  0855               	movf	??___fladd+5,w
  5403     0F5C  3DD1               	addwfc	??___fladd+1,f
  5404     0F5D  0856               	movf	??___fladd+6,w
  5405     0F5E  3DD2               	addwfc	??___fladd+2,f
  5406     0F5F  0857               	movf	??___fladd+7,w
  5407     0F60  3DD3               	addwfc	??___fladd+3,f
  5408     0F61  0853               	movf	??___fladd+3,w
  5409     0F62  00CB               	movwf	___fladd@b+3
  5410     0F63  0852               	movf	??___fladd+2,w
  5411     0F64  00CA               	movwf	___fladd@b+2
  5412     0F65  0851               	movf	??___fladd+1,w
  5413     0F66  00C9               	movwf	___fladd@b+1
  5414     0F67  0850               	movf	??___fladd,w
  5415     0F68  00C8               	movwf	___fladd@b
  5416     0F69  3080               	movlw	128
  5417     0F6A  00D0               	movwf	??___fladd
  5418     0F6B  0850               	movf	??___fladd,w
  5419     0F6C  06D8               	xorwf	___fladd@signs,f
  5420     0F6D  09DB               	comf	___fladd@grs,f
  5421     0F6E  0ADB               	incf	___fladd@grs,f
  5422     0F6F  085B               	movf	___fladd@grs,w
  5423     0F70  1D03               	btfss	3,2
  5424     0F71  2F83               	goto	l1162
  5425     0F72  3001               	movlw	1
  5426     0F73  07C8               	addwf	___fladd@b,f
  5427     0F74  3000               	movlw	0
  5428     0F75  3DC9               	addwfc	___fladd@b+1,f
  5429     0F76  3000               	movlw	0
  5430     0F77  3DCA               	addwfc	___fladd@b+2,f
  5431     0F78  3000               	movlw	0
  5432     0F79  3DCB               	addwfc	___fladd@b+3,f
  5433     0F7A  2F83               	goto	l1162
  5434     0F7B                     l4018:
  5435     0F7B  084C               	movf	___fladd@a,w
  5436     0F7C  02C8               	subwf	___fladd@b,f
  5437     0F7D  084D               	movf	___fladd@a+1,w
  5438     0F7E  3BC9               	subwfb	___fladd@b+1,f
  5439     0F7F  084E               	movf	___fladd@a+2,w
  5440     0F80  3BCA               	subwfb	___fladd@b+2,f
  5441     0F81  084F               	movf	___fladd@a+3,w
  5442     0F82  3BCB               	subwfb	___fladd@b+3,f
  5443     0F83                     l1162:
  5444     0F83  084B               	movf	___fladd@b+3,w
  5445     0F84  044A               	iorwf	___fladd@b+2,w
  5446     0F85  0449               	iorwf	___fladd@b+1,w
  5447     0F86  0448               	iorwf	___fladd@b,w
  5448     0F87  1D03               	skipz
  5449     0F88  2FA9               	goto	l4040
  5450     0F89  085B               	movf	___fladd@grs,w
  5451     0F8A  1D03               	btfss	3,2
  5452     0F8B  2FA9               	goto	l4040
  5453     0F8C  3000               	movlw	0
  5454     0F8D  00CB               	movwf	?___fladd+3
  5455     0F8E  3000               	movlw	0
  5456     0F8F  00CA               	movwf	?___fladd+2
  5457     0F90  3000               	movlw	0
  5458     0F91  00C9               	movwf	?___fladd+1
  5459     0F92  3000               	movlw	0
  5460     0F93  00C8               	movwf	?___fladd
  5461     0F94  0008               	return
  5462     0F95                     l4026:
  5463     0F95  3001               	movlw	1
  5464     0F96                     u4605:
  5465     0F96  35C8               	lslf	___fladd@b,f
  5466     0F97  0DC9               	rlf	___fladd@b+1,f
  5467     0F98  0DCA               	rlf	___fladd@b+2,f
  5468     0F99  0DCB               	rlf	___fladd@b+3,f
  5469     0F9A  0B89               	decfsz	9,f
  5470     0F9B  2F96               	goto	u4605
  5471     0F9C  1BDB               	btfsc	___fladd@grs,7
  5472     0F9D  1448               	bsf	___fladd@b,0
  5473     0F9E  1C5B               	btfss	___fladd@grs,0
  5474     0F9F  2FA2               	goto	l4034
  5475     0FA0  1403               	setc
  5476     0FA1  2FA3               	goto	L2
  5477     0FA2                     l4034:
  5478     0FA2  1003               	clrc
  5479     0FA3                     L2:
  5480     0FA3  0DDB               	rlf	___fladd@grs,f
  5481     0FA4  085A               	movf	___fladd@bexp,w
  5482     0FA5  1903               	btfsc	3,2
  5483     0FA6  2FA9               	goto	l4040
  5484     0FA7  3001               	movlw	1
  5485     0FA8  02DA               	subwf	___fladd@bexp,f
  5486     0FA9                     l4040:
  5487     0FA9  1FCA               	btfss	___fladd@b+2,7
  5488     0FAA  2F95               	goto	l4026
  5489     0FAB                     l4042:
  5490     0FAB  01D9               	clrf	___fladd@aexp
  5491     0FAC  1FDB               	btfss	___fladd@grs,7
  5492     0FAD  2FB6               	goto	l4052
  5493     0FAE  085B               	movf	___fladd@grs,w
  5494     0FAF  397F               	andlw	127
  5495     0FB0  1903               	btfsc	3,2
  5496     0FB1  1848               	btfsc	___fladd@b,0
  5497     0FB2  2FB4               	goto	l4048
  5498     0FB3  2FB6               	goto	l4052
  5499     0FB4                     l4048:
  5500     0FB4  01D9               	clrf	___fladd@aexp
  5501     0FB5  0AD9               	incf	___fladd@aexp,f
  5502     0FB6                     l4052:
  5503     0FB6  0859               	movf	___fladd@aexp,w
  5504     0FB7  1903               	btfsc	3,2
  5505     0FB8  2FE2               	goto	l1175
  5506     0FB9  3001               	movlw	1
  5507     0FBA  07C8               	addwf	___fladd@b,f
  5508     0FBB  3000               	movlw	0
  5509     0FBC  3DC9               	addwfc	___fladd@b+1,f
  5510     0FBD  3000               	movlw	0
  5511     0FBE  3DCA               	addwfc	___fladd@b+2,f
  5512     0FBF  3000               	movlw	0
  5513     0FC0  3DCB               	addwfc	___fladd@b+3,f
  5514     0FC1  1C4B               	btfss	___fladd@b+3,0
  5515     0FC2  2FE2               	goto	l1175
  5516     0FC3  0848               	movf	___fladd@b,w
  5517     0FC4  00D0               	movwf	??___fladd
  5518     0FC5  0849               	movf	___fladd@b+1,w
  5519     0FC6  00D1               	movwf	??___fladd+1
  5520     0FC7  084A               	movf	___fladd@b+2,w
  5521     0FC8  00D2               	movwf	??___fladd+2
  5522     0FC9  084B               	movf	___fladd@b+3,w
  5523     0FCA  00D3               	movwf	??___fladd+3
  5524     0FCB  3001               	movlw	1
  5525     0FCC  00D4               	movwf	??___fladd+4
  5526     0FCD                     u4705:
  5527     0FCD  37D3               	asrf	??___fladd+3,f
  5528     0FCE  0CD2               	rrf	??___fladd+2,f
  5529     0FCF  0CD1               	rrf	??___fladd+1,f
  5530     0FD0  0CD0               	rrf	??___fladd,f
  5531     0FD1  0BD4               	decfsz	??___fladd+4,f
  5532     0FD2  2FCD               	goto	u4705
  5533     0FD3  0853               	movf	??___fladd+3,w
  5534     0FD4  00CB               	movwf	___fladd@b+3
  5535     0FD5  0852               	movf	??___fladd+2,w
  5536     0FD6  00CA               	movwf	___fladd@b+2
  5537     0FD7  0851               	movf	??___fladd+1,w
  5538     0FD8  00C9               	movwf	___fladd@b+1
  5539     0FD9  0850               	movf	??___fladd,w
  5540     0FDA  00C8               	movwf	___fladd@b
  5541     0FDB  0A5A               	incf	___fladd@bexp,w
  5542     0FDC  1903               	btfsc	3,2
  5543     0FDD  2FE2               	goto	l1175
  5544     0FDE  3001               	movlw	1
  5545     0FDF  00D0               	movwf	??___fladd
  5546     0FE0  0850               	movf	??___fladd,w
  5547     0FE1  07DA               	addwf	___fladd@bexp,f
  5548     0FE2                     l1175:
  5549     0FE2  0A5A               	incf	___fladd@bexp,w
  5550     0FE3  1D03               	btfss	3,2
  5551     0FE4  085A               	movf	___fladd@bexp,w
  5552     0FE5  1D03               	btfss	3,2
  5553     0FE6  2FF2               	goto	l4070
  5554     0FE7  3000               	movlw	0
  5555     0FE8  00CB               	movwf	___fladd@b+3
  5556     0FE9  3000               	movlw	0
  5557     0FEA  00CA               	movwf	___fladd@b+2
  5558     0FEB  3000               	movlw	0
  5559     0FEC  00C9               	movwf	___fladd@b+1
  5560     0FED  3000               	movlw	0
  5561     0FEE  00C8               	movwf	___fladd@b
  5562     0FEF  085A               	movf	___fladd@bexp,w
  5563     0FF0  1903               	btfsc	3,2
  5564     0FF1  01D8               	clrf	___fladd@signs
  5565     0FF2                     l4070:
  5566     0FF2  1C5A               	btfss	___fladd@bexp,0
  5567     0FF3  2FF6               	goto	l4074
  5568     0FF4  17CA               	bsf	___fladd@b+2,7
  5569     0FF5  2FFA               	goto	l1183
  5570     0FF6                     l4074:
  5571     0FF6  307F               	movlw	127
  5572     0FF7  00D0               	movwf	??___fladd
  5573     0FF8  0850               	movf	??___fladd,w
  5574     0FF9  05CA               	andwf	___fladd@b+2,f
  5575     0FFA                     l1183:
  5576     0FFA  365A               	lsrf	___fladd@bexp,w
  5577     0FFB  00CB               	movwf	___fladd@b+3
  5578     0FFC  1FD8               	btfss	___fladd@signs,7
  5579     0FFD  0008               	return
  5580     0FFE  17CB               	bsf	___fladd@b+3,7
  5581     0FFF  0008               	return
  5582     1000                     __end_of___fladd:
  5583                           
  5584                           	psect	text9
  5585     1744                     __ptext9:	
  5586 ;; *************** function ___flneg *****************
  5587 ;; Defined at:
  5588 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flneg.c"
  5589 ;; Parameters:    Size  Location     Type
  5590 ;;  f1              4    0[BANK0 ] unsigned char 
  5591 ;; Auto vars:     Size  Location     Type
  5592 ;;		None
  5593 ;; Return value:  Size  Location     Type
  5594 ;;                  4    0[BANK0 ] unsigned char 
  5595 ;; Registers used:
  5596 ;;		wreg
  5597 ;; Tracked objects:
  5598 ;;		On entry : 0/0
  5599 ;;		On exit  : 0/0
  5600 ;;		Unchanged: 0/0
  5601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5602 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5605 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5606 ;;Total ram usage:        4 bytes
  5607 ;; Hardware stack levels used: 1
  5608 ;; Hardware stack levels required when called: 5
  5609 ;; This function calls:
  5610 ;;		Nothing
  5611 ;; This function is called by:
  5612 ;;		_my_log
  5613 ;; This function uses a non-reentrant model
  5614 ;;
  5615                           
  5616     1744                     ___flneg:	
  5617                           ;psect for function ___flneg
  5618                           
  5619                           
  5620                           ;incstack = 0
  5621                           ; Regs used in ___flneg: [wreg]
  5622     1744  0020               	movlb	0	; select bank0
  5623     1745  0823               	movf	___flneg@f1+3,w
  5624     1746  0422               	iorwf	___flneg@f1+2,w
  5625     1747  0421               	iorwf	___flneg@f1+1,w
  5626     1748  0420               	iorwf	___flneg@f1,w
  5627     1749  1903               	skipnz
  5628     174A  0008               	return
  5629     174B  3080               	movlw	128
  5630     174C  06A3               	xorwf	___flneg@f1+3,f
  5631     174D  0008               	return
  5632     174E                     __end_of___flneg:
  5633                           
  5634                           	psect	text10
  5635     004F                     __ptext10:	
  5636 ;; *************** function ___flmul *****************
  5637 ;; Defined at:
  5638 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  5639 ;; Parameters:    Size  Location     Type
  5640 ;;  b               4   60[BANK0 ] unsigned char 
  5641 ;;  a               4   64[BANK0 ] unsigned char 
  5642 ;; Auto vars:     Size  Location     Type
  5643 ;;  prod            4    7[BANK1 ] struct .
  5644 ;;  grs             4    2[BANK1 ] unsigned long 
  5645 ;;  temp            2   11[BANK1 ] struct .
  5646 ;;  bexp            1    6[BANK1 ] unsigned char 
  5647 ;;  aexp            1    1[BANK1 ] unsigned char 
  5648 ;;  sign            1    0[BANK1 ] unsigned char 
  5649 ;; Return value:  Size  Location     Type
  5650 ;;                  4   60[BANK0 ] unsigned char 
  5651 ;; Registers used:
  5652 ;;		wreg, status,2, status,0, pclath, cstack
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5658 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5659 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  5660 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5661 ;;      Totals:         0      13      13       0       0       0       0       0       0       0       0       0       
      +0       0
  5662 ;;Total ram usage:       26 bytes
  5663 ;; Hardware stack levels used: 1
  5664 ;; Hardware stack levels required when called: 6
  5665 ;; This function calls:
  5666 ;;		__Umul8_16
  5667 ;; This function is called by:
  5668 ;;		__ReadSensor
  5669 ;;		_my_log
  5670 ;; This function uses a non-reentrant model
  5671 ;;
  5672                           
  5673     004F                     ___flmul:	
  5674                           ;psect for function ___flmul
  5675                           
  5676                           
  5677                           ;incstack = 0
  5678                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  5679     004F  0020               	movlb	0	; select bank0
  5680     0050  085F               	movf	___flmul@b+3,w
  5681     0051  3980               	andlw	128
  5682     0052  0021               	movlb	1	; select bank1
  5683     0053  00A0               	movwf	___flmul@sign^(0+128)
  5684     0054  0020               	movlb	0	; select bank0
  5685     0055  355F               	lslf	___flmul@b+3,w
  5686     0056  0021               	movlb	1	; select bank1
  5687     0057  00A6               	movwf	___flmul@bexp^(0+128)
  5688     0058  0020               	movlb	0	; select bank0
  5689     0059  1FDE               	btfss	___flmul@b+2,7
  5690     005A  285D               	goto	l4288
  5691     005B  0021               	movlb	1	; select bank1
  5692     005C  1426               	bsf	___flmul@bexp^(0+128),0
  5693     005D                     l4288:
  5694     005D  0021               	movlb	1	; select bank1
  5695     005E  0826               	movf	___flmul@bexp^(0+128),w
  5696     005F  1903               	btfsc	3,2
  5697     0060  2870               	goto	l4296
  5698     0061  0A26               	incf	___flmul@bexp^(0+128),w
  5699     0062  1D03               	btfss	3,2
  5700     0063  286D               	goto	l4294
  5701     0064  3000               	movlw	0
  5702     0065  0020               	movlb	0	; select bank0
  5703     0066  00DF               	movwf	___flmul@b+3
  5704     0067  3000               	movlw	0
  5705     0068  00DE               	movwf	___flmul@b+2
  5706     0069  3000               	movlw	0
  5707     006A  00DD               	movwf	___flmul@b+1
  5708     006B  3000               	movlw	0
  5709     006C  00DC               	movwf	___flmul@b
  5710     006D                     l4294:
  5711     006D  0020               	movlb	0	; select bank0
  5712     006E  17DE               	bsf	___flmul@b+2,7
  5713     006F  2879               	goto	l4298
  5714     0070                     l4296:
  5715     0070  3000               	movlw	0
  5716     0071  0020               	movlb	0	; select bank0
  5717     0072  00DF               	movwf	___flmul@b+3
  5718     0073  3000               	movlw	0
  5719     0074  00DE               	movwf	___flmul@b+2
  5720     0075  3000               	movlw	0
  5721     0076  00DD               	movwf	___flmul@b+1
  5722     0077  3000               	movlw	0
  5723     0078  00DC               	movwf	___flmul@b
  5724     0079                     l4298:
  5725     0079  0863               	movf	___flmul@a+3,w
  5726     007A  3980               	andlw	128
  5727     007B  00E4               	movwf	??___flmul
  5728     007C  0864               	movf	??___flmul,w
  5729     007D  0021               	movlb	1	; select bank1
  5730     007E  06A0               	xorwf	___flmul@sign^(0+128),f
  5731     007F  0020               	movlb	0	; select bank0
  5732     0080  3563               	lslf	___flmul@a+3,w
  5733     0081  0021               	movlb	1	; select bank1
  5734     0082  00A1               	movwf	___flmul@aexp^(0+128)
  5735     0083  0020               	movlb	0	; select bank0
  5736     0084  1FE2               	btfss	___flmul@a+2,7
  5737     0085  2888               	goto	l4306
  5738     0086  0021               	movlb	1	; select bank1
  5739     0087  1421               	bsf	___flmul@aexp^(0+128),0
  5740     0088                     l4306:
  5741     0088  0021               	movlb	1	; select bank1
  5742     0089  0821               	movf	___flmul@aexp^(0+128),w
  5743     008A  1903               	btfsc	3,2
  5744     008B  289B               	goto	l4314
  5745     008C  0A21               	incf	___flmul@aexp^(0+128),w
  5746     008D  1D03               	btfss	3,2
  5747     008E  2898               	goto	l4312
  5748     008F  3000               	movlw	0
  5749     0090  0020               	movlb	0	; select bank0
  5750     0091  00E3               	movwf	___flmul@a+3
  5751     0092  3000               	movlw	0
  5752     0093  00E2               	movwf	___flmul@a+2
  5753     0094  3000               	movlw	0
  5754     0095  00E1               	movwf	___flmul@a+1
  5755     0096  3000               	movlw	0
  5756     0097  00E0               	movwf	___flmul@a
  5757     0098                     l4312:
  5758     0098  0020               	movlb	0	; select bank0
  5759     0099  17E2               	bsf	___flmul@a+2,7
  5760     009A  28A4               	goto	l4316
  5761     009B                     l4314:
  5762     009B  3000               	movlw	0
  5763     009C  0020               	movlb	0	; select bank0
  5764     009D  00E3               	movwf	___flmul@a+3
  5765     009E  3000               	movlw	0
  5766     009F  00E2               	movwf	___flmul@a+2
  5767     00A0  3000               	movlw	0
  5768     00A1  00E1               	movwf	___flmul@a+1
  5769     00A2  3000               	movlw	0
  5770     00A3  00E0               	movwf	___flmul@a
  5771     00A4                     l4316:
  5772     00A4  0021               	movlb	1	; select bank1
  5773     00A5  0821               	movf	___flmul@aexp^(0+128),w
  5774     00A6  1D03               	btfss	3,2
  5775     00A7  0826               	movf	___flmul@bexp^(0+128),w
  5776     00A8  1D03               	btfss	3,2
  5777     00A9  28B4               	goto	l4324
  5778     00AA  3000               	movlw	0
  5779     00AB  0020               	movlb	0	; select bank0
  5780     00AC  00DF               	movwf	?___flmul+3
  5781     00AD  3000               	movlw	0
  5782     00AE  00DE               	movwf	?___flmul+2
  5783     00AF  3000               	movlw	0
  5784     00B0  00DD               	movwf	?___flmul+1
  5785     00B1  3000               	movlw	0
  5786     00B2  00DC               	movwf	?___flmul
  5787     00B3  0008               	return
  5788     00B4                     l4324:
  5789     00B4  0020               	movlb	0	; select bank0
  5790     00B5  085C               	movf	___flmul@b,w
  5791     00B6  00F4               	movwf	__Umul8_16@multiplicand
  5792     00B7  0862               	movf	___flmul@a+2,w
  5793     00B8  3188  2053  3180   	fcall	__Umul8_16
  5794     00BB  0875               	movf	?__Umul8_16+1,w
  5795     00BC  0021               	movlb	1	; select bank1
  5796     00BD  00AC               	movwf	(___flmul@temp+1)^(0+128)
  5797     00BE  0874               	movf	?__Umul8_16,w
  5798     00BF  00AB               	movwf	___flmul@temp^(0+128)
  5799     00C0  082B               	movf	___flmul@temp^(0+128),w
  5800     00C1  0020               	movlb	0	; select bank0
  5801     00C2  00E4               	movwf	??___flmul
  5802     00C3  01E5               	clrf	??___flmul+1
  5803     00C4  01E6               	clrf	??___flmul+2
  5804     00C5  01E7               	clrf	??___flmul+3
  5805     00C6  0867               	movf	??___flmul+3,w
  5806     00C7  0021               	movlb	1	; select bank1
  5807     00C8  00A5               	movwf	(___flmul@grs+3)^(0+128)
  5808     00C9  0020               	movlb	0	; select bank0
  5809     00CA  0866               	movf	??___flmul+2,w
  5810     00CB  0021               	movlb	1	; select bank1
  5811     00CC  00A4               	movwf	(___flmul@grs+2)^(0+128)
  5812     00CD  0020               	movlb	0	; select bank0
  5813     00CE  0865               	movf	??___flmul+1,w
  5814     00CF  0021               	movlb	1	; select bank1
  5815     00D0  00A3               	movwf	(___flmul@grs+1)^(0+128)
  5816     00D1  0020               	movlb	0	; select bank0
  5817     00D2  0864               	movf	??___flmul,w
  5818     00D3  0021               	movlb	1	; select bank1
  5819     00D4  00A2               	movwf	___flmul@grs^(0+128)
  5820     00D5  082C               	movf	(___flmul@temp^(0+128)+1),w
  5821     00D6  0020               	movlb	0	; select bank0
  5822     00D7  00E4               	movwf	??___flmul
  5823     00D8  01E5               	clrf	??___flmul+1
  5824     00D9  01E6               	clrf	??___flmul+2
  5825     00DA  01E7               	clrf	??___flmul+3
  5826     00DB  0867               	movf	??___flmul+3,w
  5827     00DC  0021               	movlb	1	; select bank1
  5828     00DD  00AA               	movwf	(___flmul@prod+3)^(0+128)
  5829     00DE  0020               	movlb	0	; select bank0
  5830     00DF  0866               	movf	??___flmul+2,w
  5831     00E0  0021               	movlb	1	; select bank1
  5832     00E1  00A9               	movwf	(___flmul@prod+2)^(0+128)
  5833     00E2  0020               	movlb	0	; select bank0
  5834     00E3  0865               	movf	??___flmul+1,w
  5835     00E4  0021               	movlb	1	; select bank1
  5836     00E5  00A8               	movwf	(___flmul@prod+1)^(0+128)
  5837     00E6  0020               	movlb	0	; select bank0
  5838     00E7  0864               	movf	??___flmul,w
  5839     00E8  0021               	movlb	1	; select bank1
  5840     00E9  00A7               	movwf	___flmul@prod^(0+128)
  5841     00EA  0020               	movlb	0	; select bank0
  5842     00EB  085D               	movf	___flmul@b+1,w
  5843     00EC  00F4               	movwf	__Umul8_16@multiplicand
  5844     00ED  0861               	movf	___flmul@a+1,w
  5845     00EE  3188  2053  3180   	fcall	__Umul8_16
  5846     00F1  0875               	movf	?__Umul8_16+1,w
  5847     00F2  0021               	movlb	1	; select bank1
  5848     00F3  00AC               	movwf	(___flmul@temp+1)^(0+128)
  5849     00F4  0874               	movf	?__Umul8_16,w
  5850     00F5  00AB               	movwf	___flmul@temp^(0+128)
  5851     00F6  082B               	movf	___flmul@temp^(0+128),w
  5852     00F7  0020               	movlb	0	; select bank0
  5853     00F8  00E4               	movwf	??___flmul
  5854     00F9  01E5               	clrf	??___flmul+1
  5855     00FA  01E6               	clrf	??___flmul+2
  5856     00FB  01E7               	clrf	??___flmul+3
  5857     00FC  0864               	movf	??___flmul,w
  5858     00FD  0021               	movlb	1	; select bank1
  5859     00FE  07A2               	addwf	___flmul@grs^(0+128),f
  5860     00FF  0020               	movlb	0	; select bank0
  5861     0100  0865               	movf	??___flmul+1,w
  5862     0101  0021               	movlb	1	; select bank1
  5863     0102  3DA3               	addwfc	(___flmul@grs+1)^(0+128),f
  5864     0103  0020               	movlb	0	; select bank0
  5865     0104  0866               	movf	??___flmul+2,w
  5866     0105  0021               	movlb	1	; select bank1
  5867     0106  3DA4               	addwfc	(___flmul@grs+2)^(0+128),f
  5868     0107  0020               	movlb	0	; select bank0
  5869     0108  0867               	movf	??___flmul+3,w
  5870     0109  0021               	movlb	1	; select bank1
  5871     010A  3DA5               	addwfc	(___flmul@grs+3)^(0+128),f
  5872     010B  082C               	movf	(___flmul@temp^(0+128)+1),w
  5873     010C  0020               	movlb	0	; select bank0
  5874     010D  00E4               	movwf	??___flmul
  5875     010E  01E5               	clrf	??___flmul+1
  5876     010F  01E6               	clrf	??___flmul+2
  5877     0110  01E7               	clrf	??___flmul+3
  5878     0111  0864               	movf	??___flmul,w
  5879     0112  0021               	movlb	1	; select bank1
  5880     0113  07A7               	addwf	___flmul@prod^(0+128),f
  5881     0114  0020               	movlb	0	; select bank0
  5882     0115  0865               	movf	??___flmul+1,w
  5883     0116  0021               	movlb	1	; select bank1
  5884     0117  3DA8               	addwfc	(___flmul@prod+1)^(0+128),f
  5885     0118  0020               	movlb	0	; select bank0
  5886     0119  0866               	movf	??___flmul+2,w
  5887     011A  0021               	movlb	1	; select bank1
  5888     011B  3DA9               	addwfc	(___flmul@prod+2)^(0+128),f
  5889     011C  0020               	movlb	0	; select bank0
  5890     011D  0867               	movf	??___flmul+3,w
  5891     011E  0021               	movlb	1	; select bank1
  5892     011F  3DAA               	addwfc	(___flmul@prod+3)^(0+128),f
  5893     0120  0020               	movlb	0	; select bank0
  5894     0121  085E               	movf	___flmul@b+2,w
  5895     0122  00F4               	movwf	__Umul8_16@multiplicand
  5896     0123  0860               	movf	___flmul@a,w
  5897     0124  3188  2053  3180   	fcall	__Umul8_16
  5898     0127  0875               	movf	?__Umul8_16+1,w
  5899     0128  0021               	movlb	1	; select bank1
  5900     0129  00AC               	movwf	(___flmul@temp+1)^(0+128)
  5901     012A  0874               	movf	?__Umul8_16,w
  5902     012B  00AB               	movwf	___flmul@temp^(0+128)
  5903     012C  082B               	movf	___flmul@temp^(0+128),w
  5904     012D  0020               	movlb	0	; select bank0
  5905     012E  00E4               	movwf	??___flmul
  5906     012F  01E5               	clrf	??___flmul+1
  5907     0130  01E6               	clrf	??___flmul+2
  5908     0131  01E7               	clrf	??___flmul+3
  5909     0132  0864               	movf	??___flmul,w
  5910     0133  0021               	movlb	1	; select bank1
  5911     0134  07A2               	addwf	___flmul@grs^(0+128),f
  5912     0135  0020               	movlb	0	; select bank0
  5913     0136  0865               	movf	??___flmul+1,w
  5914     0137  0021               	movlb	1	; select bank1
  5915     0138  3DA3               	addwfc	(___flmul@grs+1)^(0+128),f
  5916     0139  0020               	movlb	0	; select bank0
  5917     013A  0866               	movf	??___flmul+2,w
  5918     013B  0021               	movlb	1	; select bank1
  5919     013C  3DA4               	addwfc	(___flmul@grs+2)^(0+128),f
  5920     013D  0020               	movlb	0	; select bank0
  5921     013E  0867               	movf	??___flmul+3,w
  5922     013F  0021               	movlb	1	; select bank1
  5923     0140  3DA5               	addwfc	(___flmul@grs+3)^(0+128),f
  5924     0141  082C               	movf	(___flmul@temp^(0+128)+1),w
  5925     0142  0020               	movlb	0	; select bank0
  5926     0143  00E4               	movwf	??___flmul
  5927     0144  01E5               	clrf	??___flmul+1
  5928     0145  01E6               	clrf	??___flmul+2
  5929     0146  01E7               	clrf	??___flmul+3
  5930     0147  0864               	movf	??___flmul,w
  5931     0148  0021               	movlb	1	; select bank1
  5932     0149  07A7               	addwf	___flmul@prod^(0+128),f
  5933     014A  0020               	movlb	0	; select bank0
  5934     014B  0865               	movf	??___flmul+1,w
  5935     014C  0021               	movlb	1	; select bank1
  5936     014D  3DA8               	addwfc	(___flmul@prod+1)^(0+128),f
  5937     014E  0020               	movlb	0	; select bank0
  5938     014F  0866               	movf	??___flmul+2,w
  5939     0150  0021               	movlb	1	; select bank1
  5940     0151  3DA9               	addwfc	(___flmul@prod+2)^(0+128),f
  5941     0152  0020               	movlb	0	; select bank0
  5942     0153  0867               	movf	??___flmul+3,w
  5943     0154  0021               	movlb	1	; select bank1
  5944     0155  3DAA               	addwfc	(___flmul@prod+3)^(0+128),f
  5945     0156  3008               	movlw	8
  5946     0157                     u5235:
  5947     0157  35A2               	lslf	___flmul@grs^(0+128),f
  5948     0158  0DA3               	rlf	(___flmul@grs+1)^(0+128),f
  5949     0159  0DA4               	rlf	(___flmul@grs+2)^(0+128),f
  5950     015A  0DA5               	rlf	(___flmul@grs+3)^(0+128),f
  5951     015B  0B89               	decfsz	9,f
  5952     015C  2957               	goto	u5235
  5953     015D  0020               	movlb	0	; select bank0
  5954     015E  085D               	movf	___flmul@b+1,w
  5955     015F  00F4               	movwf	__Umul8_16@multiplicand
  5956     0160  0860               	movf	___flmul@a,w
  5957     0161  3188  2053  3180   	fcall	__Umul8_16
  5958     0164  0875               	movf	?__Umul8_16+1,w
  5959     0165  0021               	movlb	1	; select bank1
  5960     0166  00AC               	movwf	(___flmul@temp+1)^(0+128)
  5961     0167  0874               	movf	?__Umul8_16,w
  5962     0168  00AB               	movwf	___flmul@temp^(0+128)
  5963     0169  082B               	movf	___flmul@temp^(0+128),w
  5964     016A  07A2               	addwf	___flmul@grs^(0+128),f
  5965     016B  082C               	movf	(___flmul@temp+1)^(0+128),w
  5966     016C  3DA3               	addwfc	(___flmul@grs+1)^(0+128),f
  5967     016D  3000               	movlw	0
  5968     016E  3DA4               	addwfc	(___flmul@grs+2)^(0+128),f
  5969     016F  3DA5               	addwfc	(___flmul@grs+3)^(0+128),f
  5970     0170  0020               	movlb	0	; select bank0
  5971     0171  085C               	movf	___flmul@b,w
  5972     0172  00F4               	movwf	__Umul8_16@multiplicand
  5973     0173  0861               	movf	___flmul@a+1,w
  5974     0174  3188  2053  3180   	fcall	__Umul8_16
  5975     0177  0875               	movf	?__Umul8_16+1,w
  5976     0178  0021               	movlb	1	; select bank1
  5977     0179  00AC               	movwf	(___flmul@temp+1)^(0+128)
  5978     017A  0874               	movf	?__Umul8_16,w
  5979     017B  00AB               	movwf	___flmul@temp^(0+128)
  5980     017C  082B               	movf	___flmul@temp^(0+128),w
  5981     017D  07A2               	addwf	___flmul@grs^(0+128),f
  5982     017E  082C               	movf	(___flmul@temp+1)^(0+128),w
  5983     017F  3DA3               	addwfc	(___flmul@grs+1)^(0+128),f
  5984     0180  3000               	movlw	0
  5985     0181  3DA4               	addwfc	(___flmul@grs+2)^(0+128),f
  5986     0182  3DA5               	addwfc	(___flmul@grs+3)^(0+128),f
  5987     0183  3008               	movlw	8
  5988     0184                     u5245:
  5989     0184  35A2               	lslf	___flmul@grs^(0+128),f
  5990     0185  0DA3               	rlf	(___flmul@grs+1)^(0+128),f
  5991     0186  0DA4               	rlf	(___flmul@grs+2)^(0+128),f
  5992     0187  0DA5               	rlf	(___flmul@grs+3)^(0+128),f
  5993     0188  0B89               	decfsz	9,f
  5994     0189  2984               	goto	u5245
  5995     018A  0020               	movlb	0	; select bank0
  5996     018B  085C               	movf	___flmul@b,w
  5997     018C  00F4               	movwf	__Umul8_16@multiplicand
  5998     018D  0860               	movf	___flmul@a,w
  5999     018E  3188  2053  3180   	fcall	__Umul8_16
  6000     0191  0875               	movf	?__Umul8_16+1,w
  6001     0192  0021               	movlb	1	; select bank1
  6002     0193  00AC               	movwf	(___flmul@temp+1)^(0+128)
  6003     0194  0874               	movf	?__Umul8_16,w
  6004     0195  00AB               	movwf	___flmul@temp^(0+128)
  6005     0196  082B               	movf	___flmul@temp^(0+128),w
  6006     0197  07A2               	addwf	___flmul@grs^(0+128),f
  6007     0198  082C               	movf	(___flmul@temp+1)^(0+128),w
  6008     0199  3DA3               	addwfc	(___flmul@grs+1)^(0+128),f
  6009     019A  3000               	movlw	0
  6010     019B  3DA4               	addwfc	(___flmul@grs+2)^(0+128),f
  6011     019C  3DA5               	addwfc	(___flmul@grs+3)^(0+128),f
  6012     019D  0020               	movlb	0	; select bank0
  6013     019E  085D               	movf	___flmul@b+1,w
  6014     019F  00F4               	movwf	__Umul8_16@multiplicand
  6015     01A0  0862               	movf	___flmul@a+2,w
  6016     01A1  3188  2053  3180   	fcall	__Umul8_16
  6017     01A4  0875               	movf	?__Umul8_16+1,w
  6018     01A5  0021               	movlb	1	; select bank1
  6019     01A6  00AC               	movwf	(___flmul@temp+1)^(0+128)
  6020     01A7  0874               	movf	?__Umul8_16,w
  6021     01A8  00AB               	movwf	___flmul@temp^(0+128)
  6022     01A9  082B               	movf	___flmul@temp^(0+128),w
  6023     01AA  07A7               	addwf	___flmul@prod^(0+128),f
  6024     01AB  082C               	movf	(___flmul@temp+1)^(0+128),w
  6025     01AC  3DA8               	addwfc	(___flmul@prod+1)^(0+128),f
  6026     01AD  3000               	movlw	0
  6027     01AE  3DA9               	addwfc	(___flmul@prod+2)^(0+128),f
  6028     01AF  3DAA               	addwfc	(___flmul@prod+3)^(0+128),f
  6029     01B0  0020               	movlb	0	; select bank0
  6030     01B1  085E               	movf	___flmul@b+2,w
  6031     01B2  00F4               	movwf	__Umul8_16@multiplicand
  6032     01B3  0861               	movf	___flmul@a+1,w
  6033     01B4  3188  2053  3180   	fcall	__Umul8_16
  6034     01B7  0875               	movf	?__Umul8_16+1,w
  6035     01B8  0021               	movlb	1	; select bank1
  6036     01B9  00AC               	movwf	(___flmul@temp+1)^(0+128)
  6037     01BA  0874               	movf	?__Umul8_16,w
  6038     01BB  00AB               	movwf	___flmul@temp^(0+128)
  6039     01BC  082B               	movf	___flmul@temp^(0+128),w
  6040     01BD  07A7               	addwf	___flmul@prod^(0+128),f
  6041     01BE  082C               	movf	(___flmul@temp+1)^(0+128),w
  6042     01BF  3DA8               	addwfc	(___flmul@prod+1)^(0+128),f
  6043     01C0  3000               	movlw	0
  6044     01C1  3DA9               	addwfc	(___flmul@prod+2)^(0+128),f
  6045     01C2  3DAA               	addwfc	(___flmul@prod+3)^(0+128),f
  6046     01C3  0020               	movlb	0	; select bank0
  6047     01C4  085E               	movf	___flmul@b+2,w
  6048     01C5  00F4               	movwf	__Umul8_16@multiplicand
  6049     01C6  0862               	movf	___flmul@a+2,w
  6050     01C7  3188  2053  3180   	fcall	__Umul8_16
  6051     01CA  0875               	movf	?__Umul8_16+1,w
  6052     01CB  0021               	movlb	1	; select bank1
  6053     01CC  00AC               	movwf	(___flmul@temp+1)^(0+128)
  6054     01CD  0874               	movf	?__Umul8_16,w
  6055     01CE  00AB               	movwf	___flmul@temp^(0+128)
  6056     01CF  082B               	movf	___flmul@temp^(0+128),w
  6057     01D0  0020               	movlb	0	; select bank0
  6058     01D1  00E4               	movwf	??___flmul
  6059     01D2  0021               	movlb	1	; select bank1
  6060     01D3  082C               	movf	(___flmul@temp+1)^(0+128),w
  6061     01D4  0020               	movlb	0	; select bank0
  6062     01D5  00E5               	movwf	??___flmul+1
  6063     01D6  01E6               	clrf	??___flmul+2
  6064     01D7  01E7               	clrf	??___flmul+3
  6065     01D8  3008               	movlw	8
  6066     01D9                     u5255:
  6067     01D9  35E4               	lslf	??___flmul,f
  6068     01DA  0DE5               	rlf	??___flmul+1,f
  6069     01DB  0DE6               	rlf	??___flmul+2,f
  6070     01DC  0DE7               	rlf	??___flmul+3,f
  6071     01DD  0B89               	decfsz	9,f
  6072     01DE  29D9               	goto	u5255
  6073     01DF  0864               	movf	??___flmul,w
  6074     01E0  0021               	movlb	1	; select bank1
  6075     01E1  07A7               	addwf	___flmul@prod^(0+128),f
  6076     01E2  0020               	movlb	0	; select bank0
  6077     01E3  0865               	movf	??___flmul+1,w
  6078     01E4  0021               	movlb	1	; select bank1
  6079     01E5  3DA8               	addwfc	(___flmul@prod+1)^(0+128),f
  6080     01E6  0020               	movlb	0	; select bank0
  6081     01E7  0866               	movf	??___flmul+2,w
  6082     01E8  0021               	movlb	1	; select bank1
  6083     01E9  3DA9               	addwfc	(___flmul@prod+2)^(0+128),f
  6084     01EA  0020               	movlb	0	; select bank0
  6085     01EB  0867               	movf	??___flmul+3,w
  6086     01EC  0021               	movlb	1	; select bank1
  6087     01ED  3DAA               	addwfc	(___flmul@prod+3)^(0+128),f
  6088     01EE  0822               	movf	___flmul@grs^(0+128),w
  6089     01EF  0020               	movlb	0	; select bank0
  6090     01F0  00E4               	movwf	??___flmul
  6091     01F1  0021               	movlb	1	; select bank1
  6092     01F2  0823               	movf	(___flmul@grs+1)^(0+128),w
  6093     01F3  0020               	movlb	0	; select bank0
  6094     01F4  00E5               	movwf	??___flmul+1
  6095     01F5  0021               	movlb	1	; select bank1
  6096     01F6  0824               	movf	(___flmul@grs+2)^(0+128),w
  6097     01F7  0020               	movlb	0	; select bank0
  6098     01F8  00E6               	movwf	??___flmul+2
  6099     01F9  0021               	movlb	1	; select bank1
  6100     01FA  0825               	movf	(___flmul@grs+3)^(0+128),w
  6101     01FB  0020               	movlb	0	; select bank0
  6102     01FC  00E7               	movwf	??___flmul+3
  6103     01FD  3018               	movlw	24
  6104     01FE                     u5265:
  6105     01FE  36E7               	lsrf	??___flmul+3,f
  6106     01FF  0CE6               	rrf	??___flmul+2,f
  6107     0200  0CE5               	rrf	??___flmul+1,f
  6108     0201  0CE4               	rrf	??___flmul,f
  6109     0202  0B89               	decfsz	9,f
  6110     0203  29FE               	goto	u5265
  6111     0204  0864               	movf	??___flmul,w
  6112     0205  0021               	movlb	1	; select bank1
  6113     0206  07A7               	addwf	___flmul@prod^(0+128),f
  6114     0207  0020               	movlb	0	; select bank0
  6115     0208  0865               	movf	??___flmul+1,w
  6116     0209  0021               	movlb	1	; select bank1
  6117     020A  3DA8               	addwfc	(___flmul@prod+1)^(0+128),f
  6118     020B  0020               	movlb	0	; select bank0
  6119     020C  0866               	movf	??___flmul+2,w
  6120     020D  0021               	movlb	1	; select bank1
  6121     020E  3DA9               	addwfc	(___flmul@prod+2)^(0+128),f
  6122     020F  0020               	movlb	0	; select bank0
  6123     0210  0867               	movf	??___flmul+3,w
  6124     0211  0021               	movlb	1	; select bank1
  6125     0212  3DAA               	addwfc	(___flmul@prod+3)^(0+128),f
  6126     0213  3008               	movlw	8
  6127     0214                     u5275:
  6128     0214  35A2               	lslf	___flmul@grs^(0+128),f
  6129     0215  0DA3               	rlf	(___flmul@grs+1)^(0+128),f
  6130     0216  0DA4               	rlf	(___flmul@grs+2)^(0+128),f
  6131     0217  0DA5               	rlf	(___flmul@grs+3)^(0+128),f
  6132     0218  0B89               	decfsz	9,f
  6133     0219  2A14               	goto	u5275
  6134     021A  0826               	movf	___flmul@bexp^(0+128),w
  6135     021B  0721               	addwf	___flmul@aexp^(0+128),w
  6136     021C  0020               	movlb	0	; select bank0
  6137     021D  00E4               	movwf	??___flmul
  6138     021E  01E5               	clrf	??___flmul+1
  6139     021F  0DE5               	rlf	??___flmul+1,f
  6140     0220  0864               	movf	??___flmul,w
  6141     0221  3E82               	addlw	130
  6142     0222  0021               	movlb	1	; select bank1
  6143     0223  00AB               	movwf	___flmul@temp^(0+128)
  6144     0224  30FF               	movlw	255
  6145     0225  0020               	movlb	0	; select bank0
  6146     0226  3D65               	addwfc	??___flmul+1,w
  6147     0227  0021               	movlb	1	; select bank1
  6148     0228  00AC               	movwf	(___flmul@temp+1)^(0+128)
  6149     0229                     l4376:
  6150     0229  1BA9               	btfsc	(___flmul@prod+2)^(0+128),7
  6151     022A  2A40               	goto	l4378
  6152     022B  3001               	movlw	1
  6153     022C                     u5285:
  6154     022C  35A7               	lslf	___flmul@prod^(0+128),f
  6155     022D  0DA8               	rlf	(___flmul@prod+1)^(0+128),f
  6156     022E  0DA9               	rlf	(___flmul@prod+2)^(0+128),f
  6157     022F  0DAA               	rlf	(___flmul@prod+3)^(0+128),f
  6158     0230  0B89               	decfsz	9,f
  6159     0231  2A2C               	goto	u5285
  6160     0232  1BA5               	btfsc	(___flmul@grs+3)^(0+128),7
  6161     0233  1427               	bsf	___flmul@prod^(0+128),0
  6162     0234  3001               	movlw	1
  6163     0235                     u5305:
  6164     0235  35A2               	lslf	___flmul@grs^(0+128),f
  6165     0236  0DA3               	rlf	(___flmul@grs+1)^(0+128),f
  6166     0237  0DA4               	rlf	(___flmul@grs+2)^(0+128),f
  6167     0238  0DA5               	rlf	(___flmul@grs+3)^(0+128),f
  6168     0239  0B89               	decfsz	9,f
  6169     023A  2A35               	goto	u5305
  6170     023B  30FF               	movlw	255
  6171     023C  07AB               	addwf	___flmul@temp^(0+128),f
  6172     023D  30FF               	movlw	255
  6173     023E  3DAC               	addwfc	(___flmul@temp+1)^(0+128),f
  6174     023F  2A29               	goto	l4376
  6175     0240                     l4378:
  6176     0240  01A1               	clrf	___flmul@aexp^(0+128)
  6177     0241  1FA5               	btfss	(___flmul@grs+3)^(0+128),7
  6178     0242  2A62               	goto	l4388
  6179     0243  30FF               	movlw	255
  6180     0244  0522               	andwf	___flmul@grs^(0+128),w
  6181     0245  0020               	movlb	0	; select bank0
  6182     0246  00E4               	movwf	??___flmul
  6183     0247  30FF               	movlw	255
  6184     0248  0021               	movlb	1	; select bank1
  6185     0249  0523               	andwf	(___flmul@grs+1)^(0+128),w
  6186     024A  0020               	movlb	0	; select bank0
  6187     024B  00E5               	movwf	??___flmul+1
  6188     024C  30FF               	movlw	255
  6189     024D  0021               	movlb	1	; select bank1
  6190     024E  0524               	andwf	(___flmul@grs+2)^(0+128),w
  6191     024F  0020               	movlb	0	; select bank0
  6192     0250  00E6               	movwf	??___flmul+2
  6193     0251  307F               	movlw	127
  6194     0252  0021               	movlb	1	; select bank1
  6195     0253  0525               	andwf	(___flmul@grs+3)^(0+128),w
  6196     0254  0020               	movlb	0	; select bank0
  6197     0255  00E7               	movwf	??___flmul+3
  6198     0256  0867               	movf	??___flmul+3,w
  6199     0257  0466               	iorwf	??___flmul+2,w
  6200     0258  0465               	iorwf	??___flmul+1,w
  6201     0259  0464               	iorwf	??___flmul,w
  6202     025A  1D03               	btfss	3,2
  6203     025B  2A5F               	goto	l4384
  6204     025C  0021               	movlb	1	; select bank1
  6205     025D  1C27               	btfss	___flmul@prod^(0+128),0
  6206     025E  2A62               	goto	l4388
  6207     025F                     l4384:
  6208     025F  0021               	movlb	1	; select bank1
  6209     0260  01A1               	clrf	___flmul@aexp^(0+128)
  6210     0261  0AA1               	incf	___flmul@aexp^(0+128),f
  6211     0262                     l4388:
  6212     0262  0821               	movf	___flmul@aexp^(0+128),w
  6213     0263  1903               	btfsc	3,2
  6214     0264  2A99               	goto	l4398
  6215     0265  3001               	movlw	1
  6216     0266  07A7               	addwf	___flmul@prod^(0+128),f
  6217     0267  3000               	movlw	0
  6218     0268  3DA8               	addwfc	(___flmul@prod+1)^(0+128),f
  6219     0269  3000               	movlw	0
  6220     026A  3DA9               	addwfc	(___flmul@prod+2)^(0+128),f
  6221     026B  3000               	movlw	0
  6222     026C  3DAA               	addwfc	(___flmul@prod+3)^(0+128),f
  6223     026D  1C2A               	btfss	(___flmul@prod+3)^(0+128),0
  6224     026E  2A99               	goto	l4398
  6225     026F  0827               	movf	___flmul@prod^(0+128),w
  6226     0270  0020               	movlb	0	; select bank0
  6227     0271  00E4               	movwf	??___flmul
  6228     0272  0021               	movlb	1	; select bank1
  6229     0273  0828               	movf	(___flmul@prod+1)^(0+128),w
  6230     0274  0020               	movlb	0	; select bank0
  6231     0275  00E5               	movwf	??___flmul+1
  6232     0276  0021               	movlb	1	; select bank1
  6233     0277  0829               	movf	(___flmul@prod+2)^(0+128),w
  6234     0278  0020               	movlb	0	; select bank0
  6235     0279  00E6               	movwf	??___flmul+2
  6236     027A  0021               	movlb	1	; select bank1
  6237     027B  082A               	movf	(___flmul@prod+3)^(0+128),w
  6238     027C  0020               	movlb	0	; select bank0
  6239     027D  00E7               	movwf	??___flmul+3
  6240     027E  3001               	movlw	1
  6241     027F  00E8               	movwf	??___flmul+4
  6242     0280                     u5375:
  6243     0280  37E7               	asrf	??___flmul+3,f
  6244     0281  0CE6               	rrf	??___flmul+2,f
  6245     0282  0CE5               	rrf	??___flmul+1,f
  6246     0283  0CE4               	rrf	??___flmul,f
  6247     0284  0BE8               	decfsz	??___flmul+4,f
  6248     0285  2A80               	goto	u5375
  6249     0286  0867               	movf	??___flmul+3,w
  6250     0287  0021               	movlb	1	; select bank1
  6251     0288  00AA               	movwf	(___flmul@prod+3)^(0+128)
  6252     0289  0020               	movlb	0	; select bank0
  6253     028A  0866               	movf	??___flmul+2,w
  6254     028B  0021               	movlb	1	; select bank1
  6255     028C  00A9               	movwf	(___flmul@prod+2)^(0+128)
  6256     028D  0020               	movlb	0	; select bank0
  6257     028E  0865               	movf	??___flmul+1,w
  6258     028F  0021               	movlb	1	; select bank1
  6259     0290  00A8               	movwf	(___flmul@prod+1)^(0+128)
  6260     0291  0020               	movlb	0	; select bank0
  6261     0292  0864               	movf	??___flmul,w
  6262     0293  0021               	movlb	1	; select bank1
  6263     0294  00A7               	movwf	___flmul@prod^(0+128)
  6264     0295  3001               	movlw	1
  6265     0296  07AB               	addwf	___flmul@temp^(0+128),f
  6266     0297  3000               	movlw	0
  6267     0298  3DAC               	addwfc	(___flmul@temp+1)^(0+128),f
  6268     0299                     l4398:
  6269     0299  082C               	movf	(___flmul@temp+1)^(0+128),w
  6270     029A  3A80               	xorlw	128
  6271     029B  0020               	movlb	0	; select bank0
  6272     029C  00E4               	movwf	??___flmul
  6273     029D  3080               	movlw	128
  6274     029E  0264               	subwf	??___flmul,w
  6275     029F  1D03               	skipz
  6276     02A0  2AA4               	goto	u5385
  6277     02A1  30FF               	movlw	255
  6278     02A2  0021               	movlb	1	; select bank1
  6279     02A3  022B               	subwf	___flmul@temp^(0+128),w
  6280     02A4                     u5385:
  6281     02A4  1C03               	skipc
  6282     02A5  2AB0               	goto	l4402
  6283     02A6  307F               	movlw	127
  6284     02A7  0021               	movlb	1	; select bank1
  6285     02A8  00AA               	movwf	(___flmul@prod+3)^(0+128)
  6286     02A9  3080               	movlw	128
  6287     02AA  00A9               	movwf	(___flmul@prod+2)^(0+128)
  6288     02AB  3000               	movlw	0
  6289     02AC  00A8               	movwf	(___flmul@prod+1)^(0+128)
  6290     02AD  3000               	movlw	0
  6291     02AE  00A7               	movwf	___flmul@prod^(0+128)
  6292     02AF  2AD8               	goto	l1249
  6293     02B0                     l4402:
  6294     02B0  0021               	movlb	1	; select bank1
  6295     02B1  082C               	movf	(___flmul@temp+1)^(0+128),w
  6296     02B2  3A80               	xorlw	128
  6297     02B3  0020               	movlb	0	; select bank0
  6298     02B4  00E4               	movwf	??___flmul
  6299     02B5  3080               	movlw	128
  6300     02B6  0264               	subwf	??___flmul,w
  6301     02B7  1D03               	skipz
  6302     02B8  2ABC               	goto	u5395
  6303     02B9  3001               	movlw	1
  6304     02BA  0021               	movlb	1	; select bank1
  6305     02BB  022B               	subwf	___flmul@temp^(0+128),w
  6306     02BC                     u5395:
  6307     02BC  1803               	skipnc
  6308     02BD  2AC9               	goto	l4408
  6309     02BE  3000               	movlw	0
  6310     02BF  0021               	movlb	1	; select bank1
  6311     02C0  00AA               	movwf	(___flmul@prod+3)^(0+128)
  6312     02C1  3000               	movlw	0
  6313     02C2  00A9               	movwf	(___flmul@prod+2)^(0+128)
  6314     02C3  3000               	movlw	0
  6315     02C4  00A8               	movwf	(___flmul@prod+1)^(0+128)
  6316     02C5  3000               	movlw	0
  6317     02C6  00A7               	movwf	___flmul@prod^(0+128)
  6318     02C7  01A0               	clrf	___flmul@sign^(0+128)
  6319     02C8  2AD8               	goto	l1249
  6320     02C9                     l4408:
  6321     02C9  0021               	movlb	1	; select bank1
  6322     02CA  082B               	movf	___flmul@temp^(0+128),w
  6323     02CB  00A6               	movwf	___flmul@bexp^(0+128)
  6324     02CC  30FF               	movlw	255
  6325     02CD  05A7               	andwf	___flmul@prod^(0+128),f
  6326     02CE  30FF               	movlw	255
  6327     02CF  05A8               	andwf	(___flmul@prod+1)^(0+128),f
  6328     02D0  307F               	movlw	127
  6329     02D1  05A9               	andwf	(___flmul@prod+2)^(0+128),f
  6330     02D2  3000               	movlw	0
  6331     02D3  05AA               	andwf	(___flmul@prod+3)^(0+128),f
  6332     02D4  1826               	btfsc	___flmul@bexp^(0+128),0
  6333     02D5  17A9               	bsf	(___flmul@prod^(0+128)+2),7
  6334     02D6  3626               	lsrf	___flmul@bexp^(0+128),w
  6335     02D7  00AA               	movwf	(___flmul@prod^(0+128)+3)
  6336     02D8                     l1249:
  6337     02D8  0820               	movf	___flmul@sign^(0+128),w
  6338     02D9  0020               	movlb	0	; select bank0
  6339     02DA  00E4               	movwf	??___flmul
  6340     02DB  0864               	movf	??___flmul,w
  6341     02DC  0021               	movlb	1	; select bank1
  6342     02DD  04AA               	iorwf	(___flmul@prod^(0+128)+3),f
  6343     02DE  082A               	movf	(___flmul@prod+3)^(0+128),w
  6344     02DF  0020               	movlb	0	; select bank0
  6345     02E0  00DF               	movwf	?___flmul+3
  6346     02E1  0021               	movlb	1	; select bank1
  6347     02E2  0829               	movf	(___flmul@prod+2)^(0+128),w
  6348     02E3  0020               	movlb	0	; select bank0
  6349     02E4  00DE               	movwf	?___flmul+2
  6350     02E5  0021               	movlb	1	; select bank1
  6351     02E6  0828               	movf	(___flmul@prod+1)^(0+128),w
  6352     02E7  0020               	movlb	0	; select bank0
  6353     02E8  00DD               	movwf	?___flmul+1
  6354     02E9  0021               	movlb	1	; select bank1
  6355     02EA  0827               	movf	___flmul@prod^(0+128),w
  6356     02EB  0020               	movlb	0	; select bank0
  6357     02EC  00DC               	movwf	?___flmul
  6358     02ED  0008               	return
  6359     02EE                     __end_of___flmul:
  6360                           
  6361                           	psect	text11
  6362     0853                     __ptext11:	
  6363 ;; *************** function __Umul8_16 *****************
  6364 ;; Defined at:
  6365 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul8_16.c"
  6366 ;; Parameters:    Size  Location     Type
  6367 ;;  multiplier      1    wreg     unsigned char 
  6368 ;;  multiplicand    1    4[COMMON] unsigned char 
  6369 ;; Auto vars:     Size  Location     Type
  6370 ;;  multiplier      1    6[BANK0 ] unsigned char 
  6371 ;;  word_mpld       2    4[BANK0 ] unsigned int 
  6372 ;;  product         2    2[BANK0 ] unsigned int 
  6373 ;; Return value:  Size  Location     Type
  6374 ;;                  2    4[COMMON] unsigned int 
  6375 ;; Registers used:
  6376 ;;		wreg, status,2, status,0
  6377 ;; Tracked objects:
  6378 ;;		On entry : 0/0
  6379 ;;		On exit  : 0/0
  6380 ;;		Unchanged: 0/0
  6381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6382 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6383 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6384 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6385 ;;      Totals:         2       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6386 ;;Total ram usage:        9 bytes
  6387 ;; Hardware stack levels used: 1
  6388 ;; Hardware stack levels required when called: 5
  6389 ;; This function calls:
  6390 ;;		Nothing
  6391 ;; This function is called by:
  6392 ;;		___flmul
  6393 ;; This function uses a non-reentrant model
  6394 ;;
  6395                           
  6396     0853                     __Umul8_16:	
  6397                           ;psect for function __Umul8_16
  6398                           
  6399                           
  6400                           ;incstack = 0
  6401                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6402                           ;__Umul8_16@multiplier stored from wreg
  6403     0853  0020               	movlb	0	; select bank0
  6404     0854  00A6               	movwf	__Umul8_16@multiplier
  6405     0855  01A2               	clrf	__Umul8_16@product
  6406     0856  01A3               	clrf	__Umul8_16@product+1
  6407     0857  0874               	movf	__Umul8_16@multiplicand,w
  6408     0858  00A0               	movwf	??__Umul8_16
  6409     0859  01A1               	clrf	??__Umul8_16+1
  6410     085A  0820               	movf	??__Umul8_16,w
  6411     085B  00A4               	movwf	__Umul8_16@word_mpld
  6412     085C  0821               	movf	??__Umul8_16+1,w
  6413     085D  00A5               	movwf	__Umul8_16@word_mpld+1
  6414     085E                     l4084:
  6415     085E  1C26               	btfss	__Umul8_16@multiplier,0
  6416     085F  2864               	goto	l1256
  6417     0860  0824               	movf	__Umul8_16@word_mpld,w
  6418     0861  07A2               	addwf	__Umul8_16@product,f
  6419     0862  0825               	movf	__Umul8_16@word_mpld+1,w
  6420     0863  3DA3               	addwfc	__Umul8_16@product+1,f
  6421     0864                     l1256:
  6422     0864  3001               	movlw	1
  6423     0865                     u4785:
  6424     0865  35A4               	lslf	__Umul8_16@word_mpld,f
  6425     0866  0DA5               	rlf	__Umul8_16@word_mpld+1,f
  6426     0867  0B89               	decfsz	9,f
  6427     0868  2865               	goto	u4785
  6428     0869  1003               	clrc
  6429     086A  0CA6               	rrf	__Umul8_16@multiplier,f
  6430     086B  0826               	movf	__Umul8_16@multiplier,w
  6431     086C  1D03               	btfss	3,2
  6432     086D  285E               	goto	l4084
  6433     086E  0823               	movf	__Umul8_16@product+1,w
  6434     086F  00F5               	movwf	?__Umul8_16+1
  6435     0870  0822               	movf	__Umul8_16@product,w
  6436     0871  00F4               	movwf	?__Umul8_16
  6437     0872  0008               	return
  6438     0873                     __end_of__Umul8_16:
  6439                           
  6440                           	psect	text12
  6441     0A3C                     __ptext12:	
  6442 ;; *************** function ___flge *****************
  6443 ;; Defined at:
  6444 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flge.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;  ff1             4    0[BANK0 ] unsigned int 
  6447 ;;  ff2             4    4[BANK0 ] unsigned int 
  6448 ;; Auto vars:     Size  Location     Type
  6449 ;;		None
  6450 ;; Return value:  Size  Location     Type
  6451 ;;		None               void
  6452 ;; Registers used:
  6453 ;;		wreg, status,2, status,0
  6454 ;; Tracked objects:
  6455 ;;		On entry : 0/0
  6456 ;;		On exit  : 0/0
  6457 ;;		Unchanged: 0/0
  6458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6459 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6461 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6462 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6463 ;;Total ram usage:       12 bytes
  6464 ;; Hardware stack levels used: 1
  6465 ;; Hardware stack levels required when called: 5
  6466 ;; This function calls:
  6467 ;;		Nothing
  6468 ;; This function is called by:
  6469 ;;		_my_log
  6470 ;; This function uses a non-reentrant model
  6471 ;;
  6472                           
  6473     0A3C                     ___flge:	
  6474                           ;psect for function ___flge
  6475                           
  6476                           
  6477                           ;incstack = 0
  6478                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6479     0A3C  3000               	movlw	0
  6480     0A3D  0020               	movlb	0	; select bank0
  6481     0A3E  0520               	andwf	___flge@ff1,w
  6482     0A3F  00A8               	movwf	??___flge
  6483     0A40  3000               	movlw	0
  6484     0A41  0521               	andwf	___flge@ff1+1,w
  6485     0A42  00A9               	movwf	??___flge+1
  6486     0A43  3080               	movlw	128
  6487     0A44  0522               	andwf	___flge@ff1+2,w
  6488     0A45  00AA               	movwf	??___flge+2
  6489     0A46  307F               	movlw	127
  6490     0A47  0523               	andwf	___flge@ff1+3,w
  6491     0A48  00AB               	movwf	??___flge+3
  6492     0A49  082B               	movf	??___flge+3,w
  6493     0A4A  042A               	iorwf	??___flge+2,w
  6494     0A4B  0429               	iorwf	??___flge+1,w
  6495     0A4C  0428               	iorwf	??___flge,w
  6496     0A4D  1D03               	skipz
  6497     0A4E  2A57               	goto	l1018
  6498     0A4F  3000               	movlw	0
  6499     0A50  00A3               	movwf	___flge@ff1+3
  6500     0A51  3000               	movlw	0
  6501     0A52  00A2               	movwf	___flge@ff1+2
  6502     0A53  3000               	movlw	0
  6503     0A54  00A1               	movwf	___flge@ff1+1
  6504     0A55  3000               	movlw	0
  6505     0A56  00A0               	movwf	___flge@ff1
  6506     0A57                     l1018:
  6507     0A57  3000               	movlw	0
  6508     0A58  0524               	andwf	___flge@ff2,w
  6509     0A59  00A8               	movwf	??___flge
  6510     0A5A  3000               	movlw	0
  6511     0A5B  0525               	andwf	___flge@ff2+1,w
  6512     0A5C  00A9               	movwf	??___flge+1
  6513     0A5D  3080               	movlw	128
  6514     0A5E  0526               	andwf	___flge@ff2+2,w
  6515     0A5F  00AA               	movwf	??___flge+2
  6516     0A60  307F               	movlw	127
  6517     0A61  0527               	andwf	___flge@ff2+3,w
  6518     0A62  00AB               	movwf	??___flge+3
  6519     0A63  082B               	movf	??___flge+3,w
  6520     0A64  042A               	iorwf	??___flge+2,w
  6521     0A65  0429               	iorwf	??___flge+1,w
  6522     0A66  0428               	iorwf	??___flge,w
  6523     0A67  1D03               	skipz
  6524     0A68  2A71               	goto	l4112
  6525     0A69  3000               	movlw	0
  6526     0A6A  00A7               	movwf	___flge@ff2+3
  6527     0A6B  3000               	movlw	0
  6528     0A6C  00A6               	movwf	___flge@ff2+2
  6529     0A6D  3000               	movlw	0
  6530     0A6E  00A5               	movwf	___flge@ff2+1
  6531     0A6F  3000               	movlw	0
  6532     0A70  00A4               	movwf	___flge@ff2
  6533     0A71                     l4112:
  6534     0A71  1FA3               	btfss	___flge@ff1+3,7
  6535     0A72  2A8B               	goto	l4116
  6536     0A73  3000               	movlw	0
  6537     0A74  00A8               	movwf	??___flge
  6538     0A75  3000               	movlw	0
  6539     0A76  00A9               	movwf	??___flge+1
  6540     0A77  3000               	movlw	0
  6541     0A78  00AA               	movwf	??___flge+2
  6542     0A79  3080               	movlw	128
  6543     0A7A  00AB               	movwf	??___flge+3
  6544     0A7B  0820               	movf	___flge@ff1,w
  6545     0A7C  02A8               	subwf	??___flge,f
  6546     0A7D  0821               	movf	___flge@ff1+1,w
  6547     0A7E  3BA9               	subwfb	??___flge+1,f
  6548     0A7F  0822               	movf	___flge@ff1+2,w
  6549     0A80  3BAA               	subwfb	??___flge+2,f
  6550     0A81  0823               	movf	___flge@ff1+3,w
  6551     0A82  3BAB               	subwfb	??___flge+3,f
  6552     0A83  082B               	movf	??___flge+3,w
  6553     0A84  00A3               	movwf	___flge@ff1+3
  6554     0A85  082A               	movf	??___flge+2,w
  6555     0A86  00A2               	movwf	___flge@ff1+2
  6556     0A87  0829               	movf	??___flge+1,w
  6557     0A88  00A1               	movwf	___flge@ff1+1
  6558     0A89  0828               	movf	??___flge,w
  6559     0A8A  00A0               	movwf	___flge@ff1
  6560     0A8B                     l4116:
  6561     0A8B  1FA7               	btfss	___flge@ff2+3,7
  6562     0A8C  2AA5               	goto	l1021
  6563     0A8D  3000               	movlw	0
  6564     0A8E  00A8               	movwf	??___flge
  6565     0A8F  3000               	movlw	0
  6566     0A90  00A9               	movwf	??___flge+1
  6567     0A91  3000               	movlw	0
  6568     0A92  00AA               	movwf	??___flge+2
  6569     0A93  3080               	movlw	128
  6570     0A94  00AB               	movwf	??___flge+3
  6571     0A95  0824               	movf	___flge@ff2,w
  6572     0A96  02A8               	subwf	??___flge,f
  6573     0A97  0825               	movf	___flge@ff2+1,w
  6574     0A98  3BA9               	subwfb	??___flge+1,f
  6575     0A99  0826               	movf	___flge@ff2+2,w
  6576     0A9A  3BAA               	subwfb	??___flge+2,f
  6577     0A9B  0827               	movf	___flge@ff2+3,w
  6578     0A9C  3BAB               	subwfb	??___flge+3,f
  6579     0A9D  082B               	movf	??___flge+3,w
  6580     0A9E  00A7               	movwf	___flge@ff2+3
  6581     0A9F  082A               	movf	??___flge+2,w
  6582     0AA0  00A6               	movwf	___flge@ff2+2
  6583     0AA1  0829               	movf	??___flge+1,w
  6584     0AA2  00A5               	movwf	___flge@ff2+1
  6585     0AA3  0828               	movf	??___flge,w
  6586     0AA4  00A4               	movwf	___flge@ff2
  6587     0AA5                     l1021:
  6588     0AA5  3080               	movlw	128
  6589     0AA6  06A3               	xorwf	___flge@ff1+3,f
  6590     0AA7  3080               	movlw	128
  6591     0AA8  06A7               	xorwf	___flge@ff2+3,f
  6592     0AA9  0827               	movf	___flge@ff2+3,w
  6593     0AAA  0223               	subwf	___flge@ff1+3,w
  6594     0AAB  1D03               	skipz
  6595     0AAC  0008               	return
  6596     0AAD  0826               	movf	___flge@ff2+2,w
  6597     0AAE  0222               	subwf	___flge@ff1+2,w
  6598     0AAF  1D03               	skipz
  6599     0AB0  0008               	return
  6600     0AB1  0825               	movf	___flge@ff2+1,w
  6601     0AB2  0221               	subwf	___flge@ff1+1,w
  6602     0AB3  1D03               	skipz
  6603     0AB4  0008               	return
  6604     0AB5  0824               	movf	___flge@ff2,w
  6605     0AB6  0220               	subwf	___flge@ff1,w
  6606     0AB7  0008               	return
  6607     0AB8                     __end_of___flge:
  6608                           
  6609                           	psect	text13
  6610     0CDE                     __ptext13:	
  6611 ;; *************** function ___fldiv *****************
  6612 ;; Defined at:
  6613 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  6614 ;; Parameters:    Size  Location     Type
  6615 ;;  a               4   14[BANK0 ] unsigned int 
  6616 ;;  b               4   18[BANK0 ] unsigned int 
  6617 ;; Auto vars:     Size  Location     Type
  6618 ;;  grs             4   34[BANK0 ] unsigned long 
  6619 ;;  rem             4   27[BANK0 ] unsigned long 
  6620 ;;  new_exp         2   32[BANK0 ] int 
  6621 ;;  aexp            1   39[BANK0 ] unsigned char 
  6622 ;;  bexp            1   38[BANK0 ] unsigned char 
  6623 ;;  sign            1   31[BANK0 ] unsigned char 
  6624 ;; Return value:  Size  Location     Type
  6625 ;;                  4   14[BANK0 ] unsigned char 
  6626 ;; Registers used:
  6627 ;;		wreg, status,2, status,0
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6633 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6634 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6635 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6636 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6637 ;;Total ram usage:       26 bytes
  6638 ;; Hardware stack levels used: 1
  6639 ;; Hardware stack levels required when called: 5
  6640 ;; This function calls:
  6641 ;;		Nothing
  6642 ;; This function is called by:
  6643 ;;		__ReadSensor
  6644 ;;		_my_log
  6645 ;; This function uses a non-reentrant model
  6646 ;;
  6647                           
  6648     0CDE                     ___fldiv:	
  6649                           ;psect for function ___fldiv
  6650                           
  6651                           
  6652                           ;incstack = 0
  6653                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  6654     0CDE  0020               	movlb	0	; select bank0
  6655     0CDF  0835               	movf	___fldiv@b+3,w
  6656     0CE0  3980               	andlw	128
  6657     0CE1  00BF               	movwf	___fldiv@sign
  6658     0CE2  3535               	lslf	___fldiv@b+3,w
  6659     0CE3  00C6               	movwf	___fldiv@bexp
  6660     0CE4  1BB4               	btfsc	___fldiv@b+2,7
  6661     0CE5  1446               	bsf	___fldiv@bexp,0
  6662     0CE6  0846               	movf	___fldiv@bexp,w
  6663     0CE7  1903               	btfsc	3,2
  6664     0CE8  2CF7               	goto	l4158
  6665     0CE9  0A46               	incf	___fldiv@bexp,w
  6666     0CEA  1D03               	btfss	3,2
  6667     0CEB  2CF4               	goto	l4154
  6668     0CEC  3000               	movlw	0
  6669     0CED  00B5               	movwf	___fldiv@b+3
  6670     0CEE  3000               	movlw	0
  6671     0CEF  00B4               	movwf	___fldiv@b+2
  6672     0CF0  3000               	movlw	0
  6673     0CF1  00B3               	movwf	___fldiv@b+1
  6674     0CF2  3000               	movlw	0
  6675     0CF3  00B2               	movwf	___fldiv@b
  6676     0CF4                     l4154:
  6677     0CF4  17B4               	bsf	___fldiv@b+2,7
  6678     0CF5  01B5               	clrf	___fldiv@b+3
  6679     0CF6  2CFF               	goto	l4160
  6680     0CF7                     l4158:
  6681     0CF7  3000               	movlw	0
  6682     0CF8  00B5               	movwf	___fldiv@b+3
  6683     0CF9  3000               	movlw	0
  6684     0CFA  00B4               	movwf	___fldiv@b+2
  6685     0CFB  3000               	movlw	0
  6686     0CFC  00B3               	movwf	___fldiv@b+1
  6687     0CFD  3000               	movlw	0
  6688     0CFE  00B2               	movwf	___fldiv@b
  6689     0CFF                     l4160:
  6690     0CFF  0831               	movf	___fldiv@a+3,w
  6691     0D00  3980               	andlw	128
  6692     0D01  00B6               	movwf	??___fldiv
  6693     0D02  0836               	movf	??___fldiv,w
  6694     0D03  06BF               	xorwf	___fldiv@sign,f
  6695     0D04  3531               	lslf	___fldiv@a+3,w
  6696     0D05  00C7               	movwf	___fldiv@aexp
  6697     0D06  1BB0               	btfsc	___fldiv@a+2,7
  6698     0D07  1447               	bsf	___fldiv@aexp,0
  6699     0D08  0847               	movf	___fldiv@aexp,w
  6700     0D09  1903               	btfsc	3,2
  6701     0D0A  2D19               	goto	l4178
  6702     0D0B  0A47               	incf	___fldiv@aexp,w
  6703     0D0C  1D03               	btfss	3,2
  6704     0D0D  2D16               	goto	l4174
  6705     0D0E  3000               	movlw	0
  6706     0D0F  00B1               	movwf	___fldiv@a+3
  6707     0D10  3000               	movlw	0
  6708     0D11  00B0               	movwf	___fldiv@a+2
  6709     0D12  3000               	movlw	0
  6710     0D13  00AF               	movwf	___fldiv@a+1
  6711     0D14  3000               	movlw	0
  6712     0D15  00AE               	movwf	___fldiv@a
  6713     0D16                     l4174:
  6714     0D16  17B0               	bsf	___fldiv@a+2,7
  6715     0D17  01B1               	clrf	___fldiv@a+3
  6716     0D18  2D21               	goto	l1197
  6717     0D19                     l4178:
  6718     0D19  3000               	movlw	0
  6719     0D1A  00B1               	movwf	___fldiv@a+3
  6720     0D1B  3000               	movlw	0
  6721     0D1C  00B0               	movwf	___fldiv@a+2
  6722     0D1D  3000               	movlw	0
  6723     0D1E  00AF               	movwf	___fldiv@a+1
  6724     0D1F  3000               	movlw	0
  6725     0D20  00AE               	movwf	___fldiv@a
  6726     0D21                     l1197:
  6727     0D21  0831               	movf	___fldiv@a+3,w
  6728     0D22  0430               	iorwf	___fldiv@a+2,w
  6729     0D23  042F               	iorwf	___fldiv@a+1,w
  6730     0D24  042E               	iorwf	___fldiv@a,w
  6731     0D25  1D03               	skipz
  6732     0D26  2D40               	goto	l4188
  6733     0D27  3000               	movlw	0
  6734     0D28  00B5               	movwf	___fldiv@b+3
  6735     0D29  3000               	movlw	0
  6736     0D2A  00B4               	movwf	___fldiv@b+2
  6737     0D2B  3000               	movlw	0
  6738     0D2C  00B3               	movwf	___fldiv@b+1
  6739     0D2D  3000               	movlw	0
  6740     0D2E  00B2               	movwf	___fldiv@b
  6741     0D2F  3080               	movlw	128
  6742     0D30  04B4               	iorwf	___fldiv@b+2,f
  6743     0D31  307F               	movlw	127
  6744     0D32  04B5               	iorwf	___fldiv@b+3,f
  6745     0D33                     L4:
  6746     0D33  083F               	movf	___fldiv@sign,w
  6747     0D34  00B6               	movwf	??___fldiv
  6748     0D35  0836               	movf	??___fldiv,w
  6749     0D36  04B5               	iorwf	___fldiv@b+3,f
  6750     0D37  0835               	movf	___fldiv@b+3,w
  6751     0D38  00B1               	movwf	?___fldiv+3
  6752     0D39  0834               	movf	___fldiv@b+2,w
  6753     0D3A  00B0               	movwf	?___fldiv+2
  6754     0D3B  0833               	movf	___fldiv@b+1,w
  6755     0D3C  00AF               	movwf	?___fldiv+1
  6756     0D3D  0832               	movf	___fldiv@b,w
  6757     0D3E  00AE               	movwf	?___fldiv
  6758     0D3F  0008               	return
  6759     0D40                     l4188:
  6760     0D40  0846               	movf	___fldiv@bexp,w
  6761     0D41  1D03               	btfss	3,2
  6762     0D42  2D4C               	goto	l4194
  6763     0D43  3000               	movlw	0
  6764     0D44  00B1               	movwf	?___fldiv+3
  6765     0D45  3000               	movlw	0
  6766     0D46  00B0               	movwf	?___fldiv+2
  6767     0D47  3000               	movlw	0
  6768     0D48  00AF               	movwf	?___fldiv+1
  6769     0D49  3000               	movlw	0
  6770     0D4A  00AE               	movwf	?___fldiv
  6771     0D4B  0008               	return
  6772     0D4C                     l4194:
  6773     0D4C  0846               	movf	___fldiv@bexp,w
  6774     0D4D  00B6               	movwf	??___fldiv
  6775     0D4E  01B7               	clrf	??___fldiv+1
  6776     0D4F  0837               	movf	??___fldiv+1,w
  6777     0D50  00B9               	movwf	??___fldiv+3
  6778     0D51  0847               	movf	___fldiv@aexp,w
  6779     0D52  0236               	subwf	??___fldiv,w
  6780     0D53  00B8               	movwf	??___fldiv+2
  6781     0D54  1C03               	skipc
  6782     0D55  03B9               	decf	??___fldiv+3,f
  6783     0D56  0838               	movf	??___fldiv+2,w
  6784     0D57  3E7F               	addlw	127
  6785     0D58  00C0               	movwf	___fldiv@new_exp
  6786     0D59  3000               	movlw	0
  6787     0D5A  3D39               	addwfc	??___fldiv+3,w
  6788     0D5B  00C1               	movwf	___fldiv@new_exp+1
  6789     0D5C  0835               	movf	___fldiv@b+3,w
  6790     0D5D  00BE               	movwf	___fldiv@rem+3
  6791     0D5E  0834               	movf	___fldiv@b+2,w
  6792     0D5F  00BD               	movwf	___fldiv@rem+2
  6793     0D60  0833               	movf	___fldiv@b+1,w
  6794     0D61  00BC               	movwf	___fldiv@rem+1
  6795     0D62  0832               	movf	___fldiv@b,w
  6796     0D63  00BB               	movwf	___fldiv@rem
  6797     0D64  3000               	movlw	0
  6798     0D65  00B5               	movwf	___fldiv@b+3
  6799     0D66  3000               	movlw	0
  6800     0D67  00B4               	movwf	___fldiv@b+2
  6801     0D68  3000               	movlw	0
  6802     0D69  00B3               	movwf	___fldiv@b+1
  6803     0D6A  3000               	movlw	0
  6804     0D6B  00B2               	movwf	___fldiv@b
  6805     0D6C  3000               	movlw	0
  6806     0D6D  00C5               	movwf	___fldiv@grs+3
  6807     0D6E  3000               	movlw	0
  6808     0D6F  00C4               	movwf	___fldiv@grs+2
  6809     0D70  3000               	movlw	0
  6810     0D71  00C3               	movwf	___fldiv@grs+1
  6811     0D72  3000               	movlw	0
  6812     0D73  00C2               	movwf	___fldiv@grs
  6813     0D74  01C7               	clrf	___fldiv@aexp
  6814     0D75                     l4222:
  6815     0D75  301A               	movlw	26
  6816     0D76  0247               	subwf	___fldiv@aexp,w
  6817     0D77  1803               	btfsc	3,0
  6818     0D78  2DB1               	goto	l4224
  6819     0D79  0847               	movf	___fldiv@aexp,w
  6820     0D7A  1903               	btfsc	3,2
  6821     0D7B  2D93               	goto	l4214
  6822     0D7C  3001               	movlw	1
  6823     0D7D                     u4955:
  6824     0D7D  35BB               	lslf	___fldiv@rem,f
  6825     0D7E  0DBC               	rlf	___fldiv@rem+1,f
  6826     0D7F  0DBD               	rlf	___fldiv@rem+2,f
  6827     0D80  0DBE               	rlf	___fldiv@rem+3,f
  6828     0D81  0B89               	decfsz	9,f
  6829     0D82  2D7D               	goto	u4955
  6830     0D83  3001               	movlw	1
  6831     0D84                     u4965:
  6832     0D84  35B2               	lslf	___fldiv@b,f
  6833     0D85  0DB3               	rlf	___fldiv@b+1,f
  6834     0D86  0DB4               	rlf	___fldiv@b+2,f
  6835     0D87  0DB5               	rlf	___fldiv@b+3,f
  6836     0D88  0B89               	decfsz	9,f
  6837     0D89  2D84               	goto	u4965
  6838     0D8A  1BC5               	btfsc	___fldiv@grs+3,7
  6839     0D8B  1432               	bsf	___fldiv@b,0
  6840     0D8C  3001               	movlw	1
  6841     0D8D                     u4985:
  6842     0D8D  35C2               	lslf	___fldiv@grs,f
  6843     0D8E  0DC3               	rlf	___fldiv@grs+1,f
  6844     0D8F  0DC4               	rlf	___fldiv@grs+2,f
  6845     0D90  0DC5               	rlf	___fldiv@grs+3,f
  6846     0D91  0B89               	decfsz	9,f
  6847     0D92  2D8D               	goto	u4985
  6848     0D93                     l4214:
  6849     0D93  0831               	movf	___fldiv@a+3,w
  6850     0D94  023E               	subwf	___fldiv@rem+3,w
  6851     0D95  1D03               	skipz
  6852     0D96  2DA1               	goto	u4995
  6853     0D97  0830               	movf	___fldiv@a+2,w
  6854     0D98  023D               	subwf	___fldiv@rem+2,w
  6855     0D99  1D03               	skipz
  6856     0D9A  2DA1               	goto	u4995
  6857     0D9B  082F               	movf	___fldiv@a+1,w
  6858     0D9C  023C               	subwf	___fldiv@rem+1,w
  6859     0D9D  1D03               	skipz
  6860     0D9E  2DA1               	goto	u4995
  6861     0D9F  082E               	movf	___fldiv@a,w
  6862     0DA0  023B               	subwf	___fldiv@rem,w
  6863     0DA1                     u4995:
  6864     0DA1  1C03               	skipc
  6865     0DA2  2DAC               	goto	l4220
  6866     0DA3  1745               	bsf	___fldiv@grs+3,6
  6867     0DA4  082E               	movf	___fldiv@a,w
  6868     0DA5  02BB               	subwf	___fldiv@rem,f
  6869     0DA6  082F               	movf	___fldiv@a+1,w
  6870     0DA7  3BBC               	subwfb	___fldiv@rem+1,f
  6871     0DA8  0830               	movf	___fldiv@a+2,w
  6872     0DA9  3BBD               	subwfb	___fldiv@rem+2,f
  6873     0DAA  0831               	movf	___fldiv@a+3,w
  6874     0DAB  3BBE               	subwfb	___fldiv@rem+3,f
  6875     0DAC                     l4220:
  6876     0DAC  3001               	movlw	1
  6877     0DAD  00B6               	movwf	??___fldiv
  6878     0DAE  0836               	movf	??___fldiv,w
  6879     0DAF  07C7               	addwf	___fldiv@aexp,f
  6880     0DB0  2D75               	goto	l4222
  6881     0DB1                     l4224:
  6882     0DB1  083E               	movf	___fldiv@rem+3,w
  6883     0DB2  043D               	iorwf	___fldiv@rem+2,w
  6884     0DB3  043C               	iorwf	___fldiv@rem+1,w
  6885     0DB4  043B               	iorwf	___fldiv@rem,w
  6886     0DB5  1D03               	btfss	3,2
  6887     0DB6  1442               	bsf	___fldiv@grs,0
  6888     0DB7                     l4238:
  6889     0DB7  1BB4               	btfsc	___fldiv@b+2,7
  6890     0DB8  2DCE               	goto	l4240
  6891     0DB9  3001               	movlw	1
  6892     0DBA                     u5025:
  6893     0DBA  35B2               	lslf	___fldiv@b,f
  6894     0DBB  0DB3               	rlf	___fldiv@b+1,f
  6895     0DBC  0DB4               	rlf	___fldiv@b+2,f
  6896     0DBD  0DB5               	rlf	___fldiv@b+3,f
  6897     0DBE  0B89               	decfsz	9,f
  6898     0DBF  2DBA               	goto	u5025
  6899     0DC0  1BC5               	btfsc	___fldiv@grs+3,7
  6900     0DC1  1432               	bsf	___fldiv@b,0
  6901     0DC2  3001               	movlw	1
  6902     0DC3                     u5045:
  6903     0DC3  35C2               	lslf	___fldiv@grs,f
  6904     0DC4  0DC3               	rlf	___fldiv@grs+1,f
  6905     0DC5  0DC4               	rlf	___fldiv@grs+2,f
  6906     0DC6  0DC5               	rlf	___fldiv@grs+3,f
  6907     0DC7  0B89               	decfsz	9,f
  6908     0DC8  2DC3               	goto	u5045
  6909     0DC9  30FF               	movlw	255
  6910     0DCA  07C0               	addwf	___fldiv@new_exp,f
  6911     0DCB  30FF               	movlw	255
  6912     0DCC  3DC1               	addwfc	___fldiv@new_exp+1,f
  6913     0DCD  2DB7               	goto	l4238
  6914     0DCE                     l4240:
  6915     0DCE  01C7               	clrf	___fldiv@aexp
  6916     0DCF  1FC5               	btfss	___fldiv@grs+3,7
  6917     0DD0  2DE7               	goto	l4250
  6918     0DD1  30FF               	movlw	255
  6919     0DD2  0542               	andwf	___fldiv@grs,w
  6920     0DD3  00B6               	movwf	??___fldiv
  6921     0DD4  30FF               	movlw	255
  6922     0DD5  0543               	andwf	___fldiv@grs+1,w
  6923     0DD6  00B7               	movwf	??___fldiv+1
  6924     0DD7  30FF               	movlw	255
  6925     0DD8  0544               	andwf	___fldiv@grs+2,w
  6926     0DD9  00B8               	movwf	??___fldiv+2
  6927     0DDA  307F               	movlw	127
  6928     0DDB  0545               	andwf	___fldiv@grs+3,w
  6929     0DDC  00B9               	movwf	??___fldiv+3
  6930     0DDD  0839               	movf	??___fldiv+3,w
  6931     0DDE  0438               	iorwf	??___fldiv+2,w
  6932     0DDF  0437               	iorwf	??___fldiv+1,w
  6933     0DE0  0436               	iorwf	??___fldiv,w
  6934     0DE1  1903               	skipnz
  6935     0DE2  1832               	btfsc	___fldiv@b,0
  6936     0DE3  2DE5               	goto	l4246
  6937     0DE4  2DE7               	goto	l4250
  6938     0DE5                     l4246:
  6939     0DE5  01C7               	clrf	___fldiv@aexp
  6940     0DE6  0AC7               	incf	___fldiv@aexp,f
  6941     0DE7                     l4250:
  6942     0DE7  0847               	movf	___fldiv@aexp,w
  6943     0DE8  1903               	btfsc	3,2
  6944     0DE9  2E10               	goto	l4260
  6945     0DEA  3001               	movlw	1
  6946     0DEB  07B2               	addwf	___fldiv@b,f
  6947     0DEC  3000               	movlw	0
  6948     0DED  3DB3               	addwfc	___fldiv@b+1,f
  6949     0DEE  3000               	movlw	0
  6950     0DEF  3DB4               	addwfc	___fldiv@b+2,f
  6951     0DF0  3000               	movlw	0
  6952     0DF1  3DB5               	addwfc	___fldiv@b+3,f
  6953     0DF2  1C35               	btfss	___fldiv@b+3,0
  6954     0DF3  2E10               	goto	l4260
  6955     0DF4  0832               	movf	___fldiv@b,w
  6956     0DF5  00B6               	movwf	??___fldiv
  6957     0DF6  0833               	movf	___fldiv@b+1,w
  6958     0DF7  00B7               	movwf	??___fldiv+1
  6959     0DF8  0834               	movf	___fldiv@b+2,w
  6960     0DF9  00B8               	movwf	??___fldiv+2
  6961     0DFA  0835               	movf	___fldiv@b+3,w
  6962     0DFB  00B9               	movwf	??___fldiv+3
  6963     0DFC  3001               	movlw	1
  6964     0DFD  00BA               	movwf	??___fldiv+4
  6965     0DFE                     u5115:
  6966     0DFE  37B9               	asrf	??___fldiv+3,f
  6967     0DFF  0CB8               	rrf	??___fldiv+2,f
  6968     0E00  0CB7               	rrf	??___fldiv+1,f
  6969     0E01  0CB6               	rrf	??___fldiv,f
  6970     0E02  0BBA               	decfsz	??___fldiv+4,f
  6971     0E03  2DFE               	goto	u5115
  6972     0E04  0839               	movf	??___fldiv+3,w
  6973     0E05  00B5               	movwf	___fldiv@b+3
  6974     0E06  0838               	movf	??___fldiv+2,w
  6975     0E07  00B4               	movwf	___fldiv@b+2
  6976     0E08  0837               	movf	??___fldiv+1,w
  6977     0E09  00B3               	movwf	___fldiv@b+1
  6978     0E0A  0836               	movf	??___fldiv,w
  6979     0E0B  00B2               	movwf	___fldiv@b
  6980     0E0C  3001               	movlw	1
  6981     0E0D  07C0               	addwf	___fldiv@new_exp,f
  6982     0E0E  3000               	movlw	0
  6983     0E0F  3DC1               	addwfc	___fldiv@new_exp+1,f
  6984     0E10                     l4260:
  6985     0E10  0841               	movf	___fldiv@new_exp+1,w
  6986     0E11  3A80               	xorlw	128
  6987     0E12  00B6               	movwf	??___fldiv
  6988     0E13  3080               	movlw	128
  6989     0E14  0236               	subwf	??___fldiv,w
  6990     0E15  1D03               	skipz
  6991     0E16  2E19               	goto	u5125
  6992     0E17  30FF               	movlw	255
  6993     0E18  0240               	subwf	___fldiv@new_exp,w
  6994     0E19                     u5125:
  6995     0E19  1C03               	skipc
  6996     0E1A  2E28               	goto	l1218
  6997     0E1B  30FF               	movlw	255
  6998     0E1C  0020               	movlb	0	; select bank0
  6999     0E1D  00C0               	movwf	___fldiv@new_exp
  7000     0E1E  3000               	movlw	0
  7001     0E1F  00C1               	movwf	___fldiv@new_exp+1
  7002     0E20  3000               	movlw	0
  7003     0E21  00B5               	movwf	___fldiv@b+3
  7004     0E22  3000               	movlw	0
  7005     0E23  00B4               	movwf	___fldiv@b+2
  7006     0E24  3000               	movlw	0
  7007     0E25  00B3               	movwf	___fldiv@b+1
  7008     0E26  3000               	movlw	0
  7009     0E27  00B2               	movwf	___fldiv@b
  7010     0E28                     l1218:
  7011     0E28  0020               	movlb	0	; select bank0
  7012     0E29  0841               	movf	___fldiv@new_exp+1,w
  7013     0E2A  3A80               	xorlw	128
  7014     0E2B  00B6               	movwf	??___fldiv
  7015     0E2C  3080               	movlw	128
  7016     0E2D  0236               	subwf	??___fldiv,w
  7017     0E2E  1D03               	skipz
  7018     0E2F  2E32               	goto	u5135
  7019     0E30  3001               	movlw	1
  7020     0E31  0240               	subwf	___fldiv@new_exp,w
  7021     0E32                     u5135:
  7022     0E32  1803               	skipnc
  7023     0E33  2E40               	goto	l1219
  7024     0E34  0020               	movlb	0	; select bank0
  7025     0E35  01C0               	clrf	___fldiv@new_exp
  7026     0E36  01C1               	clrf	___fldiv@new_exp+1
  7027     0E37  3000               	movlw	0
  7028     0E38  00B5               	movwf	___fldiv@b+3
  7029     0E39  3000               	movlw	0
  7030     0E3A  00B4               	movwf	___fldiv@b+2
  7031     0E3B  3000               	movlw	0
  7032     0E3C  00B3               	movwf	___fldiv@b+1
  7033     0E3D  3000               	movlw	0
  7034     0E3E  00B2               	movwf	___fldiv@b
  7035     0E3F  01BF               	clrf	___fldiv@sign
  7036     0E40                     l1219:
  7037     0E40  0020               	movlb	0	; select bank0
  7038     0E41  0840               	movf	___fldiv@new_exp,w
  7039     0E42  00C6               	movwf	___fldiv@bexp
  7040     0E43  1C46               	btfss	___fldiv@bexp,0
  7041     0E44  2E47               	goto	l4274
  7042     0E45  17B4               	bsf	___fldiv@b+2,7
  7043     0E46  2E4B               	goto	l1221
  7044     0E47                     l4274:
  7045     0E47  307F               	movlw	127
  7046     0E48  00B6               	movwf	??___fldiv
  7047     0E49  0836               	movf	??___fldiv,w
  7048     0E4A  05B4               	andwf	___fldiv@b+2,f
  7049     0E4B                     l1221:
  7050     0E4B  3646               	lsrf	___fldiv@bexp,w
  7051     0E4C  00B5               	movwf	___fldiv@b+3
  7052     0E4D  2D33               	goto	L4
  7053     0E4E                     __end_of___fldiv:
  7054                           
  7055                           	psect	text14
  7056     0971                     __ptext14:	
  7057 ;; *************** function ___fltol *****************
  7058 ;; Defined at:
  7059 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  7060 ;; Parameters:    Size  Location     Type
  7061 ;;  f1              4    0[BANK0 ] unsigned char 
  7062 ;; Auto vars:     Size  Location     Type
  7063 ;;  exp1            1    5[COMMON] unsigned char 
  7064 ;;  sign1           1    4[COMMON] unsigned char 
  7065 ;; Return value:  Size  Location     Type
  7066 ;;                  4    0[BANK0 ] long 
  7067 ;; Registers used:
  7068 ;;		wreg, status,2, status,0
  7069 ;; Tracked objects:
  7070 ;;		On entry : 0/0
  7071 ;;		On exit  : 0/0
  7072 ;;		Unchanged: 0/0
  7073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7074 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7075 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7076 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7077 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7078 ;;Total ram usage:       10 bytes
  7079 ;; Hardware stack levels used: 1
  7080 ;; Hardware stack levels required when called: 5
  7081 ;; This function calls:
  7082 ;;		Nothing
  7083 ;; This function is called by:
  7084 ;;		__ReadSensor
  7085 ;; This function uses a non-reentrant model
  7086 ;;
  7087                           
  7088     0971                     ___fltol:	
  7089                           ;psect for function ___fltol
  7090                           
  7091                           
  7092                           ;incstack = 0
  7093                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7094     0971  1003               	clrc
  7095     0972  0020               	movlb	0	; select bank0
  7096     0973  0D22               	rlf	___fltol@f1+2,w
  7097     0974  0D23               	rlf	___fltol@f1+3,w
  7098     0975  00F5               	movwf	___fltol@exp1
  7099     0976  0875               	movf	___fltol@exp1,w
  7100     0977  1D03               	btfss	3,2
  7101     0978  2982               	goto	l4652
  7102     0979                     l4648:
  7103     0979  3000               	movlw	0
  7104     097A  00A3               	movwf	?___fltol+3
  7105     097B  3000               	movlw	0
  7106     097C  00A2               	movwf	?___fltol+2
  7107     097D  3000               	movlw	0
  7108     097E  00A1               	movwf	?___fltol+1
  7109     097F  3000               	movlw	0
  7110     0980  00A0               	movwf	?___fltol
  7111     0981  0008               	return
  7112     0982                     l4652:
  7113     0982  0820               	movf	___fltol@f1,w
  7114     0983  00A4               	movwf	??___fltol
  7115     0984  0821               	movf	___fltol@f1+1,w
  7116     0985  00A5               	movwf	??___fltol+1
  7117     0986  0822               	movf	___fltol@f1+2,w
  7118     0987  00A6               	movwf	??___fltol+2
  7119     0988  0823               	movf	___fltol@f1+3,w
  7120     0989  00A7               	movwf	??___fltol+3
  7121     098A  301F               	movlw	31
  7122     098B                     u5765:
  7123     098B  36A7               	lsrf	??___fltol+3,f
  7124     098C  0CA6               	rrf	??___fltol+2,f
  7125     098D  0CA5               	rrf	??___fltol+1,f
  7126     098E  0CA4               	rrf	??___fltol,f
  7127     098F  0B89               	decfsz	9,f
  7128     0990  298B               	goto	u5765
  7129     0991  0824               	movf	??___fltol,w
  7130     0992  00F4               	movwf	___fltol@sign1
  7131     0993  17A2               	bsf	___fltol@f1+2,7
  7132     0994  30FF               	movlw	255
  7133     0995  05A0               	andwf	___fltol@f1,f
  7134     0996  30FF               	movlw	255
  7135     0997  05A1               	andwf	___fltol@f1+1,f
  7136     0998  30FF               	movlw	255
  7137     0999  05A2               	andwf	___fltol@f1+2,f
  7138     099A  3000               	movlw	0
  7139     099B  05A3               	andwf	___fltol@f1+3,f
  7140     099C  3096               	movlw	150
  7141     099D  02F5               	subwf	___fltol@exp1,f
  7142     099E  1FF5               	btfss	___fltol@exp1,7
  7143     099F  29B3               	goto	l4670
  7144     09A0  0875               	movf	___fltol@exp1,w
  7145     09A1  3A80               	xorlw	128
  7146     09A2  3E97               	addlw	151
  7147     09A3  1C03               	btfss	3,0
  7148     09A4  2979               	goto	l4648
  7149     09A5                     l4668:
  7150     09A5  3001               	movlw	1
  7151     09A6                     u5795:
  7152     09A6  36A3               	lsrf	___fltol@f1+3,f
  7153     09A7  0CA2               	rrf	___fltol@f1+2,f
  7154     09A8  0CA1               	rrf	___fltol@f1+1,f
  7155     09A9  0CA0               	rrf	___fltol@f1,f
  7156     09AA  0B89               	decfsz	9,f
  7157     09AB  29A6               	goto	u5795
  7158     09AC  3001               	movlw	1
  7159     09AD  00A4               	movwf	??___fltol
  7160     09AE  0824               	movf	??___fltol,w
  7161     09AF  07F5               	addwf	___fltol@exp1,f
  7162     09B0  1903               	btfsc	3,2
  7163     09B1  29C4               	goto	l4678
  7164     09B2  29A5               	goto	l4668
  7165     09B3                     l4670:
  7166     09B3  3020               	movlw	32
  7167     09B4  0275               	subwf	___fltol@exp1,w
  7168     09B5  1803               	btfsc	3,0
  7169     09B6  2979               	goto	l4648
  7170     09B7                     l1041:
  7171     09B7  0875               	movf	___fltol@exp1,w
  7172     09B8  1903               	btfsc	3,2
  7173     09B9  29C4               	goto	l4678
  7174     09BA  3001               	movlw	1
  7175     09BB                     u5825:
  7176     09BB  35A0               	lslf	___fltol@f1,f
  7177     09BC  0DA1               	rlf	___fltol@f1+1,f
  7178     09BD  0DA2               	rlf	___fltol@f1+2,f
  7179     09BE  0DA3               	rlf	___fltol@f1+3,f
  7180     09BF  0B89               	decfsz	9,f
  7181     09C0  29BB               	goto	u5825
  7182     09C1  3001               	movlw	1
  7183     09C2  02F5               	subwf	___fltol@exp1,f
  7184     09C3  29B7               	goto	l1041
  7185     09C4                     l4678:
  7186     09C4  0874               	movf	___fltol@sign1,w
  7187     09C5  1903               	btfsc	3,2
  7188     09C6  0008               	return
  7189     09C7  09A0               	comf	___fltol@f1,f
  7190     09C8  09A1               	comf	___fltol@f1+1,f
  7191     09C9  09A2               	comf	___fltol@f1+2,f
  7192     09CA  09A3               	comf	___fltol@f1+3,f
  7193     09CB  0AA0               	incf	___fltol@f1,f
  7194     09CC  1903               	skipnz
  7195     09CD  0AA1               	incf	___fltol@f1+1,f
  7196     09CE  1903               	skipnz
  7197     09CF  0AA2               	incf	___fltol@f1+2,f
  7198     09D0  1903               	skipnz
  7199     09D1  0AA3               	incf	___fltol@f1+3,f
  7200     09D2  0008               	return
  7201     09D3                     __end_of___fltol:
  7202                           
  7203                           	psect	text15
  7204     17E4                     __ptext15:	
  7205 ;; *************** function _ADC_GetConversion *****************
  7206 ;; Defined at:
  7207 ;;		line 112 in file "mcc_generated_files/adc.c"
  7208 ;; Parameters:    Size  Location     Type
  7209 ;;  channel         1    wreg     enum E2490
  7210 ;; Auto vars:     Size  Location     Type
  7211 ;;  channel         1    1[BANK0 ] enum E2490
  7212 ;; Return value:  Size  Location     Type
  7213 ;;                  2    4[COMMON] unsigned short 
  7214 ;; Registers used:
  7215 ;;		wreg, status,2, status,0
  7216 ;; Tracked objects:
  7217 ;;		On entry : 0/0
  7218 ;;		On exit  : 0/0
  7219 ;;		Unchanged: 0/0
  7220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7221 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7222 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7223 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7224 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7225 ;;Total ram usage:        4 bytes
  7226 ;; Hardware stack levels used: 1
  7227 ;; Hardware stack levels required when called: 5
  7228 ;; This function calls:
  7229 ;;		Nothing
  7230 ;; This function is called by:
  7231 ;;		__ReadSensor
  7232 ;; This function uses a non-reentrant model
  7233 ;;
  7234                           
  7235     17E4                     _ADC_GetConversion:	
  7236                           ;psect for function _ADC_GetConversion
  7237                           
  7238                           
  7239                           ;incstack = 0
  7240                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  7241                           ;ADC_GetConversion@channel stored from wreg
  7242     17E4  0020               	movlb	0	; select bank0
  7243     17E5  00A1               	movwf	ADC_GetConversion@channel
  7244                           
  7245                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  7246     17E6  0821               	movf	ADC_GetConversion@channel,w
  7247     17E7  00A0               	movwf	??_ADC_GetConversion
  7248     17E8  0DA0               	rlf	??_ADC_GetConversion,f
  7249     17E9  0DA0               	rlf	??_ADC_GetConversion,f
  7250     17EA  0021               	movlb	1	; select bank1
  7251     17EB  081D               	movf	29,w	;volatile
  7252     17EC  0020               	movlb	0	; select bank0
  7253     17ED  0620               	xorwf	??_ADC_GetConversion,w
  7254     17EE  3983               	andlw	-125
  7255     17EF  0620               	xorwf	??_ADC_GetConversion,w
  7256     17F0  0021               	movlb	1	; select bank1
  7257     17F1  009D               	movwf	29	;volatile
  7258                           
  7259                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  7260     17F2  141D               	bsf	29,0	;volatile
  7261                           
  7262                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  7263     17F3  3003               	movlw	3
  7264     17F4                     u6077:
  7265     17F4  0B89               	decfsz	9,f
  7266     17F5  2FF4               	goto	u6077
  7267     17F6  0000               	nop
  7268                           
  7269                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  7270     17F7  0021               	movlb	1	; select bank1
  7271     17F8  149D               	bsf	29,1	;volatile
  7272     17F9                     l93:	
  7273                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  7274                           
  7275                           
  7276                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  7277     17F9  189D               	btfsc	29,1	;volatile
  7278     17FA  2FF9               	goto	l93
  7279                           
  7280                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  7281     17FB  081C               	movf	28,w	;volatile
  7282     17FC  00F5               	movwf	?_ADC_GetConversion+1
  7283     17FD  081B               	movf	27,w	;volatile
  7284     17FE  00F4               	movwf	?_ADC_GetConversion
  7285     17FF  0008               	return
  7286     1800                     __end_of_ADC_GetConversion:
  7287                           
  7288                           	psect	text16
  7289     09D3                     __ptext16:	
  7290 ;; *************** function __ControlHeat *****************
  7291 ;; Defined at:
  7292 ;;		line 473 in file "main.c"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;		None
  7295 ;; Auto vars:     Size  Location     Type
  7296 ;;		None
  7297 ;; Return value:  Size  Location     Type
  7298 ;;                  1    wreg      void 
  7299 ;; Registers used:
  7300 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7301 ;; Tracked objects:
  7302 ;;		On entry : 0/0
  7303 ;;		On exit  : 0/0
  7304 ;;		Unchanged: 0/0
  7305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7308 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7309 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7310 ;;Total ram usage:        5 bytes
  7311 ;; Hardware stack levels used: 1
  7312 ;; Hardware stack levels required when called: 6
  7313 ;; This function calls:
  7314 ;;		_EUSART_Write
  7315 ;; This function is called by:
  7316 ;;		_main
  7317 ;; This function uses a non-reentrant model
  7318 ;;
  7319                           
  7320     09D3                     __ControlHeat:	
  7321                           ;psect for function __ControlHeat
  7322                           
  7323                           
  7324                           ;main.c: 475:     if (CURRENT_MODE == HEAT_MODE_0)
  7325                           
  7326                           ;incstack = 0
  7327                           ; Regs used in __ControlHeat: [wreg-fsr0h+status,2+status,0+pclath]
  7328     09D3  0876               	movf	_CURRENT_MODE,w
  7329     09D4  0477               	iorwf	_CURRENT_MODE+1,w
  7330     09D5  1903               	btfsc	3,2
  7331     09D6  29E0               	goto	l4746
  7332     09D7  29E3               	goto	l4750
  7333     09D8                     l4756:
  7334     09D8  3000               	movlw	0
  7335     09D9  0022               	movlb	2	; select bank2
  7336     09DA  0259               	subwf	(_HEAT_CALL_TICKS+1)^(0+256),w
  7337     09DB  303D               	movlw	61
  7338     09DC  1903               	skipnz
  7339     09DD  0258               	subwf	_HEAT_CALL_TICKS^(0+256),w
  7340     09DE  1C03               	skipc
  7341     09DF  2A0A               	goto	l4766
  7342     09E0                     l4746:
  7343                           
  7344                           ;main.c: 479:         RELAY_STATUS = 0;
  7345     09E0  0020               	movlb	0	; select bank0
  7346     09E1  01EF               	clrf	_RELAY_STATUS
  7347     09E2  0008               	return
  7348     09E3                     l4750:
  7349     09E3  0877               	movf	_CURRENT_MODE+1,w
  7350     09E4  0085               	movwf	5
  7351     09E5  0876               	movf	_CURRENT_MODE,w
  7352     09E6  0084               	movwf	4
  7353     09E7  3584               	lslf	4,f
  7354     09E8  0D85               	rlf	5,f
  7355     09E9  3000               	movlw	low _SETPOINTS
  7356     09EA  0784               	addwf	4,f
  7357     09EB  3018               	movlw	high _SETPOINTS
  7358     09EC  3D05               	addwfc	5,w
  7359     09ED  3880               	iorlw	128
  7360     09EE  0085               	movwf	5
  7361     09EF  3F00               	moviw [0]fsr0
  7362     09F0  0020               	movlb	0	; select bank0
  7363     09F1  00A0               	movwf	??__ControlHeat
  7364     09F2  3F01               	moviw [1]fsr0
  7365     09F3  00A1               	movwf	??__ControlHeat+1
  7366     09F4  0820               	movf	??__ControlHeat,w
  7367     09F5  3E02               	addlw	2
  7368     09F6  00A2               	movwf	??__ControlHeat+2
  7369     09F7  3000               	movlw	0
  7370     09F8  3D21               	addwfc	??__ControlHeat+1,w
  7371     09F9  00A3               	movwf	??__ControlHeat+3
  7372     09FA  0823               	movf	??__ControlHeat+3,w
  7373     09FB  3A80               	xorlw	128
  7374     09FC  00A4               	movwf	??__ControlHeat+4
  7375     09FD  0022               	movlb	2	; select bank2
  7376     09FE  0853               	movf	(_TEMP+1)^(0+256),w
  7377     09FF  3A80               	xorlw	128
  7378     0A00  0020               	movlb	0	; select bank0
  7379     0A01  0224               	subwf	??__ControlHeat+4,w
  7380     0A02  1D03               	skipz
  7381     0A03  2A08               	goto	u5905
  7382     0A04  0022               	movlb	2	; select bank2
  7383     0A05  0852               	movf	_TEMP^(0+256),w
  7384     0A06  0020               	movlb	0	; select bank0
  7385     0A07  0222               	subwf	??__ControlHeat+2,w
  7386     0A08                     u5905:
  7387     0A08  1C03               	btfss	3,0
  7388     0A09  29D8               	goto	l4756
  7389     0A0A                     l4766:
  7390     0A0A  0877               	movf	_CURRENT_MODE+1,w
  7391     0A0B  0085               	movwf	5
  7392     0A0C  0876               	movf	_CURRENT_MODE,w
  7393     0A0D  0084               	movwf	4
  7394     0A0E  3584               	lslf	4,f
  7395     0A0F  0D85               	rlf	5,f
  7396     0A10  3000               	movlw	low _SETPOINTS
  7397     0A11  0784               	addwf	4,f
  7398     0A12  3018               	movlw	high _SETPOINTS
  7399     0A13  3D05               	addwfc	5,w
  7400     0A14  3880               	iorlw	128
  7401     0A15  0085               	movwf	5
  7402     0A16  3F00               	moviw [0]fsr0
  7403     0A17  0020               	movlb	0	; select bank0
  7404     0A18  00A0               	movwf	??__ControlHeat
  7405     0A19  3F01               	moviw [1]fsr0
  7406     0A1A  00A1               	movwf	??__ControlHeat+1
  7407     0A1B  0820               	movf	??__ControlHeat,w
  7408     0A1C  3EFF               	addlw	255
  7409     0A1D  00A2               	movwf	??__ControlHeat+2
  7410     0A1E  30FF               	movlw	255
  7411     0A1F  3D21               	addwfc	??__ControlHeat+1,w
  7412     0A20  00A3               	movwf	??__ControlHeat+3
  7413     0A21  0022               	movlb	2	; select bank2
  7414     0A22  0853               	movf	(_TEMP+1)^(0+256),w
  7415     0A23  3A80               	xorlw	128
  7416     0A24  0020               	movlb	0	; select bank0
  7417     0A25  00A4               	movwf	??__ControlHeat+4
  7418     0A26  0823               	movf	??__ControlHeat+3,w
  7419     0A27  3A80               	xorlw	128
  7420     0A28  0224               	subwf	??__ControlHeat+4,w
  7421     0A29  1D03               	skipz
  7422     0A2A  2A2E               	goto	u5925
  7423     0A2B  0822               	movf	??__ControlHeat+2,w
  7424     0A2C  0022               	movlb	2	; select bank2
  7425     0A2D  0252               	subwf	_TEMP^(0+256),w
  7426     0A2E                     u5925:
  7427     0A2E  1803               	skipnc
  7428     0A2F  0008               	return
  7429     0A30  3000               	movlw	0
  7430     0A31  0022               	movlb	2	; select bank2
  7431     0A32  0259               	subwf	(_HEAT_CALL_TICKS+1)^(0+256),w
  7432     0A33  303D               	movlw	61
  7433     0A34  1903               	skipnz
  7434     0A35  0258               	subwf	_HEAT_CALL_TICKS^(0+256),w
  7435     0A36  1C03               	skipc
  7436     0A37  0008               	return
  7437                           
  7438                           ;main.c: 510:             RELAY_STATUS = 1;
  7439     0A38  0020               	movlb	0	; select bank0
  7440     0A39  01EF               	clrf	_RELAY_STATUS
  7441     0A3A  0AEF               	incf	_RELAY_STATUS,f
  7442     0A3B  0008               	return
  7443     0A3C                     __end_of__ControlHeat:
  7444                           
  7445                           	psect	text17
  7446     173C                     __ptext17:	
  7447 ;; *************** function _EUSART_Write *****************
  7448 ;; Defined at:
  7449 ;;		line 132 in file "mcc_generated_files/eusart.c"
  7450 ;; Parameters:    Size  Location     Type
  7451 ;;  txData          1    wreg     unsigned char 
  7452 ;; Auto vars:     Size  Location     Type
  7453 ;;  txData          1    4[COMMON] unsigned char 
  7454 ;; Return value:  Size  Location     Type
  7455 ;;                  1    wreg      void 
  7456 ;; Registers used:
  7457 ;;		wreg
  7458 ;; Tracked objects:
  7459 ;;		On entry : 0/0
  7460 ;;		On exit  : 0/0
  7461 ;;		Unchanged: 0/0
  7462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7464 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7466 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7467 ;;Total ram usage:        1 bytes
  7468 ;; Hardware stack levels used: 1
  7469 ;; Hardware stack levels required when called: 5
  7470 ;; This function calls:
  7471 ;;		Nothing
  7472 ;; This function is called by:
  7473 ;;		_main
  7474 ;;		__ControlHeat
  7475 ;;		__SendDataToConsole
  7476 ;; This function uses a non-reentrant model
  7477 ;;
  7478                           
  7479     173C                     _EUSART_Write:	
  7480                           ;psect for function _EUSART_Write
  7481                           
  7482                           
  7483                           ;incstack = 0
  7484                           ; Regs used in _EUSART_Write: [wreg]
  7485                           ;EUSART_Write@txData stored from wreg
  7486     173C  00F4               	movwf	EUSART_Write@txData
  7487     173D                     l297:	
  7488                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  7489                           
  7490                           
  7491                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  7492     173D  0020               	movlb	0	; select bank0
  7493     173E  1E11               	btfss	17,4	;volatile
  7494     173F  2F3D               	goto	l297
  7495                           
  7496                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  7497     1740  0874               	movf	EUSART_Write@txData,w
  7498     1741  0023               	movlb	3	; select bank3
  7499     1742  009A               	movwf	26	;volatile
  7500     1743  0008               	return
  7501     1744                     __end_of_EUSART_Write:
  7502                           
  7503                           	psect	text18
  7504     0800                     __ptext18:	
  7505 ;; *************** function _SYSTEM_Initialize *****************
  7506 ;; Defined at:
  7507 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7508 ;; Parameters:    Size  Location     Type
  7509 ;;		None
  7510 ;; Auto vars:     Size  Location     Type
  7511 ;;		None
  7512 ;; Return value:  Size  Location     Type
  7513 ;;                  1    wreg      void 
  7514 ;; Registers used:
  7515 ;;		wreg, status,2, status,0, pclath, cstack
  7516 ;; Tracked objects:
  7517 ;;		On entry : 0/0
  7518 ;;		On exit  : 0/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7525 ;;Total ram usage:        0 bytes
  7526 ;; Hardware stack levels used: 1
  7527 ;; Hardware stack levels required when called: 7
  7528 ;; This function calls:
  7529 ;;		_ADC_Initialize
  7530 ;;		_EUSART_Initialize
  7531 ;;		_OSCILLATOR_Initialize
  7532 ;;		_PIN_MANAGER_Initialize
  7533 ;;		_TMR0_Initialize
  7534 ;;		_TMR1_Initialize
  7535 ;;		_TMR2_Initialize
  7536 ;;		_WDT_Initialize
  7537 ;; This function is called by:
  7538 ;;		_main
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542     0800                     _SYSTEM_Initialize:	
  7543                           ;psect for function _SYSTEM_Initialize
  7544                           
  7545                           
  7546                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  7547                           
  7548                           ;incstack = 0
  7549                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7550     0800  3197  27CA  3188   	fcall	_PIN_MANAGER_Initialize
  7551                           
  7552                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  7553     0803  3197  2725  3188   	fcall	_OSCILLATOR_Initialize
  7554                           
  7555                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  7556     0806  3196  26EB  3188   	fcall	_WDT_Initialize
  7557                           
  7558                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  7559     0809  3197  2734  3188   	fcall	_ADC_Initialize
  7560                           
  7561                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  7562     080C  3197  278D  3188   	fcall	_TMR2_Initialize
  7563                           
  7564                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
  7565     080F  3197  27B1  3188   	fcall	_TMR1_Initialize
  7566                           
  7567                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  7568     0812  3197  279E  3188   	fcall	_TMR0_Initialize
  7569                           
  7570                           ;mcc_generated_files/mcc.c: 60:     EUSART_Initialize();
  7571     0815  3188  2073         	fcall	_EUSART_Initialize
  7572     0817  0008               	return
  7573     0818                     __end_of_SYSTEM_Initialize:
  7574                           
  7575                           	psect	text19
  7576     16EB                     __ptext19:	
  7577 ;; *************** function _WDT_Initialize *****************
  7578 ;; Defined at:
  7579 ;;		line 73 in file "mcc_generated_files/mcc.c"
  7580 ;; Parameters:    Size  Location     Type
  7581 ;;		None
  7582 ;; Auto vars:     Size  Location     Type
  7583 ;;		None
  7584 ;; Return value:  Size  Location     Type
  7585 ;;                  1    wreg      void 
  7586 ;; Registers used:
  7587 ;;		wreg
  7588 ;; Tracked objects:
  7589 ;;		On entry : 0/0
  7590 ;;		On exit  : 0/0
  7591 ;;		Unchanged: 0/0
  7592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7597 ;;Total ram usage:        0 bytes
  7598 ;; Hardware stack levels used: 1
  7599 ;; Hardware stack levels required when called: 5
  7600 ;; This function calls:
  7601 ;;		Nothing
  7602 ;; This function is called by:
  7603 ;;		_SYSTEM_Initialize
  7604 ;; This function uses a non-reentrant model
  7605 ;;
  7606                           
  7607     16EB                     _WDT_Initialize:	
  7608                           ;psect for function _WDT_Initialize
  7609                           
  7610                           
  7611                           ;mcc_generated_files/mcc.c: 76:     WDTCON = 0x16;
  7612                           
  7613                           ;incstack = 0
  7614                           ; Regs used in _WDT_Initialize: [wreg]
  7615     16EB  3016               	movlw	22
  7616     16EC  0021               	movlb	1	; select bank1
  7617     16ED  0097               	movwf	23	;volatile
  7618     16EE  0008               	return
  7619     16EF                     __end_of_WDT_Initialize:
  7620                           
  7621                           	psect	text20
  7622     178D                     __ptext20:	
  7623 ;; *************** function _TMR2_Initialize *****************
  7624 ;; Defined at:
  7625 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  7626 ;; Parameters:    Size  Location     Type
  7627 ;;		None
  7628 ;; Auto vars:     Size  Location     Type
  7629 ;;		None
  7630 ;; Return value:  Size  Location     Type
  7631 ;;                  1    wreg      void 
  7632 ;; Registers used:
  7633 ;;		wreg, status,2, status,0, pclath, cstack
  7634 ;; Tracked objects:
  7635 ;;		On entry : 0/0
  7636 ;;		On exit  : 0/0
  7637 ;;		Unchanged: 0/0
  7638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7643 ;;Total ram usage:        0 bytes
  7644 ;; Hardware stack levels used: 1
  7645 ;; Hardware stack levels required when called: 6
  7646 ;; This function calls:
  7647 ;;		_TMR2_SetInterruptHandler
  7648 ;; This function is called by:
  7649 ;;		_SYSTEM_Initialize
  7650 ;; This function uses a non-reentrant model
  7651 ;;
  7652                           
  7653     178D                     _TMR2_Initialize:	
  7654                           ;psect for function _TMR2_Initialize
  7655                           
  7656                           
  7657                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x03;
  7658                           
  7659                           ;incstack = 0
  7660                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7661     178D  3003               	movlw	3
  7662     178E  0020               	movlb	0	; select bank0
  7663     178F  009B               	movwf	27	;volatile
  7664                           
  7665                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  7666     1790  019A               	clrf	26	;volatile
  7667                           
  7668                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  7669     1791  1091               	bcf	17,1	;volatile
  7670                           
  7671                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  7672     1792  0021               	movlb	1	; select bank1
  7673     1793  1491               	bsf	17,1	;volatile
  7674                           
  7675                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  7676     1794  30E8               	movlw	low _TMR2_DefaultInterruptHandler
  7677     1795  00F4               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  7678     1796  3016               	movlw	high _TMR2_DefaultInterruptHandler
  7679     1797  00F5               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  7680     1798  3197  2712         	fcall	_TMR2_SetInterruptHandler
  7681                           
  7682                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x7E;
  7683     179A  307E               	movlw	126
  7684     179B  0020               	movlb	0	; select bank0
  7685     179C  009C               	movwf	28	;volatile
  7686     179D  0008               	return
  7687     179E                     __end_of_TMR2_Initialize:
  7688                           
  7689                           	psect	text21
  7690     1712                     __ptext21:	
  7691 ;; *************** function _TMR2_SetInterruptHandler *****************
  7692 ;; Defined at:
  7693 ;;		line 140 in file "mcc_generated_files/tmr2.c"
  7694 ;; Parameters:    Size  Location     Type
  7695 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
  7696 ;;		 -> TMR2_DefaultInterruptHandler(1), _SpkrControlISR(1), 
  7697 ;; Auto vars:     Size  Location     Type
  7698 ;;		None
  7699 ;; Return value:  Size  Location     Type
  7700 ;;                  1    wreg      void 
  7701 ;; Registers used:
  7702 ;;		wreg
  7703 ;; Tracked objects:
  7704 ;;		On entry : 0/0
  7705 ;;		On exit  : 0/0
  7706 ;;		Unchanged: 0/0
  7707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7708 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7711 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7712 ;;Total ram usage:        2 bytes
  7713 ;; Hardware stack levels used: 1
  7714 ;; Hardware stack levels required when called: 5
  7715 ;; This function calls:
  7716 ;;		Nothing
  7717 ;; This function is called by:
  7718 ;;		_main
  7719 ;;		_TMR2_Initialize
  7720 ;; This function uses a non-reentrant model
  7721 ;;
  7722                           
  7723     1712                     _TMR2_SetInterruptHandler:	
  7724                           ;psect for function _TMR2_SetInterruptHandler
  7725                           
  7726                           
  7727                           ;mcc_generated_files/tmr2.c: 141:     TMR2_InterruptHandler = InterruptHandler;
  7728                           
  7729                           ;incstack = 0
  7730                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  7731     1712  0875               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  7732     1713  0021               	movlb	1	; select bank1
  7733     1714  00D2               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
  7734     1715  0874               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  7735     1716  00D1               	movwf	_TMR2_InterruptHandler^(0+128)
  7736     1717  0008               	return
  7737     1718                     __end_of_TMR2_SetInterruptHandler:
  7738                           
  7739                           	psect	text22
  7740     17B1                     __ptext22:	
  7741 ;; *************** function _TMR1_Initialize *****************
  7742 ;; Defined at:
  7743 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  7744 ;; Parameters:    Size  Location     Type
  7745 ;;		None
  7746 ;; Auto vars:     Size  Location     Type
  7747 ;;		None
  7748 ;; Return value:  Size  Location     Type
  7749 ;;                  1    wreg      void 
  7750 ;; Registers used:
  7751 ;;		wreg, status,2, status,0, pclath, cstack
  7752 ;; Tracked objects:
  7753 ;;		On entry : 0/0
  7754 ;;		On exit  : 0/0
  7755 ;;		Unchanged: 0/0
  7756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7761 ;;Total ram usage:        0 bytes
  7762 ;; Hardware stack levels used: 1
  7763 ;; Hardware stack levels required when called: 6
  7764 ;; This function calls:
  7765 ;;		_TMR1_SetInterruptHandler
  7766 ;; This function is called by:
  7767 ;;		_SYSTEM_Initialize
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771     17B1                     _TMR1_Initialize:	
  7772                           ;psect for function _TMR1_Initialize
  7773                           
  7774                           
  7775                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  7776                           
  7777                           ;incstack = 0
  7778                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7779     17B1  0020               	movlb	0	; select bank0
  7780     17B2  0199               	clrf	25	;volatile
  7781                           
  7782                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x9E;
  7783     17B3  309E               	movlw	158
  7784     17B4  0097               	movwf	23	;volatile
  7785                           
  7786                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x58;
  7787     17B5  3058               	movlw	88
  7788     17B6  0096               	movwf	22	;volatile
  7789                           
  7790                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  7791     17B7  1011               	bcf	17,0	;volatile
  7792                           
  7793                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  7794     17B8  0817               	movf	23,w	;volatile
  7795     17B9  0021               	movlb	1	; select bank1
  7796     17BA  00C8               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  7797     17BB  0020               	movlb	0	; select bank0
  7798     17BC  0816               	movf	22,w	;volatile
  7799     17BD  0021               	movlb	1	; select bank1
  7800     17BE  00C7               	movwf	_timer1ReloadVal^(0+128)	;volatile
  7801                           
  7802                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  7803     17BF  1411               	bsf	17,0	;volatile
  7804                           
  7805                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  7806     17C0  30E7               	movlw	low _TMR1_DefaultInterruptHandler
  7807     17C1  00F4               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  7808     17C2  3016               	movlw	high _TMR1_DefaultInterruptHandler
  7809     17C3  00F5               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  7810     17C4  3197  270C         	fcall	_TMR1_SetInterruptHandler
  7811                           
  7812                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x31;
  7813     17C6  3031               	movlw	49
  7814     17C7  0020               	movlb	0	; select bank0
  7815     17C8  0098               	movwf	24	;volatile
  7816     17C9  0008               	return
  7817     17CA                     __end_of_TMR1_Initialize:
  7818                           
  7819                           	psect	text23
  7820     170C                     __ptext23:	
  7821 ;; *************** function _TMR1_SetInterruptHandler *****************
  7822 ;; Defined at:
  7823 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  7824 ;; Parameters:    Size  Location     Type
  7825 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
  7826 ;;		 -> _LogicControlISR(1), TMR1_DefaultInterruptHandler(1), 
  7827 ;; Auto vars:     Size  Location     Type
  7828 ;;		None
  7829 ;; Return value:  Size  Location     Type
  7830 ;;                  1    wreg      void 
  7831 ;; Registers used:
  7832 ;;		wreg
  7833 ;; Tracked objects:
  7834 ;;		On entry : 0/0
  7835 ;;		On exit  : 0/0
  7836 ;;		Unchanged: 0/0
  7837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7838 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7841 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7842 ;;Total ram usage:        2 bytes
  7843 ;; Hardware stack levels used: 1
  7844 ;; Hardware stack levels required when called: 5
  7845 ;; This function calls:
  7846 ;;		Nothing
  7847 ;; This function is called by:
  7848 ;;		_TMR1_Initialize
  7849 ;;		_main
  7850 ;; This function uses a non-reentrant model
  7851 ;;
  7852                           
  7853     170C                     _TMR1_SetInterruptHandler:	
  7854                           ;psect for function _TMR1_SetInterruptHandler
  7855                           
  7856                           
  7857                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  7858                           
  7859                           ;incstack = 0
  7860                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  7861     170C  0875               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  7862     170D  0021               	movlb	1	; select bank1
  7863     170E  00DA               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
  7864     170F  0874               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  7865     1710  00D9               	movwf	_TMR1_InterruptHandler^(0+128)
  7866     1711  0008               	return
  7867     1712                     __end_of_TMR1_SetInterruptHandler:
  7868                           
  7869                           	psect	text24
  7870     179E                     __ptext24:	
  7871 ;; *************** function _TMR0_Initialize *****************
  7872 ;; Defined at:
  7873 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  7874 ;; Parameters:    Size  Location     Type
  7875 ;;		None
  7876 ;; Auto vars:     Size  Location     Type
  7877 ;;		None
  7878 ;; Return value:  Size  Location     Type
  7879 ;;                  1    wreg      void 
  7880 ;; Registers used:
  7881 ;;		wreg, status,2, status,0, pclath, cstack
  7882 ;; Tracked objects:
  7883 ;;		On entry : 0/0
  7884 ;;		On exit  : 0/0
  7885 ;;		Unchanged: 0/0
  7886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7891 ;;Total ram usage:        0 bytes
  7892 ;; Hardware stack levels used: 1
  7893 ;; Hardware stack levels required when called: 6
  7894 ;; This function calls:
  7895 ;;		_TMR0_SetInterruptHandler
  7896 ;; This function is called by:
  7897 ;;		_SYSTEM_Initialize
  7898 ;; This function uses a non-reentrant model
  7899 ;;
  7900                           
  7901     179E                     _TMR0_Initialize:	
  7902                           ;psect for function _TMR0_Initialize
  7903                           
  7904                           
  7905                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  7906                           
  7907                           ;incstack = 0
  7908                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7909     179E  0021               	movlb	1	; select bank1
  7910     179F  0815               	movf	21,w	;volatile
  7911     17A0  39C0               	andlw	192
  7912     17A1  3817               	iorlw	23
  7913     17A2  0095               	movwf	21	;volatile
  7914                           
  7915                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0xF8;
  7916     17A3  30F8               	movlw	248
  7917     17A4  0020               	movlb	0	; select bank0
  7918     17A5  0095               	movwf	21	;volatile
  7919                           
  7920                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 248;
  7921     17A6  30F8               	movlw	248
  7922     17A7  00F9               	movwf	_timer0ReloadVal	;volatile
  7923                           
  7924                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  7925     17A8  110B               	bcf	11,2	;volatile
  7926                           
  7927                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  7928     17A9  168B               	bsf	11,5	;volatile
  7929                           
  7930                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  7931     17AA  30E6               	movlw	low _TMR0_DefaultInterruptHandler
  7932     17AB  00F4               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  7933     17AC  3016               	movlw	high _TMR0_DefaultInterruptHandler
  7934     17AD  00F5               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  7935     17AE  3197  2706         	fcall	_TMR0_SetInterruptHandler
  7936     17B0  0008               	return
  7937     17B1                     __end_of_TMR0_Initialize:
  7938                           
  7939                           	psect	text25
  7940     1706                     __ptext25:	
  7941 ;; *************** function _TMR0_SetInterruptHandler *****************
  7942 ;; Defined at:
  7943 ;;		line 133 in file "mcc_generated_files/tmr0.c"
  7944 ;; Parameters:    Size  Location     Type
  7945 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
  7946 ;;		 -> _UIControlISR(1), TMR0_DefaultInterruptHandler(1), 
  7947 ;; Auto vars:     Size  Location     Type
  7948 ;;		None
  7949 ;; Return value:  Size  Location     Type
  7950 ;;                  1    wreg      void 
  7951 ;; Registers used:
  7952 ;;		wreg
  7953 ;; Tracked objects:
  7954 ;;		On entry : 0/0
  7955 ;;		On exit  : 0/0
  7956 ;;		Unchanged: 0/0
  7957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7958 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7961 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7962 ;;Total ram usage:        2 bytes
  7963 ;; Hardware stack levels used: 1
  7964 ;; Hardware stack levels required when called: 5
  7965 ;; This function calls:
  7966 ;;		Nothing
  7967 ;; This function is called by:
  7968 ;;		_TMR0_Initialize
  7969 ;;		_main
  7970 ;; This function uses a non-reentrant model
  7971 ;;
  7972                           
  7973     1706                     _TMR0_SetInterruptHandler:	
  7974                           ;psect for function _TMR0_SetInterruptHandler
  7975                           
  7976                           
  7977                           ;mcc_generated_files/tmr0.c: 134:     TMR0_InterruptHandler = InterruptHandler;
  7978                           
  7979                           ;incstack = 0
  7980                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  7981     1706  0875               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  7982     1707  0021               	movlb	1	; select bank1
  7983     1708  00DC               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  7984     1709  0874               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  7985     170A  00DB               	movwf	_TMR0_InterruptHandler^(0+128)
  7986     170B  0008               	return
  7987     170C                     __end_of_TMR0_SetInterruptHandler:
  7988                           
  7989                           	psect	text26
  7990     17CA                     __ptext26:	
  7991 ;; *************** function _PIN_MANAGER_Initialize *****************
  7992 ;; Defined at:
  7993 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7994 ;; Parameters:    Size  Location     Type
  7995 ;;		None
  7996 ;; Auto vars:     Size  Location     Type
  7997 ;;		None
  7998 ;; Return value:  Size  Location     Type
  7999 ;;                  1    wreg      void 
  8000 ;; Registers used:
  8001 ;;		wreg, status,2
  8002 ;; Tracked objects:
  8003 ;;		On entry : 0/0
  8004 ;;		On exit  : 0/0
  8005 ;;		Unchanged: 0/0
  8006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8011 ;;Total ram usage:        0 bytes
  8012 ;; Hardware stack levels used: 1
  8013 ;; Hardware stack levels required when called: 5
  8014 ;; This function calls:
  8015 ;;		Nothing
  8016 ;; This function is called by:
  8017 ;;		_SYSTEM_Initialize
  8018 ;; This function uses a non-reentrant model
  8019 ;;
  8020                           
  8021     17CA                     _PIN_MANAGER_Initialize:	
  8022                           ;psect for function _PIN_MANAGER_Initialize
  8023                           
  8024                           
  8025                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x04;
  8026                           
  8027                           ;incstack = 0
  8028                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8029     17CA  3004               	movlw	4
  8030     17CB  0022               	movlb	2	; select bank2
  8031     17CC  008C               	movwf	12	;volatile
  8032                           
  8033                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x0C;
  8034     17CD  300C               	movlw	12
  8035     17CE  008D               	movwf	13	;volatile
  8036                           
  8037                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xF3;
  8038     17CF  30F3               	movlw	243
  8039     17D0  0021               	movlb	1	; select bank1
  8040     17D1  008C               	movwf	12	;volatile
  8041                           
  8042                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xB1;
  8043     17D2  30B1               	movlw	177
  8044     17D3  008D               	movwf	13	;volatile
  8045                           
  8046                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0x90;
  8047     17D4  3090               	movlw	144
  8048     17D5  0023               	movlb	3	; select bank3
  8049     17D6  008D               	movwf	13	;volatile
  8050                           
  8051                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x01;
  8052     17D7  3001               	movlw	1
  8053     17D8  008C               	movwf	12	;volatile
  8054                           
  8055                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x01;
  8056     17D9  3001               	movlw	1
  8057     17DA  0024               	movlb	4	; select bank4
  8058     17DB  008D               	movwf	13	;volatile
  8059                           
  8060                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  8061     17DC  018C               	clrf	12	;volatile
  8062                           
  8063                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 0;
  8064     17DD  0021               	movlb	1	; select bank1
  8065     17DE  1395               	bcf	21,7	;volatile
  8066                           
  8067                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  8068     17DF  0022               	movlb	2	; select bank2
  8069     17E0  019D               	clrf	29	;volatile
  8070                           
  8071                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x01;
  8072     17E1  3001               	movlw	1
  8073     17E2  009E               	movwf	30	;volatile
  8074     17E3  0008               	return
  8075     17E4                     __end_of_PIN_MANAGER_Initialize:
  8076                           
  8077                           	psect	text27
  8078     1725                     __ptext27:	
  8079 ;; *************** function _OSCILLATOR_Initialize *****************
  8080 ;; Defined at:
  8081 ;;		line 63 in file "mcc_generated_files/mcc.c"
  8082 ;; Parameters:    Size  Location     Type
  8083 ;;		None
  8084 ;; Auto vars:     Size  Location     Type
  8085 ;;		None
  8086 ;; Return value:  Size  Location     Type
  8087 ;;                  1    wreg      void 
  8088 ;; Registers used:
  8089 ;;		wreg, status,2
  8090 ;; Tracked objects:
  8091 ;;		On entry : 0/0
  8092 ;;		On exit  : 0/0
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8099 ;;Total ram usage:        0 bytes
  8100 ;; Hardware stack levels used: 1
  8101 ;; Hardware stack levels required when called: 5
  8102 ;; This function calls:
  8103 ;;		Nothing
  8104 ;; This function is called by:
  8105 ;;		_SYSTEM_Initialize
  8106 ;; This function uses a non-reentrant model
  8107 ;;
  8108                           
  8109     1725                     _OSCILLATOR_Initialize:	
  8110                           ;psect for function _OSCILLATOR_Initialize
  8111                           
  8112                           
  8113                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x70;
  8114                           
  8115                           ;incstack = 0
  8116                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8117     1725  3070               	movlw	112
  8118     1726  0021               	movlb	1	; select bank1
  8119     1727  0099               	movwf	25	;volatile
  8120                           
  8121                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  8122     1728  0198               	clrf	24	;volatile
  8123                           
  8124                           ;mcc_generated_files/mcc.c: 70:     BORCON = 0x00;
  8125     1729  0022               	movlb	2	; select bank2
  8126     172A  0196               	clrf	22	;volatile
  8127     172B  0008               	return
  8128     172C                     __end_of_OSCILLATOR_Initialize:
  8129                           
  8130                           	psect	text28
  8131     0873                     __ptext28:	
  8132 ;; *************** function _EUSART_Initialize *****************
  8133 ;; Defined at:
  8134 ;;		line 66 in file "mcc_generated_files/eusart.c"
  8135 ;; Parameters:    Size  Location     Type
  8136 ;;		None
  8137 ;; Auto vars:     Size  Location     Type
  8138 ;;		None
  8139 ;; Return value:  Size  Location     Type
  8140 ;;                  1    wreg      void 
  8141 ;; Registers used:
  8142 ;;		wreg, status,2, status,0, pclath, cstack
  8143 ;; Tracked objects:
  8144 ;;		On entry : 0/0
  8145 ;;		On exit  : 0/0
  8146 ;;		Unchanged: 0/0
  8147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8152 ;;Total ram usage:        0 bytes
  8153 ;; Hardware stack levels used: 1
  8154 ;; Hardware stack levels required when called: 6
  8155 ;; This function calls:
  8156 ;;		_EUSART_SetErrorHandler
  8157 ;;		_EUSART_SetFramingErrorHandler
  8158 ;;		_EUSART_SetOverrunErrorHandler
  8159 ;; This function is called by:
  8160 ;;		_SYSTEM_Initialize
  8161 ;; This function uses a non-reentrant model
  8162 ;;
  8163                           
  8164     0873                     _EUSART_Initialize:	
  8165                           ;psect for function _EUSART_Initialize
  8166                           
  8167                           
  8168                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  8169                           
  8170                           ;incstack = 0
  8171                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8172     0873  3008               	movlw	8
  8173     0874  0023               	movlb	3	; select bank3
  8174     0875  009F               	movwf	31	;volatile
  8175                           
  8176                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x80;
  8177     0876  3080               	movlw	128
  8178     0877  009D               	movwf	29	;volatile
  8179                           
  8180                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  8181     0878  3024               	movlw	36
  8182     0879  009E               	movwf	30	;volatile
  8183                           
  8184                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x10;
  8185     087A  3010               	movlw	16
  8186     087B  009B               	movwf	27	;volatile
  8187                           
  8188                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  8189     087C  019C               	clrf	28	;volatile
  8190                           
  8191                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  8192     087D  3000               	movlw	0
  8193     087E  00F4               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  8194     087F  3000               	movlw	0
  8195     0880  00F5               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  8196     0881  3196  26FA  3188   	fcall	_EUSART_SetFramingErrorHandler
  8197                           
  8198                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  8199     0884  3000               	movlw	0
  8200     0885  00F4               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  8201     0886  3000               	movlw	0
  8202     0887  00F5               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  8203     0888  3197  2700  3188   	fcall	_EUSART_SetOverrunErrorHandler
  8204                           
  8205                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  8206     088B  3000               	movlw	0
  8207     088C  00F4               	movwf	EUSART_SetErrorHandler@interruptHandler
  8208     088D  3000               	movlw	0
  8209     088E  00F5               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  8210     088F  3196  26F4         	fcall	_EUSART_SetErrorHandler
  8211                           
  8212                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  8213     0891  0021               	movlb	1	; select bank1
  8214     0892  01D0               	clrf	_eusartRxLastError^(0+128)	;volatile
  8215     0893  0008               	return
  8216     0894                     __end_of_EUSART_Initialize:
  8217                           
  8218                           	psect	text29
  8219     1700                     __ptext29:	
  8220 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  8221 ;; Defined at:
  8222 ;;		line 161 in file "mcc_generated_files/eusart.c"
  8223 ;; Parameters:    Size  Location     Type
  8224 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
  8225 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  8226 ;; Auto vars:     Size  Location     Type
  8227 ;;		None
  8228 ;; Return value:  Size  Location     Type
  8229 ;;                  1    wreg      void 
  8230 ;; Registers used:
  8231 ;;		wreg
  8232 ;; Tracked objects:
  8233 ;;		On entry : 0/0
  8234 ;;		On exit  : 0/0
  8235 ;;		Unchanged: 0/0
  8236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8237 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8240 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8241 ;;Total ram usage:        2 bytes
  8242 ;; Hardware stack levels used: 1
  8243 ;; Hardware stack levels required when called: 5
  8244 ;; This function calls:
  8245 ;;		Nothing
  8246 ;; This function is called by:
  8247 ;;		_EUSART_Initialize
  8248 ;; This function uses a non-reentrant model
  8249 ;;
  8250                           
  8251     1700                     _EUSART_SetOverrunErrorHandler:	
  8252                           ;psect for function _EUSART_SetOverrunErrorHandler
  8253                           
  8254                           
  8255                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  8256                           
  8257                           ;incstack = 0
  8258                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  8259     1700  0875               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  8260     1701  0021               	movlb	1	; select bank1
  8261     1702  00D6               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  8262     1703  0874               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  8263     1704  00D5               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  8264     1705  0008               	return
  8265     1706                     __end_of_EUSART_SetOverrunErrorHandler:
  8266                           
  8267                           	psect	text30
  8268     16FA                     __ptext30:	
  8269 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  8270 ;; Defined at:
  8271 ;;		line 157 in file "mcc_generated_files/eusart.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
  8274 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  8275 ;; Auto vars:     Size  Location     Type
  8276 ;;		None
  8277 ;; Return value:  Size  Location     Type
  8278 ;;                  1    wreg      void 
  8279 ;; Registers used:
  8280 ;;		wreg
  8281 ;; Tracked objects:
  8282 ;;		On entry : 0/0
  8283 ;;		On exit  : 0/0
  8284 ;;		Unchanged: 0/0
  8285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8286 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8289 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8290 ;;Total ram usage:        2 bytes
  8291 ;; Hardware stack levels used: 1
  8292 ;; Hardware stack levels required when called: 5
  8293 ;; This function calls:
  8294 ;;		Nothing
  8295 ;; This function is called by:
  8296 ;;		_EUSART_Initialize
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300     16FA                     _EUSART_SetFramingErrorHandler:	
  8301                           ;psect for function _EUSART_SetFramingErrorHandler
  8302                           
  8303                           
  8304                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  8305                           
  8306                           ;incstack = 0
  8307                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  8308     16FA  0875               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  8309     16FB  0021               	movlb	1	; select bank1
  8310     16FC  00D8               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  8311     16FD  0874               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  8312     16FE  00D7               	movwf	_EUSART_FramingErrorHandler^(0+128)
  8313     16FF  0008               	return
  8314     1700                     __end_of_EUSART_SetFramingErrorHandler:
  8315                           
  8316                           	psect	text31
  8317     16F4                     __ptext31:	
  8318 ;; *************** function _EUSART_SetErrorHandler *****************
  8319 ;; Defined at:
  8320 ;;		line 165 in file "mcc_generated_files/eusart.c"
  8321 ;; Parameters:    Size  Location     Type
  8322 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
  8323 ;;		 -> EUSART_DefaultErrorHandler(1), 
  8324 ;; Auto vars:     Size  Location     Type
  8325 ;;		None
  8326 ;; Return value:  Size  Location     Type
  8327 ;;                  1    wreg      void 
  8328 ;; Registers used:
  8329 ;;		wreg
  8330 ;; Tracked objects:
  8331 ;;		On entry : 0/0
  8332 ;;		On exit  : 0/0
  8333 ;;		Unchanged: 0/0
  8334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8335 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8338 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8339 ;;Total ram usage:        2 bytes
  8340 ;; Hardware stack levels used: 1
  8341 ;; Hardware stack levels required when called: 5
  8342 ;; This function calls:
  8343 ;;		Nothing
  8344 ;; This function is called by:
  8345 ;;		_EUSART_Initialize
  8346 ;; This function uses a non-reentrant model
  8347 ;;
  8348                           
  8349     16F4                     _EUSART_SetErrorHandler:	
  8350                           ;psect for function _EUSART_SetErrorHandler
  8351                           
  8352                           
  8353                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  8354                           
  8355                           ;incstack = 0
  8356                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  8357     16F4  0875               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  8358     16F5  0021               	movlb	1	; select bank1
  8359     16F6  00D4               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  8360     16F7  0874               	movf	EUSART_SetErrorHandler@interruptHandler,w
  8361     16F8  00D3               	movwf	_EUSART_ErrorHandler^(0+128)
  8362     16F9  0008               	return
  8363     16FA                     __end_of_EUSART_SetErrorHandler:
  8364                           
  8365                           	psect	text32
  8366     1734                     __ptext32:	
  8367 ;; *************** function _ADC_Initialize *****************
  8368 ;; Defined at:
  8369 ;;		line 67 in file "mcc_generated_files/adc.c"
  8370 ;; Parameters:    Size  Location     Type
  8371 ;;		None
  8372 ;; Auto vars:     Size  Location     Type
  8373 ;;		None
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  1    wreg      void 
  8376 ;; Registers used:
  8377 ;;		wreg, status,2
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8387 ;;Total ram usage:        0 bytes
  8388 ;; Hardware stack levels used: 1
  8389 ;; Hardware stack levels required when called: 5
  8390 ;; This function calls:
  8391 ;;		Nothing
  8392 ;; This function is called by:
  8393 ;;		_SYSTEM_Initialize
  8394 ;; This function uses a non-reentrant model
  8395 ;;
  8396                           
  8397     1734                     _ADC_Initialize:	
  8398                           ;psect for function _ADC_Initialize
  8399                           
  8400                           
  8401                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xA0;
  8402                           
  8403                           ;incstack = 0
  8404                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  8405     1734  30A0               	movlw	160
  8406     1735  0021               	movlb	1	; select bank1
  8407     1736  009E               	movwf	30	;volatile
  8408                           
  8409                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  8410     1737  019B               	clrf	27	;volatile
  8411                           
  8412                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  8413     1738  019C               	clrf	28	;volatile
  8414                           
  8415                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  8416     1739  3001               	movlw	1
  8417     173A  009D               	movwf	29	;volatile
  8418     173B  0008               	return
  8419     173C                     __end_of_ADC_Initialize:
  8420                           
  8421                           	psect	text33
  8422     0894                     __ptext33:	
  8423 ;; *************** function _DATAEE_WriteByte *****************
  8424 ;; Defined at:
  8425 ;;		line 187 in file "mcc_generated_files/memory.c"
  8426 ;; Parameters:    Size  Location     Type
  8427 ;;  bAdd            1    wreg     unsigned char 
  8428 ;;  bData           1    4[COMMON] unsigned char 
  8429 ;; Auto vars:     Size  Location     Type
  8430 ;;  bAdd            1    0[BANK0 ] unsigned char 
  8431 ;;  GIEBitValue     1    1[BANK0 ] unsigned char 
  8432 ;; Return value:  Size  Location     Type
  8433 ;;                  1    wreg      void 
  8434 ;; Registers used:
  8435 ;;		wreg, status,2, status,0
  8436 ;; Tracked objects:
  8437 ;;		On entry : 0/0
  8438 ;;		On exit  : 0/0
  8439 ;;		Unchanged: 0/0
  8440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8441 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8442 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8444 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8445 ;;Total ram usage:        3 bytes
  8446 ;; Hardware stack levels used: 1
  8447 ;; Hardware stack levels required when called: 5
  8448 ;; This function calls:
  8449 ;;		Nothing
  8450 ;; This function is called by:
  8451 ;;		_main
  8452 ;; This function uses a non-reentrant model
  8453 ;;
  8454                           
  8455     0894                     _DATAEE_WriteByte:	
  8456                           ;psect for function _DATAEE_WriteByte
  8457                           
  8458                           
  8459                           ;incstack = 0
  8460                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
  8461                           ;DATAEE_WriteByte@bAdd stored from wreg
  8462     0894  0020               	movlb	0	; select bank0
  8463     0895  00A0               	movwf	DATAEE_WriteByte@bAdd
  8464     0896  0820               	movf	DATAEE_WriteByte@bAdd,w
  8465     0897  0023               	movlb	3	; select bank3
  8466     0898  0091               	movwf	17	;volatile
  8467     0899  0874               	movf	DATAEE_WriteByte@bData,w
  8468     089A  0093               	movwf	19	;volatile
  8469     089B  1395               	bcf	21,7	;volsfr
  8470     089C  1315               	bcf	21,6	;volsfr
  8471     089D  1515               	bsf	21,2	;volsfr
  8472     089E  3000               	movlw	0
  8473     089F  1B8B               	btfsc	11,7	;volatile
  8474     08A0  3001               	movlw	1
  8475     08A1  0020               	movlb	0	; select bank0
  8476     08A2  00A1               	movwf	DATAEE_WriteByte@GIEBitValue
  8477     08A3  138B               	bcf	11,7	;volatile
  8478     08A4  3055               	movlw	85
  8479     08A5  0023               	movlb	3	; select bank3
  8480     08A6  0096               	movwf	22	;volsfr
  8481     08A7  30AA               	movlw	170
  8482     08A8  0096               	movwf	22	;volsfr
  8483     08A9  1495               	bsf	21,1	;volsfr
  8484     08AA  28AC               	goto	l362
  8485     08AB                     l363:
  8486     08AB  0000               	nop
  8487     08AC                     l362:
  8488     08AC  0023               	movlb	3	; select bank3
  8489     08AD  1895               	btfsc	21,1	;volsfr
  8490     08AE  28AB               	goto	l363
  8491     08AF  1115               	bcf	21,2	;volsfr
  8492     08B0  0020               	movlb	0	; select bank0
  8493     08B1  0C21               	rrf	DATAEE_WriteByte@GIEBitValue,w
  8494     08B2  1C03               	skipc
  8495     08B3  138B               	bcf	11,7	;volatile
  8496     08B4  1803               	skipnc
  8497     08B5  178B               	bsf	11,7	;volatile
  8498     08B6  0008               	return
  8499     08B7                     __end_of_DATAEE_WriteByte:
  8500                           
  8501                           	psect	text34
  8502     1771                     __ptext34:	
  8503 ;; *************** function _DATAEE_ReadByte *****************
  8504 ;; Defined at:
  8505 ;;		line 212 in file "mcc_generated_files/memory.c"
  8506 ;; Parameters:    Size  Location     Type
  8507 ;;  bAdd            1    wreg     unsigned char 
  8508 ;; Auto vars:     Size  Location     Type
  8509 ;;  bAdd            1    4[COMMON] unsigned char 
  8510 ;; Return value:  Size  Location     Type
  8511 ;;                  1    wreg      unsigned char 
  8512 ;; Registers used:
  8513 ;;		wreg
  8514 ;; Tracked objects:
  8515 ;;		On entry : 0/0
  8516 ;;		On exit  : 0/0
  8517 ;;		Unchanged: 0/0
  8518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8520 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8522 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8523 ;;Total ram usage:        1 bytes
  8524 ;; Hardware stack levels used: 1
  8525 ;; Hardware stack levels required when called: 5
  8526 ;; This function calls:
  8527 ;;		Nothing
  8528 ;; This function is called by:
  8529 ;;		_main
  8530 ;; This function uses a non-reentrant model
  8531 ;;
  8532                           
  8533     1771                     _DATAEE_ReadByte:	
  8534                           ;psect for function _DATAEE_ReadByte
  8535                           
  8536                           
  8537                           ;incstack = 0
  8538                           ; Regs used in _DATAEE_ReadByte: [wreg]
  8539                           ;DATAEE_ReadByte@bAdd stored from wreg
  8540     1771  00F4               	movwf	DATAEE_ReadByte@bAdd
  8541     1772  0874               	movf	DATAEE_ReadByte@bAdd,w
  8542     1773  0023               	movlb	3	; select bank3
  8543     1774  0091               	movwf	17	;volatile
  8544     1775  1315               	bcf	21,6	;volsfr
  8545     1776  1395               	bcf	21,7	;volsfr
  8546     1777  1415               	bsf	21,0	;volsfr
  8547     1778  0000               	nop
  8548     1779  0000               	nop
  8549     177A  0000               	nop
  8550     177B  0023               	movlb	3	; select bank3
  8551     177C  0813               	movf	19,w	;volatile
  8552     177D  0008               	return
  8553     177E                     __end_of_DATAEE_ReadByte:
  8554                           
  8555                           	psect	intentry
  8556     0004                     __pintentry:	
  8557 ;; *************** function _INTERRUPT_InterruptManager *****************
  8558 ;; Defined at:
  8559 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8560 ;; Parameters:    Size  Location     Type
  8561 ;;		None
  8562 ;; Auto vars:     Size  Location     Type
  8563 ;;		None
  8564 ;; Return value:  Size  Location     Type
  8565 ;;                  1    wreg      void 
  8566 ;; Registers used:
  8567 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8568 ;; Tracked objects:
  8569 ;;		On entry : 0/0
  8570 ;;		On exit  : 0/0
  8571 ;;		Unchanged: 0/0
  8572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8577 ;;Total ram usage:        0 bytes
  8578 ;; Hardware stack levels used: 1
  8579 ;; Hardware stack levels required when called: 4
  8580 ;; This function calls:
  8581 ;;		_TMR0_ISR
  8582 ;;		_TMR1_ISR
  8583 ;;		_TMR2_ISR
  8584 ;; This function is called by:
  8585 ;;		Interrupt level 1
  8586 ;; This function uses a non-reentrant model
  8587 ;;
  8588                           
  8589     0004                     _INTERRUPT_InterruptManager:
  8590                           
  8591                           ;incstack = 0
  8592     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8593                           
  8594                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8595     0005  3180               	pagesel	$
  8596                           
  8597                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  8598     0006  1A8B               	btfsc	11,5	;volatile
  8599     0007  1D0B               	btfss	11,2	;volatile
  8600     0008  280D               	goto	i1l157
  8601                           
  8602                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  8603     0009  3197  271E  3180   	fcall	_TMR0_ISR
  8604                           
  8605                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  8606     000C  2821               	goto	i1l165
  8607     000D                     i1l157:	
  8608                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  8609                           
  8610     000D  1F0B               	btfss	11,6	;volatile
  8611     000E  2821               	goto	i1l165
  8612                           
  8613                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  8614     000F  0021               	movlb	1	; select bank1
  8615     0010  1C91               	btfss	17,1	;volatile
  8616     0011  2819               	goto	i1l160
  8617     0012  0020               	movlb	0	; select bank0
  8618     0013  1C91               	btfss	17,1	;volatile
  8619     0014  2819               	goto	i1l160
  8620                           
  8621                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR2_ISR();
  8622     0015  3196  26EF  3180   	fcall	_TMR2_ISR
  8623                           
  8624                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  8625     0018  2821               	goto	i1l165
  8626     0019                     i1l160:	
  8627                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.TMR1IE == 1 && PI
      +                          R1bits.TMR1IF == 1)
  8628                           
  8629     0019  0021               	movlb	1	; select bank1
  8630     001A  1C11               	btfss	17,0	;volatile
  8631     001B  2821               	goto	i1l165
  8632     001C  0020               	movlb	0	; select bank0
  8633     001D  1C11               	btfss	17,0	;volatile
  8634     001E  2821               	goto	i1l165
  8635                           
  8636                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR1_ISR();
  8637     001F  3197  2764         	fcall	_TMR1_ISR
  8638     0021                     i1l165:	
  8639                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
  8640                           
  8641                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  8642                           
  8643     0021  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8644     0022  0009               	retfie
  8645     0023                     __end_of_INTERRUPT_InterruptManager:
  8646                           
  8647                           	psect	text36
  8648     16EF                     __ptext36:	
  8649 ;; *************** function _TMR2_ISR *****************
  8650 ;; Defined at:
  8651 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  8652 ;; Parameters:    Size  Location     Type
  8653 ;;		None
  8654 ;; Auto vars:     Size  Location     Type
  8655 ;;		None
  8656 ;; Return value:  Size  Location     Type
  8657 ;;                  1    wreg      void 
  8658 ;; Registers used:
  8659 ;;		wreg, status,2, status,0, pclath, cstack
  8660 ;; Tracked objects:
  8661 ;;		On entry : 0/0
  8662 ;;		On exit  : 0/0
  8663 ;;		Unchanged: 0/0
  8664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8669 ;;Total ram usage:        0 bytes
  8670 ;; Hardware stack levels used: 1
  8671 ;; Hardware stack levels required when called: 2
  8672 ;; This function calls:
  8673 ;;		_TMR2_CallBack
  8674 ;; This function is called by:
  8675 ;;		_INTERRUPT_InterruptManager
  8676 ;; This function uses a non-reentrant model
  8677 ;;
  8678                           
  8679     16EF                     _TMR2_ISR:	
  8680                           ;psect for function _TMR2_ISR
  8681                           
  8682                           
  8683                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
  8684                           
  8685                           ;incstack = 0
  8686                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  8687     16EF  0020               	movlb	0	; select bank0
  8688     16F0  1091               	bcf	17,1	;volatile
  8689                           
  8690                           ;mcc_generated_files/tmr2.c: 127:     TMR2_CallBack();
  8691     16F1  3187  27F5         	fcall	_TMR2_CallBack
  8692     16F3  0008               	return
  8693     16F4                     __end_of_TMR2_ISR:
  8694                           
  8695                           	psect	text37
  8696     07F5                     __ptext37:	
  8697 ;; *************** function _TMR2_CallBack *****************
  8698 ;; Defined at:
  8699 ;;		line 130 in file "mcc_generated_files/tmr2.c"
  8700 ;; Parameters:    Size  Location     Type
  8701 ;;		None
  8702 ;; Auto vars:     Size  Location     Type
  8703 ;;		None
  8704 ;; Return value:  Size  Location     Type
  8705 ;;                  1    wreg      void 
  8706 ;; Registers used:
  8707 ;;		wreg, status,2, status,0, pclath, cstack
  8708 ;; Tracked objects:
  8709 ;;		On entry : 0/0
  8710 ;;		On exit  : 0/0
  8711 ;;		Unchanged: 0/0
  8712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8717 ;;Total ram usage:        0 bytes
  8718 ;; Hardware stack levels used: 1
  8719 ;; Hardware stack levels required when called: 1
  8720 ;; This function calls:
  8721 ;;		NULL
  8722 ;;		_TMR2_DefaultInterruptHandler
  8723 ;;		__SpkrControlISR
  8724 ;; This function is called by:
  8725 ;;		_TMR2_ISR
  8726 ;; This function uses a non-reentrant model
  8727 ;;
  8728                           
  8729     07F5                     _TMR2_CallBack:	
  8730                           ;psect for function _TMR2_CallBack
  8731                           
  8732                           
  8733                           ;mcc_generated_files/tmr2.c: 134:     if(TMR2_InterruptHandler)
  8734                           
  8735                           ;incstack = 0
  8736                           ; Regs used in _TMR2_CallBack: [wreg+status,2+status,0+pclath+cstack]
  8737     07F5  0021               	movlb	1	; select bank1
  8738     07F6  0851               	movf	_TMR2_InterruptHandler^(0+128),w
  8739     07F7  0452               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
  8740     07F8  1903               	btfsc	3,2
  8741     07F9  0008               	return
  8742                           
  8743                           ;mcc_generated_files/tmr2.c: 135:     {;mcc_generated_files/tmr2.c: 136:         TMR2_In
      +                          terruptHandler();
  8744     07FA  0852               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
  8745     07FB  008A               	movwf	10
  8746     07FC  0851               	movf	_TMR2_InterruptHandler^(0+128),w
  8747     07FD  000A               	callw
  8748     07FE  3187               	pagesel	$
  8749     07FF  0008               	return
  8750     0800                     __end_of_TMR2_CallBack:
  8751                           
  8752                           	psect	text38
  8753     16E8                     __ptext38:	
  8754 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  8755 ;; Defined at:
  8756 ;;		line 144 in file "mcc_generated_files/tmr2.c"
  8757 ;; Parameters:    Size  Location     Type
  8758 ;;		None
  8759 ;; Auto vars:     Size  Location     Type
  8760 ;;		None
  8761 ;; Return value:  Size  Location     Type
  8762 ;;                  1    wreg      void 
  8763 ;; Registers used:
  8764 ;;		None
  8765 ;; Tracked objects:
  8766 ;;		On entry : 0/0
  8767 ;;		On exit  : 0/0
  8768 ;;		Unchanged: 0/0
  8769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8774 ;;Total ram usage:        0 bytes
  8775 ;; Hardware stack levels used: 1
  8776 ;; This function calls:
  8777 ;;		Nothing
  8778 ;; This function is called by:
  8779 ;;		_TMR2_Initialize
  8780 ;;		_TMR2_CallBack
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784     16E8                     _TMR2_DefaultInterruptHandler:	
  8785                           ;psect for function _TMR2_DefaultInterruptHandler
  8786                           
  8787                           
  8788                           ;incstack = 0
  8789                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  8790     16E8  0008               	return
  8791     16E9                     __end_of_TMR2_DefaultInterruptHandler:
  8792                           
  8793                           	psect	text39
  8794     08DD                     __ptext39:	
  8795 ;; *************** function __SpkrControlISR *****************
  8796 ;; Defined at:
  8797 ;;		line 225 in file "main.c"
  8798 ;; Parameters:    Size  Location     Type
  8799 ;;		None
  8800 ;; Auto vars:     Size  Location     Type
  8801 ;;		None
  8802 ;; Return value:  Size  Location     Type
  8803 ;;                  1    wreg      void 
  8804 ;; Registers used:
  8805 ;;		wreg, status,2, status,0
  8806 ;; Tracked objects:
  8807 ;;		On entry : 0/0
  8808 ;;		On exit  : 0/0
  8809 ;;		Unchanged: 0/0
  8810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8813 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8814 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8815 ;;Total ram usage:        1 bytes
  8816 ;; Hardware stack levels used: 1
  8817 ;; This function calls:
  8818 ;;		Nothing
  8819 ;; This function is called by:
  8820 ;;		_main
  8821 ;;		_TMR2_CallBack
  8822 ;; This function uses a non-reentrant model
  8823 ;;
  8824                           
  8825     08DD                     __SpkrControlISR:	
  8826                           ;psect for function __SpkrControlISR
  8827                           
  8828                           
  8829                           ;main.c: 227:     SPKR_DC++;
  8830                           
  8831                           ;incstack = 0
  8832                           ; Regs used in __SpkrControlISR: [wreg+status,2+status,0]
  8833     08DD  3001               	movlw	1
  8834     08DE  00F0               	movwf	??__SpkrControlISR
  8835     08DF  0870               	movf	??__SpkrControlISR,w
  8836     08E0  0021               	movlb	1	; select bank1
  8837     08E1  07CC               	addwf	_SPKR_DC^(0+128),f
  8838                           
  8839                           ;main.c: 229:     if (SPKR_COUNT == 0)
  8840     08E2  085D               	movf	_SPKR_COUNT^(0+128),w
  8841     08E3  1D03               	btfss	3,2
  8842     08E4  28E7               	goto	i1l2916
  8843                           
  8844                           ;main.c: 230:     {;main.c: 231:         do { TRISAbits.TRISA1 = 0; } while(0);
  8845     08E5  108C               	bcf	12,1	;volatile
  8846                           
  8847                           ;main.c: 232:         SPKR_DC = 0;
  8848     08E6  01CC               	clrf	_SPKR_DC^(0+128)
  8849     08E7                     i1l2916:
  8850                           
  8851                           ;main.c: 235:     if (SPKR_COUNT < SPKR_DURATION)
  8852     08E7  085E               	movf	_SPKR_DURATION^(0+128),w
  8853     08E8  025D               	subwf	_SPKR_COUNT^(0+128),w
  8854     08E9  1803               	skipnc
  8855     08EA  291D               	goto	i1l522
  8856                           
  8857                           ;main.c: 236:     {;main.c: 237:         if (DN_CLICKED)
  8858     08EB  084B               	movf	_DN_CLICKED^(0+128),w
  8859     08EC  1903               	btfsc	3,2
  8860     08ED  2911               	goto	i1l2932
  8861                           
  8862                           ;main.c: 238:         {;main.c: 240:             if (SPKR_DC == 0)
  8863     08EE  084C               	movf	_SPKR_DC^(0+128),w
  8864     08EF  1D03               	btfss	3,2
  8865     08F0  28FC               	goto	i1l2924
  8866     08F1  1003               	clrc
  8867     08F2  0022               	movlb	2	; select bank2
  8868     08F3  1C8C               	btfss	12,1	;volatile
  8869     08F4  1403               	setc
  8870     08F5  1C03               	btfss	3,0
  8871     08F6  28FA               	goto	u272_20
  8872     08F7  0022               	movlb	2	; select bank2
  8873     08F8  148C               	bsf	12,1	;volatile
  8874     08F9  28FC               	goto	i1l2924
  8875     08FA                     u272_20:
  8876     08FA  0022               	movlb	2	; select bank2
  8877     08FB  108C               	bcf	12,1	;volatile
  8878     08FC                     i1l2924:
  8879                           
  8880                           ;main.c: 242:             if (SPKR_DC == 2)
  8881     08FC  3002               	movlw	2
  8882     08FD  0021               	movlb	1	; select bank1
  8883     08FE  064C               	xorwf	_SPKR_DC^(0+128),w
  8884     08FF  1D03               	btfss	3,2
  8885     0900  290C               	goto	i1l2928
  8886     0901  1003               	clrc
  8887     0902  0022               	movlb	2	; select bank2
  8888     0903  1C8C               	btfss	12,1	;volatile
  8889     0904  1403               	setc
  8890     0905  1C03               	btfss	3,0
  8891     0906  290A               	goto	u275_20
  8892     0907  0022               	movlb	2	; select bank2
  8893     0908  148C               	bsf	12,1	;volatile
  8894     0909  290C               	goto	i1l2928
  8895     090A                     u275_20:
  8896     090A  0022               	movlb	2	; select bank2
  8897     090B  108C               	bcf	12,1	;volatile
  8898     090C                     i1l2928:
  8899                           
  8900                           ;main.c: 245:             if (SPKR_DC == 3)
  8901     090C  3003               	movlw	3
  8902     090D  0021               	movlb	1	; select bank1
  8903     090E  064C               	xorwf	_SPKR_DC^(0+128),w
  8904     090F  1903               	btfsc	3,2
  8905                           
  8906                           ;main.c: 246:                 SPKR_DC = 0;
  8907     0910  01CC               	clrf	_SPKR_DC^(0+128)
  8908     0911                     i1l2932:
  8909     0911  1003               	clrc
  8910     0912  0022               	movlb	2	; select bank2
  8911     0913  1C8C               	btfss	12,1	;volatile
  8912     0914  1403               	setc
  8913     0915  1C03               	btfss	3,0
  8914     0916  291A               	goto	u278_20
  8915     0917  0022               	movlb	2	; select bank2
  8916     0918  148C               	bsf	12,1	;volatile
  8917     0919  0008               	return
  8918     091A                     u278_20:
  8919     091A  0022               	movlb	2	; select bank2
  8920     091B  108C               	bcf	12,1	;volatile
  8921     091C  0008               	return
  8922     091D                     i1l522:	
  8923                           ;main.c: 251:     {;main.c: 252:         do { TRISAbits.TRISA1 = 1; } while(0);
  8924                           
  8925     091D  148C               	bsf	12,1	;volatile
  8926     091E  0008               	return
  8927     091F                     __end_of__SpkrControlISR:
  8928                           
  8929                           	psect	text40
  8930     1764                     __ptext40:	
  8931 ;; *************** function _TMR1_ISR *****************
  8932 ;; Defined at:
  8933 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  8934 ;; Parameters:    Size  Location     Type
  8935 ;;		None
  8936 ;; Auto vars:     Size  Location     Type
  8937 ;;		None
  8938 ;; Return value:  Size  Location     Type
  8939 ;;                  1    wreg      void 
  8940 ;; Registers used:
  8941 ;;		wreg, status,2, status,0, pclath, cstack
  8942 ;; Tracked objects:
  8943 ;;		On entry : 0/0
  8944 ;;		On exit  : 0/0
  8945 ;;		Unchanged: 0/0
  8946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8951 ;;Total ram usage:        0 bytes
  8952 ;; Hardware stack levels used: 1
  8953 ;; Hardware stack levels required when called: 2
  8954 ;; This function calls:
  8955 ;;		_TMR1_CallBack
  8956 ;;		_TMR1_WriteTimer
  8957 ;; This function is called by:
  8958 ;;		_INTERRUPT_InterruptManager
  8959 ;; This function uses a non-reentrant model
  8960 ;;
  8961                           
  8962     1764                     _TMR1_ISR:	
  8963                           ;psect for function _TMR1_ISR
  8964                           
  8965                           
  8966                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  8967                           
  8968                           ;incstack = 0
  8969                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  8970     1764  0020               	movlb	0	; select bank0
  8971     1765  1011               	bcf	17,0	;volatile
  8972                           
  8973                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  8974     1766  0021               	movlb	1	; select bank1
  8975     1767  0848               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
  8976     1768  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  8977     1769  0847               	movf	_timer1ReloadVal^(0+128),w	;volatile
  8978     176A  00F0               	movwf	TMR1_WriteTimer@timerVal
  8979     176B  3197  277E  3197   	fcall	_TMR1_WriteTimer
  8980                           
  8981                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  8982     176E  3197  2759         	fcall	_TMR1_CallBack
  8983     1770  0008               	return
  8984     1771                     __end_of_TMR1_ISR:
  8985                           
  8986                           	psect	text41
  8987     177E                     __ptext41:	
  8988 ;; *************** function _TMR1_WriteTimer *****************
  8989 ;; Defined at:
  8990 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  8991 ;; Parameters:    Size  Location     Type
  8992 ;;  timerVal        2    0[COMMON] unsigned short 
  8993 ;; Auto vars:     Size  Location     Type
  8994 ;;		None
  8995 ;; Return value:  Size  Location     Type
  8996 ;;                  1    wreg      void 
  8997 ;; Registers used:
  8998 ;;		wreg, status,2
  8999 ;; Tracked objects:
  9000 ;;		On entry : 0/0
  9001 ;;		On exit  : 0/0
  9002 ;;		Unchanged: 0/0
  9003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9004 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9007 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9008 ;;Total ram usage:        2 bytes
  9009 ;; Hardware stack levels used: 1
  9010 ;; This function calls:
  9011 ;;		Nothing
  9012 ;; This function is called by:
  9013 ;;		_TMR1_ISR
  9014 ;;		_TMR1_Reload
  9015 ;; This function uses a non-reentrant model
  9016 ;;
  9017                           
  9018     177E                     _TMR1_WriteTimer:	
  9019                           ;psect for function _TMR1_WriteTimer
  9020                           
  9021                           
  9022                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  9023                           
  9024                           ;incstack = 0
  9025                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  9026     177E  0020               	movlb	0	; select bank0
  9027     177F  1D18               	btfss	24,2	;volatile
  9028     1780  2F88               	goto	i1l3490
  9029                           
  9030                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  9031     1781  1018               	bcf	24,0	;volatile
  9032                           
  9033                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
  9034     1782  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9035     1783  0097               	movwf	23	;volatile
  9036                           
  9037                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  9038     1784  0870               	movf	TMR1_WriteTimer@timerVal,w
  9039     1785  0096               	movwf	22	;volatile
  9040                           
  9041                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  9042     1786  1418               	bsf	24,0	;volatile
  9043                           
  9044                           ;mcc_generated_files/tmr1.c: 133:     }
  9045     1787  0008               	return
  9046     1788                     i1l3490:
  9047                           
  9048                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  9049     1788  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9050     1789  0097               	movwf	23	;volatile
  9051                           
  9052                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
  9053     178A  0870               	movf	TMR1_WriteTimer@timerVal,w
  9054     178B  0096               	movwf	22	;volatile
  9055     178C  0008               	return
  9056     178D                     __end_of_TMR1_WriteTimer:
  9057                           
  9058                           	psect	text42
  9059     1759                     __ptext42:	
  9060 ;; *************** function _TMR1_CallBack *****************
  9061 ;; Defined at:
  9062 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  9063 ;; Parameters:    Size  Location     Type
  9064 ;;		None
  9065 ;; Auto vars:     Size  Location     Type
  9066 ;;		None
  9067 ;; Return value:  Size  Location     Type
  9068 ;;                  1    wreg      void 
  9069 ;; Registers used:
  9070 ;;		wreg, status,2, status,0, pclath, cstack
  9071 ;; Tracked objects:
  9072 ;;		On entry : 0/0
  9073 ;;		On exit  : 0/0
  9074 ;;		Unchanged: 0/0
  9075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9080 ;;Total ram usage:        0 bytes
  9081 ;; Hardware stack levels used: 1
  9082 ;; Hardware stack levels required when called: 1
  9083 ;; This function calls:
  9084 ;;		NULL
  9085 ;;		_TMR1_DefaultInterruptHandler
  9086 ;;		__LogicControlISR
  9087 ;; This function is called by:
  9088 ;;		_TMR1_ISR
  9089 ;; This function uses a non-reentrant model
  9090 ;;
  9091                           
  9092     1759                     _TMR1_CallBack:	
  9093                           ;psect for function _TMR1_CallBack
  9094                           
  9095                           
  9096                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  9097                           
  9098                           ;incstack = 0
  9099                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  9100     1759  0021               	movlb	1	; select bank1
  9101     175A  0859               	movf	_TMR1_InterruptHandler^(0+128),w
  9102     175B  045A               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
  9103     175C  1903               	btfsc	3,2
  9104     175D  0008               	return
  9105                           
  9106                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  9107     175E  085A               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
  9108     175F  008A               	movwf	10
  9109     1760  0859               	movf	_TMR1_InterruptHandler^(0+128),w
  9110     1761  000A               	callw
  9111     1762  3197               	pagesel	$
  9112     1763  0008               	return
  9113     1764                     __end_of_TMR1_CallBack:
  9114                           
  9115                           	psect	text43
  9116     16E7                     __ptext43:	
  9117 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  9118 ;; Defined at:
  9119 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  9120 ;; Parameters:    Size  Location     Type
  9121 ;;		None
  9122 ;; Auto vars:     Size  Location     Type
  9123 ;;		None
  9124 ;; Return value:  Size  Location     Type
  9125 ;;                  1    wreg      void 
  9126 ;; Registers used:
  9127 ;;		None
  9128 ;; Tracked objects:
  9129 ;;		On entry : 0/0
  9130 ;;		On exit  : 0/0
  9131 ;;		Unchanged: 0/0
  9132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9137 ;;Total ram usage:        0 bytes
  9138 ;; Hardware stack levels used: 1
  9139 ;; This function calls:
  9140 ;;		Nothing
  9141 ;; This function is called by:
  9142 ;;		_TMR1_Initialize
  9143 ;;		_TMR1_CallBack
  9144 ;; This function uses a non-reentrant model
  9145 ;;
  9146                           
  9147     16E7                     _TMR1_DefaultInterruptHandler:	
  9148                           ;psect for function _TMR1_DefaultInterruptHandler
  9149                           
  9150                           
  9151                           ;incstack = 0
  9152                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  9153     16E7  0008               	return
  9154     16E8                     __end_of_TMR1_DefaultInterruptHandler:
  9155                           
  9156                           	psect	text44
  9157     08B7                     __ptext44:	
  9158 ;; *************** function __LogicControlISR *****************
  9159 ;; Defined at:
  9160 ;;		line 428 in file "main.c"
  9161 ;; Parameters:    Size  Location     Type
  9162 ;;		None
  9163 ;; Auto vars:     Size  Location     Type
  9164 ;;		None
  9165 ;; Return value:  Size  Location     Type
  9166 ;;                  1    wreg      void 
  9167 ;; Registers used:
  9168 ;;		wreg, status,2, status,0
  9169 ;; Tracked objects:
  9170 ;;		On entry : 0/0
  9171 ;;		On exit  : 0/0
  9172 ;;		Unchanged: 0/0
  9173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9176 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9177 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9178 ;;Total ram usage:        1 bytes
  9179 ;; Hardware stack levels used: 1
  9180 ;; This function calls:
  9181 ;;		Nothing
  9182 ;; This function is called by:
  9183 ;;		_main
  9184 ;;		_TMR1_CallBack
  9185 ;; This function uses a non-reentrant model
  9186 ;;
  9187                           
  9188     08B7                     __LogicControlISR:	
  9189                           ;psect for function __LogicControlISR
  9190                           
  9191                           
  9192                           ;main.c: 431:     LOGIC_TICK++;
  9193                           
  9194                           ;incstack = 0
  9195                           ; Regs used in __LogicControlISR: [wreg+status,2+status,0]
  9196     08B7  3001               	movlw	1
  9197     08B8  00F0               	movwf	??__LogicControlISR
  9198     08B9  0870               	movf	??__LogicControlISR,w
  9199     08BA  07F8               	addwf	_LOGIC_TICK,f
  9200                           
  9201                           ;main.c: 432:     SPKR_COUNT++;
  9202     08BB  3001               	movlw	1
  9203     08BC  00F0               	movwf	??__LogicControlISR
  9204     08BD  0870               	movf	??__LogicControlISR,w
  9205     08BE  0021               	movlb	1	; select bank1
  9206     08BF  07DD               	addwf	_SPKR_COUNT^(0+128),f
  9207                           
  9208                           ;main.c: 434:     if (SPKR_COUNT >= SPKR_DURATION)
  9209     08C0  085E               	movf	_SPKR_DURATION^(0+128),w
  9210     08C1  025D               	subwf	_SPKR_COUNT^(0+128),w
  9211     08C2  1C03               	skipc
  9212     08C3  28C6               	goto	i1l603
  9213                           
  9214                           ;main.c: 435:         SPKR_COUNT = SPKR_DURATION;
  9215     08C4  085E               	movf	_SPKR_DURATION^(0+128),w
  9216     08C5  00DD               	movwf	_SPKR_COUNT^(0+128)
  9217     08C6                     i1l603:
  9218                           
  9219                           ;main.c: 437:     if (LOGIC_TICK >= 3)
  9220     08C6  3003               	movlw	3
  9221     08C7  0278               	subwf	_LOGIC_TICK,w
  9222     08C8  1C03               	skipc
  9223     08C9  28CD               	goto	i1l3022
  9224                           
  9225                           ;main.c: 438:         READ_FLAG = 1;
  9226     08CA  0022               	movlb	2	; select bank2
  9227     08CB  01D6               	clrf	_READ_FLAG^(0+256)
  9228     08CC  0AD6               	incf	_READ_FLAG^(0+256),f
  9229     08CD                     i1l3022:
  9230                           
  9231                           ;main.c: 440:     if (LOGIC_TICK >= 5)
  9232     08CD  3005               	movlw	5
  9233     08CE  0278               	subwf	_LOGIC_TICK,w
  9234     08CF  1C03               	skipc
  9235     08D0  28D4               	goto	i1l3026
  9236                           
  9237                           ;main.c: 441:         UART_FLAG = 1;
  9238     08D1  0022               	movlb	2	; select bank2
  9239     08D2  01D5               	clrf	_UART_FLAG^(0+256)
  9240     08D3  0AD5               	incf	_UART_FLAG^(0+256),f
  9241     08D4                     i1l3026:
  9242     08D4  300A               	movlw	10
  9243     08D5  0278               	subwf	_LOGIC_TICK,w
  9244     08D6  1C03               	skipc
  9245     08D7  0008               	return
  9246                           
  9247                           ;main.c: 444:     {;main.c: 445:         LOGIC_FLAG = 1;
  9248     08D8  0022               	movlb	2	; select bank2
  9249     08D9  01D4               	clrf	_LOGIC_FLAG^(0+256)
  9250     08DA  0AD4               	incf	_LOGIC_FLAG^(0+256),f
  9251                           
  9252                           ;main.c: 446:         LOGIC_TICK = 0;
  9253     08DB  01F8               	clrf	_LOGIC_TICK
  9254     08DC  0008               	return
  9255     08DD                     __end_of__LogicControlISR:
  9256                           
  9257                           	psect	text45
  9258     171E                     __ptext45:	
  9259 ;; *************** function _TMR0_ISR *****************
  9260 ;; Defined at:
  9261 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  9262 ;; Parameters:    Size  Location     Type
  9263 ;;		None
  9264 ;; Auto vars:     Size  Location     Type
  9265 ;;		None
  9266 ;; Return value:  Size  Location     Type
  9267 ;;                  1    wreg      void 
  9268 ;; Registers used:
  9269 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9270 ;; Tracked objects:
  9271 ;;		On entry : 0/0
  9272 ;;		On exit  : 0/0
  9273 ;;		Unchanged: 0/0
  9274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9279 ;;Total ram usage:        0 bytes
  9280 ;; Hardware stack levels used: 1
  9281 ;; Hardware stack levels required when called: 3
  9282 ;; This function calls:
  9283 ;;		_TMR0_CallBack
  9284 ;; This function is called by:
  9285 ;;		_INTERRUPT_InterruptManager
  9286 ;; This function uses a non-reentrant model
  9287 ;;
  9288                           
  9289     171E                     _TMR0_ISR:	
  9290                           ;psect for function _TMR0_ISR
  9291                           
  9292                           
  9293                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  9294                           
  9295                           ;incstack = 0
  9296                           ; Regs used in _TMR0_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9297     171E  110B               	bcf	11,2	;volatile
  9298                           
  9299                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  9300     171F  0879               	movf	_timer0ReloadVal,w	;volatile
  9301     1720  0020               	movlb	0	; select bank0
  9302     1721  0095               	movwf	21	;volatile
  9303                           
  9304                           ;mcc_generated_files/tmr0.c: 118:     TMR0_CallBack();
  9305     1722  3197  274E         	fcall	_TMR0_CallBack
  9306     1724  0008               	return
  9307     1725                     __end_of_TMR0_ISR:
  9308                           
  9309                           	psect	text46
  9310     174E                     __ptext46:	
  9311 ;; *************** function _TMR0_CallBack *****************
  9312 ;; Defined at:
  9313 ;;		line 123 in file "mcc_generated_files/tmr0.c"
  9314 ;; Parameters:    Size  Location     Type
  9315 ;;		None
  9316 ;; Auto vars:     Size  Location     Type
  9317 ;;		None
  9318 ;; Return value:  Size  Location     Type
  9319 ;;                  1    wreg      void 
  9320 ;; Registers used:
  9321 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9322 ;; Tracked objects:
  9323 ;;		On entry : 0/0
  9324 ;;		On exit  : 0/0
  9325 ;;		Unchanged: 0/0
  9326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9331 ;;Total ram usage:        0 bytes
  9332 ;; Hardware stack levels used: 1
  9333 ;; Hardware stack levels required when called: 2
  9334 ;; This function calls:
  9335 ;;		NULL
  9336 ;;		_TMR0_DefaultInterruptHandler
  9337 ;;		__UIControlISR
  9338 ;; This function is called by:
  9339 ;;		_TMR0_ISR
  9340 ;; This function uses a non-reentrant model
  9341 ;;
  9342                           
  9343     174E                     _TMR0_CallBack:	
  9344                           ;psect for function _TMR0_CallBack
  9345                           
  9346                           
  9347                           ;mcc_generated_files/tmr0.c: 127:     if(TMR0_InterruptHandler)
  9348                           
  9349                           ;incstack = 0
  9350                           ; Regs used in _TMR0_CallBack: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9351     174E  0021               	movlb	1	; select bank1
  9352     174F  085B               	movf	_TMR0_InterruptHandler^(0+128),w
  9353     1750  045C               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
  9354     1751  1903               	btfsc	3,2
  9355     1752  0008               	return
  9356                           
  9357                           ;mcc_generated_files/tmr0.c: 128:     {;mcc_generated_files/tmr0.c: 129:         TMR0_In
      +                          terruptHandler();
  9358     1753  085C               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
  9359     1754  008A               	movwf	10
  9360     1755  085B               	movf	_TMR0_InterruptHandler^(0+128),w
  9361     1756  000A               	callw
  9362     1757  3197               	pagesel	$
  9363     1758  0008               	return
  9364     1759                     __end_of_TMR0_CallBack:
  9365                           
  9366                           	psect	text47
  9367     16E6                     __ptext47:	
  9368 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  9369 ;; Defined at:
  9370 ;;		line 137 in file "mcc_generated_files/tmr0.c"
  9371 ;; Parameters:    Size  Location     Type
  9372 ;;		None
  9373 ;; Auto vars:     Size  Location     Type
  9374 ;;		None
  9375 ;; Return value:  Size  Location     Type
  9376 ;;                  1    wreg      void 
  9377 ;; Registers used:
  9378 ;;		None
  9379 ;; Tracked objects:
  9380 ;;		On entry : 0/0
  9381 ;;		On exit  : 0/0
  9382 ;;		Unchanged: 0/0
  9383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9388 ;;Total ram usage:        0 bytes
  9389 ;; Hardware stack levels used: 1
  9390 ;; This function calls:
  9391 ;;		Nothing
  9392 ;; This function is called by:
  9393 ;;		_TMR0_Initialize
  9394 ;;		_TMR0_CallBack
  9395 ;; This function uses a non-reentrant model
  9396 ;;
  9397                           
  9398     16E6                     _TMR0_DefaultInterruptHandler:	
  9399                           ;psect for function _TMR0_DefaultInterruptHandler
  9400                           
  9401                           
  9402                           ;incstack = 0
  9403                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  9404     16E6  0008               	return
  9405     16E7                     __end_of_TMR0_DefaultInterruptHandler:
  9406                           
  9407                           	psect	text48
  9408     0B4C                     __ptext48:	
  9409 ;; *************** function __UIControlISR *****************
  9410 ;; Defined at:
  9411 ;;		line 258 in file "main.c"
  9412 ;; Parameters:    Size  Location     Type
  9413 ;;		None
  9414 ;; Auto vars:     Size  Location     Type
  9415 ;;  btnDnRead       1    3[COMMON] _Bool 
  9416 ;;  btnUpRead       1    2[COMMON] _Bool 
  9417 ;; Return value:  Size  Location     Type
  9418 ;;                  1    wreg      void 
  9419 ;; Registers used:
  9420 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9421 ;; Tracked objects:
  9422 ;;		On entry : 0/0
  9423 ;;		On exit  : 0/0
  9424 ;;		Unchanged: 0/0
  9425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9427 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9428 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9429 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9430 ;;Total ram usage:        3 bytes
  9431 ;; Hardware stack levels used: 1
  9432 ;; Hardware stack levels required when called: 1
  9433 ;; This function calls:
  9434 ;;		i1_EUSART_Write
  9435 ;; This function is called by:
  9436 ;;		_main
  9437 ;;		_TMR0_CallBack
  9438 ;; This function uses a non-reentrant model
  9439 ;;
  9440                           
  9441     0B4C                     __UIControlISR:	
  9442                           ;psect for function __UIControlISR
  9443                           
  9444                           
  9445                           ;main.c: 260:     _Bool btnUpRead, btnDnRead;;main.c: 263:     switch(DISP_STATE)
  9446                           
  9447                           ;incstack = 0
  9448                           ; Regs used in __UIControlISR: [wreg-fsr0h+status,2+status,0]
  9449     0B4C  2C02               	goto	i1l3008
  9450     0B4D                     i1l2936:
  9451                           
  9452                           ;main.c: 267:             btnUpRead = PORTAbits.RA4;
  9453     0B4D  3000               	movlw	0
  9454     0B4E  0020               	movlb	0	; select bank0
  9455     0B4F  1A0C               	btfsc	12,4	;volatile
  9456     0B50  3001               	movlw	1
  9457     0B51  00F2               	movwf	__UIControlISR@btnUpRead
  9458                           
  9459                           ;main.c: 268:             btnDnRead = PORTBbits.RB0;
  9460     0B52  3000               	movlw	0
  9461     0B53  180D               	btfsc	13,0	;volatile
  9462     0B54  3001               	movlw	1
  9463     0B55  00F3               	movwf	__UIControlISR@btnDnRead
  9464     0B56  0021               	movlb	1	; select bank1
  9465     0B57  120C               	bcf	12,4	;volatile
  9466     0B58  100D               	bcf	13,0	;volatile
  9467                           
  9468                           ;main.c: 286:             if (!btnDnRead)
  9469     0B59  0873               	movf	__UIControlISR@btnDnRead,w
  9470     0B5A  1D03               	btfss	3,2
  9471     0B5B  2B75               	goto	i1l2960
  9472                           
  9473                           ;main.c: 287:             {;main.c: 289:                 if (_LastDownState)
  9474     0B5C  084E               	movf	__LastDownState^(0+128),w
  9475     0B5D  1903               	btfsc	3,2
  9476     0B5E  2B75               	goto	i1l2960
  9477                           
  9478                           ;main.c: 290:                 {;main.c: 293:                     if (CURRENT_MODE > HEAT
      +                          _MODE_0)
  9479     0B5F  0877               	movf	_CURRENT_MODE+1,w
  9480     0B60  3A80               	xorlw	128
  9481     0B61  00F1               	movwf	??__UIControlISR
  9482     0B62  3080               	movlw	128
  9483     0B63  0271               	subwf	??__UIControlISR,w
  9484     0B64  1D03               	skipz
  9485     0B65  2B68               	goto	u282_25
  9486     0B66  3001               	movlw	1
  9487     0B67  0276               	subwf	_CURRENT_MODE,w
  9488     0B68                     u282_25:
  9489     0B68  1C03               	skipc
  9490     0B69  2B71               	goto	i1l2956
  9491                           
  9492                           ;main.c: 294:                     {;main.c: 295:                         CURRENT_MODE--;
  9493     0B6A  30FF               	movlw	255
  9494     0B6B  07F6               	addwf	_CURRENT_MODE,f
  9495     0B6C  30FF               	movlw	255
  9496     0B6D  3DF7               	addwfc	_CURRENT_MODE+1,f
  9497                           
  9498                           ;main.c: 296:                         _SaveMemory = 1;
  9499     0B6E  0022               	movlb	2	; select bank2
  9500     0B6F  01D7               	clrf	__SaveMemory^(0+256)
  9501     0B70  0AD7               	incf	__SaveMemory^(0+256),f
  9502     0B71                     i1l2956:	
  9503                           ;main.c: 298:                         if (1 == 4)
  9504                           
  9505                           
  9506                           ;main.c: 308:                     SPKR_COUNT = 0;
  9507     0B71  0021               	movlb	1	; select bank1
  9508     0B72  01DD               	clrf	_SPKR_COUNT^(0+128)
  9509                           
  9510                           ;main.c: 309:                     DN_CLICKED = 1;
  9511     0B73  01CB               	clrf	_DN_CLICKED^(0+128)
  9512     0B74  0ACB               	incf	_DN_CLICKED^(0+128),f
  9513     0B75                     i1l2960:	
  9514                           ;main.c: 310:                 }
  9515                           
  9516                           
  9517                           ;main.c: 318:             _LastDownState = btnDnRead;
  9518     0B75  0873               	movf	__UIControlISR@btnDnRead,w
  9519     0B76  00CE               	movwf	__LastDownState^(0+128)
  9520                           
  9521                           ;main.c: 320:             if (!btnUpRead)
  9522     0B77  0872               	movf	__UIControlISR@btnUpRead,w
  9523     0B78  1D03               	btfss	3,2
  9524     0B79  2B92               	goto	i1l2978
  9525                           
  9526                           ;main.c: 321:             {;main.c: 323:                 if (_LastUpState)
  9527     0B7A  084F               	movf	__LastUpState^(0+128),w
  9528     0B7B  1903               	btfsc	3,2
  9529     0B7C  2B92               	goto	i1l2978
  9530                           
  9531                           ;main.c: 324:                 {;main.c: 327:                     if (CURRENT_MODE < HEAT
      +                          _MODE_5)
  9532     0B7D  0877               	movf	_CURRENT_MODE+1,w
  9533     0B7E  3A80               	xorlw	128
  9534     0B7F  00F1               	movwf	??__UIControlISR
  9535     0B80  3080               	movlw	128
  9536     0B81  0271               	subwf	??__UIControlISR,w
  9537     0B82  1D03               	skipz
  9538     0B83  2B86               	goto	u285_25
  9539     0B84  3005               	movlw	5
  9540     0B85  0276               	subwf	_CURRENT_MODE,w
  9541     0B86                     u285_25:
  9542     0B86  1803               	skipnc
  9543     0B87  2B8F               	goto	i1l2974
  9544                           
  9545                           ;main.c: 328:                     {;main.c: 329:                         CURRENT_MODE++;
  9546     0B88  3001               	movlw	1
  9547     0B89  07F6               	addwf	_CURRENT_MODE,f
  9548     0B8A  3000               	movlw	0
  9549     0B8B  3DF7               	addwfc	_CURRENT_MODE+1,f
  9550                           
  9551                           ;main.c: 330:                         _SaveMemory = 1;
  9552     0B8C  0022               	movlb	2	; select bank2
  9553     0B8D  01D7               	clrf	__SaveMemory^(0+256)
  9554     0B8E  0AD7               	incf	__SaveMemory^(0+256),f
  9555     0B8F                     i1l2974:	
  9556                           ;main.c: 332:                         if (1 == 4)
  9557                           
  9558                           
  9559                           ;main.c: 342:                     SPKR_COUNT = 0;
  9560     0B8F  0021               	movlb	1	; select bank1
  9561     0B90  01DD               	clrf	_SPKR_COUNT^(0+128)
  9562                           
  9563                           ;main.c: 343:                     DN_CLICKED = 0;
  9564     0B91  01CB               	clrf	_DN_CLICKED^(0+128)
  9565     0B92                     i1l2978:	
  9566                           ;main.c: 344:                 }
  9567                           
  9568                           
  9569                           ;main.c: 352:             _LastUpState = btnUpRead;
  9570     0B92  0872               	movf	__UIControlISR@btnUpRead,w
  9571     0B93  00CF               	movwf	__LastUpState^(0+128)
  9572                           
  9573                           ;main.c: 355:             DISP_STATE = DISP_STATE_2;
  9574     0B94  3001               	movlw	1
  9575     0B95  00C5               	movwf	_DISP_STATE^(0+128)
  9576     0B96  3000               	movlw	0
  9577     0B97  00C6               	movwf	(_DISP_STATE^(0+128)+1)
  9578     0B98  0022               	movlb	2	; select bank2
  9579     0B99  148D               	bsf	13,1	;volatile
  9580     0B9A  118C               	bcf	12,3	;volatile
  9581                           
  9582                           ;main.c: 361:             if (CURRENT_MODE > HEAT_MODE_1)
  9583     0B9B  0877               	movf	_CURRENT_MODE+1,w
  9584     0B9C  3A80               	xorlw	128
  9585     0B9D  00F1               	movwf	??__UIControlISR
  9586     0B9E  3080               	movlw	128
  9587     0B9F  0271               	subwf	??__UIControlISR,w
  9588     0BA0  1D03               	skipz
  9589     0BA1  2BA4               	goto	u286_25
  9590     0BA2  3002               	movlw	2
  9591     0BA3  0276               	subwf	_CURRENT_MODE,w
  9592     0BA4                     u286_25:
  9593     0BA4  1C03               	skipc
  9594     0BA5  2BB8               	goto	i1l558
  9595                           
  9596                           ;main.c: 362:             {;main.c: 363:                 do { LATAbits.LATA4 = 0; } whil
      +                          e(0);
  9597     0BA6  0022               	movlb	2	; select bank2
  9598     0BA7  120C               	bcf	12,4	;volatile
  9599                           
  9600                           ;main.c: 365:                 if (CURRENT_MODE > HEAT_MODE_2)
  9601     0BA8  0877               	movf	_CURRENT_MODE+1,w
  9602     0BA9  3A80               	xorlw	128
  9603     0BAA  00F1               	movwf	??__UIControlISR
  9604     0BAB  3080               	movlw	128
  9605     0BAC  0271               	subwf	??__UIControlISR,w
  9606     0BAD  1D03               	skipz
  9607     0BAE  2BB1               	goto	u287_25
  9608     0BAF  3003               	movlw	3
  9609     0BB0  0276               	subwf	_CURRENT_MODE,w
  9610     0BB1                     u287_25:
  9611     0BB1  1C03               	skipc
  9612     0BB2  2BB6               	goto	i1l555
  9613                           
  9614                           ;main.c: 366:                     do { LATBbits.LATB0 = 0; } while(0);
  9615     0BB3  0022               	movlb	2	; select bank2
  9616     0BB4  100D               	bcf	13,0	;volatile
  9617     0BB5  2BBB               	goto	i1l562
  9618     0BB6                     i1l555:	
  9619                           ;main.c: 368:                     do { LATBbits.LATB0 = 1; } while(0);
  9620                           
  9621     0BB6  0022               	movlb	2	; select bank2
  9622     0BB7  2BBA               	goto	i1l560
  9623     0BB8                     i1l558:	
  9624                           ;main.c: 371:             {;main.c: 372:                 do { LATAbits.LATA4 = 1; } whil
      +                          e(0);
  9625                           
  9626     0BB8  0022               	movlb	2	; select bank2
  9627     0BB9  160C               	bsf	12,4	;volatile
  9628     0BBA                     i1l560:	
  9629                           ;main.c: 373:                 do { LATBbits.LATB0 = 1; } while(0);
  9630                           
  9631     0BBA  140D               	bsf	13,0	;volatile
  9632     0BBB                     i1l562:	
  9633                           ;main.c: 377:             do { LATBbits.LATB2 = 1; } while(0);
  9634                           
  9635     0BBB  150D               	bsf	13,2	;volatile
  9636     0BBC  0008               	return
  9637     0BBD                     i1l2986:
  9638                           
  9639                           ;main.c: 382:             DISP_STATE = DISP_STATE_3;
  9640     0BBD  3002               	movlw	2
  9641     0BBE  00C5               	movwf	_DISP_STATE^(0+128)
  9642     0BBF  3000               	movlw	0
  9643     0BC0  00C6               	movwf	(_DISP_STATE^(0+128)+1)
  9644     0BC1  0022               	movlb	2	; select bank2
  9645     0BC2  108D               	bcf	13,1	;volatile
  9646     0BC3  158C               	bsf	12,3	;volatile
  9647                           
  9648                           ;main.c: 388:             if (CURRENT_MODE > HEAT_MODE_3)
  9649     0BC4  0877               	movf	_CURRENT_MODE+1,w
  9650     0BC5  3A80               	xorlw	128
  9651     0BC6  00F1               	movwf	??__UIControlISR
  9652     0BC7  3080               	movlw	128
  9653     0BC8  0271               	subwf	??__UIControlISR,w
  9654     0BC9  1D03               	skipz
  9655     0BCA  2BCD               	goto	u288_25
  9656     0BCB  3004               	movlw	4
  9657     0BCC  0276               	subwf	_CURRENT_MODE,w
  9658     0BCD                     u288_25:
  9659     0BCD  1C03               	skipc
  9660     0BCE  2BE2               	goto	i1l580
  9661                           
  9662                           ;main.c: 389:             {;main.c: 390:                 do { LATBbits.LATB0 = 0; } whil
      +                          e(0);
  9663     0BCF  0022               	movlb	2	; select bank2
  9664     0BD0  100D               	bcf	13,0	;volatile
  9665                           
  9666                           ;main.c: 392:                 if (CURRENT_MODE > HEAT_MODE_4)
  9667     0BD1  0877               	movf	_CURRENT_MODE+1,w
  9668     0BD2  3A80               	xorlw	128
  9669     0BD3  00F1               	movwf	??__UIControlISR
  9670     0BD4  3080               	movlw	128
  9671     0BD5  0271               	subwf	??__UIControlISR,w
  9672     0BD6  1D03               	skipz
  9673     0BD7  2BDA               	goto	u289_25
  9674     0BD8  3005               	movlw	5
  9675     0BD9  0276               	subwf	_CURRENT_MODE,w
  9676     0BDA                     u289_25:
  9677     0BDA  1C03               	skipc
  9678     0BDB  2BDF               	goto	i1l577
  9679                           
  9680                           ;main.c: 393:                     do { LATAbits.LATA4 = 0; } while(0);
  9681     0BDC  0022               	movlb	2	; select bank2
  9682     0BDD  120C               	bcf	12,4	;volatile
  9683     0BDE  0008               	return
  9684     0BDF                     i1l577:	
  9685                           ;main.c: 395:                     do { LATAbits.LATA4 = 1; } while(0);
  9686                           
  9687     0BDF  0022               	movlb	2	; select bank2
  9688     0BE0  160C               	bsf	12,4	;volatile
  9689     0BE1  0008               	return
  9690     0BE2                     i1l580:	
  9691                           ;main.c: 398:             {;main.c: 399:                 do { LATAbits.LATA4 = 1; } whil
      +                          e(0);
  9692                           
  9693     0BE2  0022               	movlb	2	; select bank2
  9694     0BE3  160C               	bsf	12,4	;volatile
  9695                           
  9696                           ;main.c: 400:                 do { LATBbits.LATB0 = 1; } while(0);
  9697     0BE4  140D               	bsf	13,0	;volatile
  9698     0BE5  0008               	return
  9699     0BE6                     i1l2994:
  9700                           
  9701                           ;main.c: 406:             DISP_STATE = DISP_STATE_1;
  9702     0BE6  01C5               	clrf	_DISP_STATE^(0+128)
  9703     0BE7  01C6               	clrf	(_DISP_STATE+1)^(0+128)
  9704     0BE8  0022               	movlb	2	; select bank2
  9705     0BE9  108D               	bcf	13,1	;volatile
  9706     0BEA  118C               	bcf	12,3	;volatile
  9707     0BEB  0021               	movlb	1	; select bank1
  9708     0BEC  160C               	bsf	12,4	;volatile
  9709     0BED  140D               	bsf	13,0	;volatile
  9710                           
  9711                           ;main.c: 413:             if (CURRENT_MODE > HEAT_MODE_0)
  9712     0BEE  0877               	movf	_CURRENT_MODE+1,w
  9713     0BEF  3A80               	xorlw	128
  9714     0BF0  00F1               	movwf	??__UIControlISR
  9715     0BF1  3080               	movlw	128
  9716     0BF2  0271               	subwf	??__UIControlISR,w
  9717     0BF3  1D03               	skipz
  9718     0BF4  2BF7               	goto	u290_25
  9719     0BF5  3001               	movlw	1
  9720     0BF6  0276               	subwf	_CURRENT_MODE,w
  9721     0BF7                     u290_25:
  9722     0BF7  1C03               	skipc
  9723     0BF8  2BFC               	goto	i1l597
  9724                           
  9725                           ;main.c: 414:                 do { LATBbits.LATB2 = 0; } while(0);
  9726     0BF9  0022               	movlb	2	; select bank2
  9727     0BFA  110D               	bcf	13,2	;volatile
  9728     0BFB  0008               	return
  9729     0BFC                     i1l597:	
  9730                           ;main.c: 416:                 do { LATBbits.LATB2 = 1; } while(0);
  9731                           
  9732     0BFC  0022               	movlb	2	; select bank2
  9733     0BFD  150D               	bsf	13,2	;volatile
  9734     0BFE  0008               	return
  9735     0BFF                     i1l3006:
  9736                           
  9737                           ;main.c: 421:             DISP_STATE = DISP_STATE_1;
  9738     0BFF  01C5               	clrf	_DISP_STATE^(0+128)
  9739     0C00  01C6               	clrf	(_DISP_STATE+1)^(0+128)
  9740                           
  9741                           ;main.c: 422:     }
  9742     0C01  0008               	return
  9743     0C02                     i1l3008:
  9744                           
  9745                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9746                           ; Switch size 1, requested type "simple"
  9747                           ; Number of cases is 1, Range of values is 0 to 0
  9748                           ; switch strategies available:
  9749                           ; Name         Instructions Cycles
  9750                           ; simple_byte            4     3 (average)
  9751                           ; direct_byte            8     6 (fixed)
  9752                           ; jumptable            260     6 (fixed)
  9753                           ;	Chosen strategy is simple_byte
  9754     0C02  0021               	movlb	1	; select bank1
  9755     0C03  0846               	movf	(_DISP_STATE+1)^(0+128),w
  9756     0C04  3A00               	xorlw	0	; case 0
  9757     0C05  1903               	skipnz
  9758     0C06  2C08               	goto	i1l4890
  9759     0C07  2BFF               	goto	i1l3006
  9760     0C08                     i1l4890:
  9761                           
  9762                           ; Switch size 1, requested type "simple"
  9763                           ; Number of cases is 3, Range of values is 0 to 2
  9764                           ; switch strategies available:
  9765                           ; Name         Instructions Cycles
  9766                           ; simple_byte           10     6 (average)
  9767                           ; direct_byte           12     6 (fixed)
  9768                           ; jumptable            260     6 (fixed)
  9769                           ;	Chosen strategy is simple_byte
  9770     0C08  0845               	movf	_DISP_STATE^(0+128),w
  9771     0C09  3A00               	xorlw	0	; case 0
  9772     0C0A  1903               	skipnz
  9773     0C0B  2B4D               	goto	i1l2936
  9774     0C0C  3A01               	xorlw	1	; case 1
  9775     0C0D  1903               	skipnz
  9776     0C0E  2BBD               	goto	i1l2986
  9777     0C0F  3A03               	xorlw	3	; case 2
  9778     0C10  1903               	skipnz
  9779     0C11  2BE6               	goto	i1l2994
  9780     0C12  2BFF               	goto	i1l3006
  9781     0C13  0008               	return
  9782     0C14                     __end_of__UIControlISR:
  9783                           
  9784                           	psect	text49
  9785     172C                     __ptext49:	
  9786 ;; *************** function i1_EUSART_Write *****************
  9787 ;; Defined at:
  9788 ;;		line 132 in file "mcc_generated_files/eusart.c"
  9789 ;; Parameters:    Size  Location     Type
  9790 ;;  txData          1    wreg     unsigned char 
  9791 ;; Auto vars:     Size  Location     Type
  9792 ;;  txData          1    0[COMMON] unsigned char 
  9793 ;; Return value:  Size  Location     Type
  9794 ;;                  1    wreg      void 
  9795 ;; Registers used:
  9796 ;;		wreg
  9797 ;; Tracked objects:
  9798 ;;		On entry : 0/0
  9799 ;;		On exit  : 0/0
  9800 ;;		Unchanged: 0/0
  9801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9803 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9805 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9806 ;;Total ram usage:        1 bytes
  9807 ;; Hardware stack levels used: 1
  9808 ;; This function calls:
  9809 ;;		Nothing
  9810 ;; This function is called by:
  9811 ;;		__UIControlISR
  9812 ;; This function uses a non-reentrant model
  9813 ;;
  9814                           
  9815     172C                     i1_EUSART_Write:	
  9816                           ;psect for function i1_EUSART_Write
  9817                           
  9818                           
  9819                           ;incstack = 0
  9820                           ; Regs used in i1_EUSART_Write: [wreg]
  9821                           ;i1EUSART_Write@txData stored from wreg
  9822     172C  00F0               	movwf	i1EUSART_Write@txData
  9823     172D                     i1l297:	
  9824                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  9825                           
  9826                           
  9827                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  9828     172D  0020               	movlb	0	; select bank0
  9829     172E  1E11               	btfss	17,4	;volatile
  9830     172F  2F2D               	goto	i1l297
  9831                           
  9832                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  9833     1730  0870               	movf	i1EUSART_Write@txData,w
  9834     1731  0023               	movlb	3	; select bank3
  9835     1732  009A               	movwf	26	;volatile
  9836     1733  0008               	return
  9837     1734                     __end_ofi1_EUSART_Write:
  9838     007E                     btemp	set	126	;btemp
  9839     007E                     int$flags	set	126
  9840     007E                     wtemp0	set	126
  9841                           
  9842                           	psect	idloc
  9843                           
  9844                           ;Config register IDLOC0 @ 0x8000
  9845                           ;	unspecified, using default values
  9846     8000                     	org	32768
  9847     8000  3FFF               	dw	16383
  9848                           
  9849                           ;Config register IDLOC1 @ 0x8001
  9850                           ;	unspecified, using default values
  9851     8001                     	org	32769
  9852     8001  3FFF               	dw	16383
  9853                           
  9854                           ;Config register IDLOC2 @ 0x8002
  9855                           ;	unspecified, using default values
  9856     8002                     	org	32770
  9857     8002  3FFF               	dw	16383
  9858                           
  9859                           ;Config register IDLOC3 @ 0x8003
  9860                           ;	unspecified, using default values
  9861     8003                     	org	32771
  9862     8003  3FFF               	dw	16383
  9863                           
  9864                           	psect	config
  9865                           
  9866                           ;Config register CONFIG1 @ 0x8007
  9867                           ;	Oscillator Selection
  9868                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  9869                           ;	Watchdog Timer Enable
  9870                           ;	WDTE = ON, WDT enabled
  9871                           ;	Power-up Timer Enable
  9872                           ;	PWRTE = OFF, PWRT disabled
  9873                           ;	MCLR Pin Function Select
  9874                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  9875                           ;	Flash Program Memory Code Protection
  9876                           ;	CP = OFF, Program memory code protection is disabled
  9877                           ;	Data Memory Code Protection
  9878                           ;	CPD = OFF, Data memory code protection is disabled
  9879                           ;	Brown-out Reset Enable
  9880                           ;	BOREN = ON, Brown-out Reset enabled
  9881                           ;	Clock Out Enable
  9882                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  9883                           ;	Internal/External Switchover
  9884                           ;	IESO = ON, Internal/External Switchover mode is enabled
  9885                           ;	Fail-Safe Clock Monitor Enable
  9886                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9887     8007                     	org	32775
  9888     8007  3FFC               	dw	16380
  9889                           
  9890                           ;Config register CONFIG2 @ 0x8008
  9891                           ;	Flash Memory Self-Write Protection
  9892                           ;	WRT = OFF, Write protection off
  9893                           ;	PLL Enable
  9894                           ;	PLLEN = OFF, 4x PLL disabled
  9895                           ;	Stack Overflow/Underflow Reset Enable
  9896                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  9897                           ;	Brown-out Reset Voltage Selection
  9898                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  9899                           ;	Low-Voltage Programming Enable
  9900                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  9901     8008                     	org	32776
  9902     8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    34
    Data        4
    BSS         25
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     79      80
    BANK1            80     35      63
    BANK2            80     50      58
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), _SpkrControlISR(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), _SpkrControlISR(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _LogicControlISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _LogicControlISR(), TMR1_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _UIControlISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _UIControlISR(), NULL(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_TMR0_SetInterruptHandler
    _main->_TMR1_SetInterruptHandler
    _main->_TMR2_SetInterruptHandler
    __SendDataToConsole->___wmul
    ___awdiv->___wmul
    __ReadSensor->_ADC_GetConversion
    __ReadSensor->___fltol
    ___fladd->__Umul8_16
    ___flmul->__Umul8_16
    ___fldiv->__Umul8_16
    __ControlHeat->_EUSART_Write
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR2_CallBack->__SpkrControlISR
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR1_CallBack->__LogicControlISR
    _TMR0_CallBack->__UIControlISR
    __UIControlISR->i1_EUSART_Write

Critical Paths under _main in BANK0

    __SendDataToConsole->___awdiv
    ___awdiv->___wmul
    __ReadSensor->_my_log
    _my_log->___flmul
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___fladd
    ___fldiv->___xxtofl

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    __ReadSensor->_my_log
    _my_log->___flmul

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->__ReadSensor

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   36570
                                             77 BANK0      2     2      0
                                             31 BANK1      4     4      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                       _EUSART_Write
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR1_SetInterruptHandler
           _TMR2_SetInterruptHandler
                       __ControlHeat
                        __ReadSensor
                 __SendDataToConsole
 ---------------------------------------------------------------------------------
 (1) __SendDataToConsole                                  10    10      0    1769
                                             13 BANK0     10    10      0
                       _EUSART_Write
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     676
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              4 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) __ReadSensor                                         50    50      0   32599
                                              0 BANK2     50    50      0
                  _ADC_GetConversion
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _my_log
 ---------------------------------------------------------------------------------
 (2) _my_log                                              22    18      4   19102
                                             73 BANK0      4     0      4
                                             13 BANK1     18    18      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     746
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4807
                                             60 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    4562
                                             40 BANK0     20    12      8
                          __Umul8_16 (ARG)
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     155
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4793
                                             60 BANK0     13     5      8
                                              0 BANK1     13    13      0
                          __Umul8_16
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              4 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     986
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    2403
                                             14 BANK0     26    18      8
                          __Umul8_16 (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     427
                                              4 COMMON     2     2      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    4     2      2      31
                                              4 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) __ControlHeat                                         5     5      0      31
                                              0 BANK0      5     5      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     3     2      1     189
                                              4 COMMON     1     0      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0     396
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR2_CallBack                                        0     0      0       0
                                NULL *
       _TMR2_DefaultInterruptHandler *
                    __SpkrControlISR *
 ---------------------------------------------------------------------------------
 (8) __SpkrControlISR                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_CallBack                                        0     0      0       0
                                NULL *
       _TMR1_DefaultInterruptHandler *
                   __LogicControlISR *
 ---------------------------------------------------------------------------------
 (8) __LogicControlISR                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0     156
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR0_CallBack                                        0     0      0     156
                                NULL *
       _TMR0_DefaultInterruptHandler *
                      __UIControlISR *
 ---------------------------------------------------------------------------------
 (8) __UIControlISR                                        3     3      0     156
                                              1 COMMON     3     3      0
                     i1_EUSART_Write
 ---------------------------------------------------------------------------------
 (9) i1_EUSART_Write                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _EUSART_Write
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR2_SetInterruptHandler
   __ControlHeat
     _EUSART_Write
   __ReadSensor
     _ADC_GetConversion
     ___fladd
       __Umul8_16 (ARG)
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
     ___fldiv
     ___flmul
       __Umul8_16
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flneg (ARG)
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
     _my_log
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___flsub
         ___fladd
       ___xxtofl
   __SendDataToConsole
     _EUSART_Write
     ___awdiv
       ___wmul (ARG)
     ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       NULL(Fake) *
       _TMR0_DefaultInterruptHandler *
       __UIControlISR *
         i1_EUSART_Write
   _TMR1_ISR
     _TMR1_CallBack
       NULL(Fake) *
       _TMR1_DefaultInterruptHandler *
       __LogicControlISR *
     _TMR1_WriteTimer
   _TMR2_ISR
     _TMR2_CallBack
       NULL(Fake) *
       _TMR2_DefaultInterruptHandler *
       __SpkrControlISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     23      3F       7       78.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     32      3A       9       72.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      D3      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      D3      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Jun 01 21:22:06 2024

                             ??i1_EUSART_Write 0070               __end_of_TMR2_SetInterruptHandler 1718  
                                            _A 1814                                              _B 1810  
                                            _C 180C                                   ___fldiv@aexp 0047  
                                 ___fldiv@bexp 0046                                   ___fldiv@sign 003F  
                                           l93 17F9                                   ___awdiv@sign 002A  
                          ___wmul@multiplicand 0022                                _timer0ReloadVal 0079  
                          __Umul8_16@word_mpld 0024                                            l500 07F2  
                                          l362 08AC                                            l363 08AB  
                                          l480 0798                                            l297 173D  
                                          l628 0CA9                                            l840 0821  
                                          _PR2 001B                                _timer1ReloadVal 00C7  
               ?_EUSART_SetFramingErrorHandler 0074                                _TMR2_Initialize 178D  
                                          wreg 0009                                   ___flmul@aexp 00A1  
                                 ___flmul@bexp 00A6                                   ___flmul@sign 00A0  
                                 ___flmul@temp 00AB                                   ___flmul@prod 00A7  
                                 ___fltol@exp1 0075                                           l1021 0AA5  
                                         l1041 09B7                                           l1018 0A57  
                                         l1221 0E4B                                           l1141 0E93  
                                         l1145 0F02                                           l1218 0E28  
                                         l1162 0F83                                           l1219 0E40  
                                         l1147 0EE7                                           l1183 0FFA  
                                         l1175 0FE2                                           l1256 0864  
                                         l4000 0F22                                           l1249 02D8  
                                         l1281 0AD6                                           l1197 0D21  
                                         l1294 0B1E                                           l1295 0B28  
                                         l1287 0B0A                                           l4112 0A71  
                                         l4040 0FA9                                           l4008 0F31  
                                         l4034 0FA2                                           l4026 0F95  
                                         l4018 0F7B                                           l4042 0FAB  
                                         l4220 0DAC                                           l4116 0A8B  
                                         l4052 0FB6                                           l4214 0D93  
                                         l4222 0D75                                           l4070 0FF2  
                                         l4240 0DCE                                           l4224 0DB1  
                                         l4160 0CFF                                           l4312 0098  
                                         l4048 0FB4                                           l4250 0DE7  
                                         l4154 0CF4                                           l4402 02B0  
                                         l4314 009B                                           l4306 0088  
                                         l4074 0FF6                                           l4260 0E10  
                                         l4084 085E                                           l4324 00B4  
                                         l4316 00A4                                           l4246 0DE5  
                                         l4238 0DB7                                           l4174 0D16  
                                         l4158 0CF7                                           l4408 02C9  
                                         l4432 0AE5                                           l4274 0E47  
                                         l4194 0D4C                                           l4178 0D19  
                                         l4426 0ACE                                           l4610 092A  
                                         l4188 0D40                                           l3900 0E64  
                                         l4460 0B43                                           l4436 0AE7  
                                         l4294 006D                                           l4446 0B1C  
                                         l4438 0AF7                                           l4384 025F  
                                         l4376 0229                                           l4296 0070  
                                         l4288 005D                                           l3904 0E67  
                                         l4448 0B0F                                           l4560 057C  
                                         l4616 0935                                           l4378 0240  
                                         l4298 0079                                           l3906 0E6F  
                                         l4642 096C                                           l4634 095B  
                                         l4626 093D                                           l4810 0791  
                                         l4652 0982                                           l4388 0262  
                                         l3924 0E88                                           l4572 0639  
                                         l4580 061B                                           l4564 05E3  
                                         l4628 0949                                           l4732 0C85  
                                         l4820 07A1                                           l4750 09E3  
                                         l4670 09B3                                           l4398 0299  
                                         l3934 0E9D                                           l4582 070B  
                                         l4638 0964                                           l4590 081A  
                                         l4806 0789                                           l4648 0979  
                                         l3928 0E8B                                           l4736 0C97  
                                         l4746 09E0                                           l4826 07A9  
                                         l4756 09D8                                           l4668 09A5  
                                         l3972 0EED                                           l3964 0EBB  
                                         l4844 07C2                                           l4766 0A0A  
                                         l4678 09C4                                           l3990 0F10  
                                         l3974 0EEF                                           l3982 0EFD  
                                         l4862 07DF                                           l4848 07C8  
                                         l4868 07EB                                           l3998 0F20  
                                         _LATA 010C                                           _LATB 010D  
                                         u5025 0DBA                                           u5115 0DFE  
                                         u5125 0E19                                           u5045 0DC3  
                                         u5135 0E32                                           u4440 0EDA  
                                         u5305 0235                                           u4450 0EDB  
                                         u5235 0157                                           u4435 0ECF  
                                         u5245 0184                                           u4605 0F96  
                                         u5255 01D9                                           u5265 01FE  
                                         u4705 0FCD                                           u5275 0214  
                                         u4563 0F43                                           u4555 0F26  
                                         u6067 075D                                           u6077 17F4  
                                         u5285 022C                                           u4485 0EF3  
                                         u5525 0B30                                           u5445 0AF0  
                                         u5375 0280                                           u5385 02A4  
                                         u5465 0B04                                           u5705 094A  
                                         u5625 0822                                           u5395 02BC  
                                         u5715 0954                                           u5635 0827  
                                         u5485 0B16                                           u5725 095C  
                                         u5905 0A08                                           u5825 09BB  
                                         u4785 0865                                           u4955 0D7D  
                                         u5925 0A2E                                           u5765 098B  
                                         u4965 0D84                                           u5685 0940  
                                         u4985 0D8D                                           u5795 09A6  
                                         u4995 0DA1                                           u5875 0C8F  
                                         u5885 0CA1                                           _TEMP 0152  
                                         _TMR0 0015                                           _TMR2 001A  
                                  main@readVal 00C2                                           _WPUA 020C  
                                         _WPUB 020D                                    main@saveVal 00C0  
                                         _main 0754                                           fsr0h 0005  
                                         indf0 0000                                           fsr0l 0004  
                                         btemp 007E                                __end_of_TURN_ON 181C  
                                         start 0023                                ___fldiv@new_exp 0040  
                   ??_TMR1_SetInterruptHandler 0076                                __SpkrControlISR 08DD  
                      __end_of_TMR0_Initialize 17B1                 ??_TMR0_DefaultInterruptHandler 0070  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 172C  
                                ___fltol@sign1 0074                                __end_of___fladd 1000  
                                        ?_main 0070                                __end_of___fldiv 0E4E  
                              __end_of___awdiv 0971                                __end_of___flneg 174E  
                              __end_of___flmul 02EE                                __end_of___flsub 0853  
                              __end_of___fltol 09D3                                ___awdiv@divisor 0024  
                                        _T1CON 0018                                          _T2CON 001C  
                                        i1l160 0019                                          i1l165 0021  
                                        i1l157 000D                                          i1l522 091D  
                                        i1l603 08C6                                          i1l560 0BBA  
                                        i1l297 172D                                          i1l562 0BBB  
                                        i1l555 0BB6                                          i1l580 0BE2  
                                        i1l558 0BB8                                          i1l577 0BDF  
                                        i1l597 0BFC                                ___awdiv@counter 0029  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
                    ?_TMR0_SetInterruptHandler 0074                               __end_of_TMR0_ISR 1725  
                             __end_of_TMR1_ISR 1771                               __end_of_TMR2_ISR 16F4  
                              _DATAEE_ReadByte 1771                               __end_of_SHUT_OFF 181E  
                               _WDT_Initialize 16EB                                ??__UIControlISR 0071  
                      __end_of_TMR1_Initialize 17CA                                          pclath 000A  
                                        status 0003                                          wtemp0 007E  
                              _TMR1_WriteTimer 177E                                __initialization 0025  
                                 __end_of_main 07F5                                 ??_EUSART_Write 0074  
                      __end_of_TMR2_Initialize 179E                    ?_INTERRUPT_InterruptManager 0070  
                     _TMR2_SetInterruptHandler 1712                                         ??_main 006D  
                                ??__ReadSensor 0076                         __end_of_WDT_Initialize 16EF  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 00D5  
                                       _ADRESH 009C                                         _EEADRH 0192  
                                       _ADRESL 009B                                         _EEADRL 0191  
                                       _EEDATH 0194                                         _EEDATL 0193  
                                       _EECON2 0196                               ___awdiv@dividend 0026  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _BORCON 0116                                         _T1GCON 0019  
                      TMR1_WriteTimer@timerVal 0070                                         i1l3006 0BFF  
                                       i1l3022 08CD                                         i1l3008 0C02  
                                       i1l3026 08D4                                         i1l3490 1788  
                                       i1l2924 08FC                                         i1l2932 0911  
                                       i1l2916 08E7                                         i1l2960 0B75  
                                       i1l2936 0B4D                                         i1l2928 090C  
                                       i1l2956 0B71                                         i1l2974 0B8F  
                                       i1l2994 0BE6                                         i1l2986 0BBD  
                                       i1l2978 0B92                                         i1l4890 0C08  
                                       u272_20 08FA                                         u290_25 0BF7  
                                       u282_25 0B68                                         u275_20 090A  
                                       u285_25 0B86                                         u278_20 091A  
                                       u286_25 0BA4                                         u287_25 0BB1  
                                       u288_25 0BCD                                         u289_25 0BDA  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                             __end_of___xxtofl 0B4C                        __end_of__SpkrControlISR 091F  
                            __end_of_SETPOINTS 180C                                  ?__ControlHeat 0070  
         __end_of_TMR1_DefaultInterruptHandler 16E8                   _TMR1_DefaultInterruptHandler 16E7  
                                       ___flge 0A3C                                      ??___fladd 0050  
                                       ___wmul 0818                                      ??___fldiv 0036  
                                    ??___awdiv 0028                                      ??___flneg 0074  
                                    ??___flmul 0064                                      ??___flsub 0076  
                                    ??___fltol 0024                              ?__LogicControlISR 0070  
                             ?_TMR0_Initialize 0070                               ___awdiv@quotient 002B  
                                       _my_log 055C                             ??__LogicControlISR 0070  
                      __end_of_DATAEE_ReadByte 177E                                ?_WDT_Initialize 0070  
                     ADC_GetConversion@channel 0021                          __end_of_TMR0_CallBack 1759  
                          __end_of__ReadSensor 055C       TMR2_SetInterruptHandler@InterruptHandler 0074  
     TMR1_SetInterruptHandler@InterruptHandler 0074       TMR0_SetInterruptHandler@InterruptHandler 0074  
                      __end_of_TMR1_WriteTimer 178D                          __end_of_TMR1_CallBack 1764  
                                   ___flge@ff1 0020                                     ___flge@ff2 0024  
                             ?_TMR1_Initialize 0070                                   ___xxtofl@arg 002A  
                                 ___xxtofl@exp 0029                              _SYSTEM_Initialize 0800  
                                 ___xxtofl@val 0020                        __end_of__initialization 004B  
                                   ___flneg@f1 0020                          __end_of_TMR2_CallBack 0800  
                           ?_SYSTEM_Initialize 0070                                 ??__ControlHeat 0020  
                                   ___fltol@f1 0020                            __ReadSensor@Rpullup 0124  
                               __pcstackCOMMON 0070                                   __pidataBANK1 0002  
                                 __pidataBANK2 16E9                            ??_SYSTEM_Initialize 0076  
                                    ?_TMR0_ISR 0070                                      ?_TMR1_ISR 0070  
                                    ?_TMR2_ISR 0070                  ?_TMR1_DefaultInterruptHandler 0070  
                             _DATAEE_WriteByte 0894                               ?_TMR2_Initialize 0070  
                                _MIN_IDLE_TIME 181E                                 _OPTION_REGbits 0095  
              ??_EUSART_SetOverrunErrorHandler 0076                      __end_of_SYSTEM_Initialize 0818  
                                   __pbssBANK0 006F                                     __pbssBANK1 00C3  
                                   __pbssBANK2 0152                           __end_of_EUSART_Write 1744  
                             ?__SpkrControlISR 0070                              __end_of__Umul8_16 0873  
                              _HEAT_CALL_TICKS 0158                                     __pmaintext 0754  
                                      ?___flge 0020               __end_of_TMR0_SetInterruptHandler 170C  
                                      ?___wmul 0020                                     ??_TMR0_ISR 0074  
                                   ??_TMR1_ISR 0072                                     ??_TMR2_ISR 0071  
                                   __pintentry 0004                                        _BAUDCON 019F  
                                      _APFCON0 011D                                        _APFCON1 011E  
                                      ?_my_log 0069                               ?_DATAEE_ReadByte 0070  
                                  __ReadSensor 02EE                                      ?___xxtofl 0020  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 0076  
                                      _SPKR_DC 00CC                             __end_of_ONE_SECOND 181A  
                             ?_TMR1_WriteTimer 0070                                        _TURN_ON 181A  
                         DATAEE_WriteByte@bAdd 0020                               __ReadSensor$1847 0140  
                             __ReadSensor$1848 0144                               __ReadSensor$1849 0148  
                                  __SaveMemory 0157                           _ADC_InterruptHandler 00C9  
                      __UIControlISR@btnDnRead 0073                     ??_TMR2_SetInterruptHandler 0076  
                                      ___fladd 0E4E                                        ___fldiv 0CDE  
                                      ___awdiv 091F                                        ___flneg 1744  
                                      ___flmul 004F                                        ___flsub 0834  
                                      ___fltol 0971                        __UIControlISR@btnUpRead 0072  
                             __ReadSensor@Rntc 012C                               __ReadSensor@Vout 0120  
                             __ReadSensor@logR 014E                               __ReadSensor@invT 0130  
                               main@savedRelay 00BF                                        __ptext1 0C14  
                                      __ptext2 0818                                        __ptext3 091F  
                                      __ptext4 02EE                                        __ptext5 055C  
                                      __ptext6 0AB8                                        __ptext7 0834  
                                      __ptext8 0E4E                                        __ptext9 1744  
               ??_TMR1_DefaultInterruptHandler 0070                                      _T1CONbits 0018  
                        _OSCILLATOR_Initialize 1725                                  __ReadSensor@T 0134  
                                    _T2CONbits 001C                                     ??___xxtofl 0024  
                         __end_of__ControlHeat 0A3C                       ??_PIN_MANAGER_Initialize 0074  
                    ?_TMR1_SetInterruptHandler 0074                                        clrloop0 1719  
                         end_of_initialization 004B                                      _READ_FLAG 0156  
                        __end_of__UIControlISR 0C14          __end_of_EUSART_SetOverrunErrorHandler 1706  
                _EUSART_SetOverrunErrorHandler 1700                           __end_of_MIN_RUN_TIME 1822  
                            _EUSART_Initialize 0873                                        my_log@n 00B9  
                                      my_log@x 0069                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                                      _SETPOINTS 1800  
                                    _UART_FLAG 0155                            ??_EUSART_Initialize 0076  
                             ??_WDT_Initialize 0074                       _TMR0_SetInterruptHandler 1706  
                                    _PORTAbits 000C                                      _PORTBbits 000D  
                                  ___fladd@grs 005B                                  ___xxtofl@sign 0028  
                                    _TRISAbits 008C                                      _TRISBbits 008D  
                                 _CURRENT_MODE 0076                                    ___fldiv@grs 0042  
                                  ___fldiv@rem 003B                       __end_of_DATAEE_WriteByte 08B7  
                                  ___flmul@grs 00A2                      __end_of_EUSART_Initialize 0894  
                                    _TXSTAbits 019E                                   _READING_ITER 00C3  
                         __ReadSensor@adcValue 014C           __end_of_TMR2_DefaultInterruptHandler 16E9  
                 _TMR2_DefaultInterruptHandler 16E8                                 __end_of___flge 0AB8  
                   _EUSART_DefaultErrorHandler 0000                                 __end_of___wmul 0834  
                                 _EUSART_Write 173C                                 _ADC_Initialize 1734  
                       ?_OSCILLATOR_Initialize 0070                                 __end_of_my_log 0754  
                          start_initialization 0025                            DATAEE_ReadByte@bAdd 0074  
               ?_EUSART_SetOverrunErrorHandler 0074                     _EUSART_FramingErrorHandler 00D7  
                                     ??___flge 0028                                       ??___wmul 0074  
                       _EUSART_SetErrorHandler 16F4                         __end_of_ADC_Initialize 173C  
                                    __Umul8_16 0853                                    __pdataBANK1 00DD  
                                  __pdataBANK2 0158                  ?_TMR2_DefaultInterruptHandler 0070  
                                     ??_my_log 0076                                   ?__ReadSensor 0070  
                                    ___fladd@a 004C                                      ___fladd@b 0048  
                               i1_EUSART_Write 172C                                      ___fldiv@a 002E  
                                    ___fldiv@b 0032                                      ___flmul@a 0060  
                                    ___flmul@b 005C                                    __pbssCOMMON 0076  
                                    ___flsub@a 005C                                      ___flsub@b 0060  
                                    ___latbits 0002                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00A0                                  __pcstackBANK2 0120  
                   __end_of__SendDataToConsole 0CDE                                      __end_of_A 1818  
                                    __end_of_B 1814                                      __end_of_C 1810  
                        _TMR0_InterruptHandler 00DB                                      __pnvBANK1 00D1  
                                 __ControlHeat 09D3                         _PIN_MANAGER_Initialize 17CA  
                                 _RELAY_STATUS 006F               __end_of_TMR1_SetInterruptHandler 1712  
                                     ?___fladd 0048                                       ?___fldiv 002E  
                                     ?___awdiv 0024                                       ?___flneg 0020  
                                     ?___flmul 005C                                       ?___flsub 005C  
                                     ?___fltol 0020                                     ?__Umul8_16 0074  
                              ?_ADC_Initialize 0070                         __end_ofi1_EUSART_Write 1734  
                 ??_INTERRUPT_InterruptManager 0074                                   _MIN_RUN_TIME 1820  
                                 __LastUpState 00CF                                __ReadSensor@Vcc 0128  
                             __LogicControlISR 08B7                                  _TMR0_CallBack 174E  
                         i1EUSART_Write@txData 0070                                 __LastDownState 00CE  
                                _TMR1_CallBack 1759                              ??_TMR0_Initialize 0076  
                                   my_log@term 00BB                                 ___wmul@product 0074  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0074  
                                     _LATBbits 010D                                      clear_ram0 1718  
                                _TMR2_CallBack 07F5                                       _PIE1bits 0091  
                            _eusartRxLastError 00D0                     ??_TMR0_SetInterruptHandler 0076  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0076  
                                     _TMR0_ISR 171E              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _TMR1_ISR 1764                                       _TMR2_ISR 16EF  
                                     _SHUT_OFF 181C                                main@readVal_992 00C1  
                              ?i1_EUSART_Write 0070                              ??_TMR1_Initialize 0076  
                                   _ADCON0bits 009D                              ___wmul@multiplier 0020  
               ??_TMR2_DefaultInterruptHandler 0070                      ?_TMR2_SetInterruptHandler 0074  
                        DATAEE_WriteByte@bData 0074                                 ?_TMR0_CallBack 0070  
                               ?_TMR1_CallBack 0070                              ?_DATAEE_WriteByte 0074  
                            ??_TMR2_Initialize 0076                                    _FULL_SAMPLE 00CD  
                               ?_TMR2_CallBack 0070                             ??_DATAEE_WriteByte 0075  
                                   _EECON1bits 0195                              _ADC_GetConversion 17E4  
                      ??_OSCILLATOR_Initialize 0074                                    ??__Umul8_16 0020  
                          _EUSART_ErrorHandler 00D3                             ?_ADC_GetConversion 0074  
                     _TMR1_SetInterruptHandler 170C                          __end_of_MIN_IDLE_TIME 1820  
                        _TMR1_InterruptHandler 00D9                            ??_ADC_GetConversion 0020  
                                     ___xxtofl 0AB8                              ??__SpkrControlISR 0070  
                                     __ptext10 004F                                       __ptext11 0853  
                                     __ptext20 178D                                       __ptext12 0A3C  
                                     __ptext21 1712                                       __ptext13 0CDE  
                                   _T1GCONbits 0019                                       __ptext30 16FA  
                                     __ptext22 17B1                                       __ptext14 0971  
                                     __ptext31 16F4                                       __ptext23 170C  
                                     __ptext15 17E4                                       __ptext40 1764  
                                     __ptext32 1734                                       __ptext24 179E  
                                     __ptext16 09D3                                       __ptext41 177E  
                                     __ptext33 0894                                       __ptext25 1706  
                                     __ptext17 173C                                       __ptext42 1759  
                                     __ptext34 1771                                       __ptext26 17CA  
                                     __ptext18 0800                                       __ptext43 16E7  
                                     __ptext27 1725                                       __ptext19 16EB  
                                     __ptext44 08B7                                       __ptext36 16EF  
                                     __ptext28 0873                                       __ptext45 171E  
                                     __ptext37 07F5                                       __ptext29 1700  
                                     __ptext46 174E                                       __ptext38 16E8  
                                     __ptext47 16E6                                       __ptext39 08DD  
                                     __ptext48 0B4C                                       __ptext49 172C  
                  DATAEE_WriteByte@GIEBitValue 0021                                     _DISP_STATE 00C5  
                               __ReadSensor@Tc 0138                                 __ReadSensor@Tf 013C  
                      __SendDataToConsole@huns 0035                        __SendDataToConsole@ones 0031  
                      __SendDataToConsole@tens 0033           __end_of_TMR0_DefaultInterruptHandler 16E7  
                 _TMR0_DefaultInterruptHandler 16E6                                      my_log@sum 00B5  
                            ??_DATAEE_ReadByte 0074                      __end_of_ADC_GetConversion 1800  
                      ?_EUSART_SetErrorHandler 0074                                     _DN_CLICKED 00CB  
EUSART_SetOverrunErrorHandler@interruptHandler 0074                                   my_log@result 00B1  
                                     int$flags 007E                                  _SPKR_DURATION 00DE  
           __end_of_INTERRUPT_InterruptManager 0023                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 1700                  _EUSART_SetFramingErrorHandler 16FA  
                            ??_TMR1_WriteTimer 0072                                     _LOGIC_FLAG 0154  
                                   _INTCONbits 000B                                     _LOGIC_TICK 0078  
                              ??_TMR0_CallBack 0074                                ??_TMR1_CallBack 0071  
                                  _my_log$1850 00AD                                       intlevel1 0000  
                              ??_TMR2_CallBack 0071                                  __UIControlISR 0B4C  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 16FA  
                             ??_ADC_Initialize 0074                  ?_TMR0_DefaultInterruptHandler 0070  
                           __SendDataToConsole 0C14                                     _ONE_SECOND 1818  
                     __end_of__LogicControlISR 08DD  EUSART_SetFramingErrorHandler@interruptHandler 0074  
                          ?__SendDataToConsole 0070                                  __pstringtext1 1800  
                                __pstringtext2 180C                                  __pstringtext3 1810  
                                __pstringtext4 1814                                  __pstringtext5 1818  
                                __pstringtext6 181A                                  __pstringtext7 181C  
                                __pstringtext8 181E                                  __pstringtext9 1820  
                       __Umul8_16@multiplicand 0074                                     _OPTION_REG 0095  
                              _TMR0_Initialize 179E                                  ___fladd@signs 0058  
                           EUSART_Write@txData 0074                 __end_of_PIN_MANAGER_Initialize 17E4  
                               ?__UIControlISR 0070                           ??__SendDataToConsole 002D  
                                   _SPKR_COUNT 00DD                                   ___fladd@aexp 0059  
                                 ___fladd@bexp 005A                           __Umul8_16@multiplier 0026  
                        _TMR2_InterruptHandler 00D1                                _TMR1_Initialize 17B1  
                            __Umul8_16@product 0022  
