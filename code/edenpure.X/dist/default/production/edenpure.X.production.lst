

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed May 29 22:36:17 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1847
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    16                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cinit,global,class=CODE,merge=1,delta=2
    18                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    23                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    24                           	psect	clrtext,global,class=CODE,delta=2
    25                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    26                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    27                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    28                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    29                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    30                           	psect	text1,local,class=CODE,merge=1,delta=2
    31                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text4,local,class=CODE,merge=1,delta=2
    34                           	psect	text5,local,class=CODE,merge=1,delta=2
    35                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text15,local,class=CODE,merge=1,delta=2
    45                           	psect	text16,local,class=CODE,merge=1,delta=2
    46                           	psect	text17,local,class=CODE,merge=1,delta=2
    47                           	psect	text18,local,class=CODE,merge=1,delta=2
    48                           	psect	text19,local,class=CODE,merge=1,delta=2
    49                           	psect	text20,local,class=CODE,merge=1,delta=2
    50                           	psect	text21,local,class=CODE,merge=1,delta=2
    51                           	psect	text22,local,class=CODE,merge=1,delta=2
    52                           	psect	text23,local,class=CODE,merge=1,delta=2
    53                           	psect	text24,local,class=CODE,merge=1,delta=2
    54                           	psect	text25,local,class=CODE,merge=1,delta=2
    55                           	psect	text26,local,class=CODE,merge=1,delta=2
    56                           	psect	text27,local,class=CODE,merge=1,delta=2
    57                           	psect	text28,local,class=CODE,merge=1,delta=2
    58                           	psect	text29,local,class=CODE,merge=1,delta=2
    59                           	psect	text30,local,class=CODE,merge=1,delta=2
    60                           	psect	text31,local,class=CODE,merge=1,delta=2
    61                           	psect	text32,local,class=CODE,merge=1,delta=2
    62                           	psect	text33,local,class=CODE,merge=1,delta=2
    63                           	psect	text34,local,class=CODE,merge=1,delta=2
    64                           	psect	intentry,global,class=CODE,delta=2
    65                           	psect	text36,local,class=CODE,merge=1,delta=2
    66                           	psect	text37,local,class=CODE,merge=1,delta=2
    67                           	psect	text38,local,class=CODE,merge=1,delta=2
    68                           	psect	text39,local,class=CODE,merge=1,delta=2
    69                           	psect	text40,local,class=CODE,merge=1,delta=2
    70                           	psect	text41,local,class=CODE,merge=1,delta=2
    71                           	psect	text42,local,class=CODE,merge=1,delta=2
    72                           	psect	text43,local,class=CODE,merge=1,delta=2
    73                           	psect	text44,local,class=CODE,merge=1,delta=2
    74                           	psect	text45,local,class=CODE,merge=1,delta=2
    75                           	psect	text46,local,class=CODE,merge=1,delta=2
    76                           	psect	text47,local,class=CODE,merge=1,delta=2
    77                           	psect	text48,local,class=CODE,merge=1,delta=2
    78                           	psect	text49,local,class=CODE,merge=1,delta=2
    79                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    80                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    81                           	dabs	1,0x7E,2
    82     0000                     
    83                           ; Version 2.40
    84                           ; Generated 17/11/2021 GMT
    85                           ; 
    86                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution. Publication is not required when
   100                           ;        this file is used in an embedded application.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC16F1847 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118     0000                     	;# 
   119     0001                     	;# 
   120     0002                     	;# 
   121     0003                     	;# 
   122     0004                     	;# 
   123     0005                     	;# 
   124     0006                     	;# 
   125     0007                     	;# 
   126     0008                     	;# 
   127     0009                     	;# 
   128     000A                     	;# 
   129     000B                     	;# 
   130     000C                     	;# 
   131     000D                     	;# 
   132     0011                     	;# 
   133     0012                     	;# 
   134     0013                     	;# 
   135     0014                     	;# 
   136     0015                     	;# 
   137     0016                     	;# 
   138     0016                     	;# 
   139     0017                     	;# 
   140     0018                     	;# 
   141     0019                     	;# 
   142     001A                     	;# 
   143     001B                     	;# 
   144     001C                     	;# 
   145     001E                     	;# 
   146     001F                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     0091                     	;# 
   150     0092                     	;# 
   151     0093                     	;# 
   152     0094                     	;# 
   153     0095                     	;# 
   154     0096                     	;# 
   155     0097                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009A                     	;# 
   159     009B                     	;# 
   160     009B                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     0111                     	;# 
   167     0112                     	;# 
   168     0113                     	;# 
   169     0114                     	;# 
   170     0115                     	;# 
   171     0116                     	;# 
   172     0117                     	;# 
   173     0118                     	;# 
   174     0119                     	;# 
   175     011A                     	;# 
   176     011B                     	;# 
   177     011D                     	;# 
   178     011E                     	;# 
   179     018C                     	;# 
   180     018D                     	;# 
   181     0191                     	;# 
   182     0191                     	;# 
   183     0192                     	;# 
   184     0193                     	;# 
   185     0193                     	;# 
   186     0193                     	;# 
   187     0194                     	;# 
   188     0195                     	;# 
   189     0196                     	;# 
   190     0199                     	;# 
   191     019A                     	;# 
   192     019B                     	;# 
   193     019B                     	;# 
   194     019B                     	;# 
   195     019B                     	;# 
   196     019C                     	;# 
   197     019C                     	;# 
   198     019D                     	;# 
   199     019E                     	;# 
   200     019F                     	;# 
   201     020C                     	;# 
   202     020D                     	;# 
   203     0211                     	;# 
   204     0211                     	;# 
   205     0212                     	;# 
   206     0212                     	;# 
   207     0213                     	;# 
   208     0213                     	;# 
   209     0214                     	;# 
   210     0214                     	;# 
   211     0215                     	;# 
   212     0215                     	;# 
   213     0215                     	;# 
   214     0216                     	;# 
   215     0216                     	;# 
   216     0217                     	;# 
   217     0217                     	;# 
   218     0219                     	;# 
   219     021A                     	;# 
   220     021B                     	;# 
   221     021C                     	;# 
   222     021D                     	;# 
   223     021E                     	;# 
   224     021F                     	;# 
   225     0291                     	;# 
   226     0291                     	;# 
   227     0292                     	;# 
   228     0293                     	;# 
   229     0294                     	;# 
   230     0295                     	;# 
   231     0295                     	;# 
   232     0296                     	;# 
   233     0298                     	;# 
   234     0298                     	;# 
   235     0299                     	;# 
   236     029A                     	;# 
   237     029B                     	;# 
   238     029C                     	;# 
   239     029C                     	;# 
   240     029D                     	;# 
   241     029E                     	;# 
   242     029E                     	;# 
   243     0311                     	;# 
   244     0311                     	;# 
   245     0312                     	;# 
   246     0313                     	;# 
   247     0318                     	;# 
   248     0318                     	;# 
   249     0319                     	;# 
   250     031A                     	;# 
   251     0394                     	;# 
   252     0395                     	;# 
   253     0396                     	;# 
   254     039A                     	;# 
   255     039C                     	;# 
   256     039D                     	;# 
   257     039E                     	;# 
   258     039F                     	;# 
   259     0415                     	;# 
   260     0416                     	;# 
   261     0417                     	;# 
   262     041C                     	;# 
   263     041D                     	;# 
   264     041E                     	;# 
   265     0FE4                     	;# 
   266     0FE5                     	;# 
   267     0FE6                     	;# 
   268     0FE7                     	;# 
   269     0FE8                     	;# 
   270     0FE9                     	;# 
   271     0FEA                     	;# 
   272     0FEB                     	;# 
   273     0FED                     	;# 
   274     0FEE                     	;# 
   275     0FEF                     	;# 
   276     0000                     	;# 
   277     0001                     	;# 
   278     0002                     	;# 
   279     0003                     	;# 
   280     0004                     	;# 
   281     0005                     	;# 
   282     0006                     	;# 
   283     0007                     	;# 
   284     0008                     	;# 
   285     0009                     	;# 
   286     000A                     	;# 
   287     000B                     	;# 
   288     000C                     	;# 
   289     000D                     	;# 
   290     0011                     	;# 
   291     0012                     	;# 
   292     0013                     	;# 
   293     0014                     	;# 
   294     0015                     	;# 
   295     0016                     	;# 
   296     0016                     	;# 
   297     0017                     	;# 
   298     0018                     	;# 
   299     0019                     	;# 
   300     001A                     	;# 
   301     001B                     	;# 
   302     001C                     	;# 
   303     001E                     	;# 
   304     001F                     	;# 
   305     008C                     	;# 
   306     008D                     	;# 
   307     0091                     	;# 
   308     0092                     	;# 
   309     0093                     	;# 
   310     0094                     	;# 
   311     0095                     	;# 
   312     0096                     	;# 
   313     0097                     	;# 
   314     0098                     	;# 
   315     0099                     	;# 
   316     009A                     	;# 
   317     009B                     	;# 
   318     009B                     	;# 
   319     009C                     	;# 
   320     009D                     	;# 
   321     009E                     	;# 
   322     010C                     	;# 
   323     010D                     	;# 
   324     0111                     	;# 
   325     0112                     	;# 
   326     0113                     	;# 
   327     0114                     	;# 
   328     0115                     	;# 
   329     0116                     	;# 
   330     0117                     	;# 
   331     0118                     	;# 
   332     0119                     	;# 
   333     011A                     	;# 
   334     011B                     	;# 
   335     011D                     	;# 
   336     011E                     	;# 
   337     018C                     	;# 
   338     018D                     	;# 
   339     0191                     	;# 
   340     0191                     	;# 
   341     0192                     	;# 
   342     0193                     	;# 
   343     0193                     	;# 
   344     0193                     	;# 
   345     0194                     	;# 
   346     0195                     	;# 
   347     0196                     	;# 
   348     0199                     	;# 
   349     019A                     	;# 
   350     019B                     	;# 
   351     019B                     	;# 
   352     019B                     	;# 
   353     019B                     	;# 
   354     019C                     	;# 
   355     019C                     	;# 
   356     019D                     	;# 
   357     019E                     	;# 
   358     019F                     	;# 
   359     020C                     	;# 
   360     020D                     	;# 
   361     0211                     	;# 
   362     0211                     	;# 
   363     0212                     	;# 
   364     0212                     	;# 
   365     0213                     	;# 
   366     0213                     	;# 
   367     0214                     	;# 
   368     0214                     	;# 
   369     0215                     	;# 
   370     0215                     	;# 
   371     0215                     	;# 
   372     0216                     	;# 
   373     0216                     	;# 
   374     0217                     	;# 
   375     0217                     	;# 
   376     0219                     	;# 
   377     021A                     	;# 
   378     021B                     	;# 
   379     021C                     	;# 
   380     021D                     	;# 
   381     021E                     	;# 
   382     021F                     	;# 
   383     0291                     	;# 
   384     0291                     	;# 
   385     0292                     	;# 
   386     0293                     	;# 
   387     0294                     	;# 
   388     0295                     	;# 
   389     0295                     	;# 
   390     0296                     	;# 
   391     0298                     	;# 
   392     0298                     	;# 
   393     0299                     	;# 
   394     029A                     	;# 
   395     029B                     	;# 
   396     029C                     	;# 
   397     029C                     	;# 
   398     029D                     	;# 
   399     029E                     	;# 
   400     029E                     	;# 
   401     0311                     	;# 
   402     0311                     	;# 
   403     0312                     	;# 
   404     0313                     	;# 
   405     0318                     	;# 
   406     0318                     	;# 
   407     0319                     	;# 
   408     031A                     	;# 
   409     0394                     	;# 
   410     0395                     	;# 
   411     0396                     	;# 
   412     039A                     	;# 
   413     039C                     	;# 
   414     039D                     	;# 
   415     039E                     	;# 
   416     039F                     	;# 
   417     0415                     	;# 
   418     0416                     	;# 
   419     0417                     	;# 
   420     041C                     	;# 
   421     041D                     	;# 
   422     041E                     	;# 
   423     0FE4                     	;# 
   424     0FE5                     	;# 
   425     0FE6                     	;# 
   426     0FE7                     	;# 
   427     0FE8                     	;# 
   428     0FE9                     	;# 
   429     0FEA                     	;# 
   430     0FEB                     	;# 
   431     0FED                     	;# 
   432     0FEE                     	;# 
   433     0FEF                     	;# 
   434     0000                     	;# 
   435     0001                     	;# 
   436     0002                     	;# 
   437     0003                     	;# 
   438     0004                     	;# 
   439     0005                     	;# 
   440     0006                     	;# 
   441     0007                     	;# 
   442     0008                     	;# 
   443     0009                     	;# 
   444     000A                     	;# 
   445     000B                     	;# 
   446     000C                     	;# 
   447     000D                     	;# 
   448     0011                     	;# 
   449     0012                     	;# 
   450     0013                     	;# 
   451     0014                     	;# 
   452     0015                     	;# 
   453     0016                     	;# 
   454     0016                     	;# 
   455     0017                     	;# 
   456     0018                     	;# 
   457     0019                     	;# 
   458     001A                     	;# 
   459     001B                     	;# 
   460     001C                     	;# 
   461     001E                     	;# 
   462     001F                     	;# 
   463     008C                     	;# 
   464     008D                     	;# 
   465     0091                     	;# 
   466     0092                     	;# 
   467     0093                     	;# 
   468     0094                     	;# 
   469     0095                     	;# 
   470     0096                     	;# 
   471     0097                     	;# 
   472     0098                     	;# 
   473     0099                     	;# 
   474     009A                     	;# 
   475     009B                     	;# 
   476     009B                     	;# 
   477     009C                     	;# 
   478     009D                     	;# 
   479     009E                     	;# 
   480     010C                     	;# 
   481     010D                     	;# 
   482     0111                     	;# 
   483     0112                     	;# 
   484     0113                     	;# 
   485     0114                     	;# 
   486     0115                     	;# 
   487     0116                     	;# 
   488     0117                     	;# 
   489     0118                     	;# 
   490     0119                     	;# 
   491     011A                     	;# 
   492     011B                     	;# 
   493     011D                     	;# 
   494     011E                     	;# 
   495     018C                     	;# 
   496     018D                     	;# 
   497     0191                     	;# 
   498     0191                     	;# 
   499     0192                     	;# 
   500     0193                     	;# 
   501     0193                     	;# 
   502     0193                     	;# 
   503     0194                     	;# 
   504     0195                     	;# 
   505     0196                     	;# 
   506     0199                     	;# 
   507     019A                     	;# 
   508     019B                     	;# 
   509     019B                     	;# 
   510     019B                     	;# 
   511     019B                     	;# 
   512     019C                     	;# 
   513     019C                     	;# 
   514     019D                     	;# 
   515     019E                     	;# 
   516     019F                     	;# 
   517     020C                     	;# 
   518     020D                     	;# 
   519     0211                     	;# 
   520     0211                     	;# 
   521     0212                     	;# 
   522     0212                     	;# 
   523     0213                     	;# 
   524     0213                     	;# 
   525     0214                     	;# 
   526     0214                     	;# 
   527     0215                     	;# 
   528     0215                     	;# 
   529     0215                     	;# 
   530     0216                     	;# 
   531     0216                     	;# 
   532     0217                     	;# 
   533     0217                     	;# 
   534     0219                     	;# 
   535     021A                     	;# 
   536     021B                     	;# 
   537     021C                     	;# 
   538     021D                     	;# 
   539     021E                     	;# 
   540     021F                     	;# 
   541     0291                     	;# 
   542     0291                     	;# 
   543     0292                     	;# 
   544     0293                     	;# 
   545     0294                     	;# 
   546     0295                     	;# 
   547     0295                     	;# 
   548     0296                     	;# 
   549     0298                     	;# 
   550     0298                     	;# 
   551     0299                     	;# 
   552     029A                     	;# 
   553     029B                     	;# 
   554     029C                     	;# 
   555     029C                     	;# 
   556     029D                     	;# 
   557     029E                     	;# 
   558     029E                     	;# 
   559     0311                     	;# 
   560     0311                     	;# 
   561     0312                     	;# 
   562     0313                     	;# 
   563     0318                     	;# 
   564     0318                     	;# 
   565     0319                     	;# 
   566     031A                     	;# 
   567     0394                     	;# 
   568     0395                     	;# 
   569     0396                     	;# 
   570     039A                     	;# 
   571     039C                     	;# 
   572     039D                     	;# 
   573     039E                     	;# 
   574     039F                     	;# 
   575     0415                     	;# 
   576     0416                     	;# 
   577     0417                     	;# 
   578     041C                     	;# 
   579     041D                     	;# 
   580     041E                     	;# 
   581     0FE4                     	;# 
   582     0FE5                     	;# 
   583     0FE6                     	;# 
   584     0FE7                     	;# 
   585     0FE8                     	;# 
   586     0FE9                     	;# 
   587     0FEA                     	;# 
   588     0FEB                     	;# 
   589     0FED                     	;# 
   590     0FEE                     	;# 
   591     0FEF                     	;# 
   592     0000                     	;# 
   593     0001                     	;# 
   594     0002                     	;# 
   595     0003                     	;# 
   596     0004                     	;# 
   597     0005                     	;# 
   598     0006                     	;# 
   599     0007                     	;# 
   600     0008                     	;# 
   601     0009                     	;# 
   602     000A                     	;# 
   603     000B                     	;# 
   604     000C                     	;# 
   605     000D                     	;# 
   606     0011                     	;# 
   607     0012                     	;# 
   608     0013                     	;# 
   609     0014                     	;# 
   610     0015                     	;# 
   611     0016                     	;# 
   612     0016                     	;# 
   613     0017                     	;# 
   614     0018                     	;# 
   615     0019                     	;# 
   616     001A                     	;# 
   617     001B                     	;# 
   618     001C                     	;# 
   619     001E                     	;# 
   620     001F                     	;# 
   621     008C                     	;# 
   622     008D                     	;# 
   623     0091                     	;# 
   624     0092                     	;# 
   625     0093                     	;# 
   626     0094                     	;# 
   627     0095                     	;# 
   628     0096                     	;# 
   629     0097                     	;# 
   630     0098                     	;# 
   631     0099                     	;# 
   632     009A                     	;# 
   633     009B                     	;# 
   634     009B                     	;# 
   635     009C                     	;# 
   636     009D                     	;# 
   637     009E                     	;# 
   638     010C                     	;# 
   639     010D                     	;# 
   640     0111                     	;# 
   641     0112                     	;# 
   642     0113                     	;# 
   643     0114                     	;# 
   644     0115                     	;# 
   645     0116                     	;# 
   646     0117                     	;# 
   647     0118                     	;# 
   648     0119                     	;# 
   649     011A                     	;# 
   650     011B                     	;# 
   651     011D                     	;# 
   652     011E                     	;# 
   653     018C                     	;# 
   654     018D                     	;# 
   655     0191                     	;# 
   656     0191                     	;# 
   657     0192                     	;# 
   658     0193                     	;# 
   659     0193                     	;# 
   660     0193                     	;# 
   661     0194                     	;# 
   662     0195                     	;# 
   663     0196                     	;# 
   664     0199                     	;# 
   665     019A                     	;# 
   666     019B                     	;# 
   667     019B                     	;# 
   668     019B                     	;# 
   669     019B                     	;# 
   670     019C                     	;# 
   671     019C                     	;# 
   672     019D                     	;# 
   673     019E                     	;# 
   674     019F                     	;# 
   675     020C                     	;# 
   676     020D                     	;# 
   677     0211                     	;# 
   678     0211                     	;# 
   679     0212                     	;# 
   680     0212                     	;# 
   681     0213                     	;# 
   682     0213                     	;# 
   683     0214                     	;# 
   684     0214                     	;# 
   685     0215                     	;# 
   686     0215                     	;# 
   687     0215                     	;# 
   688     0216                     	;# 
   689     0216                     	;# 
   690     0217                     	;# 
   691     0217                     	;# 
   692     0219                     	;# 
   693     021A                     	;# 
   694     021B                     	;# 
   695     021C                     	;# 
   696     021D                     	;# 
   697     021E                     	;# 
   698     021F                     	;# 
   699     0291                     	;# 
   700     0291                     	;# 
   701     0292                     	;# 
   702     0293                     	;# 
   703     0294                     	;# 
   704     0295                     	;# 
   705     0295                     	;# 
   706     0296                     	;# 
   707     0298                     	;# 
   708     0298                     	;# 
   709     0299                     	;# 
   710     029A                     	;# 
   711     029B                     	;# 
   712     029C                     	;# 
   713     029C                     	;# 
   714     029D                     	;# 
   715     029E                     	;# 
   716     029E                     	;# 
   717     0311                     	;# 
   718     0311                     	;# 
   719     0312                     	;# 
   720     0313                     	;# 
   721     0318                     	;# 
   722     0318                     	;# 
   723     0319                     	;# 
   724     031A                     	;# 
   725     0394                     	;# 
   726     0395                     	;# 
   727     0396                     	;# 
   728     039A                     	;# 
   729     039C                     	;# 
   730     039D                     	;# 
   731     039E                     	;# 
   732     039F                     	;# 
   733     0415                     	;# 
   734     0416                     	;# 
   735     0417                     	;# 
   736     041C                     	;# 
   737     041D                     	;# 
   738     041E                     	;# 
   739     0FE4                     	;# 
   740     0FE5                     	;# 
   741     0FE6                     	;# 
   742     0FE7                     	;# 
   743     0FE8                     	;# 
   744     0FE9                     	;# 
   745     0FEA                     	;# 
   746     0FEB                     	;# 
   747     0FED                     	;# 
   748     0FEE                     	;# 
   749     0FEF                     	;# 
   750     0000                     	;# 
   751     0001                     	;# 
   752     0002                     	;# 
   753     0003                     	;# 
   754     0004                     	;# 
   755     0005                     	;# 
   756     0006                     	;# 
   757     0007                     	;# 
   758     0008                     	;# 
   759     0009                     	;# 
   760     000A                     	;# 
   761     000B                     	;# 
   762     000C                     	;# 
   763     000D                     	;# 
   764     0011                     	;# 
   765     0012                     	;# 
   766     0013                     	;# 
   767     0014                     	;# 
   768     0015                     	;# 
   769     0016                     	;# 
   770     0016                     	;# 
   771     0017                     	;# 
   772     0018                     	;# 
   773     0019                     	;# 
   774     001A                     	;# 
   775     001B                     	;# 
   776     001C                     	;# 
   777     001E                     	;# 
   778     001F                     	;# 
   779     008C                     	;# 
   780     008D                     	;# 
   781     0091                     	;# 
   782     0092                     	;# 
   783     0093                     	;# 
   784     0094                     	;# 
   785     0095                     	;# 
   786     0096                     	;# 
   787     0097                     	;# 
   788     0098                     	;# 
   789     0099                     	;# 
   790     009A                     	;# 
   791     009B                     	;# 
   792     009B                     	;# 
   793     009C                     	;# 
   794     009D                     	;# 
   795     009E                     	;# 
   796     010C                     	;# 
   797     010D                     	;# 
   798     0111                     	;# 
   799     0112                     	;# 
   800     0113                     	;# 
   801     0114                     	;# 
   802     0115                     	;# 
   803     0116                     	;# 
   804     0117                     	;# 
   805     0118                     	;# 
   806     0119                     	;# 
   807     011A                     	;# 
   808     011B                     	;# 
   809     011D                     	;# 
   810     011E                     	;# 
   811     018C                     	;# 
   812     018D                     	;# 
   813     0191                     	;# 
   814     0191                     	;# 
   815     0192                     	;# 
   816     0193                     	;# 
   817     0193                     	;# 
   818     0193                     	;# 
   819     0194                     	;# 
   820     0195                     	;# 
   821     0196                     	;# 
   822     0199                     	;# 
   823     019A                     	;# 
   824     019B                     	;# 
   825     019B                     	;# 
   826     019B                     	;# 
   827     019B                     	;# 
   828     019C                     	;# 
   829     019C                     	;# 
   830     019D                     	;# 
   831     019E                     	;# 
   832     019F                     	;# 
   833     020C                     	;# 
   834     020D                     	;# 
   835     0211                     	;# 
   836     0211                     	;# 
   837     0212                     	;# 
   838     0212                     	;# 
   839     0213                     	;# 
   840     0213                     	;# 
   841     0214                     	;# 
   842     0214                     	;# 
   843     0215                     	;# 
   844     0215                     	;# 
   845     0215                     	;# 
   846     0216                     	;# 
   847     0216                     	;# 
   848     0217                     	;# 
   849     0217                     	;# 
   850     0219                     	;# 
   851     021A                     	;# 
   852     021B                     	;# 
   853     021C                     	;# 
   854     021D                     	;# 
   855     021E                     	;# 
   856     021F                     	;# 
   857     0291                     	;# 
   858     0291                     	;# 
   859     0292                     	;# 
   860     0293                     	;# 
   861     0294                     	;# 
   862     0295                     	;# 
   863     0295                     	;# 
   864     0296                     	;# 
   865     0298                     	;# 
   866     0298                     	;# 
   867     0299                     	;# 
   868     029A                     	;# 
   869     029B                     	;# 
   870     029C                     	;# 
   871     029C                     	;# 
   872     029D                     	;# 
   873     029E                     	;# 
   874     029E                     	;# 
   875     0311                     	;# 
   876     0311                     	;# 
   877     0312                     	;# 
   878     0313                     	;# 
   879     0318                     	;# 
   880     0318                     	;# 
   881     0319                     	;# 
   882     031A                     	;# 
   883     0394                     	;# 
   884     0395                     	;# 
   885     0396                     	;# 
   886     039A                     	;# 
   887     039C                     	;# 
   888     039D                     	;# 
   889     039E                     	;# 
   890     039F                     	;# 
   891     0415                     	;# 
   892     0416                     	;# 
   893     0417                     	;# 
   894     041C                     	;# 
   895     041D                     	;# 
   896     041E                     	;# 
   897     0FE4                     	;# 
   898     0FE5                     	;# 
   899     0FE6                     	;# 
   900     0FE7                     	;# 
   901     0FE8                     	;# 
   902     0FE9                     	;# 
   903     0FEA                     	;# 
   904     0FEB                     	;# 
   905     0FED                     	;# 
   906     0FEE                     	;# 
   907     0FEF                     	;# 
   908     0000                     	;# 
   909     0001                     	;# 
   910     0002                     	;# 
   911     0003                     	;# 
   912     0004                     	;# 
   913     0005                     	;# 
   914     0006                     	;# 
   915     0007                     	;# 
   916     0008                     	;# 
   917     0009                     	;# 
   918     000A                     	;# 
   919     000B                     	;# 
   920     000C                     	;# 
   921     000D                     	;# 
   922     0011                     	;# 
   923     0012                     	;# 
   924     0013                     	;# 
   925     0014                     	;# 
   926     0015                     	;# 
   927     0016                     	;# 
   928     0016                     	;# 
   929     0017                     	;# 
   930     0018                     	;# 
   931     0019                     	;# 
   932     001A                     	;# 
   933     001B                     	;# 
   934     001C                     	;# 
   935     001E                     	;# 
   936     001F                     	;# 
   937     008C                     	;# 
   938     008D                     	;# 
   939     0091                     	;# 
   940     0092                     	;# 
   941     0093                     	;# 
   942     0094                     	;# 
   943     0095                     	;# 
   944     0096                     	;# 
   945     0097                     	;# 
   946     0098                     	;# 
   947     0099                     	;# 
   948     009A                     	;# 
   949     009B                     	;# 
   950     009B                     	;# 
   951     009C                     	;# 
   952     009D                     	;# 
   953     009E                     	;# 
   954     010C                     	;# 
   955     010D                     	;# 
   956     0111                     	;# 
   957     0112                     	;# 
   958     0113                     	;# 
   959     0114                     	;# 
   960     0115                     	;# 
   961     0116                     	;# 
   962     0117                     	;# 
   963     0118                     	;# 
   964     0119                     	;# 
   965     011A                     	;# 
   966     011B                     	;# 
   967     011D                     	;# 
   968     011E                     	;# 
   969     018C                     	;# 
   970     018D                     	;# 
   971     0191                     	;# 
   972     0191                     	;# 
   973     0192                     	;# 
   974     0193                     	;# 
   975     0193                     	;# 
   976     0193                     	;# 
   977     0194                     	;# 
   978     0195                     	;# 
   979     0196                     	;# 
   980     0199                     	;# 
   981     019A                     	;# 
   982     019B                     	;# 
   983     019B                     	;# 
   984     019B                     	;# 
   985     019B                     	;# 
   986     019C                     	;# 
   987     019C                     	;# 
   988     019D                     	;# 
   989     019E                     	;# 
   990     019F                     	;# 
   991     020C                     	;# 
   992     020D                     	;# 
   993     0211                     	;# 
   994     0211                     	;# 
   995     0212                     	;# 
   996     0212                     	;# 
   997     0213                     	;# 
   998     0213                     	;# 
   999     0214                     	;# 
  1000     0214                     	;# 
  1001     0215                     	;# 
  1002     0215                     	;# 
  1003     0215                     	;# 
  1004     0216                     	;# 
  1005     0216                     	;# 
  1006     0217                     	;# 
  1007     0217                     	;# 
  1008     0219                     	;# 
  1009     021A                     	;# 
  1010     021B                     	;# 
  1011     021C                     	;# 
  1012     021D                     	;# 
  1013     021E                     	;# 
  1014     021F                     	;# 
  1015     0291                     	;# 
  1016     0291                     	;# 
  1017     0292                     	;# 
  1018     0293                     	;# 
  1019     0294                     	;# 
  1020     0295                     	;# 
  1021     0295                     	;# 
  1022     0296                     	;# 
  1023     0298                     	;# 
  1024     0298                     	;# 
  1025     0299                     	;# 
  1026     029A                     	;# 
  1027     029B                     	;# 
  1028     029C                     	;# 
  1029     029C                     	;# 
  1030     029D                     	;# 
  1031     029E                     	;# 
  1032     029E                     	;# 
  1033     0311                     	;# 
  1034     0311                     	;# 
  1035     0312                     	;# 
  1036     0313                     	;# 
  1037     0318                     	;# 
  1038     0318                     	;# 
  1039     0319                     	;# 
  1040     031A                     	;# 
  1041     0394                     	;# 
  1042     0395                     	;# 
  1043     0396                     	;# 
  1044     039A                     	;# 
  1045     039C                     	;# 
  1046     039D                     	;# 
  1047     039E                     	;# 
  1048     039F                     	;# 
  1049     0415                     	;# 
  1050     0416                     	;# 
  1051     0417                     	;# 
  1052     041C                     	;# 
  1053     041D                     	;# 
  1054     041E                     	;# 
  1055     0FE4                     	;# 
  1056     0FE5                     	;# 
  1057     0FE6                     	;# 
  1058     0FE7                     	;# 
  1059     0FE8                     	;# 
  1060     0FE9                     	;# 
  1061     0FEA                     	;# 
  1062     0FEB                     	;# 
  1063     0FED                     	;# 
  1064     0FEE                     	;# 
  1065     0FEF                     	;# 
  1066     0000                     	;# 
  1067     0001                     	;# 
  1068     0002                     	;# 
  1069     0003                     	;# 
  1070     0004                     	;# 
  1071     0005                     	;# 
  1072     0006                     	;# 
  1073     0007                     	;# 
  1074     0008                     	;# 
  1075     0009                     	;# 
  1076     000A                     	;# 
  1077     000B                     	;# 
  1078     000C                     	;# 
  1079     000D                     	;# 
  1080     0011                     	;# 
  1081     0012                     	;# 
  1082     0013                     	;# 
  1083     0014                     	;# 
  1084     0015                     	;# 
  1085     0016                     	;# 
  1086     0016                     	;# 
  1087     0017                     	;# 
  1088     0018                     	;# 
  1089     0019                     	;# 
  1090     001A                     	;# 
  1091     001B                     	;# 
  1092     001C                     	;# 
  1093     001E                     	;# 
  1094     001F                     	;# 
  1095     008C                     	;# 
  1096     008D                     	;# 
  1097     0091                     	;# 
  1098     0092                     	;# 
  1099     0093                     	;# 
  1100     0094                     	;# 
  1101     0095                     	;# 
  1102     0096                     	;# 
  1103     0097                     	;# 
  1104     0098                     	;# 
  1105     0099                     	;# 
  1106     009A                     	;# 
  1107     009B                     	;# 
  1108     009B                     	;# 
  1109     009C                     	;# 
  1110     009D                     	;# 
  1111     009E                     	;# 
  1112     010C                     	;# 
  1113     010D                     	;# 
  1114     0111                     	;# 
  1115     0112                     	;# 
  1116     0113                     	;# 
  1117     0114                     	;# 
  1118     0115                     	;# 
  1119     0116                     	;# 
  1120     0117                     	;# 
  1121     0118                     	;# 
  1122     0119                     	;# 
  1123     011A                     	;# 
  1124     011B                     	;# 
  1125     011D                     	;# 
  1126     011E                     	;# 
  1127     018C                     	;# 
  1128     018D                     	;# 
  1129     0191                     	;# 
  1130     0191                     	;# 
  1131     0192                     	;# 
  1132     0193                     	;# 
  1133     0193                     	;# 
  1134     0193                     	;# 
  1135     0194                     	;# 
  1136     0195                     	;# 
  1137     0196                     	;# 
  1138     0199                     	;# 
  1139     019A                     	;# 
  1140     019B                     	;# 
  1141     019B                     	;# 
  1142     019B                     	;# 
  1143     019B                     	;# 
  1144     019C                     	;# 
  1145     019C                     	;# 
  1146     019D                     	;# 
  1147     019E                     	;# 
  1148     019F                     	;# 
  1149     020C                     	;# 
  1150     020D                     	;# 
  1151     0211                     	;# 
  1152     0211                     	;# 
  1153     0212                     	;# 
  1154     0212                     	;# 
  1155     0213                     	;# 
  1156     0213                     	;# 
  1157     0214                     	;# 
  1158     0214                     	;# 
  1159     0215                     	;# 
  1160     0215                     	;# 
  1161     0215                     	;# 
  1162     0216                     	;# 
  1163     0216                     	;# 
  1164     0217                     	;# 
  1165     0217                     	;# 
  1166     0219                     	;# 
  1167     021A                     	;# 
  1168     021B                     	;# 
  1169     021C                     	;# 
  1170     021D                     	;# 
  1171     021E                     	;# 
  1172     021F                     	;# 
  1173     0291                     	;# 
  1174     0291                     	;# 
  1175     0292                     	;# 
  1176     0293                     	;# 
  1177     0294                     	;# 
  1178     0295                     	;# 
  1179     0295                     	;# 
  1180     0296                     	;# 
  1181     0298                     	;# 
  1182     0298                     	;# 
  1183     0299                     	;# 
  1184     029A                     	;# 
  1185     029B                     	;# 
  1186     029C                     	;# 
  1187     029C                     	;# 
  1188     029D                     	;# 
  1189     029E                     	;# 
  1190     029E                     	;# 
  1191     0311                     	;# 
  1192     0311                     	;# 
  1193     0312                     	;# 
  1194     0313                     	;# 
  1195     0318                     	;# 
  1196     0318                     	;# 
  1197     0319                     	;# 
  1198     031A                     	;# 
  1199     0394                     	;# 
  1200     0395                     	;# 
  1201     0396                     	;# 
  1202     039A                     	;# 
  1203     039C                     	;# 
  1204     039D                     	;# 
  1205     039E                     	;# 
  1206     039F                     	;# 
  1207     0415                     	;# 
  1208     0416                     	;# 
  1209     0417                     	;# 
  1210     041C                     	;# 
  1211     041D                     	;# 
  1212     041E                     	;# 
  1213     0FE4                     	;# 
  1214     0FE5                     	;# 
  1215     0FE6                     	;# 
  1216     0FE7                     	;# 
  1217     0FE8                     	;# 
  1218     0FE9                     	;# 
  1219     0FEA                     	;# 
  1220     0FEB                     	;# 
  1221     0FED                     	;# 
  1222     0FEE                     	;# 
  1223     0FEF                     	;# 
  1224     0000                     	;# 
  1225     0001                     	;# 
  1226     0002                     	;# 
  1227     0003                     	;# 
  1228     0004                     	;# 
  1229     0005                     	;# 
  1230     0006                     	;# 
  1231     0007                     	;# 
  1232     0008                     	;# 
  1233     0009                     	;# 
  1234     000A                     	;# 
  1235     000B                     	;# 
  1236     000C                     	;# 
  1237     000D                     	;# 
  1238     0011                     	;# 
  1239     0012                     	;# 
  1240     0013                     	;# 
  1241     0014                     	;# 
  1242     0015                     	;# 
  1243     0016                     	;# 
  1244     0016                     	;# 
  1245     0017                     	;# 
  1246     0018                     	;# 
  1247     0019                     	;# 
  1248     001A                     	;# 
  1249     001B                     	;# 
  1250     001C                     	;# 
  1251     001E                     	;# 
  1252     001F                     	;# 
  1253     008C                     	;# 
  1254     008D                     	;# 
  1255     0091                     	;# 
  1256     0092                     	;# 
  1257     0093                     	;# 
  1258     0094                     	;# 
  1259     0095                     	;# 
  1260     0096                     	;# 
  1261     0097                     	;# 
  1262     0098                     	;# 
  1263     0099                     	;# 
  1264     009A                     	;# 
  1265     009B                     	;# 
  1266     009B                     	;# 
  1267     009C                     	;# 
  1268     009D                     	;# 
  1269     009E                     	;# 
  1270     010C                     	;# 
  1271     010D                     	;# 
  1272     0111                     	;# 
  1273     0112                     	;# 
  1274     0113                     	;# 
  1275     0114                     	;# 
  1276     0115                     	;# 
  1277     0116                     	;# 
  1278     0117                     	;# 
  1279     0118                     	;# 
  1280     0119                     	;# 
  1281     011A                     	;# 
  1282     011B                     	;# 
  1283     011D                     	;# 
  1284     011E                     	;# 
  1285     018C                     	;# 
  1286     018D                     	;# 
  1287     0191                     	;# 
  1288     0191                     	;# 
  1289     0192                     	;# 
  1290     0193                     	;# 
  1291     0193                     	;# 
  1292     0193                     	;# 
  1293     0194                     	;# 
  1294     0195                     	;# 
  1295     0196                     	;# 
  1296     0199                     	;# 
  1297     019A                     	;# 
  1298     019B                     	;# 
  1299     019B                     	;# 
  1300     019B                     	;# 
  1301     019B                     	;# 
  1302     019C                     	;# 
  1303     019C                     	;# 
  1304     019D                     	;# 
  1305     019E                     	;# 
  1306     019F                     	;# 
  1307     020C                     	;# 
  1308     020D                     	;# 
  1309     0211                     	;# 
  1310     0211                     	;# 
  1311     0212                     	;# 
  1312     0212                     	;# 
  1313     0213                     	;# 
  1314     0213                     	;# 
  1315     0214                     	;# 
  1316     0214                     	;# 
  1317     0215                     	;# 
  1318     0215                     	;# 
  1319     0215                     	;# 
  1320     0216                     	;# 
  1321     0216                     	;# 
  1322     0217                     	;# 
  1323     0217                     	;# 
  1324     0219                     	;# 
  1325     021A                     	;# 
  1326     021B                     	;# 
  1327     021C                     	;# 
  1328     021D                     	;# 
  1329     021E                     	;# 
  1330     021F                     	;# 
  1331     0291                     	;# 
  1332     0291                     	;# 
  1333     0292                     	;# 
  1334     0293                     	;# 
  1335     0294                     	;# 
  1336     0295                     	;# 
  1337     0295                     	;# 
  1338     0296                     	;# 
  1339     0298                     	;# 
  1340     0298                     	;# 
  1341     0299                     	;# 
  1342     029A                     	;# 
  1343     029B                     	;# 
  1344     029C                     	;# 
  1345     029C                     	;# 
  1346     029D                     	;# 
  1347     029E                     	;# 
  1348     029E                     	;# 
  1349     0311                     	;# 
  1350     0311                     	;# 
  1351     0312                     	;# 
  1352     0313                     	;# 
  1353     0318                     	;# 
  1354     0318                     	;# 
  1355     0319                     	;# 
  1356     031A                     	;# 
  1357     0394                     	;# 
  1358     0395                     	;# 
  1359     0396                     	;# 
  1360     039A                     	;# 
  1361     039C                     	;# 
  1362     039D                     	;# 
  1363     039E                     	;# 
  1364     039F                     	;# 
  1365     0415                     	;# 
  1366     0416                     	;# 
  1367     0417                     	;# 
  1368     041C                     	;# 
  1369     041D                     	;# 
  1370     041E                     	;# 
  1371     0FE4                     	;# 
  1372     0FE5                     	;# 
  1373     0FE6                     	;# 
  1374     0FE7                     	;# 
  1375     0FE8                     	;# 
  1376     0FE9                     	;# 
  1377     0FEA                     	;# 
  1378     0FEB                     	;# 
  1379     0FED                     	;# 
  1380     0FEE                     	;# 
  1381     0FEF                     	;# 
  1382     0000                     	;# 
  1383     0001                     	;# 
  1384     0002                     	;# 
  1385     0003                     	;# 
  1386     0004                     	;# 
  1387     0005                     	;# 
  1388     0006                     	;# 
  1389     0007                     	;# 
  1390     0008                     	;# 
  1391     0009                     	;# 
  1392     000A                     	;# 
  1393     000B                     	;# 
  1394     000C                     	;# 
  1395     000D                     	;# 
  1396     0011                     	;# 
  1397     0012                     	;# 
  1398     0013                     	;# 
  1399     0014                     	;# 
  1400     0015                     	;# 
  1401     0016                     	;# 
  1402     0016                     	;# 
  1403     0017                     	;# 
  1404     0018                     	;# 
  1405     0019                     	;# 
  1406     001A                     	;# 
  1407     001B                     	;# 
  1408     001C                     	;# 
  1409     001E                     	;# 
  1410     001F                     	;# 
  1411     008C                     	;# 
  1412     008D                     	;# 
  1413     0091                     	;# 
  1414     0092                     	;# 
  1415     0093                     	;# 
  1416     0094                     	;# 
  1417     0095                     	;# 
  1418     0096                     	;# 
  1419     0097                     	;# 
  1420     0098                     	;# 
  1421     0099                     	;# 
  1422     009A                     	;# 
  1423     009B                     	;# 
  1424     009B                     	;# 
  1425     009C                     	;# 
  1426     009D                     	;# 
  1427     009E                     	;# 
  1428     010C                     	;# 
  1429     010D                     	;# 
  1430     0111                     	;# 
  1431     0112                     	;# 
  1432     0113                     	;# 
  1433     0114                     	;# 
  1434     0115                     	;# 
  1435     0116                     	;# 
  1436     0117                     	;# 
  1437     0118                     	;# 
  1438     0119                     	;# 
  1439     011A                     	;# 
  1440     011B                     	;# 
  1441     011D                     	;# 
  1442     011E                     	;# 
  1443     018C                     	;# 
  1444     018D                     	;# 
  1445     0191                     	;# 
  1446     0191                     	;# 
  1447     0192                     	;# 
  1448     0193                     	;# 
  1449     0193                     	;# 
  1450     0193                     	;# 
  1451     0194                     	;# 
  1452     0195                     	;# 
  1453     0196                     	;# 
  1454     0199                     	;# 
  1455     019A                     	;# 
  1456     019B                     	;# 
  1457     019B                     	;# 
  1458     019B                     	;# 
  1459     019B                     	;# 
  1460     019C                     	;# 
  1461     019C                     	;# 
  1462     019D                     	;# 
  1463     019E                     	;# 
  1464     019F                     	;# 
  1465     020C                     	;# 
  1466     020D                     	;# 
  1467     0211                     	;# 
  1468     0211                     	;# 
  1469     0212                     	;# 
  1470     0212                     	;# 
  1471     0213                     	;# 
  1472     0213                     	;# 
  1473     0214                     	;# 
  1474     0214                     	;# 
  1475     0215                     	;# 
  1476     0215                     	;# 
  1477     0215                     	;# 
  1478     0216                     	;# 
  1479     0216                     	;# 
  1480     0217                     	;# 
  1481     0217                     	;# 
  1482     0219                     	;# 
  1483     021A                     	;# 
  1484     021B                     	;# 
  1485     021C                     	;# 
  1486     021D                     	;# 
  1487     021E                     	;# 
  1488     021F                     	;# 
  1489     0291                     	;# 
  1490     0291                     	;# 
  1491     0292                     	;# 
  1492     0293                     	;# 
  1493     0294                     	;# 
  1494     0295                     	;# 
  1495     0295                     	;# 
  1496     0296                     	;# 
  1497     0298                     	;# 
  1498     0298                     	;# 
  1499     0299                     	;# 
  1500     029A                     	;# 
  1501     029B                     	;# 
  1502     029C                     	;# 
  1503     029C                     	;# 
  1504     029D                     	;# 
  1505     029E                     	;# 
  1506     029E                     	;# 
  1507     0311                     	;# 
  1508     0311                     	;# 
  1509     0312                     	;# 
  1510     0313                     	;# 
  1511     0318                     	;# 
  1512     0318                     	;# 
  1513     0319                     	;# 
  1514     031A                     	;# 
  1515     0394                     	;# 
  1516     0395                     	;# 
  1517     0396                     	;# 
  1518     039A                     	;# 
  1519     039C                     	;# 
  1520     039D                     	;# 
  1521     039E                     	;# 
  1522     039F                     	;# 
  1523     0415                     	;# 
  1524     0416                     	;# 
  1525     0417                     	;# 
  1526     041C                     	;# 
  1527     041D                     	;# 
  1528     041E                     	;# 
  1529     0FE4                     	;# 
  1530     0FE5                     	;# 
  1531     0FE6                     	;# 
  1532     0FE7                     	;# 
  1533     0FE8                     	;# 
  1534     0FE9                     	;# 
  1535     0FEA                     	;# 
  1536     0FEB                     	;# 
  1537     0FED                     	;# 
  1538     0FEE                     	;# 
  1539     0FEF                     	;# 
  1540                           
  1541                           	psect	eeprom_data
  1542     0000  0000 0001 0002 0003 0004 0005 0006 0007 	db	0,1,2,3,4,5,6,7	;# 
  1543     0008  0008 0009 000A 000B 000C 000D 000E 000F 	db	8,9,10,11,12,13,14,15	;# 
  1544     0000                     	;# 
  1545     0001                     	;# 
  1546     0002                     	;# 
  1547     0003                     	;# 
  1548     0004                     	;# 
  1549     0005                     	;# 
  1550     0006                     	;# 
  1551     0007                     	;# 
  1552     0008                     	;# 
  1553     0009                     	;# 
  1554     000A                     	;# 
  1555     000B                     	;# 
  1556     000C                     	;# 
  1557     000D                     	;# 
  1558     0011                     	;# 
  1559     0012                     	;# 
  1560     0013                     	;# 
  1561     0014                     	;# 
  1562     0015                     	;# 
  1563     0016                     	;# 
  1564     0016                     	;# 
  1565     0017                     	;# 
  1566     0018                     	;# 
  1567     0019                     	;# 
  1568     001A                     	;# 
  1569     001B                     	;# 
  1570     001C                     	;# 
  1571     001E                     	;# 
  1572     001F                     	;# 
  1573     008C                     	;# 
  1574     008D                     	;# 
  1575     0091                     	;# 
  1576     0092                     	;# 
  1577     0093                     	;# 
  1578     0094                     	;# 
  1579     0095                     	;# 
  1580     0096                     	;# 
  1581     0097                     	;# 
  1582     0098                     	;# 
  1583     0099                     	;# 
  1584     009A                     	;# 
  1585     009B                     	;# 
  1586     009B                     	;# 
  1587     009C                     	;# 
  1588     009D                     	;# 
  1589     009E                     	;# 
  1590     010C                     	;# 
  1591     010D                     	;# 
  1592     0111                     	;# 
  1593     0112                     	;# 
  1594     0113                     	;# 
  1595     0114                     	;# 
  1596     0115                     	;# 
  1597     0116                     	;# 
  1598     0117                     	;# 
  1599     0118                     	;# 
  1600     0119                     	;# 
  1601     011A                     	;# 
  1602     011B                     	;# 
  1603     011D                     	;# 
  1604     011E                     	;# 
  1605     018C                     	;# 
  1606     018D                     	;# 
  1607     0191                     	;# 
  1608     0191                     	;# 
  1609     0192                     	;# 
  1610     0193                     	;# 
  1611     0193                     	;# 
  1612     0193                     	;# 
  1613     0194                     	;# 
  1614     0195                     	;# 
  1615     0196                     	;# 
  1616     0199                     	;# 
  1617     019A                     	;# 
  1618     019B                     	;# 
  1619     019B                     	;# 
  1620     019B                     	;# 
  1621     019B                     	;# 
  1622     019C                     	;# 
  1623     019C                     	;# 
  1624     019D                     	;# 
  1625     019E                     	;# 
  1626     019F                     	;# 
  1627     020C                     	;# 
  1628     020D                     	;# 
  1629     0211                     	;# 
  1630     0211                     	;# 
  1631     0212                     	;# 
  1632     0212                     	;# 
  1633     0213                     	;# 
  1634     0213                     	;# 
  1635     0214                     	;# 
  1636     0214                     	;# 
  1637     0215                     	;# 
  1638     0215                     	;# 
  1639     0215                     	;# 
  1640     0216                     	;# 
  1641     0216                     	;# 
  1642     0217                     	;# 
  1643     0217                     	;# 
  1644     0219                     	;# 
  1645     021A                     	;# 
  1646     021B                     	;# 
  1647     021C                     	;# 
  1648     021D                     	;# 
  1649     021E                     	;# 
  1650     021F                     	;# 
  1651     0291                     	;# 
  1652     0291                     	;# 
  1653     0292                     	;# 
  1654     0293                     	;# 
  1655     0294                     	;# 
  1656     0295                     	;# 
  1657     0295                     	;# 
  1658     0296                     	;# 
  1659     0298                     	;# 
  1660     0298                     	;# 
  1661     0299                     	;# 
  1662     029A                     	;# 
  1663     029B                     	;# 
  1664     029C                     	;# 
  1665     029C                     	;# 
  1666     029D                     	;# 
  1667     029E                     	;# 
  1668     029E                     	;# 
  1669     0311                     	;# 
  1670     0311                     	;# 
  1671     0312                     	;# 
  1672     0313                     	;# 
  1673     0318                     	;# 
  1674     0318                     	;# 
  1675     0319                     	;# 
  1676     031A                     	;# 
  1677     0394                     	;# 
  1678     0395                     	;# 
  1679     0396                     	;# 
  1680     039A                     	;# 
  1681     039C                     	;# 
  1682     039D                     	;# 
  1683     039E                     	;# 
  1684     039F                     	;# 
  1685     0415                     	;# 
  1686     0416                     	;# 
  1687     0417                     	;# 
  1688     041C                     	;# 
  1689     041D                     	;# 
  1690     041E                     	;# 
  1691     0FE4                     	;# 
  1692     0FE5                     	;# 
  1693     0FE6                     	;# 
  1694     0FE7                     	;# 
  1695     0FE8                     	;# 
  1696     0FE9                     	;# 
  1697     0FEA                     	;# 
  1698     0FEB                     	;# 
  1699     0FED                     	;# 
  1700     0FEE                     	;# 
  1701     0FEF                     	;# 
  1702     0000                     	;# 
  1703     0001                     	;# 
  1704     0002                     	;# 
  1705     0003                     	;# 
  1706     0004                     	;# 
  1707     0005                     	;# 
  1708     0006                     	;# 
  1709     0007                     	;# 
  1710     0008                     	;# 
  1711     0009                     	;# 
  1712     000A                     	;# 
  1713     000B                     	;# 
  1714     000C                     	;# 
  1715     000D                     	;# 
  1716     0011                     	;# 
  1717     0012                     	;# 
  1718     0013                     	;# 
  1719     0014                     	;# 
  1720     0015                     	;# 
  1721     0016                     	;# 
  1722     0016                     	;# 
  1723     0017                     	;# 
  1724     0018                     	;# 
  1725     0019                     	;# 
  1726     001A                     	;# 
  1727     001B                     	;# 
  1728     001C                     	;# 
  1729     001E                     	;# 
  1730     001F                     	;# 
  1731     008C                     	;# 
  1732     008D                     	;# 
  1733     0091                     	;# 
  1734     0092                     	;# 
  1735     0093                     	;# 
  1736     0094                     	;# 
  1737     0095                     	;# 
  1738     0096                     	;# 
  1739     0097                     	;# 
  1740     0098                     	;# 
  1741     0099                     	;# 
  1742     009A                     	;# 
  1743     009B                     	;# 
  1744     009B                     	;# 
  1745     009C                     	;# 
  1746     009D                     	;# 
  1747     009E                     	;# 
  1748     010C                     	;# 
  1749     010D                     	;# 
  1750     0111                     	;# 
  1751     0112                     	;# 
  1752     0113                     	;# 
  1753     0114                     	;# 
  1754     0115                     	;# 
  1755     0116                     	;# 
  1756     0117                     	;# 
  1757     0118                     	;# 
  1758     0119                     	;# 
  1759     011A                     	;# 
  1760     011B                     	;# 
  1761     011D                     	;# 
  1762     011E                     	;# 
  1763     018C                     	;# 
  1764     018D                     	;# 
  1765     0191                     	;# 
  1766     0191                     	;# 
  1767     0192                     	;# 
  1768     0193                     	;# 
  1769     0193                     	;# 
  1770     0193                     	;# 
  1771     0194                     	;# 
  1772     0195                     	;# 
  1773     0196                     	;# 
  1774     0199                     	;# 
  1775     019A                     	;# 
  1776     019B                     	;# 
  1777     019B                     	;# 
  1778     019B                     	;# 
  1779     019B                     	;# 
  1780     019C                     	;# 
  1781     019C                     	;# 
  1782     019D                     	;# 
  1783     019E                     	;# 
  1784     019F                     	;# 
  1785     020C                     	;# 
  1786     020D                     	;# 
  1787     0211                     	;# 
  1788     0211                     	;# 
  1789     0212                     	;# 
  1790     0212                     	;# 
  1791     0213                     	;# 
  1792     0213                     	;# 
  1793     0214                     	;# 
  1794     0214                     	;# 
  1795     0215                     	;# 
  1796     0215                     	;# 
  1797     0215                     	;# 
  1798     0216                     	;# 
  1799     0216                     	;# 
  1800     0217                     	;# 
  1801     0217                     	;# 
  1802     0219                     	;# 
  1803     021A                     	;# 
  1804     021B                     	;# 
  1805     021C                     	;# 
  1806     021D                     	;# 
  1807     021E                     	;# 
  1808     021F                     	;# 
  1809     0291                     	;# 
  1810     0291                     	;# 
  1811     0292                     	;# 
  1812     0293                     	;# 
  1813     0294                     	;# 
  1814     0295                     	;# 
  1815     0295                     	;# 
  1816     0296                     	;# 
  1817     0298                     	;# 
  1818     0298                     	;# 
  1819     0299                     	;# 
  1820     029A                     	;# 
  1821     029B                     	;# 
  1822     029C                     	;# 
  1823     029C                     	;# 
  1824     029D                     	;# 
  1825     029E                     	;# 
  1826     029E                     	;# 
  1827     0311                     	;# 
  1828     0311                     	;# 
  1829     0312                     	;# 
  1830     0313                     	;# 
  1831     0318                     	;# 
  1832     0318                     	;# 
  1833     0319                     	;# 
  1834     031A                     	;# 
  1835     0394                     	;# 
  1836     0395                     	;# 
  1837     0396                     	;# 
  1838     039A                     	;# 
  1839     039C                     	;# 
  1840     039D                     	;# 
  1841     039E                     	;# 
  1842     039F                     	;# 
  1843     0415                     	;# 
  1844     0416                     	;# 
  1845     0417                     	;# 
  1846     041C                     	;# 
  1847     041D                     	;# 
  1848     041E                     	;# 
  1849     0FE4                     	;# 
  1850     0FE5                     	;# 
  1851     0FE6                     	;# 
  1852     0FE7                     	;# 
  1853     0FE8                     	;# 
  1854     0FE9                     	;# 
  1855     0FEA                     	;# 
  1856     0FEB                     	;# 
  1857     0FED                     	;# 
  1858     0FEE                     	;# 
  1859     0FEF                     	;# 
  1860                           
  1861 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1862     0000                     
  1863 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1864     0000                     
  1865 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1866     0000                     
  1867                           	psect	idataBANK1
  1868     0002                     __pidataBANK1:
  1869                           
  1870                           ;initializer for _SPKR_COUNT
  1871     0002  3464               	retlw	100
  1872                           
  1873                           ;initializer for _SPKR_DURATION
  1874     0003  3402               	retlw	2
  1875                           
  1876                           	psect	idataBANK2
  1877     0800                     __pidataBANK2:
  1878                           
  1879                           ;initializer for _HEAT_CALL_TICKS
  1880     0800  343C               	retlw	60
  1881     0801  3400               	retlw	0
  1882                           
  1883                           	psect	stringtext1
  1884     1800                     __pstringtext1:
  1885     1800                     _SETPOINTS:
  1886     1800  3400               	retlw	0
  1887     1801  3400               	retlw	0
  1888     1802  3441               	retlw	65
  1889     1803  3400               	retlw	0
  1890     1804  3444               	retlw	68
  1891     1805  3400               	retlw	0
  1892     1806  3447               	retlw	71
  1893     1807  3400               	retlw	0
  1894     1808  344A               	retlw	74
  1895     1809  3400               	retlw	0
  1896     180A  344D               	retlw	77
  1897     180B  3400               	retlw	0
  1898     180C                     __end_of_SETPOINTS:
  1899                           
  1900                           	psect	stringtext2
  1901     180C                     __pstringtext2:
  1902     180C                     _C:
  1903     180C  3480               	retlw	128
  1904     180D  3425               	retlw	37
  1905     180E  34C4               	retlw	196
  1906     180F  3433               	retlw	51
  1907     1810                     __end_of_C:
  1908                           
  1909                           	psect	stringtext3
  1910     1810                     __pstringtext3:
  1911     1810                     _B:
  1912     1810  3416               	retlw	22
  1913     1811  342D               	retlw	45
  1914     1812  3478               	retlw	120
  1915     1813  3439               	retlw	57
  1916     1814                     __end_of_B:
  1917                           
  1918                           	psect	stringtext4
  1919     1814                     __pstringtext4:
  1920     1814                     _A:
  1921     1814  3410               	retlw	16
  1922     1815  3400               	retlw	0
  1923     1816  34A8               	retlw	168
  1924     1817  343A               	retlw	58
  1925     1818                     __end_of_A:
  1926                           
  1927                           	psect	stringtext5
  1928     1818                     __pstringtext5:
  1929     1818                     _ONE_SECOND:
  1930     1818  340A               	retlw	10
  1931     1819  3400               	retlw	0
  1932     181A                     __end_of_ONE_SECOND:
  1933                           
  1934                           	psect	stringtext6
  1935     181A                     __pstringtext6:
  1936     181A                     _TURN_ON:
  1937     181A  3401               	retlw	1
  1938     181B  3400               	retlw	0
  1939     181C                     __end_of_TURN_ON:
  1940                           
  1941                           	psect	stringtext7
  1942     181C                     __pstringtext7:
  1943     181C                     _SHUT_OFF:
  1944     181C  3402               	retlw	2
  1945     181D  3400               	retlw	0
  1946     181E                     __end_of_SHUT_OFF:
  1947                           
  1948                           	psect	stringtext8
  1949     181E                     __pstringtext8:
  1950     181E                     _MIN_IDLE_TIME:
  1951     181E  3401               	retlw	1
  1952     181F  3400               	retlw	0
  1953     1820                     __end_of_MIN_IDLE_TIME:
  1954                           
  1955                           	psect	stringtext9
  1956     1820                     __pstringtext9:
  1957     1820                     _MIN_RUN_TIME:
  1958     1820  3401               	retlw	1
  1959     1821  3400               	retlw	0
  1960     1822                     __end_of_MIN_RUN_TIME:
  1961                           
  1962                           	psect	nvBANK1
  1963     00D1                     __pnvBANK1:
  1964     00D1                     _TMR2_InterruptHandler:
  1965     00D1                     	ds	2
  1966     00D3                     _EUSART_ErrorHandler:
  1967     00D3                     	ds	2
  1968     00D5                     _EUSART_OverrunErrorHandler:
  1969     00D5                     	ds	2
  1970     00D7                     _EUSART_FramingErrorHandler:
  1971     00D7                     	ds	2
  1972     00D9                     _TMR1_InterruptHandler:
  1973     00D9                     	ds	2
  1974     00DB                     _TMR0_InterruptHandler:
  1975     00DB                     	ds	2
  1976     001C                     _T2CONbits	set	28
  1977     001C                     _T2CON	set	28
  1978     001A                     _TMR2	set	26
  1979     001B                     _PR2	set	27
  1980     000D                     _PORTBbits	set	13
  1981     000C                     _PORTAbits	set	12
  1982     0019                     _T1GCONbits	set	25
  1983     0018                     _T1CONbits	set	24
  1984     0018                     _T1CON	set	24
  1985     0016                     _TMR1L	set	22
  1986     0017                     _TMR1H	set	23
  1987     0019                     _T1GCON	set	25
  1988     0011                     _PIR1bits	set	17
  1989     000B                     _INTCONbits	set	11
  1990     0015                     _TMR0	set	21
  1991     008D                     _TRISBbits	set	141
  1992     008C                     _TRISAbits	set	140
  1993     0091                     _PIE1bits	set	145
  1994     0095                     _OPTION_REG	set	149
  1995     009D                     _ADCON0bits	set	157
  1996     009D                     _ADCON0	set	157
  1997     009C                     _ADRESH	set	156
  1998     009B                     _ADRESL	set	155
  1999     009E                     _ADCON1	set	158
  2000     0097                     _WDTCON	set	151
  2001     0098                     _OSCTUNE	set	152
  2002     0099                     _OSCCON	set	153
  2003     0095                     _OPTION_REGbits	set	149
  2004     008D                     _TRISB	set	141
  2005     008C                     _TRISA	set	140
  2006     010D                     _LATBbits	set	269
  2007     010C                     _LATAbits	set	268
  2008     0116                     _BORCON	set	278
  2009     011E                     _APFCON1	set	286
  2010     011D                     _APFCON0	set	285
  2011     010D                     _LATB	set	269
  2012     010C                     _LATA	set	268
  2013     0196                     _EECON2	set	406
  2014     0193                     _EEDATL	set	403
  2015     0194                     _EEDATH	set	404
  2016     0195                     _EECON1bits	set	405
  2017     0192                     _EEADRH	set	402
  2018     0191                     _EEADRL	set	401
  2019     019A                     _TXREG	set	410
  2020     0199                     _RCREG	set	409
  2021     019D                     _RCSTAbits	set	413
  2022     019E                     _TXSTAbits	set	414
  2023     019C                     _SPBRGH	set	412
  2024     019B                     _SPBRGL	set	411
  2025     019E                     _TXSTA	set	414
  2026     019D                     _RCSTA	set	413
  2027     019F                     _BAUDCON	set	415
  2028     018C                     _ANSELA	set	396
  2029     018D                     _ANSELB	set	397
  2030     020C                     _WPUA	set	524
  2031     020D                     _WPUB	set	525
  2032                           
  2033                           	psect	cinit
  2034     0025                     start_initialization:	
  2035                           ; #config settings
  2036                           
  2037     0025                     __initialization:
  2038                           
  2039                           ; Initialize objects allocated to BANK1
  2040     0025  0021               	movlb	1	; select bank1
  2041     0026  3180  2002  3180   	fcall	__pidataBANK1	;fetch initializer
  2042     0029  00DD               	movwf	__pdataBANK1& (0+127)
  2043     002A  3180  2003  3180   	fcall	__pidataBANK1+1	;fetch initializer
  2044     002D  00DE               	movwf	(__pdataBANK1+1)& (0+127)
  2045                           
  2046                           ; Initialize objects allocated to BANK2
  2047     002E  0022               	movlb	2	; select bank2
  2048     002F  3188  2000  3180   	fcall	__pidataBANK2	;fetch initializer
  2049     0032  00D8               	movwf	__pdataBANK2& (0+127)
  2050     0033  3188  2001  3180   	fcall	__pidataBANK2+1	;fetch initializer
  2051     0036  00D9               	movwf	(__pdataBANK2+1)& (0+127)
  2052                           
  2053                           ; Clear objects allocated to COMMON
  2054     0037  01F6               	clrf	__pbssCOMMON& (0+127)
  2055     0038  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  2056     0039  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  2057     003A  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  2058                           
  2059                           ; Clear objects allocated to BANK0
  2060     003B  0020               	movlb	0	; select bank0
  2061     003C  01EF               	clrf	__pbssBANK0& (0+127)
  2062                           
  2063                           ; Clear objects allocated to BANK1
  2064     003D  30C3               	movlw	low __pbssBANK1
  2065     003E  0084               	movwf	4
  2066     003F  3000               	movlw	high __pbssBANK1
  2067     0040  0085               	movwf	5
  2068     0041  300E               	movlw	14
  2069     0042  3197  271E         	fcall	clear_ram0
  2070                           
  2071                           ; Clear objects allocated to BANK2
  2072     0044  0022               	movlb	2	; select bank2
  2073     0045  01D2               	clrf	__pbssBANK2& (0+127)
  2074     0046  01D3               	clrf	(__pbssBANK2+1)& (0+127)
  2075     0047  01D4               	clrf	(__pbssBANK2+2)& (0+127)
  2076     0048  01D5               	clrf	(__pbssBANK2+3)& (0+127)
  2077     0049  01D6               	clrf	(__pbssBANK2+4)& (0+127)
  2078     004A  01D7               	clrf	(__pbssBANK2+5)& (0+127)
  2079     004B                     end_of_initialization:	
  2080                           ;End of C runtime variable initialization code
  2081                           
  2082     004B                     __end_of__initialization:
  2083     004B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2084     004C  0020               	movlb	0
  2085     004D  3187  2F52         	ljmp	_main	;jump to C main() function
  2086                           
  2087                           	psect	bssCOMMON
  2088     0076                     __pbssCOMMON:
  2089     0076                     _CURRENT_MODE:
  2090     0076                     	ds	2
  2091     0078                     _LOGIC_TICK:
  2092     0078                     	ds	1
  2093     0079                     _timer0ReloadVal:
  2094     0079                     	ds	1
  2095                           
  2096                           	psect	bssBANK0
  2097     006F                     __pbssBANK0:
  2098     006F                     _RELAY_STATUS:
  2099     006F                     	ds	1
  2100                           
  2101                           	psect	bssBANK1
  2102     00C3                     __pbssBANK1:
  2103     00C3                     _READING_ITER:
  2104     00C3                     	ds	2
  2105     00C5                     _DISP_STATE:
  2106     00C5                     	ds	2
  2107     00C7                     _timer1ReloadVal:
  2108     00C7                     	ds	2
  2109     00C9                     _ADC_InterruptHandler:
  2110     00C9                     	ds	2
  2111     00CB                     _DN_CLICKED:
  2112     00CB                     	ds	1
  2113     00CC                     _SPKR_DC:
  2114     00CC                     	ds	1
  2115     00CD                     _FULL_SAMPLE:
  2116     00CD                     	ds	1
  2117     00CE                     __LastDownState:
  2118     00CE                     	ds	1
  2119     00CF                     __LastUpState:
  2120     00CF                     	ds	1
  2121     00D0                     _eusartRxLastError:
  2122     00D0                     	ds	1
  2123                           
  2124                           	psect	dataBANK1
  2125     00DD                     __pdataBANK1:
  2126     00DD                     _SPKR_COUNT:
  2127     00DD                     	ds	1
  2128     00DE                     _SPKR_DURATION:
  2129     00DE                     	ds	1
  2130                           
  2131                           	psect	bssBANK2
  2132     0152                     __pbssBANK2:
  2133     0152                     _TEMP:
  2134     0152                     	ds	2
  2135     0154                     _LOGIC_FLAG:
  2136     0154                     	ds	1
  2137     0155                     _UART_FLAG:
  2138     0155                     	ds	1
  2139     0156                     _READ_FLAG:
  2140     0156                     	ds	1
  2141     0157                     __SaveMemory:
  2142     0157                     	ds	1
  2143                           
  2144                           	psect	dataBANK2
  2145     0158                     __pdataBANK2:
  2146     0158                     _HEAT_CALL_TICKS:
  2147     0158                     	ds	2
  2148                           
  2149                           	psect	clrtext
  2150     171E                     clear_ram0:	
  2151                           ;	Called with FSR0 containing the base address, and
  2152                           ;	WREG with the size to clear
  2153                           
  2154     171E  0064               	clrwdt	;clear the watchdog before getting into this loop
  2155     171F                     clrloop0:
  2156     171F  0180               	clrf	0	;clear RAM location pointed to by FSR
  2157     1720  3101               	addfsr 0,1
  2158     1721  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2159     1722  2F1F               	goto	clrloop0	;have we reached the end yet?
  2160     1723  3400               	retlw	0	;all done for this memory range, return
  2161                           
  2162                           	psect	cstackBANK2
  2163     0120                     __pcstackBANK2:
  2164     0120                     __ReadSensor@Vout:
  2165                           
  2166                           ; 4 bytes @ 0x0
  2167     0120                     	ds	4
  2168     0124                     __ReadSensor@Rpullup:
  2169                           
  2170                           ; 4 bytes @ 0x4
  2171     0124                     	ds	4
  2172     0128                     __ReadSensor@Vcc:
  2173                           
  2174                           ; 4 bytes @ 0x8
  2175     0128                     	ds	4
  2176     012C                     __ReadSensor@Rntc:
  2177                           
  2178                           ; 4 bytes @ 0xC
  2179     012C                     	ds	4
  2180     0130                     __ReadSensor@invT:
  2181                           
  2182                           ; 4 bytes @ 0x10
  2183     0130                     	ds	4
  2184     0134                     __ReadSensor@T:
  2185                           
  2186                           ; 4 bytes @ 0x14
  2187     0134                     	ds	4
  2188     0138                     __ReadSensor@Tc:
  2189                           
  2190                           ; 4 bytes @ 0x18
  2191     0138                     	ds	4
  2192     013C                     __ReadSensor@Tf:
  2193                           
  2194                           ; 4 bytes @ 0x1C
  2195     013C                     	ds	4
  2196     0140                     __ReadSensor$1847:
  2197                           
  2198                           ; 4 bytes @ 0x20
  2199     0140                     	ds	4
  2200     0144                     __ReadSensor$1848:
  2201                           
  2202                           ; 4 bytes @ 0x24
  2203     0144                     	ds	4
  2204     0148                     __ReadSensor$1849:
  2205                           
  2206                           ; 4 bytes @ 0x28
  2207     0148                     	ds	4
  2208     014C                     __ReadSensor@adcValue:
  2209                           
  2210                           ; 2 bytes @ 0x2C
  2211     014C                     	ds	2
  2212     014E                     __ReadSensor@logR:
  2213                           
  2214                           ; 4 bytes @ 0x2E
  2215     014E                     	ds	4
  2216                           
  2217                           	psect	cstackBANK1
  2218     00A0                     __pcstackBANK1:
  2219     00A0                     ___flmul@sign:
  2220                           
  2221                           ; 1 bytes @ 0x0
  2222     00A0                     	ds	1
  2223     00A1                     ___flmul@aexp:
  2224                           
  2225                           ; 1 bytes @ 0x1
  2226     00A1                     	ds	1
  2227     00A2                     ___flmul@grs:
  2228                           
  2229                           ; 4 bytes @ 0x2
  2230     00A2                     	ds	4
  2231     00A6                     ___flmul@bexp:
  2232                           
  2233                           ; 1 bytes @ 0x6
  2234     00A6                     	ds	1
  2235     00A7                     ___flmul@prod:
  2236                           
  2237                           ; 4 bytes @ 0x7
  2238     00A7                     	ds	4
  2239     00AB                     ___flmul@temp:
  2240                           
  2241                           ; 2 bytes @ 0xB
  2242     00AB                     	ds	2
  2243     00AD                     _my_log$1850:
  2244                           
  2245                           ; 4 bytes @ 0xD
  2246     00AD                     	ds	4
  2247     00B1                     my_log@result:
  2248                           
  2249                           ; 4 bytes @ 0x11
  2250     00B1                     	ds	4
  2251     00B5                     my_log@sum:
  2252                           
  2253                           ; 4 bytes @ 0x15
  2254     00B5                     	ds	4
  2255     00B9                     my_log@n:
  2256                           
  2257                           ; 2 bytes @ 0x19
  2258     00B9                     	ds	2
  2259     00BB                     my_log@term:
  2260                           
  2261                           ; 4 bytes @ 0x1B
  2262     00BB                     	ds	4
  2263     00BF                     main@savedRelay:
  2264                           
  2265                           ; 1 bytes @ 0x1F
  2266     00BF                     	ds	1
  2267     00C0                     main@readVal_991:
  2268                           
  2269                           ; 1 bytes @ 0x20
  2270     00C0                     	ds	1
  2271     00C1                     main@saveVal:
  2272                           
  2273                           ; 1 bytes @ 0x21
  2274     00C1                     	ds	1
  2275     00C2                     main@readVal:
  2276                           
  2277                           ; 1 bytes @ 0x22
  2278     00C2                     	ds	1
  2279                           
  2280                           	psect	cstackCOMMON
  2281     0070                     __pcstackCOMMON:
  2282     0070                     ?_OSCILLATOR_Initialize:
  2283     0070                     ?_WDT_Initialize:	
  2284                           ; 1 bytes @ 0x0
  2285                           
  2286     0070                     ?_ADC_Initialize:	
  2287                           ; 1 bytes @ 0x0
  2288                           
  2289     0070                     ?_TMR2_Initialize:	
  2290                           ; 1 bytes @ 0x0
  2291                           
  2292     0070                     ?_TMR1_Initialize:	
  2293                           ; 1 bytes @ 0x0
  2294                           
  2295     0070                     ?_TMR0_Initialize:	
  2296                           ; 1 bytes @ 0x0
  2297                           
  2298     0070                     ?_EUSART_Initialize:	
  2299                           ; 1 bytes @ 0x0
  2300                           
  2301     0070                     ?_TMR0_DefaultInterruptHandler:	
  2302                           ; 1 bytes @ 0x0
  2303                           
  2304     0070                     ??_TMR0_DefaultInterruptHandler:	
  2305                           ; 1 bytes @ 0x0
  2306                           
  2307     0070                     ?_TMR0_CallBack:	
  2308                           ; 1 bytes @ 0x0
  2309                           
  2310     0070                     ?_TMR2_ISR:	
  2311                           ; 1 bytes @ 0x0
  2312                           
  2313     0070                     ?_TMR1_ISR:	
  2314                           ; 1 bytes @ 0x0
  2315                           
  2316     0070                     ?_TMR1_DefaultInterruptHandler:	
  2317                           ; 1 bytes @ 0x0
  2318                           
  2319     0070                     ??_TMR1_DefaultInterruptHandler:	
  2320                           ; 1 bytes @ 0x0
  2321                           
  2322     0070                     ?_TMR1_CallBack:	
  2323                           ; 1 bytes @ 0x0
  2324                           
  2325     0070                     ?__UIControlISR:	
  2326                           ; 1 bytes @ 0x0
  2327                           
  2328     0070                     ?__LogicControlISR:	
  2329                           ; 1 bytes @ 0x0
  2330                           
  2331     0070                     ??__LogicControlISR:	
  2332                           ; 1 bytes @ 0x0
  2333                           
  2334     0070                     ?__SpkrControlISR:	
  2335                           ; 1 bytes @ 0x0
  2336                           
  2337     0070                     ??__SpkrControlISR:	
  2338                           ; 1 bytes @ 0x0
  2339                           
  2340     0070                     ?__ReadSensor:	
  2341                           ; 1 bytes @ 0x0
  2342                           
  2343     0070                     ?__SendDataToConsole:	
  2344                           ; 1 bytes @ 0x0
  2345                           
  2346     0070                     ?__ControlHeat:	
  2347                           ; 1 bytes @ 0x0
  2348                           
  2349     0070                     ?_TMR2_DefaultInterruptHandler:	
  2350                           ; 1 bytes @ 0x0
  2351                           
  2352     0070                     ??_TMR2_DefaultInterruptHandler:	
  2353                           ; 1 bytes @ 0x0
  2354                           
  2355     0070                     ?_TMR2_CallBack:	
  2356                           ; 1 bytes @ 0x0
  2357                           
  2358     0070                     ?_PIN_MANAGER_Initialize:	
  2359                           ; 1 bytes @ 0x0
  2360                           
  2361     0070                     ?_SYSTEM_Initialize:	
  2362                           ; 1 bytes @ 0x0
  2363                           
  2364     0070                     ?_TMR0_ISR:	
  2365                           ; 1 bytes @ 0x0
  2366                           
  2367     0070                     ?_INTERRUPT_InterruptManager:	
  2368                           ; 1 bytes @ 0x0
  2369                           
  2370     0070                     ?_TMR1_WriteTimer:	
  2371                           ; 1 bytes @ 0x0
  2372                           
  2373     0070                     ?_EUSART_Write:	
  2374                           ; 1 bytes @ 0x0
  2375                           
  2376     0070                     ?_DATAEE_ReadByte:	
  2377                           ; 1 bytes @ 0x0
  2378                           
  2379     0070                     ?_main:	
  2380                           ; 1 bytes @ 0x0
  2381                           
  2382     0070                     ?i1_EUSART_Write:	
  2383                           ; 1 bytes @ 0x0
  2384                           
  2385     0070                     ??i1_EUSART_Write:	
  2386                           ; 1 bytes @ 0x0
  2387                           
  2388     0070                     i1EUSART_Write@txData:	
  2389                           ; 1 bytes @ 0x0
  2390                           
  2391     0070                     TMR1_WriteTimer@timerVal:	
  2392                           ; 1 bytes @ 0x0
  2393                           
  2394                           
  2395                           ; 2 bytes @ 0x0
  2396     0070                     	ds	1
  2397     0071                     ??_TMR2_ISR:
  2398     0071                     ??_TMR1_CallBack:	
  2399                           ; 1 bytes @ 0x1
  2400                           
  2401     0071                     ??__UIControlISR:	
  2402                           ; 1 bytes @ 0x1
  2403                           
  2404     0071                     ??_TMR2_CallBack:	
  2405                           ; 1 bytes @ 0x1
  2406                           
  2407                           
  2408                           ; 1 bytes @ 0x1
  2409     0071                     	ds	1
  2410     0072                     ??_TMR1_ISR:
  2411     0072                     ??_TMR1_WriteTimer:	
  2412                           ; 1 bytes @ 0x2
  2413                           
  2414     0072                     __UIControlISR@btnUpRead:	
  2415                           ; 1 bytes @ 0x2
  2416                           
  2417                           
  2418                           ; 1 bytes @ 0x2
  2419     0072                     	ds	1
  2420     0073                     __UIControlISR@btnDnRead:
  2421                           
  2422                           ; 1 bytes @ 0x3
  2423     0073                     	ds	1
  2424     0074                     ??_OSCILLATOR_Initialize:
  2425     0074                     ??_WDT_Initialize:	
  2426                           ; 1 bytes @ 0x4
  2427                           
  2428     0074                     ??_ADC_Initialize:	
  2429                           ; 1 bytes @ 0x4
  2430                           
  2431     0074                     ?_TMR0_SetInterruptHandler:	
  2432                           ; 1 bytes @ 0x4
  2433                           
  2434     0074                     ??_TMR0_CallBack:	
  2435                           ; 1 bytes @ 0x4
  2436                           
  2437     0074                     ?_TMR1_SetInterruptHandler:	
  2438                           ; 1 bytes @ 0x4
  2439                           
  2440     0074                     ?_EUSART_SetFramingErrorHandler:	
  2441                           ; 1 bytes @ 0x4
  2442                           
  2443     0074                     ?_EUSART_SetOverrunErrorHandler:	
  2444                           ; 1 bytes @ 0x4
  2445                           
  2446     0074                     ?_EUSART_SetErrorHandler:	
  2447                           ; 1 bytes @ 0x4
  2448                           
  2449     0074                     ?_TMR2_SetInterruptHandler:	
  2450                           ; 1 bytes @ 0x4
  2451                           
  2452     0074                     ??_PIN_MANAGER_Initialize:	
  2453                           ; 1 bytes @ 0x4
  2454                           
  2455     0074                     ??_TMR0_ISR:	
  2456                           ; 1 bytes @ 0x4
  2457                           
  2458     0074                     ??_INTERRUPT_InterruptManager:	
  2459                           ; 1 bytes @ 0x4
  2460                           
  2461     0074                     ??_EUSART_Write:	
  2462                           ; 1 bytes @ 0x4
  2463                           
  2464     0074                     ?_DATAEE_WriteByte:	
  2465                           ; 1 bytes @ 0x4
  2466                           
  2467     0074                     ??_DATAEE_ReadByte:	
  2468                           ; 1 bytes @ 0x4
  2469                           
  2470     0074                     ??___wmul:	
  2471                           ; 1 bytes @ 0x4
  2472                           
  2473     0074                     ??___flneg:	
  2474                           ; 1 bytes @ 0x4
  2475                           
  2476     0074                     ?__Umul8_16:	
  2477                           ; 1 bytes @ 0x4
  2478                           
  2479     0074                     ?_ADC_GetConversion:	
  2480                           ; 2 bytes @ 0x4
  2481                           
  2482     0074                     EUSART_Write@txData:	
  2483                           ; 2 bytes @ 0x4
  2484                           
  2485     0074                     DATAEE_WriteByte@bData:	
  2486                           ; 1 bytes @ 0x4
  2487                           
  2488     0074                     DATAEE_ReadByte@bAdd:	
  2489                           ; 1 bytes @ 0x4
  2490                           
  2491     0074                     ___fltol@sign1:	
  2492                           ; 1 bytes @ 0x4
  2493                           
  2494     0074                     __Umul8_16@multiplicand:	
  2495                           ; 1 bytes @ 0x4
  2496                           
  2497     0074                     TMR0_SetInterruptHandler@InterruptHandler:	
  2498                           ; 1 bytes @ 0x4
  2499                           
  2500     0074                     TMR1_SetInterruptHandler@InterruptHandler:	
  2501                           ; 2 bytes @ 0x4
  2502                           
  2503     0074                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2504                           ; 2 bytes @ 0x4
  2505                           
  2506     0074                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2507                           ; 2 bytes @ 0x4
  2508                           
  2509     0074                     EUSART_SetErrorHandler@interruptHandler:	
  2510                           ; 2 bytes @ 0x4
  2511                           
  2512     0074                     TMR2_SetInterruptHandler@InterruptHandler:	
  2513                           ; 2 bytes @ 0x4
  2514                           
  2515     0074                     ___wmul@product:	
  2516                           ; 2 bytes @ 0x4
  2517                           
  2518                           
  2519                           ; 2 bytes @ 0x4
  2520     0074                     	ds	1
  2521     0075                     ??_DATAEE_WriteByte:
  2522     0075                     ___fltol@exp1:	
  2523                           ; 1 bytes @ 0x5
  2524                           
  2525                           
  2526                           ; 1 bytes @ 0x5
  2527     0075                     	ds	1
  2528     0076                     ??_TMR2_Initialize:
  2529     0076                     ??_TMR1_Initialize:	
  2530                           ; 1 bytes @ 0x6
  2531                           
  2532     0076                     ??_TMR0_Initialize:	
  2533                           ; 1 bytes @ 0x6
  2534                           
  2535     0076                     ??_EUSART_Initialize:	
  2536                           ; 1 bytes @ 0x6
  2537                           
  2538     0076                     ??_TMR0_SetInterruptHandler:	
  2539                           ; 1 bytes @ 0x6
  2540                           
  2541     0076                     ??_TMR1_SetInterruptHandler:	
  2542                           ; 1 bytes @ 0x6
  2543                           
  2544     0076                     ??_EUSART_SetFramingErrorHandler:	
  2545                           ; 1 bytes @ 0x6
  2546                           
  2547     0076                     ??_EUSART_SetOverrunErrorHandler:	
  2548                           ; 1 bytes @ 0x6
  2549                           
  2550     0076                     ??_EUSART_SetErrorHandler:	
  2551                           ; 1 bytes @ 0x6
  2552                           
  2553     0076                     ??_TMR2_SetInterruptHandler:	
  2554                           ; 1 bytes @ 0x6
  2555                           
  2556     0076                     ??__ReadSensor:	
  2557                           ; 1 bytes @ 0x6
  2558                           
  2559     0076                     ??_my_log:	
  2560                           ; 1 bytes @ 0x6
  2561                           
  2562     0076                     ??_SYSTEM_Initialize:	
  2563                           ; 1 bytes @ 0x6
  2564                           
  2565     0076                     ??___flsub:	
  2566                           ; 1 bytes @ 0x6
  2567                           
  2568                           
  2569                           	psect	cstackBANK0
  2570     0020                     __pcstackBANK0:	
  2571                           ; 1 bytes @ 0x6
  2572                           
  2573     0020                     ?___flge:
  2574     0020                     ??__ControlHeat:	
  2575                           ; 1 bit 
  2576                           
  2577     0020                     ??__Umul8_16:	
  2578                           ; 1 bytes @ 0x0
  2579                           
  2580     0020                     ??_ADC_GetConversion:	
  2581                           ; 1 bytes @ 0x0
  2582                           
  2583     0020                     ?___wmul:	
  2584                           ; 1 bytes @ 0x0
  2585                           
  2586     0020                     ?___flneg:	
  2587                           ; 2 bytes @ 0x0
  2588                           
  2589     0020                     ?___fltol:	
  2590                           ; 4 bytes @ 0x0
  2591                           
  2592     0020                     ?___xxtofl:	
  2593                           ; 4 bytes @ 0x0
  2594                           
  2595     0020                     DATAEE_WriteByte@bAdd:	
  2596                           ; 4 bytes @ 0x0
  2597                           
  2598     0020                     ___wmul@multiplier:	
  2599                           ; 1 bytes @ 0x0
  2600                           
  2601     0020                     ___flge@ff1:	
  2602                           ; 2 bytes @ 0x0
  2603                           
  2604     0020                     ___flneg@f1:	
  2605                           ; 4 bytes @ 0x0
  2606                           
  2607     0020                     ___fltol@f1:	
  2608                           ; 4 bytes @ 0x0
  2609                           
  2610     0020                     ___xxtofl@val:	
  2611                           ; 4 bytes @ 0x0
  2612                           
  2613                           
  2614                           ; 4 bytes @ 0x0
  2615     0020                     	ds	1
  2616     0021                     ADC_GetConversion@channel:
  2617     0021                     DATAEE_WriteByte@GIEBitValue:	
  2618                           ; 1 bytes @ 0x1
  2619                           
  2620                           
  2621                           ; 1 bytes @ 0x1
  2622     0021                     	ds	1
  2623     0022                     ___wmul@multiplicand:
  2624     0022                     __Umul8_16@product:	
  2625                           ; 2 bytes @ 0x2
  2626                           
  2627                           
  2628                           ; 2 bytes @ 0x2
  2629     0022                     	ds	2
  2630     0024                     ??___fltol:
  2631     0024                     ??___xxtofl:	
  2632                           ; 1 bytes @ 0x4
  2633                           
  2634     0024                     ?___awdiv:	
  2635                           ; 1 bytes @ 0x4
  2636                           
  2637     0024                     ___awdiv@divisor:	
  2638                           ; 2 bytes @ 0x4
  2639                           
  2640     0024                     __Umul8_16@word_mpld:	
  2641                           ; 2 bytes @ 0x4
  2642                           
  2643     0024                     ___flge@ff2:	
  2644                           ; 2 bytes @ 0x4
  2645                           
  2646                           
  2647                           ; 4 bytes @ 0x4
  2648     0024                     	ds	2
  2649     0026                     __Umul8_16@multiplier:
  2650     0026                     ___awdiv@dividend:	
  2651                           ; 1 bytes @ 0x6
  2652                           
  2653                           
  2654                           ; 2 bytes @ 0x6
  2655     0026                     	ds	2
  2656     0028                     ??___awdiv:
  2657     0028                     ??___flge:	
  2658                           ; 1 bytes @ 0x8
  2659                           
  2660     0028                     ___xxtofl@sign:	
  2661                           ; 1 bytes @ 0x8
  2662                           
  2663                           
  2664                           ; 1 bytes @ 0x8
  2665     0028                     	ds	1
  2666     0029                     ___awdiv@counter:
  2667     0029                     ___xxtofl@exp:	
  2668                           ; 1 bytes @ 0x9
  2669                           
  2670                           
  2671                           ; 1 bytes @ 0x9
  2672     0029                     	ds	1
  2673     002A                     ___awdiv@sign:
  2674     002A                     ___xxtofl@arg:	
  2675                           ; 1 bytes @ 0xA
  2676                           
  2677                           
  2678                           ; 4 bytes @ 0xA
  2679     002A                     	ds	1
  2680     002B                     ___awdiv@quotient:
  2681                           
  2682                           ; 2 bytes @ 0xB
  2683     002B                     	ds	2
  2684     002D                     ??__SendDataToConsole:
  2685                           
  2686                           ; 1 bytes @ 0xD
  2687     002D                     	ds	1
  2688     002E                     ?___fldiv:
  2689     002E                     ___fldiv@a:	
  2690                           ; 4 bytes @ 0xE
  2691                           
  2692                           
  2693                           ; 4 bytes @ 0xE
  2694     002E                     	ds	3
  2695     0031                     __SendDataToConsole@ones:
  2696                           
  2697                           ; 2 bytes @ 0x11
  2698     0031                     	ds	1
  2699     0032                     ___fldiv@b:
  2700                           
  2701                           ; 4 bytes @ 0x12
  2702     0032                     	ds	1
  2703     0033                     __SendDataToConsole@tens:
  2704                           
  2705                           ; 2 bytes @ 0x13
  2706     0033                     	ds	2
  2707     0035                     __SendDataToConsole@huns:
  2708                           
  2709                           ; 2 bytes @ 0x15
  2710     0035                     	ds	1
  2711     0036                     ??___fldiv:
  2712                           
  2713                           ; 1 bytes @ 0x16
  2714     0036                     	ds	5
  2715     003B                     ___fldiv@rem:
  2716                           
  2717                           ; 4 bytes @ 0x1B
  2718     003B                     	ds	4
  2719     003F                     ___fldiv@sign:
  2720                           
  2721                           ; 1 bytes @ 0x1F
  2722     003F                     	ds	1
  2723     0040                     ___fldiv@new_exp:
  2724                           
  2725                           ; 2 bytes @ 0x20
  2726     0040                     	ds	2
  2727     0042                     ___fldiv@grs:
  2728                           
  2729                           ; 4 bytes @ 0x22
  2730     0042                     	ds	4
  2731     0046                     ___fldiv@bexp:
  2732                           
  2733                           ; 1 bytes @ 0x26
  2734     0046                     	ds	1
  2735     0047                     ___fldiv@aexp:
  2736                           
  2737                           ; 1 bytes @ 0x27
  2738     0047                     	ds	1
  2739     0048                     ?___fladd:
  2740     0048                     ___fladd@b:	
  2741                           ; 4 bytes @ 0x28
  2742                           
  2743                           
  2744                           ; 4 bytes @ 0x28
  2745     0048                     	ds	4
  2746     004C                     ___fladd@a:
  2747                           
  2748                           ; 4 bytes @ 0x2C
  2749     004C                     	ds	4
  2750     0050                     ??___fladd:
  2751                           
  2752                           ; 1 bytes @ 0x30
  2753     0050                     	ds	8
  2754     0058                     ___fladd@signs:
  2755                           
  2756                           ; 1 bytes @ 0x38
  2757     0058                     	ds	1
  2758     0059                     ___fladd@aexp:
  2759                           
  2760                           ; 1 bytes @ 0x39
  2761     0059                     	ds	1
  2762     005A                     ___fladd@bexp:
  2763                           
  2764                           ; 1 bytes @ 0x3A
  2765     005A                     	ds	1
  2766     005B                     ___fladd@grs:
  2767                           
  2768                           ; 1 bytes @ 0x3B
  2769     005B                     	ds	1
  2770     005C                     ?___flsub:
  2771     005C                     ?___flmul:	
  2772                           ; 4 bytes @ 0x3C
  2773                           
  2774     005C                     ___flsub@a:	
  2775                           ; 4 bytes @ 0x3C
  2776                           
  2777     005C                     ___flmul@b:	
  2778                           ; 4 bytes @ 0x3C
  2779                           
  2780                           
  2781                           ; 4 bytes @ 0x3C
  2782     005C                     	ds	4
  2783     0060                     ___flsub@b:
  2784     0060                     ___flmul@a:	
  2785                           ; 4 bytes @ 0x40
  2786                           
  2787                           
  2788                           ; 4 bytes @ 0x40
  2789     0060                     	ds	4
  2790     0064                     ??___flmul:
  2791                           
  2792                           ; 1 bytes @ 0x44
  2793     0064                     	ds	5
  2794     0069                     ?_my_log:
  2795     0069                     my_log@x:	
  2796                           ; 4 bytes @ 0x49
  2797                           
  2798                           
  2799                           ; 4 bytes @ 0x49
  2800     0069                     	ds	4
  2801     006D                     ??_main:
  2802                           
  2803                           ; 1 bytes @ 0x4D
  2804     006D                     	ds	2
  2805                           
  2806                           	psect	maintext
  2807     0752                     __pmaintext:	
  2808 ;;
  2809 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2810 ;;
  2811 ;; *************** function _main *****************
  2812 ;; Defined at:
  2813 ;;		line 55 in file "main.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;		None
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  saveVal         1   33[BANK1 ] unsigned char 
  2818 ;;  readVal         1   32[BANK1 ] unsigned char 
  2819 ;;  savedRelay      1   31[BANK1 ] _Bool 
  2820 ;;  readVal         1   34[BANK1 ] unsigned char 
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  1    wreg      void 
  2823 ;; Registers used:
  2824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2825 ;; Tracked objects:
  2826 ;;		On entry : B1F/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2831 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2832 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2833 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2834 ;;Total ram usage:        6 bytes
  2835 ;; Hardware stack levels required when called: 9
  2836 ;; This function calls:
  2837 ;;		_DATAEE_ReadByte
  2838 ;;		_DATAEE_WriteByte
  2839 ;;		_SYSTEM_Initialize
  2840 ;;		_TMR0_SetInterruptHandler
  2841 ;;		_TMR1_SetInterruptHandler
  2842 ;;		_TMR2_SetInterruptHandler
  2843 ;;		__ControlHeat
  2844 ;;		__ReadSensor
  2845 ;;		__SendDataToConsole
  2846 ;; This function is called by:
  2847 ;;		Startup code after reset
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851     0752                     _main:	
  2852                           ;psect for function _main
  2853                           
  2854                           
  2855                           ;main.c: 58:     SYSTEM_Initialize();
  2856                           
  2857                           ;incstack = 0
  2858                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2859     0752  3197  27B5  3187   	fcall	_SYSTEM_Initialize
  2860                           
  2861                           ;main.c: 60:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  2862     0755  300B               	movlw	11
  2863     0756  0020               	movlb	0	; select bank0
  2864     0757  00EE               	movwf	??_main+1
  2865     0758  3026               	movlw	38
  2866     0759  00ED               	movwf	??_main
  2867     075A  305D               	movlw	93
  2868     075B                     u6067:
  2869     075B  0B89               	decfsz	9,f
  2870     075C  2F5B               	goto	u6067
  2871     075D  0BED               	decfsz	??_main,f
  2872     075E  2F5B               	goto	u6067
  2873     075F  0BEE               	decfsz	??_main+1,f
  2874     0760  2F5B               	goto	u6067
  2875     0761  3200               	nop2
  2876                           
  2877                           ;main.c: 66:     (INTCONbits.GIE = 1);
  2878     0762  178B               	bsf	11,7	;volatile
  2879                           
  2880                           ;main.c: 69:     (INTCONbits.PEIE = 1);
  2881     0763  170B               	bsf	11,6	;volatile
  2882                           
  2883                           ;main.c: 77:     TMR0_SetInterruptHandler(_UIControlISR);
  2884     0764  3052               	movlw	low __UIControlISR
  2885     0765  00F4               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2886     0766  300B               	movlw	high __UIControlISR
  2887     0767  00F5               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2888     0768  3197  270C  3187   	fcall	_TMR0_SetInterruptHandler
  2889                           
  2890                           ;main.c: 78:     TMR1_SetInterruptHandler(_LogicControlISR);
  2891     076B  30BD               	movlw	low __LogicControlISR
  2892     076C  00F4               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  2893     076D  3008               	movlw	high __LogicControlISR
  2894     076E  00F5               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  2895     076F  3197  2712  3187   	fcall	_TMR1_SetInterruptHandler
  2896                           
  2897                           ;main.c: 79:     TMR2_SetInterruptHandler(_SpkrControlISR);
  2898     0772  30E3               	movlw	low __SpkrControlISR
  2899     0773  00F4               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2900     0774  3008               	movlw	high __SpkrControlISR
  2901     0775  00F5               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2902     0776  3197  2718  3187   	fcall	_TMR2_SetInterruptHandler
  2903                           
  2904                           ;main.c: 82:     uint8_t readVal = DATAEE_ReadByte(10);
  2905     0779  300A               	movlw	10
  2906     077A  3187  27F3  3187   	fcall	_DATAEE_ReadByte
  2907     077D  0021               	movlb	1	; select bank1
  2908     077E  00C2               	movwf	main@readVal^(0+128)
  2909                           
  2910                           ;main.c: 84:     if (readVal < 25 || readVal > (25 + HEAT_MODE_5))
  2911     077F  3019               	movlw	25
  2912     0780  0242               	subwf	main@readVal^(0+128),w
  2913     0781  1C03               	skipc
  2914     0782  2F87               	goto	l4754
  2915     0783  301F               	movlw	31
  2916     0784  0242               	subwf	main@readVal^(0+128),w
  2917     0785  1C03               	skipc
  2918     0786  2F8F               	goto	l4758
  2919     0787                     l4754:
  2920                           
  2921                           ;main.c: 85:     {;main.c: 87:         CURRENT_MODE = HEAT_MODE_3;
  2922     0787  3003               	movlw	3
  2923     0788  00F6               	movwf	_CURRENT_MODE
  2924     0789  3000               	movlw	0
  2925     078A  00F7               	movwf	_CURRENT_MODE+1
  2926                           
  2927                           ;main.c: 88:         _SaveMemory = 1;
  2928     078B  0022               	movlb	2	; select bank2
  2929     078C  01D7               	clrf	__SaveMemory^(0+256)
  2930     078D  0AD7               	incf	__SaveMemory^(0+256),f
  2931                           
  2932                           ;main.c: 89:     }
  2933     078E  2F96               	goto	l477
  2934     078F                     l4758:
  2935                           
  2936                           ;main.c: 91:     {;main.c: 93:         CURRENT_MODE = readVal - 25;
  2937     078F  0842               	movf	main@readVal^(0+128),w
  2938     0790  3EE7               	addlw	231
  2939     0791  00F6               	movwf	_CURRENT_MODE
  2940     0792  30FF               	movlw	255
  2941     0793  1803               	skipnc
  2942     0794  3000               	movlw	0
  2943     0795  00F7               	movwf	_CURRENT_MODE+1
  2944     0796                     l477:	
  2945                           ;main.c: 96:     while (1)
  2946                           
  2947     0796  0064               	clrwdt	;# 
  2948                           
  2949                           ;main.c: 100:         _Bool savedRelay;;main.c: 103:         if (READ_FLAG)
  2950     0797  0022               	movlb	2	; select bank2
  2951     0798  0856               	movf	_READ_FLAG^(0+256),w
  2952     0799  1903               	btfsc	3,2
  2953     079A  2F9F               	goto	l4766
  2954                           
  2955                           ;main.c: 104:         {;main.c: 105:             READ_FLAG = 0;
  2956     079B  01D6               	clrf	_READ_FLAG^(0+256)
  2957                           
  2958                           ;main.c: 106:             _ReadSensor();
  2959     079C  3182  22EE  3187   	fcall	__ReadSensor
  2960     079F                     l4766:
  2961                           
  2962                           ;main.c: 109:         if (UART_FLAG)
  2963     079F  0022               	movlb	2	; select bank2
  2964     07A0  0855               	movf	_UART_FLAG^(0+256),w
  2965     07A1  1903               	btfsc	3,2
  2966     07A2  2FA7               	goto	l4772
  2967                           
  2968                           ;main.c: 112:             if (1 == 1)
  2969     07A3  01D5               	clrf	_UART_FLAG^(0+256)
  2970                           
  2971                           ;main.c: 113:                 _SendDataToConsole();
  2972     07A4  318C  2414  3187   	fcall	__SendDataToConsole
  2973     07A7                     l4772:
  2974                           
  2975                           ;main.c: 116:         if (LOGIC_FLAG)
  2976     07A7  0022               	movlb	2	; select bank2
  2977     07A8  0854               	movf	_LOGIC_FLAG^(0+256),w
  2978     07A9  1903               	btfsc	3,2
  2979     07AA  2F96               	goto	l477
  2980                           
  2981                           ;main.c: 117:         {;main.c: 118:             LOGIC_FLAG = 0;
  2982     07AB  01D4               	clrf	_LOGIC_FLAG^(0+256)
  2983                           
  2984                           ;main.c: 120:             if (_SaveMemory)
  2985     07AC  0857               	movf	__SaveMemory^(0+256),w
  2986     07AD  1903               	btfsc	3,2
  2987     07AE  2FC6               	goto	l4788
  2988                           
  2989                           ;main.c: 121:             {;main.c: 122:                 uint8_t saveVal = CURRENT_MODE 
      +                          + 25;
  2990     07AF  0876               	movf	_CURRENT_MODE,w
  2991     07B0  3E19               	addlw	25
  2992     07B1  0021               	movlb	1	; select bank1
  2993     07B2  00C1               	movwf	main@saveVal^(0+128)
  2994                           
  2995                           ;main.c: 123:                 uint8_t readVal = DATAEE_ReadByte(10);
  2996     07B3  300A               	movlw	10
  2997     07B4  3187  27F3  3187   	fcall	_DATAEE_ReadByte
  2998     07B7  0021               	movlb	1	; select bank1
  2999     07B8  00C0               	movwf	main@readVal_991^(0+128)
  3000                           
  3001                           ;main.c: 125:                 if (readVal == saveVal)
  3002     07B9  0840               	movf	main@readVal_991^(0+128),w
  3003     07BA  0641               	xorwf	main@saveVal^(0+128),w
  3004     07BB  1D03               	skipz
  3005     07BC  2FC0               	goto	l4786
  3006                           
  3007                           ;main.c: 126:                 {;main.c: 129:                     _SaveMemory = 0;
  3008     07BD  0022               	movlb	2	; select bank2
  3009     07BE  01D7               	clrf	__SaveMemory^(0+256)
  3010                           
  3011                           ;main.c: 130:                 }
  3012     07BF  2FC6               	goto	l4788
  3013     07C0                     l4786:
  3014                           
  3015                           ;main.c: 132:                 {;main.c: 134:                     DATAEE_WriteByte(10, sa
      +                          veVal);
  3016     07C0  0841               	movf	main@saveVal^(0+128),w
  3017     07C1  00F4               	movwf	DATAEE_WriteByte@bData
  3018     07C2  300A               	movlw	10
  3019     07C3  3188  209A  3187   	fcall	_DATAEE_WriteByte
  3020     07C6                     l4788:
  3021                           
  3022                           ;main.c: 138:             savedRelay = RELAY_STATUS;
  3023     07C6  0020               	movlb	0	; select bank0
  3024     07C7  086F               	movf	_RELAY_STATUS,w
  3025     07C8  0021               	movlb	1	; select bank1
  3026     07C9  00BF               	movwf	main@savedRelay^(0+128)
  3027                           
  3028                           ;main.c: 141:             HEAT_CALL_TICKS++;
  3029     07CA  3001               	movlw	1
  3030     07CB  0022               	movlb	2	; select bank2
  3031     07CC  07D8               	addwf	_HEAT_CALL_TICKS^(0+256),f
  3032     07CD  3000               	movlw	0
  3033     07CE  3DD9               	addwfc	(_HEAT_CALL_TICKS+1)^(0+256),f
  3034                           
  3035                           ;main.c: 142:             if (RELAY_STATUS)
  3036     07CF  0020               	movlb	0	; select bank0
  3037     07D0  086F               	movf	_RELAY_STATUS,w
  3038     07D1  3000               	movlw	0
  3039     07D2  0022               	movlb	2	; select bank2
  3040     07D3  0259               	subwf	(_HEAT_CALL_TICKS+1)^(0+256),w
  3041     07D4  303D               	movlw	61
  3042     07D5  1903               	skipnz
  3043     07D6  0258               	subwf	_HEAT_CALL_TICKS^(0+256),w
  3044     07D7  1C03               	skipc
  3045     07D8  2FDD               	goto	l4802
  3046     07D9  303D               	movlw	61
  3047     07DA  00D8               	movwf	_HEAT_CALL_TICKS^(0+256)
  3048     07DB  3000               	movlw	0
  3049     07DC  00D9               	movwf	(_HEAT_CALL_TICKS^(0+256)+1)
  3050     07DD                     l4802:
  3051                           
  3052                           ;main.c: 156:             _ControlHeat();
  3053     07DD  3189  21D9  3187   	fcall	__ControlHeat
  3054                           
  3055                           ;main.c: 158:             if (savedRelay != RELAY_STATUS)
  3056     07E0  0021               	movlb	1	; select bank1
  3057     07E1  083F               	movf	main@savedRelay^(0+128),w
  3058     07E2  0020               	movlb	0	; select bank0
  3059     07E3  066F               	xorwf	_RELAY_STATUS,w
  3060     07E4  1903               	skipnz
  3061     07E5  2FE9               	goto	l4808
  3062                           
  3063                           ;main.c: 159:             {;main.c: 161:                 HEAT_CALL_TICKS = 0;
  3064     07E6  0022               	movlb	2	; select bank2
  3065     07E7  01D8               	clrf	_HEAT_CALL_TICKS^(0+256)
  3066     07E8  01D9               	clrf	(_HEAT_CALL_TICKS+1)^(0+256)
  3067     07E9                     l4808:
  3068                           
  3069                           ;main.c: 164:             if (RELAY_STATUS)
  3070     07E9  0020               	movlb	0	; select bank0
  3071     07EA  086F               	movf	_RELAY_STATUS,w
  3072     07EB  1903               	btfsc	3,2
  3073     07EC  2FF0               	goto	l494
  3074                           
  3075                           ;main.c: 165:                 do { LATAbits.LATA2 = 0; } while(0);
  3076     07ED  0022               	movlb	2	; select bank2
  3077     07EE  110C               	bcf	12,2	;volatile
  3078     07EF  2F96               	goto	l477
  3079     07F0                     l494:	
  3080                           ;main.c: 167:                 do { LATAbits.LATA2 = 1; } while(0);
  3081                           
  3082     07F0  0022               	movlb	2	; select bank2
  3083     07F1  150C               	bsf	12,2	;volatile
  3084     07F2  2F96               	goto	l477
  3085     07F3                     __end_of_main:
  3086                           
  3087                           	psect	text1
  3088     0C14                     __ptext1:	
  3089 ;; *************** function __SendDataToConsole *****************
  3090 ;; Defined at:
  3091 ;;		line 444 in file "main.c"
  3092 ;; Parameters:    Size  Location     Type
  3093 ;;		None
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;  huns            2   21[BANK0 ] int 
  3096 ;;  tens            2   19[BANK0 ] int 
  3097 ;;  ones            2   17[BANK0 ] int 
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  1    wreg      void 
  3100 ;; Registers used:
  3101 ;;		wreg, status,2, status,0, pclath, cstack
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3108 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3109 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3110 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3111 ;;Total ram usage:       10 bytes
  3112 ;; Hardware stack levels used: 1
  3113 ;; Hardware stack levels required when called: 6
  3114 ;; This function calls:
  3115 ;;		_EUSART_Write
  3116 ;;		___awdiv
  3117 ;;		___wmul
  3118 ;; This function is called by:
  3119 ;;		_main
  3120 ;; This function uses a non-reentrant model
  3121 ;;
  3122                           
  3123     0C14                     __SendDataToConsole:	
  3124                           ;psect for function __SendDataToConsole
  3125                           
  3126                           
  3127                           ;main.c: 448:     int huns, tens, ones;;main.c: 450:     huns = TEMP / 100;
  3128                           
  3129                           ;incstack = 0
  3130                           ; Regs used in __SendDataToConsole: [wreg+status,2+status,0+pclath+cstack]
  3131     0C14  3064               	movlw	100
  3132     0C15  0020               	movlb	0	; select bank0
  3133     0C16  00A4               	movwf	___awdiv@divisor
  3134     0C17  3000               	movlw	0
  3135     0C18  00A5               	movwf	___awdiv@divisor+1
  3136     0C19  0022               	movlb	2	; select bank2
  3137     0C1A  0853               	movf	(_TEMP+1)^(0+256),w
  3138     0C1B  0020               	movlb	0	; select bank0
  3139     0C1C  00A7               	movwf	___awdiv@dividend+1
  3140     0C1D  0022               	movlb	2	; select bank2
  3141     0C1E  0852               	movf	_TEMP^(0+256),w
  3142     0C1F  0020               	movlb	0	; select bank0
  3143     0C20  00A6               	movwf	___awdiv@dividend
  3144     0C21  3189  2125  318C   	fcall	___awdiv
  3145     0C24  0020               	movlb	0	; select bank0
  3146     0C25  0825               	movf	?___awdiv+1,w
  3147     0C26  00B6               	movwf	__SendDataToConsole@huns+1
  3148     0C27  0824               	movf	?___awdiv,w
  3149     0C28  00B5               	movwf	__SendDataToConsole@huns
  3150                           
  3151                           ;main.c: 451:     tens = (TEMP - huns * 100) / 10;
  3152     0C29  300A               	movlw	10
  3153     0C2A  00A4               	movwf	___awdiv@divisor
  3154     0C2B  3000               	movlw	0
  3155     0C2C  00A5               	movwf	___awdiv@divisor+1
  3156     0C2D  0836               	movf	__SendDataToConsole@huns+1,w
  3157     0C2E  00A1               	movwf	___wmul@multiplier+1
  3158     0C2F  0835               	movf	__SendDataToConsole@huns,w
  3159     0C30  00A0               	movwf	___wmul@multiplier
  3160     0C31  309C               	movlw	156
  3161     0C32  00A2               	movwf	___wmul@multiplicand
  3162     0C33  30FF               	movlw	255
  3163     0C34  00A3               	movwf	___wmul@multiplicand+1
  3164     0C35  3188  201E  318C   	fcall	___wmul
  3165     0C38  0022               	movlb	2	; select bank2
  3166     0C39  0852               	movf	_TEMP^(0+256),w
  3167     0C3A  0020               	movlb	0	; select bank0
  3168     0C3B  0720               	addwf	?___wmul,w
  3169     0C3C  00A6               	movwf	___awdiv@dividend
  3170     0C3D  0022               	movlb	2	; select bank2
  3171     0C3E  0853               	movf	(_TEMP+1)^(0+256),w
  3172     0C3F  0020               	movlb	0	; select bank0
  3173     0C40  3D21               	addwfc	?___wmul+1,w
  3174     0C41  00A7               	movwf	___awdiv@dividend+1
  3175     0C42  3189  2125  318C   	fcall	___awdiv
  3176     0C45  0020               	movlb	0	; select bank0
  3177     0C46  0825               	movf	?___awdiv+1,w
  3178     0C47  00B4               	movwf	__SendDataToConsole@tens+1
  3179     0C48  0824               	movf	?___awdiv,w
  3180     0C49  00B3               	movwf	__SendDataToConsole@tens
  3181                           
  3182                           ;main.c: 452:     ones = (TEMP - huns * 100 - tens * 10);
  3183     0C4A  0836               	movf	__SendDataToConsole@huns+1,w
  3184     0C4B  00A1               	movwf	___wmul@multiplier+1
  3185     0C4C  0835               	movf	__SendDataToConsole@huns,w
  3186     0C4D  00A0               	movwf	___wmul@multiplier
  3187     0C4E  309C               	movlw	156
  3188     0C4F  00A2               	movwf	___wmul@multiplicand
  3189     0C50  30FF               	movlw	255
  3190     0C51  00A3               	movwf	___wmul@multiplicand+1
  3191     0C52  3188  201E  318C   	fcall	___wmul
  3192     0C55  0020               	movlb	0	; select bank0
  3193     0C56  0820               	movf	?___wmul,w
  3194     0C57  00AD               	movwf	??__SendDataToConsole
  3195     0C58  0821               	movf	?___wmul+1,w
  3196     0C59  00AE               	movwf	??__SendDataToConsole+1
  3197     0C5A  0834               	movf	__SendDataToConsole@tens+1,w
  3198     0C5B  00A1               	movwf	___wmul@multiplier+1
  3199     0C5C  0833               	movf	__SendDataToConsole@tens,w
  3200     0C5D  00A0               	movwf	___wmul@multiplier
  3201     0C5E  30F6               	movlw	246
  3202     0C5F  00A2               	movwf	___wmul@multiplicand
  3203     0C60  30FF               	movlw	255
  3204     0C61  00A3               	movwf	___wmul@multiplicand+1
  3205     0C62  3188  201E  318C   	fcall	___wmul
  3206     0C65  0020               	movlb	0	; select bank0
  3207     0C66  0820               	movf	?___wmul,w
  3208     0C67  072D               	addwf	??__SendDataToConsole,w
  3209     0C68  00AF               	movwf	??__SendDataToConsole+2
  3210     0C69  0821               	movf	?___wmul+1,w
  3211     0C6A  3D2E               	addwfc	??__SendDataToConsole+1,w
  3212     0C6B  00B0               	movwf	??__SendDataToConsole+3
  3213     0C6C  0022               	movlb	2	; select bank2
  3214     0C6D  0852               	movf	_TEMP^(0+256),w
  3215     0C6E  0020               	movlb	0	; select bank0
  3216     0C6F  072F               	addwf	??__SendDataToConsole+2,w
  3217     0C70  00B1               	movwf	__SendDataToConsole@ones
  3218     0C71  0022               	movlb	2	; select bank2
  3219     0C72  0853               	movf	(_TEMP+1)^(0+256),w
  3220     0C73  0020               	movlb	0	; select bank0
  3221     0C74  3D30               	addwfc	??__SendDataToConsole+3,w
  3222     0C75  00B2               	movwf	__SendDataToConsole@ones+1
  3223                           
  3224                           ;main.c: 455:     EUSART_Write('T');
  3225     0C76  3054               	movlw	84
  3226     0C77  3197  2742  318C   	fcall	_EUSART_Write
  3227                           
  3228                           ;main.c: 456:     EUSART_Write(':');
  3229     0C7A  303A               	movlw	58
  3230     0C7B  3197  2742  318C   	fcall	_EUSART_Write
  3231                           
  3232                           ;main.c: 457:     if (TEMP < 0)
  3233     0C7E  0022               	movlb	2	; select bank2
  3234     0C7F  1FD3               	btfss	(_TEMP+1)^(0+256),7
  3235     0C80  2C85               	goto	l4684
  3236                           
  3237                           ;main.c: 458:         EUSART_Write('-');
  3238     0C81  302D               	movlw	45
  3239     0C82  3197  2742  318C   	fcall	_EUSART_Write
  3240     0C85                     l4684:
  3241                           
  3242                           ;main.c: 459:     if (huns > 0)
  3243     0C85  0020               	movlb	0	; select bank0
  3244     0C86  0836               	movf	__SendDataToConsole@huns+1,w
  3245     0C87  3A80               	xorlw	128
  3246     0C88  00AD               	movwf	??__SendDataToConsole
  3247     0C89  3080               	movlw	128
  3248     0C8A  022D               	subwf	??__SendDataToConsole,w
  3249     0C8B  1D03               	skipz
  3250     0C8C  2C8F               	goto	u5875
  3251     0C8D  3001               	movlw	1
  3252     0C8E  0235               	subwf	__SendDataToConsole@huns,w
  3253     0C8F                     u5875:
  3254     0C8F  1C03               	skipc
  3255     0C90  2C97               	goto	l4688
  3256                           
  3257                           ;main.c: 460:         EUSART_Write(huns + 48);
  3258     0C91  0020               	movlb	0	; select bank0
  3259     0C92  0835               	movf	__SendDataToConsole@huns,w
  3260     0C93  3E30               	addlw	48
  3261     0C94  3197  2742  318C   	fcall	_EUSART_Write
  3262     0C97                     l4688:
  3263                           
  3264                           ;main.c: 461:     if (tens > 0)
  3265     0C97  0020               	movlb	0	; select bank0
  3266     0C98  0834               	movf	__SendDataToConsole@tens+1,w
  3267     0C99  3A80               	xorlw	128
  3268     0C9A  00AD               	movwf	??__SendDataToConsole
  3269     0C9B  3080               	movlw	128
  3270     0C9C  022D               	subwf	??__SendDataToConsole,w
  3271     0C9D  1D03               	skipz
  3272     0C9E  2CA1               	goto	u5885
  3273     0C9F  3001               	movlw	1
  3274     0CA0  0233               	subwf	__SendDataToConsole@tens,w
  3275     0CA1                     u5885:
  3276     0CA1  1C03               	skipc
  3277     0CA2  2CA9               	goto	l620
  3278                           
  3279                           ;main.c: 462:         EUSART_Write(tens + 48);
  3280     0CA3  0020               	movlb	0	; select bank0
  3281     0CA4  0833               	movf	__SendDataToConsole@tens,w
  3282     0CA5  3E30               	addlw	48
  3283     0CA6  3197  2742  318C   	fcall	_EUSART_Write
  3284     0CA9                     l620:
  3285                           
  3286                           ;main.c: 463:     EUSART_Write(ones + 48);
  3287     0CA9  0020               	movlb	0	; select bank0
  3288     0CAA  0831               	movf	__SendDataToConsole@ones,w
  3289     0CAB  3E30               	addlw	48
  3290     0CAC  3197  2742  318C   	fcall	_EUSART_Write
  3291                           
  3292                           ;main.c: 464:     EUSART_Write('F');
  3293     0CAF  3046               	movlw	70
  3294     0CB0  3197  2742  318C   	fcall	_EUSART_Write
  3295                           
  3296                           ;main.c: 465:     EUSART_Write('\t');
  3297     0CB3  3009               	movlw	9
  3298     0CB4  3197  2742  318C   	fcall	_EUSART_Write
  3299                           
  3300                           ;main.c: 466:     EUSART_Write('M');
  3301     0CB7  304D               	movlw	77
  3302     0CB8  3197  2742  318C   	fcall	_EUSART_Write
  3303                           
  3304                           ;main.c: 467:     EUSART_Write(':');
  3305     0CBB  303A               	movlw	58
  3306     0CBC  3197  2742  318C   	fcall	_EUSART_Write
  3307                           
  3308                           ;main.c: 468:     EUSART_Write(CURRENT_MODE + 48);
  3309     0CBF  0876               	movf	_CURRENT_MODE,w
  3310     0CC0  3E30               	addlw	48
  3311     0CC1  3197  2742  318C   	fcall	_EUSART_Write
  3312                           
  3313                           ;main.c: 469:     EUSART_Write('\t');
  3314     0CC4  3009               	movlw	9
  3315     0CC5  3197  2742  318C   	fcall	_EUSART_Write
  3316                           
  3317                           ;main.c: 470:     EUSART_Write('H');
  3318     0CC8  3048               	movlw	72
  3319     0CC9  3197  2742  318C   	fcall	_EUSART_Write
  3320                           
  3321                           ;main.c: 471:     EUSART_Write(':');
  3322     0CCC  303A               	movlw	58
  3323     0CCD  3197  2742  318C   	fcall	_EUSART_Write
  3324                           
  3325                           ;main.c: 472:     EUSART_Write(RELAY_STATUS + 48);
  3326     0CD0  0020               	movlb	0	; select bank0
  3327     0CD1  086F               	movf	_RELAY_STATUS,w
  3328     0CD2  3E30               	addlw	48
  3329     0CD3  3197  2742  318C   	fcall	_EUSART_Write
  3330                           
  3331                           ;main.c: 473:     EUSART_Write('\r');
  3332     0CD6  300D               	movlw	13
  3333     0CD7  3197  2742  318C   	fcall	_EUSART_Write
  3334                           
  3335                           ;main.c: 474:     EUSART_Write('\n');
  3336     0CDA  300A               	movlw	10
  3337     0CDB  3197  2742         	fcall	_EUSART_Write
  3338     0CDD  0008               	return
  3339     0CDE                     __end_of__SendDataToConsole:
  3340                           
  3341                           	psect	text2
  3342     081E                     __ptext2:	
  3343 ;; *************** function ___wmul *****************
  3344 ;; Defined at:
  3345 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3348 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  product         2    4[COMMON] unsigned int 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  2    0[BANK0 ] unsigned int 
  3353 ;; Registers used:
  3354 ;;		wreg, status,2, status,0
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3360 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3361 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3363 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3364 ;;Total ram usage:        6 bytes
  3365 ;; Hardware stack levels used: 1
  3366 ;; Hardware stack levels required when called: 5
  3367 ;; This function calls:
  3368 ;;		Nothing
  3369 ;; This function is called by:
  3370 ;;		__SendDataToConsole
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374     081E                     ___wmul:	
  3375                           ;psect for function ___wmul
  3376                           
  3377                           
  3378                           ;incstack = 0
  3379                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3380     081E  01F4               	clrf	___wmul@product
  3381     081F  01F5               	clrf	___wmul@product+1
  3382     0820                     l4542:
  3383     0820  0020               	movlb	0	; select bank0
  3384     0821  1C20               	btfss	___wmul@multiplier,0
  3385     0822  2827               	goto	l832
  3386     0823  0822               	movf	___wmul@multiplicand,w
  3387     0824  07F4               	addwf	___wmul@product,f
  3388     0825  0823               	movf	___wmul@multiplicand+1,w
  3389     0826  3DF5               	addwfc	___wmul@product+1,f
  3390     0827                     l832:
  3391     0827  3001               	movlw	1
  3392     0828                     u5625:
  3393     0828  35A2               	lslf	___wmul@multiplicand,f
  3394     0829  0DA3               	rlf	___wmul@multiplicand+1,f
  3395     082A  0B89               	decfsz	9,f
  3396     082B  2828               	goto	u5625
  3397     082C  3001               	movlw	1
  3398     082D                     u5635:
  3399     082D  36A1               	lsrf	___wmul@multiplier+1,f
  3400     082E  0CA0               	rrf	___wmul@multiplier,f
  3401     082F  0B89               	decfsz	9,f
  3402     0830  282D               	goto	u5635
  3403     0831  0820               	movf	___wmul@multiplier,w
  3404     0832  0421               	iorwf	___wmul@multiplier+1,w
  3405     0833  1D03               	btfss	3,2
  3406     0834  2820               	goto	l4542
  3407     0835  0875               	movf	___wmul@product+1,w
  3408     0836  00A1               	movwf	?___wmul+1
  3409     0837  0874               	movf	___wmul@product,w
  3410     0838  00A0               	movwf	?___wmul
  3411     0839  0008               	return
  3412     083A                     __end_of___wmul:
  3413                           
  3414                           	psect	text3
  3415     0925                     __ptext3:	
  3416 ;; *************** function ___awdiv *****************
  3417 ;; Defined at:
  3418 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;  divisor         2    4[BANK0 ] int 
  3421 ;;  dividend        2    6[BANK0 ] int 
  3422 ;; Auto vars:     Size  Location     Type
  3423 ;;  quotient        2   11[BANK0 ] int 
  3424 ;;  sign            1   10[BANK0 ] unsigned char 
  3425 ;;  counter         1    9[BANK0 ] unsigned char 
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  2    4[BANK0 ] int 
  3428 ;; Registers used:
  3429 ;;		wreg, status,2, status,0
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3435 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3436 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3437 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3438 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3439 ;;Total ram usage:        9 bytes
  3440 ;; Hardware stack levels used: 1
  3441 ;; Hardware stack levels required when called: 5
  3442 ;; This function calls:
  3443 ;;		Nothing
  3444 ;; This function is called by:
  3445 ;;		__SendDataToConsole
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449     0925                     ___awdiv:	
  3450                           ;psect for function ___awdiv
  3451                           
  3452                           
  3453                           ;incstack = 0
  3454                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3455     0925  0020               	movlb	0	; select bank0
  3456     0926  01AA               	clrf	___awdiv@sign
  3457     0927  1FA5               	btfss	___awdiv@divisor+1,7
  3458     0928  2930               	goto	l4562
  3459     0929  09A4               	comf	___awdiv@divisor,f
  3460     092A  09A5               	comf	___awdiv@divisor+1,f
  3461     092B  0AA4               	incf	___awdiv@divisor,f
  3462     092C  1903               	skipnz
  3463     092D  0AA5               	incf	___awdiv@divisor+1,f
  3464     092E  01AA               	clrf	___awdiv@sign
  3465     092F  0AAA               	incf	___awdiv@sign,f
  3466     0930                     l4562:
  3467     0930  1FA7               	btfss	___awdiv@dividend+1,7
  3468     0931  293B               	goto	l4568
  3469     0932  09A6               	comf	___awdiv@dividend,f
  3470     0933  09A7               	comf	___awdiv@dividend+1,f
  3471     0934  0AA6               	incf	___awdiv@dividend,f
  3472     0935  1903               	skipnz
  3473     0936  0AA7               	incf	___awdiv@dividend+1,f
  3474     0937  3001               	movlw	1
  3475     0938  00A8               	movwf	??___awdiv
  3476     0939  0828               	movf	??___awdiv,w
  3477     093A  06AA               	xorwf	___awdiv@sign,f
  3478     093B                     l4568:
  3479     093B  01AB               	clrf	___awdiv@quotient
  3480     093C  01AC               	clrf	___awdiv@quotient+1
  3481     093D  0824               	movf	___awdiv@divisor,w
  3482     093E  0425               	iorwf	___awdiv@divisor+1,w
  3483     093F  1903               	btfsc	3,2
  3484     0940  296A               	goto	l4590
  3485     0941  01A9               	clrf	___awdiv@counter
  3486     0942  0AA9               	incf	___awdiv@counter,f
  3487     0943                     l4578:
  3488     0943  1BA5               	btfsc	___awdiv@divisor+1,7
  3489     0944  294F               	goto	l4580
  3490     0945  3001               	movlw	1
  3491     0946                     u5685:
  3492     0946  35A4               	lslf	___awdiv@divisor,f
  3493     0947  0DA5               	rlf	___awdiv@divisor+1,f
  3494     0948  0B89               	decfsz	9,f
  3495     0949  2946               	goto	u5685
  3496     094A  3001               	movlw	1
  3497     094B  00A8               	movwf	??___awdiv
  3498     094C  0828               	movf	??___awdiv,w
  3499     094D  07A9               	addwf	___awdiv@counter,f
  3500     094E  2943               	goto	l4578
  3501     094F                     l4580:
  3502     094F  3001               	movlw	1
  3503     0950                     u5705:
  3504     0950  35AB               	lslf	___awdiv@quotient,f
  3505     0951  0DAC               	rlf	___awdiv@quotient+1,f
  3506     0952  0B89               	decfsz	9,f
  3507     0953  2950               	goto	u5705
  3508     0954  0825               	movf	___awdiv@divisor+1,w
  3509     0955  0227               	subwf	___awdiv@dividend+1,w
  3510     0956  1D03               	skipz
  3511     0957  295A               	goto	u5715
  3512     0958  0824               	movf	___awdiv@divisor,w
  3513     0959  0226               	subwf	___awdiv@dividend,w
  3514     095A                     u5715:
  3515     095A  1C03               	skipc
  3516     095B  2961               	goto	l4586
  3517     095C  0824               	movf	___awdiv@divisor,w
  3518     095D  02A6               	subwf	___awdiv@dividend,f
  3519     095E  0825               	movf	___awdiv@divisor+1,w
  3520     095F  3BA7               	subwfb	___awdiv@dividend+1,f
  3521     0960  142B               	bsf	___awdiv@quotient,0
  3522     0961                     l4586:
  3523     0961  3001               	movlw	1
  3524     0962                     u5725:
  3525     0962  36A5               	lsrf	___awdiv@divisor+1,f
  3526     0963  0CA4               	rrf	___awdiv@divisor,f
  3527     0964  0B89               	decfsz	9,f
  3528     0965  2962               	goto	u5725
  3529     0966  3001               	movlw	1
  3530     0967  02A9               	subwf	___awdiv@counter,f
  3531     0968  1D03               	btfss	3,2
  3532     0969  294F               	goto	l4580
  3533     096A                     l4590:
  3534     096A  082A               	movf	___awdiv@sign,w
  3535     096B  1903               	btfsc	3,2
  3536     096C  2972               	goto	l4594
  3537     096D  09AB               	comf	___awdiv@quotient,f
  3538     096E  09AC               	comf	___awdiv@quotient+1,f
  3539     096F  0AAB               	incf	___awdiv@quotient,f
  3540     0970  1903               	skipnz
  3541     0971  0AAC               	incf	___awdiv@quotient+1,f
  3542     0972                     l4594:
  3543     0972  082C               	movf	___awdiv@quotient+1,w
  3544     0973  00A5               	movwf	?___awdiv+1
  3545     0974  082B               	movf	___awdiv@quotient,w
  3546     0975  00A4               	movwf	?___awdiv
  3547     0976  0008               	return
  3548     0977                     __end_of___awdiv:
  3549                           
  3550                           	psect	text4
  3551     02EE                     __ptext4:	
  3552 ;; *************** function __ReadSensor *****************
  3553 ;; Defined at:
  3554 ;;		line 376 in file "main.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;		None
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;  logR            4   46[BANK2 ] float 
  3559 ;;  Tf              4   28[BANK2 ] float 
  3560 ;;  Tc              4   24[BANK2 ] float 
  3561 ;;  T               4   20[BANK2 ] float 
  3562 ;;  invT            4   16[BANK2 ] float 
  3563 ;;  Rntc            4   12[BANK2 ] float 
  3564 ;;  Vcc             4    8[BANK2 ] float 
  3565 ;;  Rpullup         4    4[BANK2 ] float 
  3566 ;;  Vout            4    0[BANK2 ] float 
  3567 ;;  adcValue        2   44[BANK2 ] unsigned short 
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  1    wreg      void 
  3570 ;; Registers used:
  3571 ;;		wreg, status,2, status,0, pclath, cstack
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3578 ;;      Locals:         0       0       0      50       0       0       0       0       0       0       0       0       
      +0       0
  3579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3580 ;;      Totals:         0       0       0      50       0       0       0       0       0       0       0       0       
      +0       0
  3581 ;;Total ram usage:       50 bytes
  3582 ;; Hardware stack levels used: 1
  3583 ;; Hardware stack levels required when called: 8
  3584 ;; This function calls:
  3585 ;;		_ADC_GetConversion
  3586 ;;		___fladd
  3587 ;;		___fldiv
  3588 ;;		___flmul
  3589 ;;		___fltol
  3590 ;;		___xxtofl
  3591 ;;		_my_log
  3592 ;; This function is called by:
  3593 ;;		_main
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597     02EE                     __ReadSensor:	
  3598                           ;psect for function __ReadSensor
  3599                           
  3600                           
  3601                           ;main.c: 379:     uint16_t adcValue = ADC_GetConversion(NTC);
  3602                           
  3603                           ;incstack = 0
  3604                           ; Regs used in __ReadSensor: [wreg+status,2+status,0+pclath+cstack]
  3605     02EE  3006               	movlw	6
  3606     02EF  3188  2002  3182   	fcall	_ADC_GetConversion
  3607     02F2  0875               	movf	?_ADC_GetConversion+1,w
  3608     02F3  0022               	movlb	2	; select bank2
  3609     02F4  00CD               	movwf	(__ReadSensor@adcValue+1)^(0+256)
  3610     02F5  0874               	movf	?_ADC_GetConversion,w
  3611     02F6  00CC               	movwf	__ReadSensor@adcValue^(0+256)
  3612                           
  3613                           ;main.c: 380:     float Vout = adcValue * (5.0f / 1023.0f);
  3614     02F7  303B               	movlw	59
  3615     02F8  0020               	movlb	0	; select bank0
  3616     02F9  00DF               	movwf	___flmul@b+3
  3617     02FA  30A0               	movlw	160
  3618     02FB  00DE               	movwf	___flmul@b+2
  3619     02FC  3028               	movlw	40
  3620     02FD  00DD               	movwf	___flmul@b+1
  3621     02FE  300A               	movlw	10
  3622     02FF  00DC               	movwf	___flmul@b
  3623     0300  0022               	movlb	2	; select bank2
  3624     0301  084C               	movf	__ReadSensor@adcValue^(0+256),w
  3625     0302  0020               	movlb	0	; select bank0
  3626     0303  00A0               	movwf	___xxtofl@val
  3627     0304  0022               	movlb	2	; select bank2
  3628     0305  084D               	movf	(__ReadSensor@adcValue+1)^(0+256),w
  3629     0306  0020               	movlb	0	; select bank0
  3630     0307  00A1               	movwf	___xxtofl@val+1
  3631     0308  01A2               	clrf	___xxtofl@val+2
  3632     0309  01A3               	clrf	___xxtofl@val+3
  3633     030A  3000               	movlw	0
  3634     030B  318A  22BE  3182   	fcall	___xxtofl
  3635     030E  0020               	movlb	0	; select bank0
  3636     030F  0823               	movf	?___xxtofl+3,w
  3637     0310  00E3               	movwf	___flmul@a+3
  3638     0311  0822               	movf	?___xxtofl+2,w
  3639     0312  00E2               	movwf	___flmul@a+2
  3640     0313  0821               	movf	?___xxtofl+1,w
  3641     0314  00E1               	movwf	___flmul@a+1
  3642     0315  0820               	movf	?___xxtofl,w
  3643     0316  00E0               	movwf	___flmul@a
  3644     0317  3180  204F  3182   	fcall	___flmul
  3645     031A  0020               	movlb	0	; select bank0
  3646     031B  085F               	movf	?___flmul+3,w
  3647     031C  0022               	movlb	2	; select bank2
  3648     031D  00A3               	movwf	(__ReadSensor@Vout+3)^(0+256)
  3649     031E  0020               	movlb	0	; select bank0
  3650     031F  085E               	movf	?___flmul+2,w
  3651     0320  0022               	movlb	2	; select bank2
  3652     0321  00A2               	movwf	(__ReadSensor@Vout+2)^(0+256)
  3653     0322  0020               	movlb	0	; select bank0
  3654     0323  085D               	movf	?___flmul+1,w
  3655     0324  0022               	movlb	2	; select bank2
  3656     0325  00A1               	movwf	(__ReadSensor@Vout+1)^(0+256)
  3657     0326  0020               	movlb	0	; select bank0
  3658     0327  085C               	movf	?___flmul,w
  3659     0328  0022               	movlb	2	; select bank2
  3660     0329  00A0               	movwf	__ReadSensor@Vout^(0+256)
  3661                           
  3662                           ;main.c: 383:     float Rpullup = 10000.0;
  3663     032A  3046               	movlw	70
  3664     032B  00A7               	movwf	(__ReadSensor@Rpullup+3)^(0+256)
  3665     032C  301C               	movlw	28
  3666     032D  00A6               	movwf	(__ReadSensor@Rpullup+2)^(0+256)
  3667     032E  3040               	movlw	64
  3668     032F  00A5               	movwf	(__ReadSensor@Rpullup+1)^(0+256)
  3669     0330  3000               	movlw	0
  3670     0331  00A4               	movwf	__ReadSensor@Rpullup^(0+256)
  3671                           
  3672                           ;main.c: 384:     float Vcc = 5.0;
  3673     0332  3040               	movlw	64
  3674     0333  00AB               	movwf	(__ReadSensor@Vcc+3)^(0+256)
  3675     0334  30A0               	movlw	160
  3676     0335  00AA               	movwf	(__ReadSensor@Vcc+2)^(0+256)
  3677     0336  3000               	movlw	0
  3678     0337  00A9               	movwf	(__ReadSensor@Vcc+1)^(0+256)
  3679     0338  3000               	movlw	0
  3680     0339  00A8               	movwf	__ReadSensor@Vcc^(0+256)
  3681                           
  3682                           ;main.c: 385:     float Rntc = Rpullup * (Vcc / Vout - 1.0f);
  3683     033A  0827               	movf	(__ReadSensor@Rpullup+3)^(0+256),w
  3684     033B  0020               	movlb	0	; select bank0
  3685     033C  00DF               	movwf	___flmul@b+3
  3686     033D  0022               	movlb	2	; select bank2
  3687     033E  0826               	movf	(__ReadSensor@Rpullup+2)^(0+256),w
  3688     033F  0020               	movlb	0	; select bank0
  3689     0340  00DE               	movwf	___flmul@b+2
  3690     0341  0022               	movlb	2	; select bank2
  3691     0342  0825               	movf	(__ReadSensor@Rpullup+1)^(0+256),w
  3692     0343  0020               	movlb	0	; select bank0
  3693     0344  00DD               	movwf	___flmul@b+1
  3694     0345  0022               	movlb	2	; select bank2
  3695     0346  0824               	movf	__ReadSensor@Rpullup^(0+256),w
  3696     0347  0020               	movlb	0	; select bank0
  3697     0348  00DC               	movwf	___flmul@b
  3698     0349  30BF               	movlw	191
  3699     034A  00CB               	movwf	___fladd@b+3
  3700     034B  3080               	movlw	128
  3701     034C  00CA               	movwf	___fladd@b+2
  3702     034D  3000               	movlw	0
  3703     034E  00C9               	movwf	___fladd@b+1
  3704     034F  3000               	movlw	0
  3705     0350  00C8               	movwf	___fladd@b
  3706     0351  0022               	movlb	2	; select bank2
  3707     0352  0823               	movf	(__ReadSensor@Vout+3)^(0+256),w
  3708     0353  0020               	movlb	0	; select bank0
  3709     0354  00B1               	movwf	___fldiv@a+3
  3710     0355  0022               	movlb	2	; select bank2
  3711     0356  0822               	movf	(__ReadSensor@Vout+2)^(0+256),w
  3712     0357  0020               	movlb	0	; select bank0
  3713     0358  00B0               	movwf	___fldiv@a+2
  3714     0359  0022               	movlb	2	; select bank2
  3715     035A  0821               	movf	(__ReadSensor@Vout+1)^(0+256),w
  3716     035B  0020               	movlb	0	; select bank0
  3717     035C  00AF               	movwf	___fldiv@a+1
  3718     035D  0022               	movlb	2	; select bank2
  3719     035E  0820               	movf	__ReadSensor@Vout^(0+256),w
  3720     035F  0020               	movlb	0	; select bank0
  3721     0360  00AE               	movwf	___fldiv@a
  3722     0361  0022               	movlb	2	; select bank2
  3723     0362  082B               	movf	(__ReadSensor@Vcc+3)^(0+256),w
  3724     0363  0020               	movlb	0	; select bank0
  3725     0364  00B5               	movwf	___fldiv@b+3
  3726     0365  0022               	movlb	2	; select bank2
  3727     0366  082A               	movf	(__ReadSensor@Vcc+2)^(0+256),w
  3728     0367  0020               	movlb	0	; select bank0
  3729     0368  00B4               	movwf	___fldiv@b+2
  3730     0369  0022               	movlb	2	; select bank2
  3731     036A  0829               	movf	(__ReadSensor@Vcc+1)^(0+256),w
  3732     036B  0020               	movlb	0	; select bank0
  3733     036C  00B3               	movwf	___fldiv@b+1
  3734     036D  0022               	movlb	2	; select bank2
  3735     036E  0828               	movf	__ReadSensor@Vcc^(0+256),w
  3736     036F  0020               	movlb	0	; select bank0
  3737     0370  00B2               	movwf	___fldiv@b
  3738     0371  318C  24DE  3182   	fcall	___fldiv
  3739     0374  0020               	movlb	0	; select bank0
  3740     0375  0831               	movf	?___fldiv+3,w
  3741     0376  00CF               	movwf	___fladd@a+3
  3742     0377  0830               	movf	?___fldiv+2,w
  3743     0378  00CE               	movwf	___fladd@a+2
  3744     0379  082F               	movf	?___fldiv+1,w
  3745     037A  00CD               	movwf	___fladd@a+1
  3746     037B  082E               	movf	?___fldiv,w
  3747     037C  00CC               	movwf	___fladd@a
  3748     037D  318E  264E  3182   	fcall	___fladd
  3749     0380  0020               	movlb	0	; select bank0
  3750     0381  084B               	movf	?___fladd+3,w
  3751     0382  00E3               	movwf	___flmul@a+3
  3752     0383  084A               	movf	?___fladd+2,w
  3753     0384  00E2               	movwf	___flmul@a+2
  3754     0385  0849               	movf	?___fladd+1,w
  3755     0386  00E1               	movwf	___flmul@a+1
  3756     0387  0848               	movf	?___fladd,w
  3757     0388  00E0               	movwf	___flmul@a
  3758     0389  3180  204F  3182   	fcall	___flmul
  3759     038C  0020               	movlb	0	; select bank0
  3760     038D  085F               	movf	?___flmul+3,w
  3761     038E  0022               	movlb	2	; select bank2
  3762     038F  00AF               	movwf	(__ReadSensor@Rntc+3)^(0+256)
  3763     0390  0020               	movlb	0	; select bank0
  3764     0391  085E               	movf	?___flmul+2,w
  3765     0392  0022               	movlb	2	; select bank2
  3766     0393  00AE               	movwf	(__ReadSensor@Rntc+2)^(0+256)
  3767     0394  0020               	movlb	0	; select bank0
  3768     0395  085D               	movf	?___flmul+1,w
  3769     0396  0022               	movlb	2	; select bank2
  3770     0397  00AD               	movwf	(__ReadSensor@Rntc+1)^(0+256)
  3771     0398  0020               	movlb	0	; select bank0
  3772     0399  085C               	movf	?___flmul,w
  3773     039A  0022               	movlb	2	; select bank2
  3774     039B  00AC               	movwf	__ReadSensor@Rntc^(0+256)
  3775                           
  3776                           ;main.c: 388:     float logR = my_log(Rntc);
  3777     039C  082F               	movf	(__ReadSensor@Rntc+3)^(0+256),w
  3778     039D  0020               	movlb	0	; select bank0
  3779     039E  00EC               	movwf	my_log@x+3
  3780     039F  0022               	movlb	2	; select bank2
  3781     03A0  082E               	movf	(__ReadSensor@Rntc+2)^(0+256),w
  3782     03A1  0020               	movlb	0	; select bank0
  3783     03A2  00EB               	movwf	my_log@x+2
  3784     03A3  0022               	movlb	2	; select bank2
  3785     03A4  082D               	movf	(__ReadSensor@Rntc+1)^(0+256),w
  3786     03A5  0020               	movlb	0	; select bank0
  3787     03A6  00EA               	movwf	my_log@x+1
  3788     03A7  0022               	movlb	2	; select bank2
  3789     03A8  082C               	movf	__ReadSensor@Rntc^(0+256),w
  3790     03A9  0020               	movlb	0	; select bank0
  3791     03AA  00E9               	movwf	my_log@x
  3792     03AB  3185  255A  3182   	fcall	_my_log
  3793     03AE  0020               	movlb	0	; select bank0
  3794     03AF  086C               	movf	?_my_log+3,w
  3795     03B0  0022               	movlb	2	; select bank2
  3796     03B1  00D1               	movwf	(__ReadSensor@logR+3)^(0+256)
  3797     03B2  0020               	movlb	0	; select bank0
  3798     03B3  086B               	movf	?_my_log+2,w
  3799     03B4  0022               	movlb	2	; select bank2
  3800     03B5  00D0               	movwf	(__ReadSensor@logR+2)^(0+256)
  3801     03B6  0020               	movlb	0	; select bank0
  3802     03B7  086A               	movf	?_my_log+1,w
  3803     03B8  0022               	movlb	2	; select bank2
  3804     03B9  00CF               	movwf	(__ReadSensor@logR+1)^(0+256)
  3805     03BA  0020               	movlb	0	; select bank0
  3806     03BB  0869               	movf	?_my_log,w
  3807     03BC  0022               	movlb	2	; select bank2
  3808     03BD  00CE               	movwf	__ReadSensor@logR^(0+256)
  3809     03BE  3033               	movlw	51
  3810     03BF  0020               	movlb	0	; select bank0
  3811     03C0  00DF               	movwf	___flmul@b+3
  3812     03C1  30C4               	movlw	196
  3813     03C2  00DE               	movwf	___flmul@b+2
  3814     03C3  3025               	movlw	37
  3815     03C4  00DD               	movwf	___flmul@b+1
  3816     03C5  3080               	movlw	128
  3817     03C6  00DC               	movwf	___flmul@b
  3818     03C7  0022               	movlb	2	; select bank2
  3819     03C8  0851               	movf	(__ReadSensor@logR+3)^(0+256),w
  3820     03C9  0020               	movlb	0	; select bank0
  3821     03CA  00E3               	movwf	___flmul@a+3
  3822     03CB  0022               	movlb	2	; select bank2
  3823     03CC  0850               	movf	(__ReadSensor@logR+2)^(0+256),w
  3824     03CD  0020               	movlb	0	; select bank0
  3825     03CE  00E2               	movwf	___flmul@a+2
  3826     03CF  0022               	movlb	2	; select bank2
  3827     03D0  084F               	movf	(__ReadSensor@logR+1)^(0+256),w
  3828     03D1  0020               	movlb	0	; select bank0
  3829     03D2  00E1               	movwf	___flmul@a+1
  3830     03D3  0022               	movlb	2	; select bank2
  3831     03D4  084E               	movf	__ReadSensor@logR^(0+256),w
  3832     03D5  0020               	movlb	0	; select bank0
  3833     03D6  00E0               	movwf	___flmul@a
  3834     03D7  3180  204F  3182   	fcall	___flmul
  3835     03DA  0020               	movlb	0	; select bank0
  3836     03DB  085F               	movf	?___flmul+3,w
  3837     03DC  0022               	movlb	2	; select bank2
  3838     03DD  00C3               	movwf	(__ReadSensor$1847+3)^(0+256)
  3839     03DE  0020               	movlb	0	; select bank0
  3840     03DF  085E               	movf	?___flmul+2,w
  3841     03E0  0022               	movlb	2	; select bank2
  3842     03E1  00C2               	movwf	(__ReadSensor$1847+2)^(0+256)
  3843     03E2  0020               	movlb	0	; select bank0
  3844     03E3  085D               	movf	?___flmul+1,w
  3845     03E4  0022               	movlb	2	; select bank2
  3846     03E5  00C1               	movwf	(__ReadSensor$1847+1)^(0+256)
  3847     03E6  0020               	movlb	0	; select bank0
  3848     03E7  085C               	movf	?___flmul,w
  3849     03E8  0022               	movlb	2	; select bank2
  3850     03E9  00C0               	movwf	__ReadSensor$1847^(0+256)
  3851     03EA  0851               	movf	(__ReadSensor@logR+3)^(0+256),w
  3852     03EB  0020               	movlb	0	; select bank0
  3853     03EC  00DF               	movwf	___flmul@b+3
  3854     03ED  0022               	movlb	2	; select bank2
  3855     03EE  0850               	movf	(__ReadSensor@logR+2)^(0+256),w
  3856     03EF  0020               	movlb	0	; select bank0
  3857     03F0  00DE               	movwf	___flmul@b+2
  3858     03F1  0022               	movlb	2	; select bank2
  3859     03F2  084F               	movf	(__ReadSensor@logR+1)^(0+256),w
  3860     03F3  0020               	movlb	0	; select bank0
  3861     03F4  00DD               	movwf	___flmul@b+1
  3862     03F5  0022               	movlb	2	; select bank2
  3863     03F6  084E               	movf	__ReadSensor@logR^(0+256),w
  3864     03F7  0020               	movlb	0	; select bank0
  3865     03F8  00DC               	movwf	___flmul@b
  3866     03F9  0022               	movlb	2	; select bank2
  3867     03FA  0843               	movf	(__ReadSensor$1847+3)^(0+256),w
  3868     03FB  0020               	movlb	0	; select bank0
  3869     03FC  00E3               	movwf	___flmul@a+3
  3870     03FD  0022               	movlb	2	; select bank2
  3871     03FE  0842               	movf	(__ReadSensor$1847+2)^(0+256),w
  3872     03FF  0020               	movlb	0	; select bank0
  3873     0400  00E2               	movwf	___flmul@a+2
  3874     0401  0022               	movlb	2	; select bank2
  3875     0402  0841               	movf	(__ReadSensor$1847+1)^(0+256),w
  3876     0403  0020               	movlb	0	; select bank0
  3877     0404  00E1               	movwf	___flmul@a+1
  3878     0405  0022               	movlb	2	; select bank2
  3879     0406  0840               	movf	__ReadSensor$1847^(0+256),w
  3880     0407  0020               	movlb	0	; select bank0
  3881     0408  00E0               	movwf	___flmul@a
  3882     0409  3180  204F  3182   	fcall	___flmul
  3883     040C  0020               	movlb	0	; select bank0
  3884     040D  085F               	movf	?___flmul+3,w
  3885     040E  0022               	movlb	2	; select bank2
  3886     040F  00C7               	movwf	(__ReadSensor$1848+3)^(0+256)
  3887     0410  0020               	movlb	0	; select bank0
  3888     0411  085E               	movf	?___flmul+2,w
  3889     0412  0022               	movlb	2	; select bank2
  3890     0413  00C6               	movwf	(__ReadSensor$1848+2)^(0+256)
  3891     0414  0020               	movlb	0	; select bank0
  3892     0415  085D               	movf	?___flmul+1,w
  3893     0416  0022               	movlb	2	; select bank2
  3894     0417  00C5               	movwf	(__ReadSensor$1848+1)^(0+256)
  3895     0418  0020               	movlb	0	; select bank0
  3896     0419  085C               	movf	?___flmul,w
  3897     041A  0022               	movlb	2	; select bank2
  3898     041B  00C4               	movwf	__ReadSensor$1848^(0+256)
  3899     041C  303A               	movlw	58
  3900     041D  0020               	movlb	0	; select bank0
  3901     041E  00CB               	movwf	___fladd@b+3
  3902     041F  30A8               	movlw	168
  3903     0420  00CA               	movwf	___fladd@b+2
  3904     0421  3000               	movlw	0
  3905     0422  00C9               	movwf	___fladd@b+1
  3906     0423  3010               	movlw	16
  3907     0424  00C8               	movwf	___fladd@b
  3908     0425  3039               	movlw	57
  3909     0426  00DF               	movwf	___flmul@b+3
  3910     0427  3078               	movlw	120
  3911     0428  00DE               	movwf	___flmul@b+2
  3912     0429  302D               	movlw	45
  3913     042A  00DD               	movwf	___flmul@b+1
  3914     042B  3016               	movlw	22
  3915     042C  00DC               	movwf	___flmul@b
  3916     042D  0022               	movlb	2	; select bank2
  3917     042E  0851               	movf	(__ReadSensor@logR+3)^(0+256),w
  3918     042F  0020               	movlb	0	; select bank0
  3919     0430  00E3               	movwf	___flmul@a+3
  3920     0431  0022               	movlb	2	; select bank2
  3921     0432  0850               	movf	(__ReadSensor@logR+2)^(0+256),w
  3922     0433  0020               	movlb	0	; select bank0
  3923     0434  00E2               	movwf	___flmul@a+2
  3924     0435  0022               	movlb	2	; select bank2
  3925     0436  084F               	movf	(__ReadSensor@logR+1)^(0+256),w
  3926     0437  0020               	movlb	0	; select bank0
  3927     0438  00E1               	movwf	___flmul@a+1
  3928     0439  0022               	movlb	2	; select bank2
  3929     043A  084E               	movf	__ReadSensor@logR^(0+256),w
  3930     043B  0020               	movlb	0	; select bank0
  3931     043C  00E0               	movwf	___flmul@a
  3932     043D  3180  204F  3182   	fcall	___flmul
  3933     0440  0020               	movlb	0	; select bank0
  3934     0441  085F               	movf	?___flmul+3,w
  3935     0442  00CF               	movwf	___fladd@a+3
  3936     0443  085E               	movf	?___flmul+2,w
  3937     0444  00CE               	movwf	___fladd@a+2
  3938     0445  085D               	movf	?___flmul+1,w
  3939     0446  00CD               	movwf	___fladd@a+1
  3940     0447  085C               	movf	?___flmul,w
  3941     0448  00CC               	movwf	___fladd@a
  3942     0449  318E  264E  3182   	fcall	___fladd
  3943     044C  0020               	movlb	0	; select bank0
  3944     044D  084B               	movf	?___fladd+3,w
  3945     044E  0022               	movlb	2	; select bank2
  3946     044F  00CB               	movwf	(__ReadSensor$1849+3)^(0+256)
  3947     0450  0020               	movlb	0	; select bank0
  3948     0451  084A               	movf	?___fladd+2,w
  3949     0452  0022               	movlb	2	; select bank2
  3950     0453  00CA               	movwf	(__ReadSensor$1849+2)^(0+256)
  3951     0454  0020               	movlb	0	; select bank0
  3952     0455  0849               	movf	?___fladd+1,w
  3953     0456  0022               	movlb	2	; select bank2
  3954     0457  00C9               	movwf	(__ReadSensor$1849+1)^(0+256)
  3955     0458  0020               	movlb	0	; select bank0
  3956     0459  0848               	movf	?___fladd,w
  3957     045A  0022               	movlb	2	; select bank2
  3958     045B  00C8               	movwf	__ReadSensor$1849^(0+256)
  3959     045C  0851               	movf	(__ReadSensor@logR+3)^(0+256),w
  3960     045D  0020               	movlb	0	; select bank0
  3961     045E  00DF               	movwf	___flmul@b+3
  3962     045F  0022               	movlb	2	; select bank2
  3963     0460  0850               	movf	(__ReadSensor@logR+2)^(0+256),w
  3964     0461  0020               	movlb	0	; select bank0
  3965     0462  00DE               	movwf	___flmul@b+2
  3966     0463  0022               	movlb	2	; select bank2
  3967     0464  084F               	movf	(__ReadSensor@logR+1)^(0+256),w
  3968     0465  0020               	movlb	0	; select bank0
  3969     0466  00DD               	movwf	___flmul@b+1
  3970     0467  0022               	movlb	2	; select bank2
  3971     0468  084E               	movf	__ReadSensor@logR^(0+256),w
  3972     0469  0020               	movlb	0	; select bank0
  3973     046A  00DC               	movwf	___flmul@b
  3974     046B  0022               	movlb	2	; select bank2
  3975     046C  0847               	movf	(__ReadSensor$1848+3)^(0+256),w
  3976     046D  0020               	movlb	0	; select bank0
  3977     046E  00E3               	movwf	___flmul@a+3
  3978     046F  0022               	movlb	2	; select bank2
  3979     0470  0846               	movf	(__ReadSensor$1848+2)^(0+256),w
  3980     0471  0020               	movlb	0	; select bank0
  3981     0472  00E2               	movwf	___flmul@a+2
  3982     0473  0022               	movlb	2	; select bank2
  3983     0474  0845               	movf	(__ReadSensor$1848+1)^(0+256),w
  3984     0475  0020               	movlb	0	; select bank0
  3985     0476  00E1               	movwf	___flmul@a+1
  3986     0477  0022               	movlb	2	; select bank2
  3987     0478  0844               	movf	__ReadSensor$1848^(0+256),w
  3988     0479  0020               	movlb	0	; select bank0
  3989     047A  00E0               	movwf	___flmul@a
  3990     047B  3180  204F  3182   	fcall	___flmul
  3991     047E  0020               	movlb	0	; select bank0
  3992     047F  085F               	movf	?___flmul+3,w
  3993     0480  00CB               	movwf	___fladd@b+3
  3994     0481  085E               	movf	?___flmul+2,w
  3995     0482  00CA               	movwf	___fladd@b+2
  3996     0483  085D               	movf	?___flmul+1,w
  3997     0484  00C9               	movwf	___fladd@b+1
  3998     0485  085C               	movf	?___flmul,w
  3999     0486  00C8               	movwf	___fladd@b
  4000     0487  0022               	movlb	2	; select bank2
  4001     0488  084B               	movf	(__ReadSensor$1849+3)^(0+256),w
  4002     0489  0020               	movlb	0	; select bank0
  4003     048A  00CF               	movwf	___fladd@a+3
  4004     048B  0022               	movlb	2	; select bank2
  4005     048C  084A               	movf	(__ReadSensor$1849+2)^(0+256),w
  4006     048D  0020               	movlb	0	; select bank0
  4007     048E  00CE               	movwf	___fladd@a+2
  4008     048F  0022               	movlb	2	; select bank2
  4009     0490  0849               	movf	(__ReadSensor$1849+1)^(0+256),w
  4010     0491  0020               	movlb	0	; select bank0
  4011     0492  00CD               	movwf	___fladd@a+1
  4012     0493  0022               	movlb	2	; select bank2
  4013     0494  0848               	movf	__ReadSensor$1849^(0+256),w
  4014     0495  0020               	movlb	0	; select bank0
  4015     0496  00CC               	movwf	___fladd@a
  4016     0497  318E  264E  3182   	fcall	___fladd
  4017     049A  0020               	movlb	0	; select bank0
  4018     049B  084B               	movf	?___fladd+3,w
  4019     049C  0022               	movlb	2	; select bank2
  4020     049D  00B3               	movwf	(__ReadSensor@invT+3)^(0+256)
  4021     049E  0020               	movlb	0	; select bank0
  4022     049F  084A               	movf	?___fladd+2,w
  4023     04A0  0022               	movlb	2	; select bank2
  4024     04A1  00B2               	movwf	(__ReadSensor@invT+2)^(0+256)
  4025     04A2  0020               	movlb	0	; select bank0
  4026     04A3  0849               	movf	?___fladd+1,w
  4027     04A4  0022               	movlb	2	; select bank2
  4028     04A5  00B1               	movwf	(__ReadSensor@invT+1)^(0+256)
  4029     04A6  0020               	movlb	0	; select bank0
  4030     04A7  0848               	movf	?___fladd,w
  4031     04A8  0022               	movlb	2	; select bank2
  4032     04A9  00B0               	movwf	__ReadSensor@invT^(0+256)
  4033                           
  4034                           ;main.c: 392:     float T = 1.0f / invT;
  4035     04AA  0833               	movf	(__ReadSensor@invT+3)^(0+256),w
  4036     04AB  0020               	movlb	0	; select bank0
  4037     04AC  00B1               	movwf	___fldiv@a+3
  4038     04AD  0022               	movlb	2	; select bank2
  4039     04AE  0832               	movf	(__ReadSensor@invT+2)^(0+256),w
  4040     04AF  0020               	movlb	0	; select bank0
  4041     04B0  00B0               	movwf	___fldiv@a+2
  4042     04B1  0022               	movlb	2	; select bank2
  4043     04B2  0831               	movf	(__ReadSensor@invT+1)^(0+256),w
  4044     04B3  0020               	movlb	0	; select bank0
  4045     04B4  00AF               	movwf	___fldiv@a+1
  4046     04B5  0022               	movlb	2	; select bank2
  4047     04B6  0830               	movf	__ReadSensor@invT^(0+256),w
  4048     04B7  0020               	movlb	0	; select bank0
  4049     04B8  00AE               	movwf	___fldiv@a
  4050     04B9  303F               	movlw	63
  4051     04BA  00B5               	movwf	___fldiv@b+3
  4052     04BB  3080               	movlw	128
  4053     04BC  00B4               	movwf	___fldiv@b+2
  4054     04BD  3000               	movlw	0
  4055     04BE  00B3               	movwf	___fldiv@b+1
  4056     04BF  3000               	movlw	0
  4057     04C0  00B2               	movwf	___fldiv@b
  4058     04C1  318C  24DE  3182   	fcall	___fldiv
  4059     04C4  0020               	movlb	0	; select bank0
  4060     04C5  0831               	movf	?___fldiv+3,w
  4061     04C6  0022               	movlb	2	; select bank2
  4062     04C7  00B7               	movwf	(__ReadSensor@T+3)^(0+256)
  4063     04C8  0020               	movlb	0	; select bank0
  4064     04C9  0830               	movf	?___fldiv+2,w
  4065     04CA  0022               	movlb	2	; select bank2
  4066     04CB  00B6               	movwf	(__ReadSensor@T+2)^(0+256)
  4067     04CC  0020               	movlb	0	; select bank0
  4068     04CD  082F               	movf	?___fldiv+1,w
  4069     04CE  0022               	movlb	2	; select bank2
  4070     04CF  00B5               	movwf	(__ReadSensor@T+1)^(0+256)
  4071     04D0  0020               	movlb	0	; select bank0
  4072     04D1  082E               	movf	?___fldiv,w
  4073     04D2  0022               	movlb	2	; select bank2
  4074     04D3  00B4               	movwf	__ReadSensor@T^(0+256)
  4075                           
  4076                           ;main.c: 393:     float Tc = T - 273.15f;
  4077     04D4  30C3               	movlw	195
  4078     04D5  0020               	movlb	0	; select bank0
  4079     04D6  00CB               	movwf	___fladd@b+3
  4080     04D7  3088               	movlw	136
  4081     04D8  00CA               	movwf	___fladd@b+2
  4082     04D9  3093               	movlw	147
  4083     04DA  00C9               	movwf	___fladd@b+1
  4084     04DB  3033               	movlw	51
  4085     04DC  00C8               	movwf	___fladd@b
  4086     04DD  0022               	movlb	2	; select bank2
  4087     04DE  0837               	movf	(__ReadSensor@T+3)^(0+256),w
  4088     04DF  0020               	movlb	0	; select bank0
  4089     04E0  00CF               	movwf	___fladd@a+3
  4090     04E1  0022               	movlb	2	; select bank2
  4091     04E2  0836               	movf	(__ReadSensor@T+2)^(0+256),w
  4092     04E3  0020               	movlb	0	; select bank0
  4093     04E4  00CE               	movwf	___fladd@a+2
  4094     04E5  0022               	movlb	2	; select bank2
  4095     04E6  0835               	movf	(__ReadSensor@T+1)^(0+256),w
  4096     04E7  0020               	movlb	0	; select bank0
  4097     04E8  00CD               	movwf	___fladd@a+1
  4098     04E9  0022               	movlb	2	; select bank2
  4099     04EA  0834               	movf	__ReadSensor@T^(0+256),w
  4100     04EB  0020               	movlb	0	; select bank0
  4101     04EC  00CC               	movwf	___fladd@a
  4102     04ED  318E  264E  3182   	fcall	___fladd
  4103     04F0  0020               	movlb	0	; select bank0
  4104     04F1  084B               	movf	?___fladd+3,w
  4105     04F2  0022               	movlb	2	; select bank2
  4106     04F3  00BB               	movwf	(__ReadSensor@Tc+3)^(0+256)
  4107     04F4  0020               	movlb	0	; select bank0
  4108     04F5  084A               	movf	?___fladd+2,w
  4109     04F6  0022               	movlb	2	; select bank2
  4110     04F7  00BA               	movwf	(__ReadSensor@Tc+2)^(0+256)
  4111     04F8  0020               	movlb	0	; select bank0
  4112     04F9  0849               	movf	?___fladd+1,w
  4113     04FA  0022               	movlb	2	; select bank2
  4114     04FB  00B9               	movwf	(__ReadSensor@Tc+1)^(0+256)
  4115     04FC  0020               	movlb	0	; select bank0
  4116     04FD  0848               	movf	?___fladd,w
  4117     04FE  0022               	movlb	2	; select bank2
  4118     04FF  00B8               	movwf	__ReadSensor@Tc^(0+256)
  4119                           
  4120                           ;main.c: 394:     float Tf = (1.8f * Tc) + 32.0f;
  4121     0500  3042               	movlw	66
  4122     0501  0020               	movlb	0	; select bank0
  4123     0502  00CB               	movwf	___fladd@b+3
  4124     0503  3000               	movlw	0
  4125     0504  00CA               	movwf	___fladd@b+2
  4126     0505  3000               	movlw	0
  4127     0506  00C9               	movwf	___fladd@b+1
  4128     0507  3000               	movlw	0
  4129     0508  00C8               	movwf	___fladd@b
  4130     0509  303F               	movlw	63
  4131     050A  00DF               	movwf	___flmul@b+3
  4132     050B  30E6               	movlw	230
  4133     050C  00DE               	movwf	___flmul@b+2
  4134     050D  3066               	movlw	102
  4135     050E  00DD               	movwf	___flmul@b+1
  4136     050F  3066               	movlw	102
  4137     0510  00DC               	movwf	___flmul@b
  4138     0511  0022               	movlb	2	; select bank2
  4139     0512  083B               	movf	(__ReadSensor@Tc+3)^(0+256),w
  4140     0513  0020               	movlb	0	; select bank0
  4141     0514  00E3               	movwf	___flmul@a+3
  4142     0515  0022               	movlb	2	; select bank2
  4143     0516  083A               	movf	(__ReadSensor@Tc+2)^(0+256),w
  4144     0517  0020               	movlb	0	; select bank0
  4145     0518  00E2               	movwf	___flmul@a+2
  4146     0519  0022               	movlb	2	; select bank2
  4147     051A  0839               	movf	(__ReadSensor@Tc+1)^(0+256),w
  4148     051B  0020               	movlb	0	; select bank0
  4149     051C  00E1               	movwf	___flmul@a+1
  4150     051D  0022               	movlb	2	; select bank2
  4151     051E  0838               	movf	__ReadSensor@Tc^(0+256),w
  4152     051F  0020               	movlb	0	; select bank0
  4153     0520  00E0               	movwf	___flmul@a
  4154     0521  3180  204F  3182   	fcall	___flmul
  4155     0524  0020               	movlb	0	; select bank0
  4156     0525  085F               	movf	?___flmul+3,w
  4157     0526  00CF               	movwf	___fladd@a+3
  4158     0527  085E               	movf	?___flmul+2,w
  4159     0528  00CE               	movwf	___fladd@a+2
  4160     0529  085D               	movf	?___flmul+1,w
  4161     052A  00CD               	movwf	___fladd@a+1
  4162     052B  085C               	movf	?___flmul,w
  4163     052C  00CC               	movwf	___fladd@a
  4164     052D  318E  264E  3182   	fcall	___fladd
  4165     0530  0020               	movlb	0	; select bank0
  4166     0531  084B               	movf	?___fladd+3,w
  4167     0532  0022               	movlb	2	; select bank2
  4168     0533  00BF               	movwf	(__ReadSensor@Tf+3)^(0+256)
  4169     0534  0020               	movlb	0	; select bank0
  4170     0535  084A               	movf	?___fladd+2,w
  4171     0536  0022               	movlb	2	; select bank2
  4172     0537  00BE               	movwf	(__ReadSensor@Tf+2)^(0+256)
  4173     0538  0020               	movlb	0	; select bank0
  4174     0539  0849               	movf	?___fladd+1,w
  4175     053A  0022               	movlb	2	; select bank2
  4176     053B  00BD               	movwf	(__ReadSensor@Tf+1)^(0+256)
  4177     053C  0020               	movlb	0	; select bank0
  4178     053D  0848               	movf	?___fladd,w
  4179     053E  0022               	movlb	2	; select bank2
  4180     053F  00BC               	movwf	__ReadSensor@Tf^(0+256)
  4181                           
  4182                           ;main.c: 396:     TEMP = (int)Tf;
  4183     0540  083F               	movf	(__ReadSensor@Tf+3)^(0+256),w
  4184     0541  0020               	movlb	0	; select bank0
  4185     0542  00A3               	movwf	___fltol@f1+3
  4186     0543  0022               	movlb	2	; select bank2
  4187     0544  083E               	movf	(__ReadSensor@Tf+2)^(0+256),w
  4188     0545  0020               	movlb	0	; select bank0
  4189     0546  00A2               	movwf	___fltol@f1+2
  4190     0547  0022               	movlb	2	; select bank2
  4191     0548  083D               	movf	(__ReadSensor@Tf+1)^(0+256),w
  4192     0549  0020               	movlb	0	; select bank0
  4193     054A  00A1               	movwf	___fltol@f1+1
  4194     054B  0022               	movlb	2	; select bank2
  4195     054C  083C               	movf	__ReadSensor@Tf^(0+256),w
  4196     054D  0020               	movlb	0	; select bank0
  4197     054E  00A0               	movwf	___fltol@f1
  4198     054F  3189  2177         	fcall	___fltol
  4199     0551  0020               	movlb	0	; select bank0
  4200     0552  0821               	movf	?___fltol+1,w
  4201     0553  0022               	movlb	2	; select bank2
  4202     0554  00D3               	movwf	(_TEMP+1)^(0+256)
  4203     0555  0020               	movlb	0	; select bank0
  4204     0556  0820               	movf	?___fltol,w
  4205     0557  0022               	movlb	2	; select bank2
  4206     0558  00D2               	movwf	_TEMP^(0+256)
  4207     0559  0008               	return
  4208     055A                     __end_of__ReadSensor:
  4209                           
  4210                           	psect	text5
  4211     055A                     __ptext5:	
  4212 ;; *************** function _my_log *****************
  4213 ;; Defined at:
  4214 ;;		line 4 in file "custom_math.c"
  4215 ;; Parameters:    Size  Location     Type
  4216 ;;  x               4   73[BANK0 ] float 
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;  term            4   27[BANK1 ] float 
  4219 ;;  sum             4   21[BANK1 ] float 
  4220 ;;  result          4   17[BANK1 ] float 
  4221 ;;  n               2   25[BANK1 ] int 
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  4   73[BANK0 ] float 
  4224 ;; Registers used:
  4225 ;;		wreg, status,2, status,0, pclath, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4231 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4232 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  4233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4234 ;;      Totals:         0       4      18       0       0       0       0       0       0       0       0       0       
      +0       0
  4235 ;;Total ram usage:       22 bytes
  4236 ;; Hardware stack levels used: 1
  4237 ;; Hardware stack levels required when called: 7
  4238 ;; This function calls:
  4239 ;;		___fladd
  4240 ;;		___fldiv
  4241 ;;		___flge
  4242 ;;		___flmul
  4243 ;;		___flneg
  4244 ;;		___flsub
  4245 ;;		___xxtofl
  4246 ;; This function is called by:
  4247 ;;		__ReadSensor
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251     055A                     _my_log:	
  4252                           ;psect for function _my_log
  4253                           
  4254                           
  4255                           ;custom_math.c: 5:     if (x <= 0) {
  4256                           
  4257                           ;incstack = 0
  4258                           ; Regs used in _my_log: [wreg+status,2+status,0+pclath+cstack]
  4259     055A  3000               	movlw	0
  4260     055B  0020               	movlb	0	; select bank0
  4261     055C  00A3               	movwf	___flge@ff1+3
  4262     055D  3000               	movlw	0
  4263     055E  00A2               	movwf	___flge@ff1+2
  4264     055F  3000               	movlw	0
  4265     0560  00A1               	movwf	___flge@ff1+1
  4266     0561  3000               	movlw	0
  4267     0562  00A0               	movwf	___flge@ff1
  4268     0563  086C               	movf	my_log@x+3,w
  4269     0564  00A7               	movwf	___flge@ff2+3
  4270     0565  086B               	movf	my_log@x+2,w
  4271     0566  00A6               	movwf	___flge@ff2+2
  4272     0567  086A               	movf	my_log@x+1,w
  4273     0568  00A5               	movwf	___flge@ff2+1
  4274     0569  0869               	movf	my_log@x,w
  4275     056A  00A4               	movwf	___flge@ff2
  4276     056B  318A  2242  3185   	fcall	___flge
  4277     056E  1C03               	btfss	3,0
  4278     056F  2D7A               	goto	l4512
  4279                           
  4280                           ;custom_math.c: 6:         return 0.0f;
  4281     0570  3000               	movlw	0
  4282     0571  0020               	movlb	0	; select bank0
  4283     0572  00EC               	movwf	?_my_log+3
  4284     0573  3000               	movlw	0
  4285     0574  00EB               	movwf	?_my_log+2
  4286     0575  3000               	movlw	0
  4287     0576  00EA               	movwf	?_my_log+1
  4288     0577  3000               	movlw	0
  4289     0578  00E9               	movwf	?_my_log
  4290     0579  0008               	return
  4291     057A                     l4512:
  4292                           
  4293                           ;custom_math.c: 10:     float result = 0.0f;
  4294     057A  3000               	movlw	0
  4295     057B  0021               	movlb	1	; select bank1
  4296     057C  00B4               	movwf	(my_log@result+3)^(0+128)
  4297     057D  3000               	movlw	0
  4298     057E  00B3               	movwf	(my_log@result+2)^(0+128)
  4299     057F  3000               	movlw	0
  4300     0580  00B2               	movwf	(my_log@result+1)^(0+128)
  4301     0581  3000               	movlw	0
  4302     0582                     L1:
  4303     0582  00B1               	movwf	my_log@result^(0+128)
  4304                           
  4305                           ;custom_math.c: 11:     while (x > 1.5f) {
  4306                           
  4307                           ;custom_math.c: 14:     }
  4308     0583  303F               	movlw	63
  4309     0584  0020               	movlb	0	; select bank0
  4310     0585  00A3               	movwf	___flge@ff1+3
  4311     0586  30C0               	movlw	192
  4312     0587  00A2               	movwf	___flge@ff1+2
  4313     0588  3000               	movlw	0
  4314     0589  00A1               	movwf	___flge@ff1+1
  4315     058A  3000               	movlw	0
  4316     058B  00A0               	movwf	___flge@ff1
  4317     058C  086C               	movf	my_log@x+3,w
  4318     058D  00A7               	movwf	___flge@ff2+3
  4319     058E  086B               	movf	my_log@x+2,w
  4320     058F  00A6               	movwf	___flge@ff2+2
  4321     0590  086A               	movf	my_log@x+1,w
  4322     0591  00A5               	movwf	___flge@ff2+1
  4323     0592  0869               	movf	my_log@x,w
  4324     0593  00A4               	movwf	___flge@ff2
  4325     0594  318A  2242  3185   	fcall	___flge
  4326     0597  1803               	btfsc	3,0
  4327     0598  2DE1               	goto	l4516
  4328                           
  4329                           ;custom_math.c: 12:         x /= 2.718281828459045f;
  4330                           
  4331                           ;custom_math.c: 11:     while (x > 1.5f) {
  4332     0599  3040               	movlw	64
  4333     059A  0020               	movlb	0	; select bank0
  4334     059B  00B1               	movwf	___fldiv@a+3
  4335     059C  302D               	movlw	45
  4336     059D  00B0               	movwf	___fldiv@a+2
  4337     059E  30F8               	movlw	248
  4338     059F  00AF               	movwf	___fldiv@a+1
  4339     05A0  3054               	movlw	84
  4340     05A1  00AE               	movwf	___fldiv@a
  4341     05A2  086C               	movf	my_log@x+3,w
  4342     05A3  00B5               	movwf	___fldiv@b+3
  4343     05A4  086B               	movf	my_log@x+2,w
  4344     05A5  00B4               	movwf	___fldiv@b+2
  4345     05A6  086A               	movf	my_log@x+1,w
  4346     05A7  00B3               	movwf	___fldiv@b+1
  4347     05A8  0869               	movf	my_log@x,w
  4348     05A9  00B2               	movwf	___fldiv@b
  4349     05AA  318C  24DE  3185   	fcall	___fldiv
  4350     05AD  0020               	movlb	0	; select bank0
  4351     05AE  0831               	movf	?___fldiv+3,w
  4352     05AF  00EC               	movwf	my_log@x+3
  4353     05B0  0830               	movf	?___fldiv+2,w
  4354     05B1  00EB               	movwf	my_log@x+2
  4355     05B2  082F               	movf	?___fldiv+1,w
  4356     05B3  00EA               	movwf	my_log@x+1
  4357     05B4  082E               	movf	?___fldiv,w
  4358     05B5  00E9               	movwf	my_log@x
  4359                           
  4360                           ;custom_math.c: 13:         result += 1.0f;
  4361     05B6  303F               	movlw	63
  4362     05B7  00CB               	movwf	___fladd@b+3
  4363     05B8  3080               	movlw	128
  4364     05B9  00CA               	movwf	___fladd@b+2
  4365     05BA  3000               	movlw	0
  4366     05BB  00C9               	movwf	___fladd@b+1
  4367     05BC  3000               	movlw	0
  4368     05BD  00C8               	movwf	___fladd@b
  4369     05BE  0021               	movlb	1	; select bank1
  4370     05BF  0834               	movf	(my_log@result+3)^(0+128),w
  4371     05C0  0020               	movlb	0	; select bank0
  4372     05C1  00CF               	movwf	___fladd@a+3
  4373     05C2  0021               	movlb	1	; select bank1
  4374     05C3  0833               	movf	(my_log@result+2)^(0+128),w
  4375     05C4  0020               	movlb	0	; select bank0
  4376     05C5  00CE               	movwf	___fladd@a+2
  4377     05C6  0021               	movlb	1	; select bank1
  4378     05C7  0832               	movf	(my_log@result+1)^(0+128),w
  4379     05C8  0020               	movlb	0	; select bank0
  4380     05C9  00CD               	movwf	___fladd@a+1
  4381     05CA  0021               	movlb	1	; select bank1
  4382     05CB  0831               	movf	my_log@result^(0+128),w
  4383     05CC  0020               	movlb	0	; select bank0
  4384     05CD  00CC               	movwf	___fladd@a
  4385     05CE  318E  264E  3185   	fcall	___fladd
  4386     05D1  0020               	movlb	0	; select bank0
  4387     05D2  084B               	movf	?___fladd+3,w
  4388     05D3  0021               	movlb	1	; select bank1
  4389     05D4  00B4               	movwf	(my_log@result+3)^(0+128)
  4390     05D5  0020               	movlb	0	; select bank0
  4391     05D6  084A               	movf	?___fladd+2,w
  4392     05D7  0021               	movlb	1	; select bank1
  4393     05D8  00B3               	movwf	(my_log@result+2)^(0+128)
  4394     05D9  0020               	movlb	0	; select bank0
  4395     05DA  0849               	movf	?___fladd+1,w
  4396     05DB  0021               	movlb	1	; select bank1
  4397     05DC  00B2               	movwf	(my_log@result+1)^(0+128)
  4398     05DD  0020               	movlb	0	; select bank0
  4399     05DE  0848               	movf	?___fladd,w
  4400     05DF  0021               	movlb	1	; select bank1
  4401     05E0  2D82               	goto	L1
  4402     05E1                     l4516:
  4403                           
  4404                           ;custom_math.c: 16:     x -= 1.0f;
  4405     05E1  303F               	movlw	63
  4406     05E2  0020               	movlb	0	; select bank0
  4407     05E3  00DF               	movwf	___flsub@a+3
  4408     05E4  3080               	movlw	128
  4409     05E5  00DE               	movwf	___flsub@a+2
  4410     05E6  3000               	movlw	0
  4411     05E7  00DD               	movwf	___flsub@a+1
  4412     05E8  3000               	movlw	0
  4413     05E9  00DC               	movwf	___flsub@a
  4414     05EA  086C               	movf	my_log@x+3,w
  4415     05EB  00E3               	movwf	___flsub@b+3
  4416     05EC  086B               	movf	my_log@x+2,w
  4417     05ED  00E2               	movwf	___flsub@b+2
  4418     05EE  086A               	movf	my_log@x+1,w
  4419     05EF  00E1               	movwf	___flsub@b+1
  4420     05F0  0869               	movf	my_log@x,w
  4421     05F1  00E0               	movwf	___flsub@b
  4422     05F2  3188  203A  3185   	fcall	___flsub
  4423     05F5  0020               	movlb	0	; select bank0
  4424     05F6  085F               	movf	?___flsub+3,w
  4425     05F7  00EC               	movwf	my_log@x+3
  4426     05F8  085E               	movf	?___flsub+2,w
  4427     05F9  00EB               	movwf	my_log@x+2
  4428     05FA  085D               	movf	?___flsub+1,w
  4429     05FB  00EA               	movwf	my_log@x+1
  4430     05FC  085C               	movf	?___flsub,w
  4431     05FD  00E9               	movwf	my_log@x
  4432                           
  4433                           ;custom_math.c: 19:     float term = x;
  4434     05FE  086C               	movf	my_log@x+3,w
  4435     05FF  0021               	movlb	1	; select bank1
  4436     0600  00BE               	movwf	(my_log@term+3)^(0+128)
  4437     0601  0020               	movlb	0	; select bank0
  4438     0602  086B               	movf	my_log@x+2,w
  4439     0603  0021               	movlb	1	; select bank1
  4440     0604  00BD               	movwf	(my_log@term+2)^(0+128)
  4441     0605  0020               	movlb	0	; select bank0
  4442     0606  086A               	movf	my_log@x+1,w
  4443     0607  0021               	movlb	1	; select bank1
  4444     0608  00BC               	movwf	(my_log@term+1)^(0+128)
  4445     0609  0020               	movlb	0	; select bank0
  4446     060A  0869               	movf	my_log@x,w
  4447     060B  0021               	movlb	1	; select bank1
  4448     060C  00BB               	movwf	my_log@term^(0+128)
  4449                           
  4450                           ;custom_math.c: 20:     float sum = 0.0f;
  4451     060D  3000               	movlw	0
  4452     060E  00B8               	movwf	(my_log@sum+3)^(0+128)
  4453     060F  3000               	movlw	0
  4454     0610  00B7               	movwf	(my_log@sum+2)^(0+128)
  4455     0611  3000               	movlw	0
  4456     0612  00B6               	movwf	(my_log@sum+1)^(0+128)
  4457     0613  3000               	movlw	0
  4458     0614  00B5               	movwf	my_log@sum^(0+128)
  4459                           
  4460                           ;custom_math.c: 21:     int n = 1;
  4461     0615  3001               	movlw	1
  4462     0616  00B9               	movwf	my_log@n^(0+128)
  4463     0617  3000               	movlw	0
  4464     0618  00BA               	movwf	(my_log@n^(0+128)+1)
  4465     0619                     l4532:	
  4466                           ;custom_math.c: 23:     while (term > 1e-7f || term < -1e-7f) {
  4467                           
  4468                           
  4469                           ;custom_math.c: 23:     while (term > 1e-7f || term < -1e-7f) {
  4470     0619  3033               	movlw	51
  4471     061A  0020               	movlb	0	; select bank0
  4472     061B  00A3               	movwf	___flge@ff1+3
  4473     061C  30D6               	movlw	214
  4474     061D  00A2               	movwf	___flge@ff1+2
  4475     061E  30BF               	movlw	191
  4476     061F  00A1               	movwf	___flge@ff1+1
  4477     0620  3095               	movlw	149
  4478     0621  00A0               	movwf	___flge@ff1
  4479     0622  0021               	movlb	1	; select bank1
  4480     0623  083E               	movf	(my_log@term+3)^(0+128),w
  4481     0624  0020               	movlb	0	; select bank0
  4482     0625  00A7               	movwf	___flge@ff2+3
  4483     0626  0021               	movlb	1	; select bank1
  4484     0627  083D               	movf	(my_log@term+2)^(0+128),w
  4485     0628  0020               	movlb	0	; select bank0
  4486     0629  00A6               	movwf	___flge@ff2+2
  4487     062A  0021               	movlb	1	; select bank1
  4488     062B  083C               	movf	(my_log@term+1)^(0+128),w
  4489     062C  0020               	movlb	0	; select bank0
  4490     062D  00A5               	movwf	___flge@ff2+1
  4491     062E  0021               	movlb	1	; select bank1
  4492     062F  083B               	movf	my_log@term^(0+128),w
  4493     0630  0020               	movlb	0	; select bank0
  4494     0631  00A4               	movwf	___flge@ff2
  4495     0632  318A  2242  3185   	fcall	___flge
  4496     0635  1803               	btfsc	3,0
  4497     0636  2F09               	goto	l4534
  4498     0637                     l4524:
  4499                           
  4500                           ;custom_math.c: 24:         sum += term;
  4501     0637  0021               	movlb	1	; select bank1
  4502     0638  083E               	movf	(my_log@term+3)^(0+128),w
  4503     0639  0020               	movlb	0	; select bank0
  4504     063A  00CB               	movwf	___fladd@b+3
  4505     063B  0021               	movlb	1	; select bank1
  4506     063C  083D               	movf	(my_log@term+2)^(0+128),w
  4507     063D  0020               	movlb	0	; select bank0
  4508     063E  00CA               	movwf	___fladd@b+2
  4509     063F  0021               	movlb	1	; select bank1
  4510     0640  083C               	movf	(my_log@term+1)^(0+128),w
  4511     0641  0020               	movlb	0	; select bank0
  4512     0642  00C9               	movwf	___fladd@b+1
  4513     0643  0021               	movlb	1	; select bank1
  4514     0644  083B               	movf	my_log@term^(0+128),w
  4515     0645  0020               	movlb	0	; select bank0
  4516     0646  00C8               	movwf	___fladd@b
  4517     0647  0021               	movlb	1	; select bank1
  4518     0648  0838               	movf	(my_log@sum+3)^(0+128),w
  4519     0649  0020               	movlb	0	; select bank0
  4520     064A  00CF               	movwf	___fladd@a+3
  4521     064B  0021               	movlb	1	; select bank1
  4522     064C  0837               	movf	(my_log@sum+2)^(0+128),w
  4523     064D  0020               	movlb	0	; select bank0
  4524     064E  00CE               	movwf	___fladd@a+2
  4525     064F  0021               	movlb	1	; select bank1
  4526     0650  0836               	movf	(my_log@sum+1)^(0+128),w
  4527     0651  0020               	movlb	0	; select bank0
  4528     0652  00CD               	movwf	___fladd@a+1
  4529     0653  0021               	movlb	1	; select bank1
  4530     0654  0835               	movf	my_log@sum^(0+128),w
  4531     0655  0020               	movlb	0	; select bank0
  4532     0656  00CC               	movwf	___fladd@a
  4533     0657  318E  264E  3185   	fcall	___fladd
  4534     065A  0020               	movlb	0	; select bank0
  4535     065B  084B               	movf	?___fladd+3,w
  4536     065C  0021               	movlb	1	; select bank1
  4537     065D  00B8               	movwf	(my_log@sum+3)^(0+128)
  4538     065E  0020               	movlb	0	; select bank0
  4539     065F  084A               	movf	?___fladd+2,w
  4540     0660  0021               	movlb	1	; select bank1
  4541     0661  00B7               	movwf	(my_log@sum+2)^(0+128)
  4542     0662  0020               	movlb	0	; select bank0
  4543     0663  0849               	movf	?___fladd+1,w
  4544     0664  0021               	movlb	1	; select bank1
  4545     0665  00B6               	movwf	(my_log@sum+1)^(0+128)
  4546     0666  0020               	movlb	0	; select bank0
  4547     0667  0848               	movf	?___fladd,w
  4548     0668  0021               	movlb	1	; select bank1
  4549     0669  00B5               	movwf	my_log@sum^(0+128)
  4550                           
  4551                           ;custom_math.c: 25:         n++;
  4552     066A  3001               	movlw	1
  4553     066B  07B9               	addwf	my_log@n^(0+128),f
  4554     066C  3000               	movlw	0
  4555     066D  3DBA               	addwfc	(my_log@n+1)^(0+128),f
  4556                           
  4557                           ;custom_math.c: 26:         term *= -x * (n - 1) / n;
  4558     066E  0839               	movf	my_log@n^(0+128),w
  4559     066F  3EFF               	addlw	255
  4560     0670  0020               	movlb	0	; select bank0
  4561     0671  00A0               	movwf	___xxtofl@val
  4562     0672  30FF               	movlw	255
  4563     0673  0021               	movlb	1	; select bank1
  4564     0674  3D3A               	addwfc	(my_log@n+1)^(0+128),w
  4565     0675  0020               	movlb	0	; select bank0
  4566     0676  00A1               	movwf	___xxtofl@val+1
  4567     0677  01A2               	clrf	___xxtofl@val+2
  4568     0678  1BA1               	btfsc	___xxtofl@val+1,7
  4569     0679  03A2               	decf	___xxtofl@val+2,f
  4570     067A  0822               	movf	___xxtofl@val+2,w
  4571     067B  00A3               	movwf	___xxtofl@val+3
  4572     067C  3001               	movlw	1
  4573     067D  318A  22BE  3185   	fcall	___xxtofl
  4574     0680  0020               	movlb	0	; select bank0
  4575     0681  0823               	movf	?___xxtofl+3,w
  4576     0682  00E3               	movwf	___flmul@a+3
  4577     0683  0822               	movf	?___xxtofl+2,w
  4578     0684  00E2               	movwf	___flmul@a+2
  4579     0685  0821               	movf	?___xxtofl+1,w
  4580     0686  00E1               	movwf	___flmul@a+1
  4581     0687  0820               	movf	?___xxtofl,w
  4582     0688  00E0               	movwf	___flmul@a
  4583     0689  086C               	movf	my_log@x+3,w
  4584     068A  00A3               	movwf	___flneg@f1+3
  4585     068B  086B               	movf	my_log@x+2,w
  4586     068C  00A2               	movwf	___flneg@f1+2
  4587     068D  086A               	movf	my_log@x+1,w
  4588     068E  00A1               	movwf	___flneg@f1+1
  4589     068F  0869               	movf	my_log@x,w
  4590     0690  00A0               	movwf	___flneg@f1
  4591     0691  3197  274A  3185   	fcall	___flneg
  4592     0694  0020               	movlb	0	; select bank0
  4593     0695  0823               	movf	?___flneg+3,w
  4594     0696  00DF               	movwf	___flmul@b+3
  4595     0697  0822               	movf	?___flneg+2,w
  4596     0698  00DE               	movwf	___flmul@b+2
  4597     0699  0821               	movf	?___flneg+1,w
  4598     069A  00DD               	movwf	___flmul@b+1
  4599     069B  0820               	movf	?___flneg,w
  4600     069C  00DC               	movwf	___flmul@b
  4601     069D  3180  204F  3185   	fcall	___flmul
  4602     06A0  0020               	movlb	0	; select bank0
  4603     06A1  085F               	movf	?___flmul+3,w
  4604     06A2  00B5               	movwf	___fldiv@b+3
  4605     06A3  085E               	movf	?___flmul+2,w
  4606     06A4  00B4               	movwf	___fldiv@b+2
  4607     06A5  085D               	movf	?___flmul+1,w
  4608     06A6  00B3               	movwf	___fldiv@b+1
  4609     06A7  085C               	movf	?___flmul,w
  4610     06A8  00B2               	movwf	___fldiv@b
  4611     06A9  0021               	movlb	1	; select bank1
  4612     06AA  0839               	movf	my_log@n^(0+128),w
  4613     06AB  0020               	movlb	0	; select bank0
  4614     06AC  00A0               	movwf	___xxtofl@val
  4615     06AD  0021               	movlb	1	; select bank1
  4616     06AE  083A               	movf	(my_log@n+1)^(0+128),w
  4617     06AF  0020               	movlb	0	; select bank0
  4618     06B0  00A1               	movwf	___xxtofl@val+1
  4619     06B1  0D89               	rlf	9,f
  4620     06B2  3B89               	subwfb	9,f
  4621     06B3  0989               	comf	9,f
  4622     06B4  00A2               	movwf	___xxtofl@val+2
  4623     06B5  00A3               	movwf	___xxtofl@val+3
  4624     06B6  3001               	movlw	1
  4625     06B7  318A  22BE  3185   	fcall	___xxtofl
  4626     06BA  0020               	movlb	0	; select bank0
  4627     06BB  0823               	movf	?___xxtofl+3,w
  4628     06BC  00B1               	movwf	___fldiv@a+3
  4629     06BD  0822               	movf	?___xxtofl+2,w
  4630     06BE  00B0               	movwf	___fldiv@a+2
  4631     06BF  0821               	movf	?___xxtofl+1,w
  4632     06C0  00AF               	movwf	___fldiv@a+1
  4633     06C1  0820               	movf	?___xxtofl,w
  4634     06C2  00AE               	movwf	___fldiv@a
  4635     06C3  318C  24DE  3185   	fcall	___fldiv
  4636     06C6  0020               	movlb	0	; select bank0
  4637     06C7  0831               	movf	?___fldiv+3,w
  4638     06C8  0021               	movlb	1	; select bank1
  4639     06C9  00B0               	movwf	(_my_log$1850+3)^(0+128)
  4640     06CA  0020               	movlb	0	; select bank0
  4641     06CB  0830               	movf	?___fldiv+2,w
  4642     06CC  0021               	movlb	1	; select bank1
  4643     06CD  00AF               	movwf	(_my_log$1850+2)^(0+128)
  4644     06CE  0020               	movlb	0	; select bank0
  4645     06CF  082F               	movf	?___fldiv+1,w
  4646     06D0  0021               	movlb	1	; select bank1
  4647     06D1  00AE               	movwf	(_my_log$1850+1)^(0+128)
  4648     06D2  0020               	movlb	0	; select bank0
  4649     06D3  082E               	movf	?___fldiv,w
  4650     06D4  0021               	movlb	1	; select bank1
  4651     06D5  00AD               	movwf	_my_log$1850^(0+128)
  4652                           
  4653                           ;custom_math.c: 26:         term *= -x * (n - 1) / n;
  4654     06D6  0830               	movf	(_my_log$1850+3)^(0+128),w
  4655     06D7  0020               	movlb	0	; select bank0
  4656     06D8  00DF               	movwf	___flmul@b+3
  4657     06D9  0021               	movlb	1	; select bank1
  4658     06DA  082F               	movf	(_my_log$1850+2)^(0+128),w
  4659     06DB  0020               	movlb	0	; select bank0
  4660     06DC  00DE               	movwf	___flmul@b+2
  4661     06DD  0021               	movlb	1	; select bank1
  4662     06DE  082E               	movf	(_my_log$1850+1)^(0+128),w
  4663     06DF  0020               	movlb	0	; select bank0
  4664     06E0  00DD               	movwf	___flmul@b+1
  4665     06E1  0021               	movlb	1	; select bank1
  4666     06E2  082D               	movf	_my_log$1850^(0+128),w
  4667     06E3  0020               	movlb	0	; select bank0
  4668     06E4  00DC               	movwf	___flmul@b
  4669     06E5  0021               	movlb	1	; select bank1
  4670     06E6  083E               	movf	(my_log@term+3)^(0+128),w
  4671     06E7  0020               	movlb	0	; select bank0
  4672     06E8  00E3               	movwf	___flmul@a+3
  4673     06E9  0021               	movlb	1	; select bank1
  4674     06EA  083D               	movf	(my_log@term+2)^(0+128),w
  4675     06EB  0020               	movlb	0	; select bank0
  4676     06EC  00E2               	movwf	___flmul@a+2
  4677     06ED  0021               	movlb	1	; select bank1
  4678     06EE  083C               	movf	(my_log@term+1)^(0+128),w
  4679     06EF  0020               	movlb	0	; select bank0
  4680     06F0  00E1               	movwf	___flmul@a+1
  4681     06F1  0021               	movlb	1	; select bank1
  4682     06F2  083B               	movf	my_log@term^(0+128),w
  4683     06F3  0020               	movlb	0	; select bank0
  4684     06F4  00E0               	movwf	___flmul@a
  4685     06F5  3180  204F  3185   	fcall	___flmul
  4686     06F8  0020               	movlb	0	; select bank0
  4687     06F9  085F               	movf	?___flmul+3,w
  4688     06FA  0021               	movlb	1	; select bank1
  4689     06FB  00BE               	movwf	(my_log@term+3)^(0+128)
  4690     06FC  0020               	movlb	0	; select bank0
  4691     06FD  085E               	movf	?___flmul+2,w
  4692     06FE  0021               	movlb	1	; select bank1
  4693     06FF  00BD               	movwf	(my_log@term+2)^(0+128)
  4694     0700  0020               	movlb	0	; select bank0
  4695     0701  085D               	movf	?___flmul+1,w
  4696     0702  0021               	movlb	1	; select bank1
  4697     0703  00BC               	movwf	(my_log@term+1)^(0+128)
  4698     0704  0020               	movlb	0	; select bank0
  4699     0705  085C               	movf	?___flmul,w
  4700     0706  0021               	movlb	1	; select bank1
  4701     0707  00BB               	movwf	my_log@term^(0+128)
  4702     0708  2E19               	goto	l4532
  4703     0709                     l4534:
  4704     0709  0021               	movlb	1	; select bank1
  4705     070A  083E               	movf	(my_log@term+3)^(0+128),w
  4706     070B  0020               	movlb	0	; select bank0
  4707     070C  00A3               	movwf	___flge@ff1+3
  4708     070D  0021               	movlb	1	; select bank1
  4709     070E  083D               	movf	(my_log@term+2)^(0+128),w
  4710     070F  0020               	movlb	0	; select bank0
  4711     0710  00A2               	movwf	___flge@ff1+2
  4712     0711  0021               	movlb	1	; select bank1
  4713     0712  083C               	movf	(my_log@term+1)^(0+128),w
  4714     0713  0020               	movlb	0	; select bank0
  4715     0714  00A1               	movwf	___flge@ff1+1
  4716     0715  0021               	movlb	1	; select bank1
  4717     0716  083B               	movf	my_log@term^(0+128),w
  4718     0717  0020               	movlb	0	; select bank0
  4719     0718  00A0               	movwf	___flge@ff1
  4720     0719  30B3               	movlw	179
  4721     071A  00A7               	movwf	___flge@ff2+3
  4722     071B  30D6               	movlw	214
  4723     071C  00A6               	movwf	___flge@ff2+2
  4724     071D  30BF               	movlw	191
  4725     071E  00A5               	movwf	___flge@ff2+1
  4726     071F  3095               	movlw	149
  4727     0720  00A4               	movwf	___flge@ff2
  4728     0721  318A  2242  3185   	fcall	___flge
  4729     0724  1C03               	btfss	3,0
  4730     0725  2E37               	goto	l4524
  4731                           
  4732                           ;custom_math.c: 29:     return result + sum;
  4733     0726  0021               	movlb	1	; select bank1
  4734     0727  0838               	movf	(my_log@sum+3)^(0+128),w
  4735     0728  0020               	movlb	0	; select bank0
  4736     0729  00CB               	movwf	___fladd@b+3
  4737     072A  0021               	movlb	1	; select bank1
  4738     072B  0837               	movf	(my_log@sum+2)^(0+128),w
  4739     072C  0020               	movlb	0	; select bank0
  4740     072D  00CA               	movwf	___fladd@b+2
  4741     072E  0021               	movlb	1	; select bank1
  4742     072F  0836               	movf	(my_log@sum+1)^(0+128),w
  4743     0730  0020               	movlb	0	; select bank0
  4744     0731  00C9               	movwf	___fladd@b+1
  4745     0732  0021               	movlb	1	; select bank1
  4746     0733  0835               	movf	my_log@sum^(0+128),w
  4747     0734  0020               	movlb	0	; select bank0
  4748     0735  00C8               	movwf	___fladd@b
  4749     0736  0021               	movlb	1	; select bank1
  4750     0737  0834               	movf	(my_log@result+3)^(0+128),w
  4751     0738  0020               	movlb	0	; select bank0
  4752     0739  00CF               	movwf	___fladd@a+3
  4753     073A  0021               	movlb	1	; select bank1
  4754     073B  0833               	movf	(my_log@result+2)^(0+128),w
  4755     073C  0020               	movlb	0	; select bank0
  4756     073D  00CE               	movwf	___fladd@a+2
  4757     073E  0021               	movlb	1	; select bank1
  4758     073F  0832               	movf	(my_log@result+1)^(0+128),w
  4759     0740  0020               	movlb	0	; select bank0
  4760     0741  00CD               	movwf	___fladd@a+1
  4761     0742  0021               	movlb	1	; select bank1
  4762     0743  0831               	movf	my_log@result^(0+128),w
  4763     0744  0020               	movlb	0	; select bank0
  4764     0745  00CC               	movwf	___fladd@a
  4765     0746  318E  264E         	fcall	___fladd
  4766     0748  0020               	movlb	0	; select bank0
  4767     0749  084B               	movf	?___fladd+3,w
  4768     074A  00EC               	movwf	?_my_log+3
  4769     074B  084A               	movf	?___fladd+2,w
  4770     074C  00EB               	movwf	?_my_log+2
  4771     074D  0849               	movf	?___fladd+1,w
  4772     074E  00EA               	movwf	?_my_log+1
  4773     074F  0848               	movf	?___fladd,w
  4774     0750  00E9               	movwf	?_my_log
  4775     0751  0008               	return
  4776     0752                     __end_of_my_log:
  4777                           
  4778                           	psect	text6
  4779     0ABE                     __ptext6:	
  4780 ;; *************** function ___xxtofl *****************
  4781 ;; Defined at:
  4782 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;  sign            1    wreg     unsigned char 
  4785 ;;  val             4    0[BANK0 ] long 
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;  sign            1    8[BANK0 ] unsigned char 
  4788 ;;  arg             4   10[BANK0 ] unsigned long 
  4789 ;;  exp             1    9[BANK0 ] unsigned char 
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  4    0[BANK0 ] unsigned char 
  4792 ;; Registers used:
  4793 ;;		wreg, status,2, status,0
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4799 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4800 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4801 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4802 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4803 ;;Total ram usage:       14 bytes
  4804 ;; Hardware stack levels used: 1
  4805 ;; Hardware stack levels required when called: 5
  4806 ;; This function calls:
  4807 ;;		Nothing
  4808 ;; This function is called by:
  4809 ;;		__ReadSensor
  4810 ;;		_my_log
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           
  4814     0ABE                     ___xxtofl:	
  4815                           ;psect for function ___xxtofl
  4816                           
  4817                           
  4818                           ;incstack = 0
  4819                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4820                           ;___xxtofl@sign stored from wreg
  4821     0ABE  0020               	movlb	0	; select bank0
  4822     0ABF  00A8               	movwf	___xxtofl@sign
  4823     0AC0  0828               	movf	___xxtofl@sign,w
  4824     0AC1  1D03               	btfss	3,2
  4825     0AC2  1FA3               	btfss	___xxtofl@val+3,7
  4826     0AC3  2AD4               	goto	l4378
  4827     0AC4  0920               	comf	___xxtofl@val,w
  4828     0AC5  00AA               	movwf	___xxtofl@arg
  4829     0AC6  0921               	comf	___xxtofl@val+1,w
  4830     0AC7  00AB               	movwf	___xxtofl@arg+1
  4831     0AC8  0922               	comf	___xxtofl@val+2,w
  4832     0AC9  00AC               	movwf	___xxtofl@arg+2
  4833     0ACA  0923               	comf	___xxtofl@val+3,w
  4834     0ACB  00AD               	movwf	___xxtofl@arg+3
  4835     0ACC  0AAA               	incf	___xxtofl@arg,f
  4836     0ACD  1903               	skipnz
  4837     0ACE  0AAB               	incf	___xxtofl@arg+1,f
  4838     0ACF  1903               	skipnz
  4839     0AD0  0AAC               	incf	___xxtofl@arg+2,f
  4840     0AD1  1903               	skipnz
  4841     0AD2  0AAD               	incf	___xxtofl@arg+3,f
  4842     0AD3  2ADC               	goto	l1273
  4843     0AD4                     l4378:
  4844     0AD4  0823               	movf	___xxtofl@val+3,w
  4845     0AD5  00AD               	movwf	___xxtofl@arg+3
  4846     0AD6  0822               	movf	___xxtofl@val+2,w
  4847     0AD7  00AC               	movwf	___xxtofl@arg+2
  4848     0AD8  0821               	movf	___xxtofl@val+1,w
  4849     0AD9  00AB               	movwf	___xxtofl@arg+1
  4850     0ADA  0820               	movf	___xxtofl@val,w
  4851     0ADB  00AA               	movwf	___xxtofl@arg
  4852     0ADC                     l1273:
  4853     0ADC  0823               	movf	___xxtofl@val+3,w
  4854     0ADD  0422               	iorwf	___xxtofl@val+2,w
  4855     0ADE  0421               	iorwf	___xxtofl@val+1,w
  4856     0ADF  0420               	iorwf	___xxtofl@val,w
  4857     0AE0  1D03               	skipz
  4858     0AE1  2AEB               	goto	l4384
  4859     0AE2  3000               	movlw	0
  4860     0AE3  00A3               	movwf	?___xxtofl+3
  4861     0AE4  3000               	movlw	0
  4862     0AE5  00A2               	movwf	?___xxtofl+2
  4863     0AE6  3000               	movlw	0
  4864     0AE7  00A1               	movwf	?___xxtofl+1
  4865     0AE8  3000               	movlw	0
  4866     0AE9  00A0               	movwf	?___xxtofl
  4867     0AEA  0008               	return
  4868     0AEB                     l4384:
  4869     0AEB  3096               	movlw	150
  4870     0AEC  00A9               	movwf	___xxtofl@exp
  4871     0AED                     l4388:
  4872     0AED  30FE               	movlw	254
  4873     0AEE  052D               	andwf	___xxtofl@arg+3,w
  4874     0AEF  1903               	btfsc	3,2
  4875     0AF0  2B10               	goto	l1279
  4876     0AF1  3001               	movlw	1
  4877     0AF2  00A4               	movwf	??___xxtofl
  4878     0AF3  0824               	movf	??___xxtofl,w
  4879     0AF4  07A9               	addwf	___xxtofl@exp,f
  4880     0AF5  3001               	movlw	1
  4881     0AF6                     u5445:
  4882     0AF6  36AD               	lsrf	___xxtofl@arg+3,f
  4883     0AF7  0CAC               	rrf	___xxtofl@arg+2,f
  4884     0AF8  0CAB               	rrf	___xxtofl@arg+1,f
  4885     0AF9  0CAA               	rrf	___xxtofl@arg,f
  4886     0AFA  0B89               	decfsz	9,f
  4887     0AFB  2AF6               	goto	u5445
  4888     0AFC  2AED               	goto	l4388
  4889     0AFD                     l4390:
  4890     0AFD  3001               	movlw	1
  4891     0AFE  00A4               	movwf	??___xxtofl
  4892     0AFF  0824               	movf	??___xxtofl,w
  4893     0B00  07A9               	addwf	___xxtofl@exp,f
  4894     0B01  3001               	movlw	1
  4895     0B02  07AA               	addwf	___xxtofl@arg,f
  4896     0B03  3000               	movlw	0
  4897     0B04  3DAB               	addwfc	___xxtofl@arg+1,f
  4898     0B05  3000               	movlw	0
  4899     0B06  3DAC               	addwfc	___xxtofl@arg+2,f
  4900     0B07  3000               	movlw	0
  4901     0B08  3DAD               	addwfc	___xxtofl@arg+3,f
  4902     0B09  3001               	movlw	1
  4903     0B0A                     u5465:
  4904     0B0A  36AD               	lsrf	___xxtofl@arg+3,f
  4905     0B0B  0CAC               	rrf	___xxtofl@arg+2,f
  4906     0B0C  0CAB               	rrf	___xxtofl@arg+1,f
  4907     0B0D  0CAA               	rrf	___xxtofl@arg,f
  4908     0B0E  0B89               	decfsz	9,f
  4909     0B0F  2B0A               	goto	u5465
  4910     0B10                     l1279:
  4911     0B10  30FF               	movlw	255
  4912     0B11  052D               	andwf	___xxtofl@arg+3,w
  4913     0B12  1903               	btfsc	3,2
  4914     0B13  2B22               	goto	l4398
  4915     0B14  2AFD               	goto	l4390
  4916     0B15                     l4400:
  4917     0B15  3002               	movlw	2
  4918     0B16  0229               	subwf	___xxtofl@exp,w
  4919     0B17  1C03               	btfss	3,0
  4920     0B18  2B24               	goto	l1286
  4921     0B19  3001               	movlw	1
  4922     0B1A  02A9               	subwf	___xxtofl@exp,f
  4923     0B1B  3001               	movlw	1
  4924     0B1C                     u5485:
  4925     0B1C  35AA               	lslf	___xxtofl@arg,f
  4926     0B1D  0DAB               	rlf	___xxtofl@arg+1,f
  4927     0B1E  0DAC               	rlf	___xxtofl@arg+2,f
  4928     0B1F  0DAD               	rlf	___xxtofl@arg+3,f
  4929     0B20  0B89               	decfsz	9,f
  4930     0B21  2B1C               	goto	u5485
  4931     0B22                     l4398:
  4932     0B22  1FAC               	btfss	___xxtofl@arg+2,7
  4933     0B23  2B15               	goto	l4400
  4934     0B24                     l1286:
  4935     0B24  1829               	btfsc	___xxtofl@exp,0
  4936     0B25  2B2E               	goto	l1287
  4937     0B26  30FF               	movlw	255
  4938     0B27  05AA               	andwf	___xxtofl@arg,f
  4939     0B28  30FF               	movlw	255
  4940     0B29  05AB               	andwf	___xxtofl@arg+1,f
  4941     0B2A  307F               	movlw	127
  4942     0B2B  05AC               	andwf	___xxtofl@arg+2,f
  4943     0B2C  30FF               	movlw	255
  4944     0B2D  05AD               	andwf	___xxtofl@arg+3,f
  4945     0B2E                     l1287:
  4946     0B2E  1003               	clrc
  4947     0B2F  0CA9               	rrf	___xxtofl@exp,f
  4948     0B30  0829               	movf	___xxtofl@exp,w
  4949     0B31  00A4               	movwf	??___xxtofl
  4950     0B32  01A5               	clrf	??___xxtofl+1
  4951     0B33  01A6               	clrf	??___xxtofl+2
  4952     0B34  01A7               	clrf	??___xxtofl+3
  4953     0B35  3018               	movlw	24
  4954     0B36                     u5525:
  4955     0B36  35A4               	lslf	??___xxtofl,f
  4956     0B37  0DA5               	rlf	??___xxtofl+1,f
  4957     0B38  0DA6               	rlf	??___xxtofl+2,f
  4958     0B39  0DA7               	rlf	??___xxtofl+3,f
  4959     0B3A  0B89               	decfsz	9,f
  4960     0B3B  2B36               	goto	u5525
  4961     0B3C  0824               	movf	??___xxtofl,w
  4962     0B3D  04AA               	iorwf	___xxtofl@arg,f
  4963     0B3E  0825               	movf	??___xxtofl+1,w
  4964     0B3F  04AB               	iorwf	___xxtofl@arg+1,f
  4965     0B40  0826               	movf	??___xxtofl+2,w
  4966     0B41  04AC               	iorwf	___xxtofl@arg+2,f
  4967     0B42  0827               	movf	??___xxtofl+3,w
  4968     0B43  04AD               	iorwf	___xxtofl@arg+3,f
  4969     0B44  0828               	movf	___xxtofl@sign,w
  4970     0B45  1D03               	btfss	3,2
  4971     0B46  1FA3               	btfss	___xxtofl@val+3,7
  4972     0B47  2B49               	goto	l4412
  4973     0B48  17AD               	bsf	___xxtofl@arg+3,7
  4974     0B49                     l4412:
  4975     0B49  082D               	movf	___xxtofl@arg+3,w
  4976     0B4A  00A3               	movwf	?___xxtofl+3
  4977     0B4B  082C               	movf	___xxtofl@arg+2,w
  4978     0B4C  00A2               	movwf	?___xxtofl+2
  4979     0B4D  082B               	movf	___xxtofl@arg+1,w
  4980     0B4E  00A1               	movwf	?___xxtofl+1
  4981     0B4F  082A               	movf	___xxtofl@arg,w
  4982     0B50  00A0               	movwf	?___xxtofl
  4983     0B51  0008               	return
  4984     0B52                     __end_of___xxtofl:
  4985                           
  4986                           	psect	text7
  4987     083A                     __ptext7:	
  4988 ;; *************** function ___flsub *****************
  4989 ;; Defined at:
  4990 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  4991 ;; Parameters:    Size  Location     Type
  4992 ;;  a               4   60[BANK0 ] unsigned char 
  4993 ;;  b               4   64[BANK0 ] unsigned char 
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;		None
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  4   60[BANK0 ] unsigned char 
  4998 ;; Registers used:
  4999 ;;		wreg, status,2, status,0, pclath, cstack
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5005 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5008 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5009 ;;Total ram usage:        8 bytes
  5010 ;; Hardware stack levels used: 1
  5011 ;; Hardware stack levels required when called: 6
  5012 ;; This function calls:
  5013 ;;		___fladd
  5014 ;; This function is called by:
  5015 ;;		_my_log
  5016 ;; This function uses a non-reentrant model
  5017 ;;
  5018                           
  5019     083A                     ___flsub:	
  5020                           ;psect for function ___flsub
  5021                           
  5022                           
  5023                           ;incstack = 0
  5024                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  5025     083A  3080               	movlw	128
  5026     083B  0020               	movlb	0	; select bank0
  5027     083C  06DF               	xorwf	___flsub@a+3,f
  5028     083D  0863               	movf	___flsub@b+3,w
  5029     083E  00CB               	movwf	___fladd@b+3
  5030     083F  0862               	movf	___flsub@b+2,w
  5031     0840  00CA               	movwf	___fladd@b+2
  5032     0841  0861               	movf	___flsub@b+1,w
  5033     0842  00C9               	movwf	___fladd@b+1
  5034     0843  0860               	movf	___flsub@b,w
  5035     0844  00C8               	movwf	___fladd@b
  5036     0845  085F               	movf	___flsub@a+3,w
  5037     0846  00CF               	movwf	___fladd@a+3
  5038     0847  085E               	movf	___flsub@a+2,w
  5039     0848  00CE               	movwf	___fladd@a+2
  5040     0849  085D               	movf	___flsub@a+1,w
  5041     084A  00CD               	movwf	___fladd@a+1
  5042     084B  085C               	movf	___flsub@a,w
  5043     084C  00CC               	movwf	___fladd@a
  5044     084D  318E  264E         	fcall	___fladd
  5045     084F  0020               	movlb	0	; select bank0
  5046     0850  084B               	movf	?___fladd+3,w
  5047     0851  00DF               	movwf	?___flsub+3
  5048     0852  084A               	movf	?___fladd+2,w
  5049     0853  00DE               	movwf	?___flsub+2
  5050     0854  0849               	movf	?___fladd+1,w
  5051     0855  00DD               	movwf	?___flsub+1
  5052     0856  0848               	movf	?___fladd,w
  5053     0857  00DC               	movwf	?___flsub
  5054     0858  0008               	return
  5055     0859                     __end_of___flsub:
  5056                           
  5057                           	psect	text8
  5058     0E4E                     __ptext8:	
  5059 ;; *************** function ___fladd *****************
  5060 ;; Defined at:
  5061 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  5062 ;; Parameters:    Size  Location     Type
  5063 ;;  b               4   40[BANK0 ] unsigned char 
  5064 ;;  a               4   44[BANK0 ] unsigned char 
  5065 ;; Auto vars:     Size  Location     Type
  5066 ;;  grs             1   59[BANK0 ] unsigned char 
  5067 ;;  bexp            1   58[BANK0 ] unsigned char 
  5068 ;;  aexp            1   57[BANK0 ] unsigned char 
  5069 ;;  signs           1   56[BANK0 ] unsigned char 
  5070 ;; Return value:  Size  Location     Type
  5071 ;;                  4   40[BANK0 ] unsigned char 
  5072 ;; Registers used:
  5073 ;;		wreg, status,2, status,0
  5074 ;; Tracked objects:
  5075 ;;		On entry : 0/0
  5076 ;;		On exit  : 0/0
  5077 ;;		Unchanged: 0/0
  5078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5079 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5080 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5081 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5082 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5083 ;;Total ram usage:       20 bytes
  5084 ;; Hardware stack levels used: 1
  5085 ;; Hardware stack levels required when called: 5
  5086 ;; This function calls:
  5087 ;;		Nothing
  5088 ;; This function is called by:
  5089 ;;		__ReadSensor
  5090 ;;		_my_log
  5091 ;;		___flsub
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095     0E4E                     ___fladd:	
  5096                           ;psect for function ___fladd
  5097                           
  5098                           
  5099                           ;incstack = 0
  5100                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  5101     0E4E  0020               	movlb	0	; select bank0
  5102     0E4F  084B               	movf	___fladd@b+3,w
  5103     0E50  3980               	andlw	128
  5104     0E51  00D8               	movwf	___fladd@signs
  5105     0E52  354B               	lslf	___fladd@b+3,w
  5106     0E53  00DA               	movwf	___fladd@bexp
  5107     0E54  1BCA               	btfsc	___fladd@b+2,7
  5108     0E55  145A               	bsf	___fladd@bexp,0
  5109     0E56  085A               	movf	___fladd@bexp,w
  5110     0E57  1903               	btfsc	3,2
  5111     0E58  2E67               	goto	l3856
  5112     0E59  0A5A               	incf	___fladd@bexp,w
  5113     0E5A  1D03               	btfss	3,2
  5114     0E5B  2E64               	goto	l3852
  5115     0E5C  3000               	movlw	0
  5116     0E5D  00CB               	movwf	___fladd@b+3
  5117     0E5E  3000               	movlw	0
  5118     0E5F  00CA               	movwf	___fladd@b+2
  5119     0E60  3000               	movlw	0
  5120     0E61  00C9               	movwf	___fladd@b+1
  5121     0E62  3000               	movlw	0
  5122     0E63  00C8               	movwf	___fladd@b
  5123     0E64                     l3852:
  5124     0E64  17CA               	bsf	___fladd@b+2,7
  5125     0E65  01CB               	clrf	___fladd@b+3
  5126     0E66  2E6F               	goto	l3858
  5127     0E67                     l3856:
  5128     0E67  3000               	movlw	0
  5129     0E68  00CB               	movwf	___fladd@b+3
  5130     0E69  3000               	movlw	0
  5131     0E6A  00CA               	movwf	___fladd@b+2
  5132     0E6B  3000               	movlw	0
  5133     0E6C  00C9               	movwf	___fladd@b+1
  5134     0E6D  3000               	movlw	0
  5135     0E6E  00C8               	movwf	___fladd@b
  5136     0E6F                     l3858:
  5137     0E6F  084F               	movf	___fladd@a+3,w
  5138     0E70  3980               	andlw	128
  5139     0E71  00D9               	movwf	___fladd@aexp
  5140     0E72  0859               	movf	___fladd@aexp,w
  5141     0E73  0658               	xorwf	___fladd@signs,w
  5142     0E74  1D03               	btfss	3,2
  5143     0E75  1758               	bsf	___fladd@signs,6
  5144     0E76  354F               	lslf	___fladd@a+3,w
  5145     0E77  00D9               	movwf	___fladd@aexp
  5146     0E78  1BCE               	btfsc	___fladd@a+2,7
  5147     0E79  1459               	bsf	___fladd@aexp,0
  5148     0E7A  0859               	movf	___fladd@aexp,w
  5149     0E7B  1903               	btfsc	3,2
  5150     0E7C  2E8B               	goto	l3880
  5151     0E7D  0A59               	incf	___fladd@aexp,w
  5152     0E7E  1D03               	btfss	3,2
  5153     0E7F  2E88               	goto	l3876
  5154     0E80  3000               	movlw	0
  5155     0E81  00CF               	movwf	___fladd@a+3
  5156     0E82  3000               	movlw	0
  5157     0E83  00CE               	movwf	___fladd@a+2
  5158     0E84  3000               	movlw	0
  5159     0E85  00CD               	movwf	___fladd@a+1
  5160     0E86  3000               	movlw	0
  5161     0E87  00CC               	movwf	___fladd@a
  5162     0E88                     l3876:
  5163     0E88  17CE               	bsf	___fladd@a+2,7
  5164     0E89  01CF               	clrf	___fladd@a+3
  5165     0E8A  2E93               	goto	l1133
  5166     0E8B                     l3880:
  5167     0E8B  3000               	movlw	0
  5168     0E8C  00CF               	movwf	___fladd@a+3
  5169     0E8D  3000               	movlw	0
  5170     0E8E  00CE               	movwf	___fladd@a+2
  5171     0E8F  3000               	movlw	0
  5172     0E90  00CD               	movwf	___fladd@a+1
  5173     0E91  3000               	movlw	0
  5174     0E92  00CC               	movwf	___fladd@a
  5175     0E93                     l1133:
  5176     0E93  085A               	movf	___fladd@bexp,w
  5177     0E94  0259               	subwf	___fladd@aexp,w
  5178     0E95  1803               	skipnc
  5179     0E96  2EBB               	goto	l3916
  5180     0E97  1F58               	btfss	___fladd@signs,6
  5181     0E98  2E9D               	goto	l3886
  5182     0E99  3080               	movlw	128
  5183     0E9A  00D0               	movwf	??___fladd
  5184     0E9B  0850               	movf	??___fladd,w
  5185     0E9C  06D8               	xorwf	___fladd@signs,f
  5186     0E9D                     l3886:
  5187     0E9D  085A               	movf	___fladd@bexp,w
  5188     0E9E  00DB               	movwf	___fladd@grs
  5189     0E9F  0859               	movf	___fladd@aexp,w
  5190     0EA0  00DA               	movwf	___fladd@bexp
  5191     0EA1  085B               	movf	___fladd@grs,w
  5192     0EA2  00D9               	movwf	___fladd@aexp
  5193     0EA3  0848               	movf	___fladd@b,w
  5194     0EA4  00DB               	movwf	___fladd@grs
  5195     0EA5  084C               	movf	___fladd@a,w
  5196     0EA6  00C8               	movwf	___fladd@b
  5197     0EA7  085B               	movf	___fladd@grs,w
  5198     0EA8  00CC               	movwf	___fladd@a
  5199     0EA9  0849               	movf	___fladd@b+1,w
  5200     0EAA  00DB               	movwf	___fladd@grs
  5201     0EAB  084D               	movf	___fladd@a+1,w
  5202     0EAC  00C9               	movwf	___fladd@b+1
  5203     0EAD  085B               	movf	___fladd@grs,w
  5204     0EAE  00CD               	movwf	___fladd@a+1
  5205     0EAF  084A               	movf	___fladd@b+2,w
  5206     0EB0  00DB               	movwf	___fladd@grs
  5207     0EB1  084E               	movf	___fladd@a+2,w
  5208     0EB2  00CA               	movwf	___fladd@b+2
  5209     0EB3  085B               	movf	___fladd@grs,w
  5210     0EB4  00CE               	movwf	___fladd@a+2
  5211     0EB5  084B               	movf	___fladd@b+3,w
  5212     0EB6  00DB               	movwf	___fladd@grs
  5213     0EB7  084F               	movf	___fladd@a+3,w
  5214     0EB8  00CB               	movwf	___fladd@b+3
  5215     0EB9  085B               	movf	___fladd@grs,w
  5216     0EBA  00CF               	movwf	___fladd@a+3
  5217     0EBB                     l3916:
  5218     0EBB  01DB               	clrf	___fladd@grs
  5219     0EBC  0859               	movf	___fladd@aexp,w
  5220     0EBD  00D0               	movwf	??___fladd
  5221     0EBE  01D1               	clrf	??___fladd+1
  5222     0EBF  0851               	movf	??___fladd+1,w
  5223     0EC0  00D3               	movwf	??___fladd+3
  5224     0EC1  085A               	movf	___fladd@bexp,w
  5225     0EC2  0250               	subwf	??___fladd,w
  5226     0EC3  00D2               	movwf	??___fladd+2
  5227     0EC4  1C03               	skipc
  5228     0EC5  03D3               	decf	??___fladd+3,f
  5229     0EC6  0853               	movf	??___fladd+3,w
  5230     0EC7  3A80               	xorlw	128
  5231     0EC8  00D4               	movwf	??___fladd+4
  5232     0EC9  3080               	movlw	128
  5233     0ECA  0254               	subwf	??___fladd+4,w
  5234     0ECB  1D03               	skipz
  5235     0ECC  2ECF               	goto	u4435
  5236     0ECD  301A               	movlw	26
  5237     0ECE  0252               	subwf	??___fladd+2,w
  5238     0ECF                     u4435:
  5239     0ECF  1C03               	skipc
  5240     0ED0  2EFD               	goto	l3934
  5241     0ED1  0020               	movlb	0	; select bank0
  5242     0ED2  084B               	movf	___fladd@b+3,w
  5243     0ED3  044A               	iorwf	___fladd@b+2,w
  5244     0ED4  0449               	iorwf	___fladd@b+1,w
  5245     0ED5  0448               	iorwf	___fladd@b,w
  5246     0ED6  1903               	btfsc	3,2
  5247     0ED7  2EDA               	goto	u4440
  5248     0ED8  3001               	movlw	1
  5249     0ED9  2EDB               	goto	u4450
  5250     0EDA                     u4440:
  5251     0EDA  3000               	movlw	0
  5252     0EDB                     u4450:
  5253     0EDB  00DB               	movwf	___fladd@grs
  5254     0EDC  3000               	movlw	0
  5255     0EDD  00CB               	movwf	___fladd@b+3
  5256     0EDE  3000               	movlw	0
  5257     0EDF  00CA               	movwf	___fladd@b+2
  5258     0EE0  3000               	movlw	0
  5259     0EE1  00C9               	movwf	___fladd@b+1
  5260     0EE2  3000               	movlw	0
  5261     0EE3  00C8               	movwf	___fladd@b
  5262     0EE4  0859               	movf	___fladd@aexp,w
  5263     0EE5  00DA               	movwf	___fladd@bexp
  5264     0EE6  2F02               	goto	l1137
  5265     0EE7                     l1139:
  5266     0EE7  1C5B               	btfss	___fladd@grs,0
  5267     0EE8  2EED               	goto	l3924
  5268     0EE9  365B               	lsrf	___fladd@grs,w
  5269     0EEA  3801               	iorlw	1
  5270     0EEB  00DB               	movwf	___fladd@grs
  5271     0EEC  2EEF               	goto	l3926
  5272     0EED                     l3924:
  5273     0EED  1003               	clrc
  5274     0EEE  0CDB               	rrf	___fladd@grs,f
  5275     0EEF                     l3926:
  5276     0EEF  1848               	btfsc	___fladd@b,0
  5277     0EF0  17DB               	bsf	___fladd@grs,7
  5278     0EF1  3001               	movlw	1
  5279     0EF2  00D0               	movwf	??___fladd
  5280     0EF3                     u4485:
  5281     0EF3  37CB               	asrf	___fladd@b+3,f
  5282     0EF4  0CCA               	rrf	___fladd@b+2,f
  5283     0EF5  0CC9               	rrf	___fladd@b+1,f
  5284     0EF6  0CC8               	rrf	___fladd@b,f
  5285     0EF7  0BD0               	decfsz	??___fladd& (0+127),f
  5286     0EF8  2EF3               	goto	u4485
  5287     0EF9  3001               	movlw	1
  5288     0EFA  00D0               	movwf	??___fladd
  5289     0EFB  0850               	movf	??___fladd,w
  5290     0EFC  07DA               	addwf	___fladd@bexp,f
  5291     0EFD                     l3934:
  5292     0EFD  0020               	movlb	0	; select bank0
  5293     0EFE  0859               	movf	___fladd@aexp,w
  5294     0EFF  025A               	subwf	___fladd@bexp,w
  5295     0F00  1C03               	skipc
  5296     0F01  2EE7               	goto	l1139
  5297     0F02                     l1137:
  5298     0F02  1B58               	btfsc	___fladd@signs,6
  5299     0F03  2F31               	goto	l3960
  5300     0F04  085A               	movf	___fladd@bexp,w
  5301     0F05  1D03               	btfss	3,2
  5302     0F06  2F10               	goto	l3942
  5303     0F07  3000               	movlw	0
  5304     0F08  00CB               	movwf	?___fladd+3
  5305     0F09  3000               	movlw	0
  5306     0F0A  00CA               	movwf	?___fladd+2
  5307     0F0B  3000               	movlw	0
  5308     0F0C  00C9               	movwf	?___fladd+1
  5309     0F0D  3000               	movlw	0
  5310     0F0E  00C8               	movwf	?___fladd
  5311     0F0F  0008               	return
  5312     0F10                     l3942:
  5313     0F10  084C               	movf	___fladd@a,w
  5314     0F11  07C8               	addwf	___fladd@b,f
  5315     0F12  084D               	movf	___fladd@a+1,w
  5316     0F13  3DC9               	addwfc	___fladd@b+1,f
  5317     0F14  084E               	movf	___fladd@a+2,w
  5318     0F15  3DCA               	addwfc	___fladd@b+2,f
  5319     0F16  084F               	movf	___fladd@a+3,w
  5320     0F17  3DCB               	addwfc	___fladd@b+3,f
  5321     0F18  1C4B               	btfss	___fladd@b+3,0
  5322     0F19  2FAB               	goto	l3994
  5323     0F1A  1C5B               	btfss	___fladd@grs,0
  5324     0F1B  2F20               	goto	l3950
  5325     0F1C  365B               	lsrf	___fladd@grs,w
  5326     0F1D  3801               	iorlw	1
  5327     0F1E  00DB               	movwf	___fladd@grs
  5328     0F1F  2F22               	goto	l3952
  5329     0F20                     l3950:
  5330     0F20  1003               	clrc
  5331     0F21  0CDB               	rrf	___fladd@grs,f
  5332     0F22                     l3952:
  5333     0F22  1848               	btfsc	___fladd@b,0
  5334     0F23  17DB               	bsf	___fladd@grs,7
  5335     0F24  3001               	movlw	1
  5336     0F25  00D0               	movwf	??___fladd
  5337     0F26                     u4555:
  5338     0F26  37CB               	asrf	___fladd@b+3,f
  5339     0F27  0CCA               	rrf	___fladd@b+2,f
  5340     0F28  0CC9               	rrf	___fladd@b+1,f
  5341     0F29  0CC8               	rrf	___fladd@b,f
  5342     0F2A  0BD0               	decfsz	??___fladd& (0+127),f
  5343     0F2B  2F26               	goto	u4555
  5344     0F2C  3001               	movlw	1
  5345     0F2D  00D0               	movwf	??___fladd
  5346     0F2E  0850               	movf	??___fladd,w
  5347     0F2F  07DA               	addwf	___fladd@bexp,f
  5348     0F30  2FAB               	goto	l3994
  5349     0F31                     l3960:
  5350     0F31  084B               	movf	___fladd@b+3,w
  5351     0F32  3A80               	xorlw	128
  5352     0F33  00D0               	movwf	??___fladd
  5353     0F34  084F               	movf	___fladd@a+3,w
  5354     0F35  3A80               	xorlw	128
  5355     0F36  0250               	subwf	??___fladd,w
  5356     0F37  1D03               	skipz
  5357     0F38  2F43               	goto	u4563
  5358     0F39  084E               	movf	___fladd@a+2,w
  5359     0F3A  024A               	subwf	___fladd@b+2,w
  5360     0F3B  1D03               	skipz
  5361     0F3C  2F43               	goto	u4563
  5362     0F3D  084D               	movf	___fladd@a+1,w
  5363     0F3E  0249               	subwf	___fladd@b+1,w
  5364     0F3F  1D03               	skipz
  5365     0F40  2F43               	goto	u4563
  5366     0F41  084C               	movf	___fladd@a,w
  5367     0F42  0248               	subwf	___fladd@b,w
  5368     0F43                     u4563:
  5369     0F43  1803               	skipnc
  5370     0F44  2F7B               	goto	l3970
  5371     0F45  30FF               	movlw	255
  5372     0F46  00D0               	movwf	??___fladd
  5373     0F47  30FF               	movlw	255
  5374     0F48  00D1               	movwf	??___fladd+1
  5375     0F49  30FF               	movlw	255
  5376     0F4A  00D2               	movwf	??___fladd+2
  5377     0F4B  30FF               	movlw	255
  5378     0F4C  00D3               	movwf	??___fladd+3
  5379     0F4D  0848               	movf	___fladd@b,w
  5380     0F4E  024C               	subwf	___fladd@a,w
  5381     0F4F  00D4               	movwf	??___fladd+4
  5382     0F50  0849               	movf	___fladd@b+1,w
  5383     0F51  3B4D               	subwfb	___fladd@a+1,w
  5384     0F52  00D5               	movwf	??___fladd+5
  5385     0F53  084A               	movf	___fladd@b+2,w
  5386     0F54  3B4E               	subwfb	___fladd@a+2,w
  5387     0F55  00D6               	movwf	??___fladd+6
  5388     0F56  084B               	movf	___fladd@b+3,w
  5389     0F57  3B4F               	subwfb	___fladd@a+3,w
  5390     0F58  00D7               	movwf	??___fladd+7
  5391     0F59  0854               	movf	??___fladd+4,w
  5392     0F5A  07D0               	addwf	??___fladd,f
  5393     0F5B  0855               	movf	??___fladd+5,w
  5394     0F5C  3DD1               	addwfc	??___fladd+1,f
  5395     0F5D  0856               	movf	??___fladd+6,w
  5396     0F5E  3DD2               	addwfc	??___fladd+2,f
  5397     0F5F  0857               	movf	??___fladd+7,w
  5398     0F60  3DD3               	addwfc	??___fladd+3,f
  5399     0F61  0853               	movf	??___fladd+3,w
  5400     0F62  00CB               	movwf	___fladd@b+3
  5401     0F63  0852               	movf	??___fladd+2,w
  5402     0F64  00CA               	movwf	___fladd@b+2
  5403     0F65  0851               	movf	??___fladd+1,w
  5404     0F66  00C9               	movwf	___fladd@b+1
  5405     0F67  0850               	movf	??___fladd,w
  5406     0F68  00C8               	movwf	___fladd@b
  5407     0F69  3080               	movlw	128
  5408     0F6A  00D0               	movwf	??___fladd
  5409     0F6B  0850               	movf	??___fladd,w
  5410     0F6C  06D8               	xorwf	___fladd@signs,f
  5411     0F6D  09DB               	comf	___fladd@grs,f
  5412     0F6E  0ADB               	incf	___fladd@grs,f
  5413     0F6F  085B               	movf	___fladd@grs,w
  5414     0F70  1D03               	btfss	3,2
  5415     0F71  2F83               	goto	l1154
  5416     0F72  3001               	movlw	1
  5417     0F73  07C8               	addwf	___fladd@b,f
  5418     0F74  3000               	movlw	0
  5419     0F75  3DC9               	addwfc	___fladd@b+1,f
  5420     0F76  3000               	movlw	0
  5421     0F77  3DCA               	addwfc	___fladd@b+2,f
  5422     0F78  3000               	movlw	0
  5423     0F79  3DCB               	addwfc	___fladd@b+3,f
  5424     0F7A  2F83               	goto	l1154
  5425     0F7B                     l3970:
  5426     0F7B  084C               	movf	___fladd@a,w
  5427     0F7C  02C8               	subwf	___fladd@b,f
  5428     0F7D  084D               	movf	___fladd@a+1,w
  5429     0F7E  3BC9               	subwfb	___fladd@b+1,f
  5430     0F7F  084E               	movf	___fladd@a+2,w
  5431     0F80  3BCA               	subwfb	___fladd@b+2,f
  5432     0F81  084F               	movf	___fladd@a+3,w
  5433     0F82  3BCB               	subwfb	___fladd@b+3,f
  5434     0F83                     l1154:
  5435     0F83  084B               	movf	___fladd@b+3,w
  5436     0F84  044A               	iorwf	___fladd@b+2,w
  5437     0F85  0449               	iorwf	___fladd@b+1,w
  5438     0F86  0448               	iorwf	___fladd@b,w
  5439     0F87  1D03               	skipz
  5440     0F88  2FA9               	goto	l3992
  5441     0F89  085B               	movf	___fladd@grs,w
  5442     0F8A  1D03               	btfss	3,2
  5443     0F8B  2FA9               	goto	l3992
  5444     0F8C  3000               	movlw	0
  5445     0F8D  00CB               	movwf	?___fladd+3
  5446     0F8E  3000               	movlw	0
  5447     0F8F  00CA               	movwf	?___fladd+2
  5448     0F90  3000               	movlw	0
  5449     0F91  00C9               	movwf	?___fladd+1
  5450     0F92  3000               	movlw	0
  5451     0F93  00C8               	movwf	?___fladd
  5452     0F94  0008               	return
  5453     0F95                     l3978:
  5454     0F95  3001               	movlw	1
  5455     0F96                     u4605:
  5456     0F96  35C8               	lslf	___fladd@b,f
  5457     0F97  0DC9               	rlf	___fladd@b+1,f
  5458     0F98  0DCA               	rlf	___fladd@b+2,f
  5459     0F99  0DCB               	rlf	___fladd@b+3,f
  5460     0F9A  0B89               	decfsz	9,f
  5461     0F9B  2F96               	goto	u4605
  5462     0F9C  1BDB               	btfsc	___fladd@grs,7
  5463     0F9D  1448               	bsf	___fladd@b,0
  5464     0F9E  1C5B               	btfss	___fladd@grs,0
  5465     0F9F  2FA2               	goto	l3986
  5466     0FA0  1403               	setc
  5467     0FA1  2FA3               	goto	L2
  5468     0FA2                     l3986:
  5469     0FA2  1003               	clrc
  5470     0FA3                     L2:
  5471     0FA3  0DDB               	rlf	___fladd@grs,f
  5472     0FA4  085A               	movf	___fladd@bexp,w
  5473     0FA5  1903               	btfsc	3,2
  5474     0FA6  2FA9               	goto	l3992
  5475     0FA7  3001               	movlw	1
  5476     0FA8  02DA               	subwf	___fladd@bexp,f
  5477     0FA9                     l3992:
  5478     0FA9  1FCA               	btfss	___fladd@b+2,7
  5479     0FAA  2F95               	goto	l3978
  5480     0FAB                     l3994:
  5481     0FAB  01D9               	clrf	___fladd@aexp
  5482     0FAC  1FDB               	btfss	___fladd@grs,7
  5483     0FAD  2FB6               	goto	l4004
  5484     0FAE  085B               	movf	___fladd@grs,w
  5485     0FAF  397F               	andlw	127
  5486     0FB0  1903               	btfsc	3,2
  5487     0FB1  1848               	btfsc	___fladd@b,0
  5488     0FB2  2FB4               	goto	l4000
  5489     0FB3  2FB6               	goto	l4004
  5490     0FB4                     l4000:
  5491     0FB4  01D9               	clrf	___fladd@aexp
  5492     0FB5  0AD9               	incf	___fladd@aexp,f
  5493     0FB6                     l4004:
  5494     0FB6  0859               	movf	___fladd@aexp,w
  5495     0FB7  1903               	btfsc	3,2
  5496     0FB8  2FE2               	goto	l1167
  5497     0FB9  3001               	movlw	1
  5498     0FBA  07C8               	addwf	___fladd@b,f
  5499     0FBB  3000               	movlw	0
  5500     0FBC  3DC9               	addwfc	___fladd@b+1,f
  5501     0FBD  3000               	movlw	0
  5502     0FBE  3DCA               	addwfc	___fladd@b+2,f
  5503     0FBF  3000               	movlw	0
  5504     0FC0  3DCB               	addwfc	___fladd@b+3,f
  5505     0FC1  1C4B               	btfss	___fladd@b+3,0
  5506     0FC2  2FE2               	goto	l1167
  5507     0FC3  0848               	movf	___fladd@b,w
  5508     0FC4  00D0               	movwf	??___fladd
  5509     0FC5  0849               	movf	___fladd@b+1,w
  5510     0FC6  00D1               	movwf	??___fladd+1
  5511     0FC7  084A               	movf	___fladd@b+2,w
  5512     0FC8  00D2               	movwf	??___fladd+2
  5513     0FC9  084B               	movf	___fladd@b+3,w
  5514     0FCA  00D3               	movwf	??___fladd+3
  5515     0FCB  3001               	movlw	1
  5516     0FCC  00D4               	movwf	??___fladd+4
  5517     0FCD                     u4705:
  5518     0FCD  37D3               	asrf	??___fladd+3,f
  5519     0FCE  0CD2               	rrf	??___fladd+2,f
  5520     0FCF  0CD1               	rrf	??___fladd+1,f
  5521     0FD0  0CD0               	rrf	??___fladd,f
  5522     0FD1  0BD4               	decfsz	??___fladd+4,f
  5523     0FD2  2FCD               	goto	u4705
  5524     0FD3  0853               	movf	??___fladd+3,w
  5525     0FD4  00CB               	movwf	___fladd@b+3
  5526     0FD5  0852               	movf	??___fladd+2,w
  5527     0FD6  00CA               	movwf	___fladd@b+2
  5528     0FD7  0851               	movf	??___fladd+1,w
  5529     0FD8  00C9               	movwf	___fladd@b+1
  5530     0FD9  0850               	movf	??___fladd,w
  5531     0FDA  00C8               	movwf	___fladd@b
  5532     0FDB  0A5A               	incf	___fladd@bexp,w
  5533     0FDC  1903               	btfsc	3,2
  5534     0FDD  2FE2               	goto	l1167
  5535     0FDE  3001               	movlw	1
  5536     0FDF  00D0               	movwf	??___fladd
  5537     0FE0  0850               	movf	??___fladd,w
  5538     0FE1  07DA               	addwf	___fladd@bexp,f
  5539     0FE2                     l1167:
  5540     0FE2  0A5A               	incf	___fladd@bexp,w
  5541     0FE3  1D03               	btfss	3,2
  5542     0FE4  085A               	movf	___fladd@bexp,w
  5543     0FE5  1D03               	btfss	3,2
  5544     0FE6  2FF2               	goto	l4022
  5545     0FE7  3000               	movlw	0
  5546     0FE8  00CB               	movwf	___fladd@b+3
  5547     0FE9  3000               	movlw	0
  5548     0FEA  00CA               	movwf	___fladd@b+2
  5549     0FEB  3000               	movlw	0
  5550     0FEC  00C9               	movwf	___fladd@b+1
  5551     0FED  3000               	movlw	0
  5552     0FEE  00C8               	movwf	___fladd@b
  5553     0FEF  085A               	movf	___fladd@bexp,w
  5554     0FF0  1903               	btfsc	3,2
  5555     0FF1  01D8               	clrf	___fladd@signs
  5556     0FF2                     l4022:
  5557     0FF2  1C5A               	btfss	___fladd@bexp,0
  5558     0FF3  2FF6               	goto	l4026
  5559     0FF4  17CA               	bsf	___fladd@b+2,7
  5560     0FF5  2FFA               	goto	l1175
  5561     0FF6                     l4026:
  5562     0FF6  307F               	movlw	127
  5563     0FF7  00D0               	movwf	??___fladd
  5564     0FF8  0850               	movf	??___fladd,w
  5565     0FF9  05CA               	andwf	___fladd@b+2,f
  5566     0FFA                     l1175:
  5567     0FFA  365A               	lsrf	___fladd@bexp,w
  5568     0FFB  00CB               	movwf	___fladd@b+3
  5569     0FFC  1FD8               	btfss	___fladd@signs,7
  5570     0FFD  0008               	return
  5571     0FFE  17CB               	bsf	___fladd@b+3,7
  5572     0FFF  0008               	return
  5573     1000                     __end_of___fladd:
  5574                           
  5575                           	psect	text9
  5576     174A                     __ptext9:	
  5577 ;; *************** function ___flneg *****************
  5578 ;; Defined at:
  5579 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flneg.c"
  5580 ;; Parameters:    Size  Location     Type
  5581 ;;  f1              4    0[BANK0 ] unsigned char 
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;		None
  5584 ;; Return value:  Size  Location     Type
  5585 ;;                  4    0[BANK0 ] unsigned char 
  5586 ;; Registers used:
  5587 ;;		wreg
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5593 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5596 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5597 ;;Total ram usage:        4 bytes
  5598 ;; Hardware stack levels used: 1
  5599 ;; Hardware stack levels required when called: 5
  5600 ;; This function calls:
  5601 ;;		Nothing
  5602 ;; This function is called by:
  5603 ;;		_my_log
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606                           
  5607     174A                     ___flneg:	
  5608                           ;psect for function ___flneg
  5609                           
  5610                           
  5611                           ;incstack = 0
  5612                           ; Regs used in ___flneg: [wreg]
  5613     174A  0020               	movlb	0	; select bank0
  5614     174B  0823               	movf	___flneg@f1+3,w
  5615     174C  0422               	iorwf	___flneg@f1+2,w
  5616     174D  0421               	iorwf	___flneg@f1+1,w
  5617     174E  0420               	iorwf	___flneg@f1,w
  5618     174F  1903               	skipnz
  5619     1750  0008               	return
  5620     1751  3080               	movlw	128
  5621     1752  06A3               	xorwf	___flneg@f1+3,f
  5622     1753  0008               	return
  5623     1754                     __end_of___flneg:
  5624                           
  5625                           	psect	text10
  5626     004F                     __ptext10:	
  5627 ;; *************** function ___flmul *****************
  5628 ;; Defined at:
  5629 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  5630 ;; Parameters:    Size  Location     Type
  5631 ;;  b               4   60[BANK0 ] unsigned char 
  5632 ;;  a               4   64[BANK0 ] unsigned char 
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;  prod            4    7[BANK1 ] struct .
  5635 ;;  grs             4    2[BANK1 ] unsigned long 
  5636 ;;  temp            2   11[BANK1 ] struct .
  5637 ;;  bexp            1    6[BANK1 ] unsigned char 
  5638 ;;  aexp            1    1[BANK1 ] unsigned char 
  5639 ;;  sign            1    0[BANK1 ] unsigned char 
  5640 ;; Return value:  Size  Location     Type
  5641 ;;                  4   60[BANK0 ] unsigned char 
  5642 ;; Registers used:
  5643 ;;		wreg, status,2, status,0, pclath, cstack
  5644 ;; Tracked objects:
  5645 ;;		On entry : 0/0
  5646 ;;		On exit  : 0/0
  5647 ;;		Unchanged: 0/0
  5648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5649 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5650 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  5651 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5652 ;;      Totals:         0      13      13       0       0       0       0       0       0       0       0       0       
      +0       0
  5653 ;;Total ram usage:       26 bytes
  5654 ;; Hardware stack levels used: 1
  5655 ;; Hardware stack levels required when called: 6
  5656 ;; This function calls:
  5657 ;;		__Umul8_16
  5658 ;; This function is called by:
  5659 ;;		__ReadSensor
  5660 ;;		_my_log
  5661 ;; This function uses a non-reentrant model
  5662 ;;
  5663                           
  5664     004F                     ___flmul:	
  5665                           ;psect for function ___flmul
  5666                           
  5667                           
  5668                           ;incstack = 0
  5669                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  5670     004F  0020               	movlb	0	; select bank0
  5671     0050  085F               	movf	___flmul@b+3,w
  5672     0051  3980               	andlw	128
  5673     0052  0021               	movlb	1	; select bank1
  5674     0053  00A0               	movwf	___flmul@sign^(0+128)
  5675     0054  0020               	movlb	0	; select bank0
  5676     0055  355F               	lslf	___flmul@b+3,w
  5677     0056  0021               	movlb	1	; select bank1
  5678     0057  00A6               	movwf	___flmul@bexp^(0+128)
  5679     0058  0020               	movlb	0	; select bank0
  5680     0059  1FDE               	btfss	___flmul@b+2,7
  5681     005A  285D               	goto	l4240
  5682     005B  0021               	movlb	1	; select bank1
  5683     005C  1426               	bsf	___flmul@bexp^(0+128),0
  5684     005D                     l4240:
  5685     005D  0021               	movlb	1	; select bank1
  5686     005E  0826               	movf	___flmul@bexp^(0+128),w
  5687     005F  1903               	btfsc	3,2
  5688     0060  2870               	goto	l4248
  5689     0061  0A26               	incf	___flmul@bexp^(0+128),w
  5690     0062  1D03               	btfss	3,2
  5691     0063  286D               	goto	l4246
  5692     0064  3000               	movlw	0
  5693     0065  0020               	movlb	0	; select bank0
  5694     0066  00DF               	movwf	___flmul@b+3
  5695     0067  3000               	movlw	0
  5696     0068  00DE               	movwf	___flmul@b+2
  5697     0069  3000               	movlw	0
  5698     006A  00DD               	movwf	___flmul@b+1
  5699     006B  3000               	movlw	0
  5700     006C  00DC               	movwf	___flmul@b
  5701     006D                     l4246:
  5702     006D  0020               	movlb	0	; select bank0
  5703     006E  17DE               	bsf	___flmul@b+2,7
  5704     006F  2879               	goto	l4250
  5705     0070                     l4248:
  5706     0070  3000               	movlw	0
  5707     0071  0020               	movlb	0	; select bank0
  5708     0072  00DF               	movwf	___flmul@b+3
  5709     0073  3000               	movlw	0
  5710     0074  00DE               	movwf	___flmul@b+2
  5711     0075  3000               	movlw	0
  5712     0076  00DD               	movwf	___flmul@b+1
  5713     0077  3000               	movlw	0
  5714     0078  00DC               	movwf	___flmul@b
  5715     0079                     l4250:
  5716     0079  0863               	movf	___flmul@a+3,w
  5717     007A  3980               	andlw	128
  5718     007B  00E4               	movwf	??___flmul
  5719     007C  0864               	movf	??___flmul,w
  5720     007D  0021               	movlb	1	; select bank1
  5721     007E  06A0               	xorwf	___flmul@sign^(0+128),f
  5722     007F  0020               	movlb	0	; select bank0
  5723     0080  3563               	lslf	___flmul@a+3,w
  5724     0081  0021               	movlb	1	; select bank1
  5725     0082  00A1               	movwf	___flmul@aexp^(0+128)
  5726     0083  0020               	movlb	0	; select bank0
  5727     0084  1FE2               	btfss	___flmul@a+2,7
  5728     0085  2888               	goto	l4258
  5729     0086  0021               	movlb	1	; select bank1
  5730     0087  1421               	bsf	___flmul@aexp^(0+128),0
  5731     0088                     l4258:
  5732     0088  0021               	movlb	1	; select bank1
  5733     0089  0821               	movf	___flmul@aexp^(0+128),w
  5734     008A  1903               	btfsc	3,2
  5735     008B  289B               	goto	l4266
  5736     008C  0A21               	incf	___flmul@aexp^(0+128),w
  5737     008D  1D03               	btfss	3,2
  5738     008E  2898               	goto	l4264
  5739     008F  3000               	movlw	0
  5740     0090  0020               	movlb	0	; select bank0
  5741     0091  00E3               	movwf	___flmul@a+3
  5742     0092  3000               	movlw	0
  5743     0093  00E2               	movwf	___flmul@a+2
  5744     0094  3000               	movlw	0
  5745     0095  00E1               	movwf	___flmul@a+1
  5746     0096  3000               	movlw	0
  5747     0097  00E0               	movwf	___flmul@a
  5748     0098                     l4264:
  5749     0098  0020               	movlb	0	; select bank0
  5750     0099  17E2               	bsf	___flmul@a+2,7
  5751     009A  28A4               	goto	l4268
  5752     009B                     l4266:
  5753     009B  3000               	movlw	0
  5754     009C  0020               	movlb	0	; select bank0
  5755     009D  00E3               	movwf	___flmul@a+3
  5756     009E  3000               	movlw	0
  5757     009F  00E2               	movwf	___flmul@a+2
  5758     00A0  3000               	movlw	0
  5759     00A1  00E1               	movwf	___flmul@a+1
  5760     00A2  3000               	movlw	0
  5761     00A3  00E0               	movwf	___flmul@a
  5762     00A4                     l4268:
  5763     00A4  0021               	movlb	1	; select bank1
  5764     00A5  0821               	movf	___flmul@aexp^(0+128),w
  5765     00A6  1D03               	btfss	3,2
  5766     00A7  0826               	movf	___flmul@bexp^(0+128),w
  5767     00A8  1D03               	btfss	3,2
  5768     00A9  28B4               	goto	l4276
  5769     00AA  3000               	movlw	0
  5770     00AB  0020               	movlb	0	; select bank0
  5771     00AC  00DF               	movwf	?___flmul+3
  5772     00AD  3000               	movlw	0
  5773     00AE  00DE               	movwf	?___flmul+2
  5774     00AF  3000               	movlw	0
  5775     00B0  00DD               	movwf	?___flmul+1
  5776     00B1  3000               	movlw	0
  5777     00B2  00DC               	movwf	?___flmul
  5778     00B3  0008               	return
  5779     00B4                     l4276:
  5780     00B4  0020               	movlb	0	; select bank0
  5781     00B5  085C               	movf	___flmul@b,w
  5782     00B6  00F4               	movwf	__Umul8_16@multiplicand
  5783     00B7  0862               	movf	___flmul@a+2,w
  5784     00B8  3188  2059  3180   	fcall	__Umul8_16
  5785     00BB  0875               	movf	?__Umul8_16+1,w
  5786     00BC  0021               	movlb	1	; select bank1
  5787     00BD  00AC               	movwf	(___flmul@temp+1)^(0+128)
  5788     00BE  0874               	movf	?__Umul8_16,w
  5789     00BF  00AB               	movwf	___flmul@temp^(0+128)
  5790     00C0  082B               	movf	___flmul@temp^(0+128),w
  5791     00C1  0020               	movlb	0	; select bank0
  5792     00C2  00E4               	movwf	??___flmul
  5793     00C3  01E5               	clrf	??___flmul+1
  5794     00C4  01E6               	clrf	??___flmul+2
  5795     00C5  01E7               	clrf	??___flmul+3
  5796     00C6  0867               	movf	??___flmul+3,w
  5797     00C7  0021               	movlb	1	; select bank1
  5798     00C8  00A5               	movwf	(___flmul@grs+3)^(0+128)
  5799     00C9  0020               	movlb	0	; select bank0
  5800     00CA  0866               	movf	??___flmul+2,w
  5801     00CB  0021               	movlb	1	; select bank1
  5802     00CC  00A4               	movwf	(___flmul@grs+2)^(0+128)
  5803     00CD  0020               	movlb	0	; select bank0
  5804     00CE  0865               	movf	??___flmul+1,w
  5805     00CF  0021               	movlb	1	; select bank1
  5806     00D0  00A3               	movwf	(___flmul@grs+1)^(0+128)
  5807     00D1  0020               	movlb	0	; select bank0
  5808     00D2  0864               	movf	??___flmul,w
  5809     00D3  0021               	movlb	1	; select bank1
  5810     00D4  00A2               	movwf	___flmul@grs^(0+128)
  5811     00D5  082C               	movf	(___flmul@temp^(0+128)+1),w
  5812     00D6  0020               	movlb	0	; select bank0
  5813     00D7  00E4               	movwf	??___flmul
  5814     00D8  01E5               	clrf	??___flmul+1
  5815     00D9  01E6               	clrf	??___flmul+2
  5816     00DA  01E7               	clrf	??___flmul+3
  5817     00DB  0867               	movf	??___flmul+3,w
  5818     00DC  0021               	movlb	1	; select bank1
  5819     00DD  00AA               	movwf	(___flmul@prod+3)^(0+128)
  5820     00DE  0020               	movlb	0	; select bank0
  5821     00DF  0866               	movf	??___flmul+2,w
  5822     00E0  0021               	movlb	1	; select bank1
  5823     00E1  00A9               	movwf	(___flmul@prod+2)^(0+128)
  5824     00E2  0020               	movlb	0	; select bank0
  5825     00E3  0865               	movf	??___flmul+1,w
  5826     00E4  0021               	movlb	1	; select bank1
  5827     00E5  00A8               	movwf	(___flmul@prod+1)^(0+128)
  5828     00E6  0020               	movlb	0	; select bank0
  5829     00E7  0864               	movf	??___flmul,w
  5830     00E8  0021               	movlb	1	; select bank1
  5831     00E9  00A7               	movwf	___flmul@prod^(0+128)
  5832     00EA  0020               	movlb	0	; select bank0
  5833     00EB  085D               	movf	___flmul@b+1,w
  5834     00EC  00F4               	movwf	__Umul8_16@multiplicand
  5835     00ED  0861               	movf	___flmul@a+1,w
  5836     00EE  3188  2059  3180   	fcall	__Umul8_16
  5837     00F1  0875               	movf	?__Umul8_16+1,w
  5838     00F2  0021               	movlb	1	; select bank1
  5839     00F3  00AC               	movwf	(___flmul@temp+1)^(0+128)
  5840     00F4  0874               	movf	?__Umul8_16,w
  5841     00F5  00AB               	movwf	___flmul@temp^(0+128)
  5842     00F6  082B               	movf	___flmul@temp^(0+128),w
  5843     00F7  0020               	movlb	0	; select bank0
  5844     00F8  00E4               	movwf	??___flmul
  5845     00F9  01E5               	clrf	??___flmul+1
  5846     00FA  01E6               	clrf	??___flmul+2
  5847     00FB  01E7               	clrf	??___flmul+3
  5848     00FC  0864               	movf	??___flmul,w
  5849     00FD  0021               	movlb	1	; select bank1
  5850     00FE  07A2               	addwf	___flmul@grs^(0+128),f
  5851     00FF  0020               	movlb	0	; select bank0
  5852     0100  0865               	movf	??___flmul+1,w
  5853     0101  0021               	movlb	1	; select bank1
  5854     0102  3DA3               	addwfc	(___flmul@grs+1)^(0+128),f
  5855     0103  0020               	movlb	0	; select bank0
  5856     0104  0866               	movf	??___flmul+2,w
  5857     0105  0021               	movlb	1	; select bank1
  5858     0106  3DA4               	addwfc	(___flmul@grs+2)^(0+128),f
  5859     0107  0020               	movlb	0	; select bank0
  5860     0108  0867               	movf	??___flmul+3,w
  5861     0109  0021               	movlb	1	; select bank1
  5862     010A  3DA5               	addwfc	(___flmul@grs+3)^(0+128),f
  5863     010B  082C               	movf	(___flmul@temp^(0+128)+1),w
  5864     010C  0020               	movlb	0	; select bank0
  5865     010D  00E4               	movwf	??___flmul
  5866     010E  01E5               	clrf	??___flmul+1
  5867     010F  01E6               	clrf	??___flmul+2
  5868     0110  01E7               	clrf	??___flmul+3
  5869     0111  0864               	movf	??___flmul,w
  5870     0112  0021               	movlb	1	; select bank1
  5871     0113  07A7               	addwf	___flmul@prod^(0+128),f
  5872     0114  0020               	movlb	0	; select bank0
  5873     0115  0865               	movf	??___flmul+1,w
  5874     0116  0021               	movlb	1	; select bank1
  5875     0117  3DA8               	addwfc	(___flmul@prod+1)^(0+128),f
  5876     0118  0020               	movlb	0	; select bank0
  5877     0119  0866               	movf	??___flmul+2,w
  5878     011A  0021               	movlb	1	; select bank1
  5879     011B  3DA9               	addwfc	(___flmul@prod+2)^(0+128),f
  5880     011C  0020               	movlb	0	; select bank0
  5881     011D  0867               	movf	??___flmul+3,w
  5882     011E  0021               	movlb	1	; select bank1
  5883     011F  3DAA               	addwfc	(___flmul@prod+3)^(0+128),f
  5884     0120  0020               	movlb	0	; select bank0
  5885     0121  085E               	movf	___flmul@b+2,w
  5886     0122  00F4               	movwf	__Umul8_16@multiplicand
  5887     0123  0860               	movf	___flmul@a,w
  5888     0124  3188  2059  3180   	fcall	__Umul8_16
  5889     0127  0875               	movf	?__Umul8_16+1,w
  5890     0128  0021               	movlb	1	; select bank1
  5891     0129  00AC               	movwf	(___flmul@temp+1)^(0+128)
  5892     012A  0874               	movf	?__Umul8_16,w
  5893     012B  00AB               	movwf	___flmul@temp^(0+128)
  5894     012C  082B               	movf	___flmul@temp^(0+128),w
  5895     012D  0020               	movlb	0	; select bank0
  5896     012E  00E4               	movwf	??___flmul
  5897     012F  01E5               	clrf	??___flmul+1
  5898     0130  01E6               	clrf	??___flmul+2
  5899     0131  01E7               	clrf	??___flmul+3
  5900     0132  0864               	movf	??___flmul,w
  5901     0133  0021               	movlb	1	; select bank1
  5902     0134  07A2               	addwf	___flmul@grs^(0+128),f
  5903     0135  0020               	movlb	0	; select bank0
  5904     0136  0865               	movf	??___flmul+1,w
  5905     0137  0021               	movlb	1	; select bank1
  5906     0138  3DA3               	addwfc	(___flmul@grs+1)^(0+128),f
  5907     0139  0020               	movlb	0	; select bank0
  5908     013A  0866               	movf	??___flmul+2,w
  5909     013B  0021               	movlb	1	; select bank1
  5910     013C  3DA4               	addwfc	(___flmul@grs+2)^(0+128),f
  5911     013D  0020               	movlb	0	; select bank0
  5912     013E  0867               	movf	??___flmul+3,w
  5913     013F  0021               	movlb	1	; select bank1
  5914     0140  3DA5               	addwfc	(___flmul@grs+3)^(0+128),f
  5915     0141  082C               	movf	(___flmul@temp^(0+128)+1),w
  5916     0142  0020               	movlb	0	; select bank0
  5917     0143  00E4               	movwf	??___flmul
  5918     0144  01E5               	clrf	??___flmul+1
  5919     0145  01E6               	clrf	??___flmul+2
  5920     0146  01E7               	clrf	??___flmul+3
  5921     0147  0864               	movf	??___flmul,w
  5922     0148  0021               	movlb	1	; select bank1
  5923     0149  07A7               	addwf	___flmul@prod^(0+128),f
  5924     014A  0020               	movlb	0	; select bank0
  5925     014B  0865               	movf	??___flmul+1,w
  5926     014C  0021               	movlb	1	; select bank1
  5927     014D  3DA8               	addwfc	(___flmul@prod+1)^(0+128),f
  5928     014E  0020               	movlb	0	; select bank0
  5929     014F  0866               	movf	??___flmul+2,w
  5930     0150  0021               	movlb	1	; select bank1
  5931     0151  3DA9               	addwfc	(___flmul@prod+2)^(0+128),f
  5932     0152  0020               	movlb	0	; select bank0
  5933     0153  0867               	movf	??___flmul+3,w
  5934     0154  0021               	movlb	1	; select bank1
  5935     0155  3DAA               	addwfc	(___flmul@prod+3)^(0+128),f
  5936     0156  3008               	movlw	8
  5937     0157                     u5235:
  5938     0157  35A2               	lslf	___flmul@grs^(0+128),f
  5939     0158  0DA3               	rlf	(___flmul@grs+1)^(0+128),f
  5940     0159  0DA4               	rlf	(___flmul@grs+2)^(0+128),f
  5941     015A  0DA5               	rlf	(___flmul@grs+3)^(0+128),f
  5942     015B  0B89               	decfsz	9,f
  5943     015C  2957               	goto	u5235
  5944     015D  0020               	movlb	0	; select bank0
  5945     015E  085D               	movf	___flmul@b+1,w
  5946     015F  00F4               	movwf	__Umul8_16@multiplicand
  5947     0160  0860               	movf	___flmul@a,w
  5948     0161  3188  2059  3180   	fcall	__Umul8_16
  5949     0164  0875               	movf	?__Umul8_16+1,w
  5950     0165  0021               	movlb	1	; select bank1
  5951     0166  00AC               	movwf	(___flmul@temp+1)^(0+128)
  5952     0167  0874               	movf	?__Umul8_16,w
  5953     0168  00AB               	movwf	___flmul@temp^(0+128)
  5954     0169  082B               	movf	___flmul@temp^(0+128),w
  5955     016A  07A2               	addwf	___flmul@grs^(0+128),f
  5956     016B  082C               	movf	(___flmul@temp+1)^(0+128),w
  5957     016C  3DA3               	addwfc	(___flmul@grs+1)^(0+128),f
  5958     016D  3000               	movlw	0
  5959     016E  3DA4               	addwfc	(___flmul@grs+2)^(0+128),f
  5960     016F  3DA5               	addwfc	(___flmul@grs+3)^(0+128),f
  5961     0170  0020               	movlb	0	; select bank0
  5962     0171  085C               	movf	___flmul@b,w
  5963     0172  00F4               	movwf	__Umul8_16@multiplicand
  5964     0173  0861               	movf	___flmul@a+1,w
  5965     0174  3188  2059  3180   	fcall	__Umul8_16
  5966     0177  0875               	movf	?__Umul8_16+1,w
  5967     0178  0021               	movlb	1	; select bank1
  5968     0179  00AC               	movwf	(___flmul@temp+1)^(0+128)
  5969     017A  0874               	movf	?__Umul8_16,w
  5970     017B  00AB               	movwf	___flmul@temp^(0+128)
  5971     017C  082B               	movf	___flmul@temp^(0+128),w
  5972     017D  07A2               	addwf	___flmul@grs^(0+128),f
  5973     017E  082C               	movf	(___flmul@temp+1)^(0+128),w
  5974     017F  3DA3               	addwfc	(___flmul@grs+1)^(0+128),f
  5975     0180  3000               	movlw	0
  5976     0181  3DA4               	addwfc	(___flmul@grs+2)^(0+128),f
  5977     0182  3DA5               	addwfc	(___flmul@grs+3)^(0+128),f
  5978     0183  3008               	movlw	8
  5979     0184                     u5245:
  5980     0184  35A2               	lslf	___flmul@grs^(0+128),f
  5981     0185  0DA3               	rlf	(___flmul@grs+1)^(0+128),f
  5982     0186  0DA4               	rlf	(___flmul@grs+2)^(0+128),f
  5983     0187  0DA5               	rlf	(___flmul@grs+3)^(0+128),f
  5984     0188  0B89               	decfsz	9,f
  5985     0189  2984               	goto	u5245
  5986     018A  0020               	movlb	0	; select bank0
  5987     018B  085C               	movf	___flmul@b,w
  5988     018C  00F4               	movwf	__Umul8_16@multiplicand
  5989     018D  0860               	movf	___flmul@a,w
  5990     018E  3188  2059  3180   	fcall	__Umul8_16
  5991     0191  0875               	movf	?__Umul8_16+1,w
  5992     0192  0021               	movlb	1	; select bank1
  5993     0193  00AC               	movwf	(___flmul@temp+1)^(0+128)
  5994     0194  0874               	movf	?__Umul8_16,w
  5995     0195  00AB               	movwf	___flmul@temp^(0+128)
  5996     0196  082B               	movf	___flmul@temp^(0+128),w
  5997     0197  07A2               	addwf	___flmul@grs^(0+128),f
  5998     0198  082C               	movf	(___flmul@temp+1)^(0+128),w
  5999     0199  3DA3               	addwfc	(___flmul@grs+1)^(0+128),f
  6000     019A  3000               	movlw	0
  6001     019B  3DA4               	addwfc	(___flmul@grs+2)^(0+128),f
  6002     019C  3DA5               	addwfc	(___flmul@grs+3)^(0+128),f
  6003     019D  0020               	movlb	0	; select bank0
  6004     019E  085D               	movf	___flmul@b+1,w
  6005     019F  00F4               	movwf	__Umul8_16@multiplicand
  6006     01A0  0862               	movf	___flmul@a+2,w
  6007     01A1  3188  2059  3180   	fcall	__Umul8_16
  6008     01A4  0875               	movf	?__Umul8_16+1,w
  6009     01A5  0021               	movlb	1	; select bank1
  6010     01A6  00AC               	movwf	(___flmul@temp+1)^(0+128)
  6011     01A7  0874               	movf	?__Umul8_16,w
  6012     01A8  00AB               	movwf	___flmul@temp^(0+128)
  6013     01A9  082B               	movf	___flmul@temp^(0+128),w
  6014     01AA  07A7               	addwf	___flmul@prod^(0+128),f
  6015     01AB  082C               	movf	(___flmul@temp+1)^(0+128),w
  6016     01AC  3DA8               	addwfc	(___flmul@prod+1)^(0+128),f
  6017     01AD  3000               	movlw	0
  6018     01AE  3DA9               	addwfc	(___flmul@prod+2)^(0+128),f
  6019     01AF  3DAA               	addwfc	(___flmul@prod+3)^(0+128),f
  6020     01B0  0020               	movlb	0	; select bank0
  6021     01B1  085E               	movf	___flmul@b+2,w
  6022     01B2  00F4               	movwf	__Umul8_16@multiplicand
  6023     01B3  0861               	movf	___flmul@a+1,w
  6024     01B4  3188  2059  3180   	fcall	__Umul8_16
  6025     01B7  0875               	movf	?__Umul8_16+1,w
  6026     01B8  0021               	movlb	1	; select bank1
  6027     01B9  00AC               	movwf	(___flmul@temp+1)^(0+128)
  6028     01BA  0874               	movf	?__Umul8_16,w
  6029     01BB  00AB               	movwf	___flmul@temp^(0+128)
  6030     01BC  082B               	movf	___flmul@temp^(0+128),w
  6031     01BD  07A7               	addwf	___flmul@prod^(0+128),f
  6032     01BE  082C               	movf	(___flmul@temp+1)^(0+128),w
  6033     01BF  3DA8               	addwfc	(___flmul@prod+1)^(0+128),f
  6034     01C0  3000               	movlw	0
  6035     01C1  3DA9               	addwfc	(___flmul@prod+2)^(0+128),f
  6036     01C2  3DAA               	addwfc	(___flmul@prod+3)^(0+128),f
  6037     01C3  0020               	movlb	0	; select bank0
  6038     01C4  085E               	movf	___flmul@b+2,w
  6039     01C5  00F4               	movwf	__Umul8_16@multiplicand
  6040     01C6  0862               	movf	___flmul@a+2,w
  6041     01C7  3188  2059  3180   	fcall	__Umul8_16
  6042     01CA  0875               	movf	?__Umul8_16+1,w
  6043     01CB  0021               	movlb	1	; select bank1
  6044     01CC  00AC               	movwf	(___flmul@temp+1)^(0+128)
  6045     01CD  0874               	movf	?__Umul8_16,w
  6046     01CE  00AB               	movwf	___flmul@temp^(0+128)
  6047     01CF  082B               	movf	___flmul@temp^(0+128),w
  6048     01D0  0020               	movlb	0	; select bank0
  6049     01D1  00E4               	movwf	??___flmul
  6050     01D2  0021               	movlb	1	; select bank1
  6051     01D3  082C               	movf	(___flmul@temp+1)^(0+128),w
  6052     01D4  0020               	movlb	0	; select bank0
  6053     01D5  00E5               	movwf	??___flmul+1
  6054     01D6  01E6               	clrf	??___flmul+2
  6055     01D7  01E7               	clrf	??___flmul+3
  6056     01D8  3008               	movlw	8
  6057     01D9                     u5255:
  6058     01D9  35E4               	lslf	??___flmul,f
  6059     01DA  0DE5               	rlf	??___flmul+1,f
  6060     01DB  0DE6               	rlf	??___flmul+2,f
  6061     01DC  0DE7               	rlf	??___flmul+3,f
  6062     01DD  0B89               	decfsz	9,f
  6063     01DE  29D9               	goto	u5255
  6064     01DF  0864               	movf	??___flmul,w
  6065     01E0  0021               	movlb	1	; select bank1
  6066     01E1  07A7               	addwf	___flmul@prod^(0+128),f
  6067     01E2  0020               	movlb	0	; select bank0
  6068     01E3  0865               	movf	??___flmul+1,w
  6069     01E4  0021               	movlb	1	; select bank1
  6070     01E5  3DA8               	addwfc	(___flmul@prod+1)^(0+128),f
  6071     01E6  0020               	movlb	0	; select bank0
  6072     01E7  0866               	movf	??___flmul+2,w
  6073     01E8  0021               	movlb	1	; select bank1
  6074     01E9  3DA9               	addwfc	(___flmul@prod+2)^(0+128),f
  6075     01EA  0020               	movlb	0	; select bank0
  6076     01EB  0867               	movf	??___flmul+3,w
  6077     01EC  0021               	movlb	1	; select bank1
  6078     01ED  3DAA               	addwfc	(___flmul@prod+3)^(0+128),f
  6079     01EE  0822               	movf	___flmul@grs^(0+128),w
  6080     01EF  0020               	movlb	0	; select bank0
  6081     01F0  00E4               	movwf	??___flmul
  6082     01F1  0021               	movlb	1	; select bank1
  6083     01F2  0823               	movf	(___flmul@grs+1)^(0+128),w
  6084     01F3  0020               	movlb	0	; select bank0
  6085     01F4  00E5               	movwf	??___flmul+1
  6086     01F5  0021               	movlb	1	; select bank1
  6087     01F6  0824               	movf	(___flmul@grs+2)^(0+128),w
  6088     01F7  0020               	movlb	0	; select bank0
  6089     01F8  00E6               	movwf	??___flmul+2
  6090     01F9  0021               	movlb	1	; select bank1
  6091     01FA  0825               	movf	(___flmul@grs+3)^(0+128),w
  6092     01FB  0020               	movlb	0	; select bank0
  6093     01FC  00E7               	movwf	??___flmul+3
  6094     01FD  3018               	movlw	24
  6095     01FE                     u5265:
  6096     01FE  36E7               	lsrf	??___flmul+3,f
  6097     01FF  0CE6               	rrf	??___flmul+2,f
  6098     0200  0CE5               	rrf	??___flmul+1,f
  6099     0201  0CE4               	rrf	??___flmul,f
  6100     0202  0B89               	decfsz	9,f
  6101     0203  29FE               	goto	u5265
  6102     0204  0864               	movf	??___flmul,w
  6103     0205  0021               	movlb	1	; select bank1
  6104     0206  07A7               	addwf	___flmul@prod^(0+128),f
  6105     0207  0020               	movlb	0	; select bank0
  6106     0208  0865               	movf	??___flmul+1,w
  6107     0209  0021               	movlb	1	; select bank1
  6108     020A  3DA8               	addwfc	(___flmul@prod+1)^(0+128),f
  6109     020B  0020               	movlb	0	; select bank0
  6110     020C  0866               	movf	??___flmul+2,w
  6111     020D  0021               	movlb	1	; select bank1
  6112     020E  3DA9               	addwfc	(___flmul@prod+2)^(0+128),f
  6113     020F  0020               	movlb	0	; select bank0
  6114     0210  0867               	movf	??___flmul+3,w
  6115     0211  0021               	movlb	1	; select bank1
  6116     0212  3DAA               	addwfc	(___flmul@prod+3)^(0+128),f
  6117     0213  3008               	movlw	8
  6118     0214                     u5275:
  6119     0214  35A2               	lslf	___flmul@grs^(0+128),f
  6120     0215  0DA3               	rlf	(___flmul@grs+1)^(0+128),f
  6121     0216  0DA4               	rlf	(___flmul@grs+2)^(0+128),f
  6122     0217  0DA5               	rlf	(___flmul@grs+3)^(0+128),f
  6123     0218  0B89               	decfsz	9,f
  6124     0219  2A14               	goto	u5275
  6125     021A  0826               	movf	___flmul@bexp^(0+128),w
  6126     021B  0721               	addwf	___flmul@aexp^(0+128),w
  6127     021C  0020               	movlb	0	; select bank0
  6128     021D  00E4               	movwf	??___flmul
  6129     021E  01E5               	clrf	??___flmul+1
  6130     021F  0DE5               	rlf	??___flmul+1,f
  6131     0220  0864               	movf	??___flmul,w
  6132     0221  3E82               	addlw	130
  6133     0222  0021               	movlb	1	; select bank1
  6134     0223  00AB               	movwf	___flmul@temp^(0+128)
  6135     0224  30FF               	movlw	255
  6136     0225  0020               	movlb	0	; select bank0
  6137     0226  3D65               	addwfc	??___flmul+1,w
  6138     0227  0021               	movlb	1	; select bank1
  6139     0228  00AC               	movwf	(___flmul@temp+1)^(0+128)
  6140     0229                     l4328:
  6141     0229  1BA9               	btfsc	(___flmul@prod+2)^(0+128),7
  6142     022A  2A40               	goto	l4330
  6143     022B  3001               	movlw	1
  6144     022C                     u5285:
  6145     022C  35A7               	lslf	___flmul@prod^(0+128),f
  6146     022D  0DA8               	rlf	(___flmul@prod+1)^(0+128),f
  6147     022E  0DA9               	rlf	(___flmul@prod+2)^(0+128),f
  6148     022F  0DAA               	rlf	(___flmul@prod+3)^(0+128),f
  6149     0230  0B89               	decfsz	9,f
  6150     0231  2A2C               	goto	u5285
  6151     0232  1BA5               	btfsc	(___flmul@grs+3)^(0+128),7
  6152     0233  1427               	bsf	___flmul@prod^(0+128),0
  6153     0234  3001               	movlw	1
  6154     0235                     u5305:
  6155     0235  35A2               	lslf	___flmul@grs^(0+128),f
  6156     0236  0DA3               	rlf	(___flmul@grs+1)^(0+128),f
  6157     0237  0DA4               	rlf	(___flmul@grs+2)^(0+128),f
  6158     0238  0DA5               	rlf	(___flmul@grs+3)^(0+128),f
  6159     0239  0B89               	decfsz	9,f
  6160     023A  2A35               	goto	u5305
  6161     023B  30FF               	movlw	255
  6162     023C  07AB               	addwf	___flmul@temp^(0+128),f
  6163     023D  30FF               	movlw	255
  6164     023E  3DAC               	addwfc	(___flmul@temp+1)^(0+128),f
  6165     023F  2A29               	goto	l4328
  6166     0240                     l4330:
  6167     0240  01A1               	clrf	___flmul@aexp^(0+128)
  6168     0241  1FA5               	btfss	(___flmul@grs+3)^(0+128),7
  6169     0242  2A62               	goto	l4340
  6170     0243  30FF               	movlw	255
  6171     0244  0522               	andwf	___flmul@grs^(0+128),w
  6172     0245  0020               	movlb	0	; select bank0
  6173     0246  00E4               	movwf	??___flmul
  6174     0247  30FF               	movlw	255
  6175     0248  0021               	movlb	1	; select bank1
  6176     0249  0523               	andwf	(___flmul@grs+1)^(0+128),w
  6177     024A  0020               	movlb	0	; select bank0
  6178     024B  00E5               	movwf	??___flmul+1
  6179     024C  30FF               	movlw	255
  6180     024D  0021               	movlb	1	; select bank1
  6181     024E  0524               	andwf	(___flmul@grs+2)^(0+128),w
  6182     024F  0020               	movlb	0	; select bank0
  6183     0250  00E6               	movwf	??___flmul+2
  6184     0251  307F               	movlw	127
  6185     0252  0021               	movlb	1	; select bank1
  6186     0253  0525               	andwf	(___flmul@grs+3)^(0+128),w
  6187     0254  0020               	movlb	0	; select bank0
  6188     0255  00E7               	movwf	??___flmul+3
  6189     0256  0867               	movf	??___flmul+3,w
  6190     0257  0466               	iorwf	??___flmul+2,w
  6191     0258  0465               	iorwf	??___flmul+1,w
  6192     0259  0464               	iorwf	??___flmul,w
  6193     025A  1D03               	btfss	3,2
  6194     025B  2A5F               	goto	l4336
  6195     025C  0021               	movlb	1	; select bank1
  6196     025D  1C27               	btfss	___flmul@prod^(0+128),0
  6197     025E  2A62               	goto	l4340
  6198     025F                     l4336:
  6199     025F  0021               	movlb	1	; select bank1
  6200     0260  01A1               	clrf	___flmul@aexp^(0+128)
  6201     0261  0AA1               	incf	___flmul@aexp^(0+128),f
  6202     0262                     l4340:
  6203     0262  0821               	movf	___flmul@aexp^(0+128),w
  6204     0263  1903               	btfsc	3,2
  6205     0264  2A99               	goto	l4350
  6206     0265  3001               	movlw	1
  6207     0266  07A7               	addwf	___flmul@prod^(0+128),f
  6208     0267  3000               	movlw	0
  6209     0268  3DA8               	addwfc	(___flmul@prod+1)^(0+128),f
  6210     0269  3000               	movlw	0
  6211     026A  3DA9               	addwfc	(___flmul@prod+2)^(0+128),f
  6212     026B  3000               	movlw	0
  6213     026C  3DAA               	addwfc	(___flmul@prod+3)^(0+128),f
  6214     026D  1C2A               	btfss	(___flmul@prod+3)^(0+128),0
  6215     026E  2A99               	goto	l4350
  6216     026F  0827               	movf	___flmul@prod^(0+128),w
  6217     0270  0020               	movlb	0	; select bank0
  6218     0271  00E4               	movwf	??___flmul
  6219     0272  0021               	movlb	1	; select bank1
  6220     0273  0828               	movf	(___flmul@prod+1)^(0+128),w
  6221     0274  0020               	movlb	0	; select bank0
  6222     0275  00E5               	movwf	??___flmul+1
  6223     0276  0021               	movlb	1	; select bank1
  6224     0277  0829               	movf	(___flmul@prod+2)^(0+128),w
  6225     0278  0020               	movlb	0	; select bank0
  6226     0279  00E6               	movwf	??___flmul+2
  6227     027A  0021               	movlb	1	; select bank1
  6228     027B  082A               	movf	(___flmul@prod+3)^(0+128),w
  6229     027C  0020               	movlb	0	; select bank0
  6230     027D  00E7               	movwf	??___flmul+3
  6231     027E  3001               	movlw	1
  6232     027F  00E8               	movwf	??___flmul+4
  6233     0280                     u5375:
  6234     0280  37E7               	asrf	??___flmul+3,f
  6235     0281  0CE6               	rrf	??___flmul+2,f
  6236     0282  0CE5               	rrf	??___flmul+1,f
  6237     0283  0CE4               	rrf	??___flmul,f
  6238     0284  0BE8               	decfsz	??___flmul+4,f
  6239     0285  2A80               	goto	u5375
  6240     0286  0867               	movf	??___flmul+3,w
  6241     0287  0021               	movlb	1	; select bank1
  6242     0288  00AA               	movwf	(___flmul@prod+3)^(0+128)
  6243     0289  0020               	movlb	0	; select bank0
  6244     028A  0866               	movf	??___flmul+2,w
  6245     028B  0021               	movlb	1	; select bank1
  6246     028C  00A9               	movwf	(___flmul@prod+2)^(0+128)
  6247     028D  0020               	movlb	0	; select bank0
  6248     028E  0865               	movf	??___flmul+1,w
  6249     028F  0021               	movlb	1	; select bank1
  6250     0290  00A8               	movwf	(___flmul@prod+1)^(0+128)
  6251     0291  0020               	movlb	0	; select bank0
  6252     0292  0864               	movf	??___flmul,w
  6253     0293  0021               	movlb	1	; select bank1
  6254     0294  00A7               	movwf	___flmul@prod^(0+128)
  6255     0295  3001               	movlw	1
  6256     0296  07AB               	addwf	___flmul@temp^(0+128),f
  6257     0297  3000               	movlw	0
  6258     0298  3DAC               	addwfc	(___flmul@temp+1)^(0+128),f
  6259     0299                     l4350:
  6260     0299  082C               	movf	(___flmul@temp+1)^(0+128),w
  6261     029A  3A80               	xorlw	128
  6262     029B  0020               	movlb	0	; select bank0
  6263     029C  00E4               	movwf	??___flmul
  6264     029D  3080               	movlw	128
  6265     029E  0264               	subwf	??___flmul,w
  6266     029F  1D03               	skipz
  6267     02A0  2AA4               	goto	u5385
  6268     02A1  30FF               	movlw	255
  6269     02A2  0021               	movlb	1	; select bank1
  6270     02A3  022B               	subwf	___flmul@temp^(0+128),w
  6271     02A4                     u5385:
  6272     02A4  1C03               	skipc
  6273     02A5  2AB0               	goto	l4354
  6274     02A6  307F               	movlw	127
  6275     02A7  0021               	movlb	1	; select bank1
  6276     02A8  00AA               	movwf	(___flmul@prod+3)^(0+128)
  6277     02A9  3080               	movlw	128
  6278     02AA  00A9               	movwf	(___flmul@prod+2)^(0+128)
  6279     02AB  3000               	movlw	0
  6280     02AC  00A8               	movwf	(___flmul@prod+1)^(0+128)
  6281     02AD  3000               	movlw	0
  6282     02AE  00A7               	movwf	___flmul@prod^(0+128)
  6283     02AF  2AD8               	goto	l1241
  6284     02B0                     l4354:
  6285     02B0  0021               	movlb	1	; select bank1
  6286     02B1  082C               	movf	(___flmul@temp+1)^(0+128),w
  6287     02B2  3A80               	xorlw	128
  6288     02B3  0020               	movlb	0	; select bank0
  6289     02B4  00E4               	movwf	??___flmul
  6290     02B5  3080               	movlw	128
  6291     02B6  0264               	subwf	??___flmul,w
  6292     02B7  1D03               	skipz
  6293     02B8  2ABC               	goto	u5395
  6294     02B9  3001               	movlw	1
  6295     02BA  0021               	movlb	1	; select bank1
  6296     02BB  022B               	subwf	___flmul@temp^(0+128),w
  6297     02BC                     u5395:
  6298     02BC  1803               	skipnc
  6299     02BD  2AC9               	goto	l4360
  6300     02BE  3000               	movlw	0
  6301     02BF  0021               	movlb	1	; select bank1
  6302     02C0  00AA               	movwf	(___flmul@prod+3)^(0+128)
  6303     02C1  3000               	movlw	0
  6304     02C2  00A9               	movwf	(___flmul@prod+2)^(0+128)
  6305     02C3  3000               	movlw	0
  6306     02C4  00A8               	movwf	(___flmul@prod+1)^(0+128)
  6307     02C5  3000               	movlw	0
  6308     02C6  00A7               	movwf	___flmul@prod^(0+128)
  6309     02C7  01A0               	clrf	___flmul@sign^(0+128)
  6310     02C8  2AD8               	goto	l1241
  6311     02C9                     l4360:
  6312     02C9  0021               	movlb	1	; select bank1
  6313     02CA  082B               	movf	___flmul@temp^(0+128),w
  6314     02CB  00A6               	movwf	___flmul@bexp^(0+128)
  6315     02CC  30FF               	movlw	255
  6316     02CD  05A7               	andwf	___flmul@prod^(0+128),f
  6317     02CE  30FF               	movlw	255
  6318     02CF  05A8               	andwf	(___flmul@prod+1)^(0+128),f
  6319     02D0  307F               	movlw	127
  6320     02D1  05A9               	andwf	(___flmul@prod+2)^(0+128),f
  6321     02D2  3000               	movlw	0
  6322     02D3  05AA               	andwf	(___flmul@prod+3)^(0+128),f
  6323     02D4  1826               	btfsc	___flmul@bexp^(0+128),0
  6324     02D5  17A9               	bsf	(___flmul@prod^(0+128)+2),7
  6325     02D6  3626               	lsrf	___flmul@bexp^(0+128),w
  6326     02D7  00AA               	movwf	(___flmul@prod^(0+128)+3)
  6327     02D8                     l1241:
  6328     02D8  0820               	movf	___flmul@sign^(0+128),w
  6329     02D9  0020               	movlb	0	; select bank0
  6330     02DA  00E4               	movwf	??___flmul
  6331     02DB  0864               	movf	??___flmul,w
  6332     02DC  0021               	movlb	1	; select bank1
  6333     02DD  04AA               	iorwf	(___flmul@prod^(0+128)+3),f
  6334     02DE  082A               	movf	(___flmul@prod+3)^(0+128),w
  6335     02DF  0020               	movlb	0	; select bank0
  6336     02E0  00DF               	movwf	?___flmul+3
  6337     02E1  0021               	movlb	1	; select bank1
  6338     02E2  0829               	movf	(___flmul@prod+2)^(0+128),w
  6339     02E3  0020               	movlb	0	; select bank0
  6340     02E4  00DE               	movwf	?___flmul+2
  6341     02E5  0021               	movlb	1	; select bank1
  6342     02E6  0828               	movf	(___flmul@prod+1)^(0+128),w
  6343     02E7  0020               	movlb	0	; select bank0
  6344     02E8  00DD               	movwf	?___flmul+1
  6345     02E9  0021               	movlb	1	; select bank1
  6346     02EA  0827               	movf	___flmul@prod^(0+128),w
  6347     02EB  0020               	movlb	0	; select bank0
  6348     02EC  00DC               	movwf	?___flmul
  6349     02ED  0008               	return
  6350     02EE                     __end_of___flmul:
  6351                           
  6352                           	psect	text11
  6353     0859                     __ptext11:	
  6354 ;; *************** function __Umul8_16 *****************
  6355 ;; Defined at:
  6356 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul8_16.c"
  6357 ;; Parameters:    Size  Location     Type
  6358 ;;  multiplier      1    wreg     unsigned char 
  6359 ;;  multiplicand    1    4[COMMON] unsigned char 
  6360 ;; Auto vars:     Size  Location     Type
  6361 ;;  multiplier      1    6[BANK0 ] unsigned char 
  6362 ;;  word_mpld       2    4[BANK0 ] unsigned int 
  6363 ;;  product         2    2[BANK0 ] unsigned int 
  6364 ;; Return value:  Size  Location     Type
  6365 ;;                  2    4[COMMON] unsigned int 
  6366 ;; Registers used:
  6367 ;;		wreg, status,2, status,0
  6368 ;; Tracked objects:
  6369 ;;		On entry : 0/0
  6370 ;;		On exit  : 0/0
  6371 ;;		Unchanged: 0/0
  6372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6373 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6374 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6375 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6376 ;;      Totals:         2       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6377 ;;Total ram usage:        9 bytes
  6378 ;; Hardware stack levels used: 1
  6379 ;; Hardware stack levels required when called: 5
  6380 ;; This function calls:
  6381 ;;		Nothing
  6382 ;; This function is called by:
  6383 ;;		___flmul
  6384 ;; This function uses a non-reentrant model
  6385 ;;
  6386                           
  6387     0859                     __Umul8_16:	
  6388                           ;psect for function __Umul8_16
  6389                           
  6390                           
  6391                           ;incstack = 0
  6392                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6393                           ;__Umul8_16@multiplier stored from wreg
  6394     0859  0020               	movlb	0	; select bank0
  6395     085A  00A6               	movwf	__Umul8_16@multiplier
  6396     085B  01A2               	clrf	__Umul8_16@product
  6397     085C  01A3               	clrf	__Umul8_16@product+1
  6398     085D  0874               	movf	__Umul8_16@multiplicand,w
  6399     085E  00A0               	movwf	??__Umul8_16
  6400     085F  01A1               	clrf	??__Umul8_16+1
  6401     0860  0820               	movf	??__Umul8_16,w
  6402     0861  00A4               	movwf	__Umul8_16@word_mpld
  6403     0862  0821               	movf	??__Umul8_16+1,w
  6404     0863  00A5               	movwf	__Umul8_16@word_mpld+1
  6405     0864                     l4036:
  6406     0864  1C26               	btfss	__Umul8_16@multiplier,0
  6407     0865  286A               	goto	l1248
  6408     0866  0824               	movf	__Umul8_16@word_mpld,w
  6409     0867  07A2               	addwf	__Umul8_16@product,f
  6410     0868  0825               	movf	__Umul8_16@word_mpld+1,w
  6411     0869  3DA3               	addwfc	__Umul8_16@product+1,f
  6412     086A                     l1248:
  6413     086A  3001               	movlw	1
  6414     086B                     u4785:
  6415     086B  35A4               	lslf	__Umul8_16@word_mpld,f
  6416     086C  0DA5               	rlf	__Umul8_16@word_mpld+1,f
  6417     086D  0B89               	decfsz	9,f
  6418     086E  286B               	goto	u4785
  6419     086F  1003               	clrc
  6420     0870  0CA6               	rrf	__Umul8_16@multiplier,f
  6421     0871  0826               	movf	__Umul8_16@multiplier,w
  6422     0872  1D03               	btfss	3,2
  6423     0873  2864               	goto	l4036
  6424     0874  0823               	movf	__Umul8_16@product+1,w
  6425     0875  00F5               	movwf	?__Umul8_16+1
  6426     0876  0822               	movf	__Umul8_16@product,w
  6427     0877  00F4               	movwf	?__Umul8_16
  6428     0878  0008               	return
  6429     0879                     __end_of__Umul8_16:
  6430                           
  6431                           	psect	text12
  6432     0A42                     __ptext12:	
  6433 ;; *************** function ___flge *****************
  6434 ;; Defined at:
  6435 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\flge.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;  ff1             4    0[BANK0 ] unsigned int 
  6438 ;;  ff2             4    4[BANK0 ] unsigned int 
  6439 ;; Auto vars:     Size  Location     Type
  6440 ;;		None
  6441 ;; Return value:  Size  Location     Type
  6442 ;;		None               void
  6443 ;; Registers used:
  6444 ;;		wreg, status,2, status,0
  6445 ;; Tracked objects:
  6446 ;;		On entry : 0/0
  6447 ;;		On exit  : 0/0
  6448 ;;		Unchanged: 0/0
  6449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6450 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6452 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6453 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6454 ;;Total ram usage:       12 bytes
  6455 ;; Hardware stack levels used: 1
  6456 ;; Hardware stack levels required when called: 5
  6457 ;; This function calls:
  6458 ;;		Nothing
  6459 ;; This function is called by:
  6460 ;;		_my_log
  6461 ;; This function uses a non-reentrant model
  6462 ;;
  6463                           
  6464     0A42                     ___flge:	
  6465                           ;psect for function ___flge
  6466                           
  6467                           
  6468                           ;incstack = 0
  6469                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6470     0A42  3000               	movlw	0
  6471     0A43  0020               	movlb	0	; select bank0
  6472     0A44  0520               	andwf	___flge@ff1,w
  6473     0A45  00A8               	movwf	??___flge
  6474     0A46  3000               	movlw	0
  6475     0A47  0521               	andwf	___flge@ff1+1,w
  6476     0A48  00A9               	movwf	??___flge+1
  6477     0A49  3080               	movlw	128
  6478     0A4A  0522               	andwf	___flge@ff1+2,w
  6479     0A4B  00AA               	movwf	??___flge+2
  6480     0A4C  307F               	movlw	127
  6481     0A4D  0523               	andwf	___flge@ff1+3,w
  6482     0A4E  00AB               	movwf	??___flge+3
  6483     0A4F  082B               	movf	??___flge+3,w
  6484     0A50  042A               	iorwf	??___flge+2,w
  6485     0A51  0429               	iorwf	??___flge+1,w
  6486     0A52  0428               	iorwf	??___flge,w
  6487     0A53  1D03               	skipz
  6488     0A54  2A5D               	goto	l1010
  6489     0A55  3000               	movlw	0
  6490     0A56  00A3               	movwf	___flge@ff1+3
  6491     0A57  3000               	movlw	0
  6492     0A58  00A2               	movwf	___flge@ff1+2
  6493     0A59  3000               	movlw	0
  6494     0A5A  00A1               	movwf	___flge@ff1+1
  6495     0A5B  3000               	movlw	0
  6496     0A5C  00A0               	movwf	___flge@ff1
  6497     0A5D                     l1010:
  6498     0A5D  3000               	movlw	0
  6499     0A5E  0524               	andwf	___flge@ff2,w
  6500     0A5F  00A8               	movwf	??___flge
  6501     0A60  3000               	movlw	0
  6502     0A61  0525               	andwf	___flge@ff2+1,w
  6503     0A62  00A9               	movwf	??___flge+1
  6504     0A63  3080               	movlw	128
  6505     0A64  0526               	andwf	___flge@ff2+2,w
  6506     0A65  00AA               	movwf	??___flge+2
  6507     0A66  307F               	movlw	127
  6508     0A67  0527               	andwf	___flge@ff2+3,w
  6509     0A68  00AB               	movwf	??___flge+3
  6510     0A69  082B               	movf	??___flge+3,w
  6511     0A6A  042A               	iorwf	??___flge+2,w
  6512     0A6B  0429               	iorwf	??___flge+1,w
  6513     0A6C  0428               	iorwf	??___flge,w
  6514     0A6D  1D03               	skipz
  6515     0A6E  2A77               	goto	l4064
  6516     0A6F  3000               	movlw	0
  6517     0A70  00A7               	movwf	___flge@ff2+3
  6518     0A71  3000               	movlw	0
  6519     0A72  00A6               	movwf	___flge@ff2+2
  6520     0A73  3000               	movlw	0
  6521     0A74  00A5               	movwf	___flge@ff2+1
  6522     0A75  3000               	movlw	0
  6523     0A76  00A4               	movwf	___flge@ff2
  6524     0A77                     l4064:
  6525     0A77  1FA3               	btfss	___flge@ff1+3,7
  6526     0A78  2A91               	goto	l4068
  6527     0A79  3000               	movlw	0
  6528     0A7A  00A8               	movwf	??___flge
  6529     0A7B  3000               	movlw	0
  6530     0A7C  00A9               	movwf	??___flge+1
  6531     0A7D  3000               	movlw	0
  6532     0A7E  00AA               	movwf	??___flge+2
  6533     0A7F  3080               	movlw	128
  6534     0A80  00AB               	movwf	??___flge+3
  6535     0A81  0820               	movf	___flge@ff1,w
  6536     0A82  02A8               	subwf	??___flge,f
  6537     0A83  0821               	movf	___flge@ff1+1,w
  6538     0A84  3BA9               	subwfb	??___flge+1,f
  6539     0A85  0822               	movf	___flge@ff1+2,w
  6540     0A86  3BAA               	subwfb	??___flge+2,f
  6541     0A87  0823               	movf	___flge@ff1+3,w
  6542     0A88  3BAB               	subwfb	??___flge+3,f
  6543     0A89  082B               	movf	??___flge+3,w
  6544     0A8A  00A3               	movwf	___flge@ff1+3
  6545     0A8B  082A               	movf	??___flge+2,w
  6546     0A8C  00A2               	movwf	___flge@ff1+2
  6547     0A8D  0829               	movf	??___flge+1,w
  6548     0A8E  00A1               	movwf	___flge@ff1+1
  6549     0A8F  0828               	movf	??___flge,w
  6550     0A90  00A0               	movwf	___flge@ff1
  6551     0A91                     l4068:
  6552     0A91  1FA7               	btfss	___flge@ff2+3,7
  6553     0A92  2AAB               	goto	l1013
  6554     0A93  3000               	movlw	0
  6555     0A94  00A8               	movwf	??___flge
  6556     0A95  3000               	movlw	0
  6557     0A96  00A9               	movwf	??___flge+1
  6558     0A97  3000               	movlw	0
  6559     0A98  00AA               	movwf	??___flge+2
  6560     0A99  3080               	movlw	128
  6561     0A9A  00AB               	movwf	??___flge+3
  6562     0A9B  0824               	movf	___flge@ff2,w
  6563     0A9C  02A8               	subwf	??___flge,f
  6564     0A9D  0825               	movf	___flge@ff2+1,w
  6565     0A9E  3BA9               	subwfb	??___flge+1,f
  6566     0A9F  0826               	movf	___flge@ff2+2,w
  6567     0AA0  3BAA               	subwfb	??___flge+2,f
  6568     0AA1  0827               	movf	___flge@ff2+3,w
  6569     0AA2  3BAB               	subwfb	??___flge+3,f
  6570     0AA3  082B               	movf	??___flge+3,w
  6571     0AA4  00A7               	movwf	___flge@ff2+3
  6572     0AA5  082A               	movf	??___flge+2,w
  6573     0AA6  00A6               	movwf	___flge@ff2+2
  6574     0AA7  0829               	movf	??___flge+1,w
  6575     0AA8  00A5               	movwf	___flge@ff2+1
  6576     0AA9  0828               	movf	??___flge,w
  6577     0AAA  00A4               	movwf	___flge@ff2
  6578     0AAB                     l1013:
  6579     0AAB  3080               	movlw	128
  6580     0AAC  06A3               	xorwf	___flge@ff1+3,f
  6581     0AAD  3080               	movlw	128
  6582     0AAE  06A7               	xorwf	___flge@ff2+3,f
  6583     0AAF  0827               	movf	___flge@ff2+3,w
  6584     0AB0  0223               	subwf	___flge@ff1+3,w
  6585     0AB1  1D03               	skipz
  6586     0AB2  0008               	return
  6587     0AB3  0826               	movf	___flge@ff2+2,w
  6588     0AB4  0222               	subwf	___flge@ff1+2,w
  6589     0AB5  1D03               	skipz
  6590     0AB6  0008               	return
  6591     0AB7  0825               	movf	___flge@ff2+1,w
  6592     0AB8  0221               	subwf	___flge@ff1+1,w
  6593     0AB9  1D03               	skipz
  6594     0ABA  0008               	return
  6595     0ABB  0824               	movf	___flge@ff2,w
  6596     0ABC  0220               	subwf	___flge@ff1,w
  6597     0ABD  0008               	return
  6598     0ABE                     __end_of___flge:
  6599                           
  6600                           	psect	text13
  6601     0CDE                     __ptext13:	
  6602 ;; *************** function ___fldiv *****************
  6603 ;; Defined at:
  6604 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  6605 ;; Parameters:    Size  Location     Type
  6606 ;;  a               4   14[BANK0 ] unsigned int 
  6607 ;;  b               4   18[BANK0 ] unsigned int 
  6608 ;; Auto vars:     Size  Location     Type
  6609 ;;  grs             4   34[BANK0 ] unsigned long 
  6610 ;;  rem             4   27[BANK0 ] unsigned long 
  6611 ;;  new_exp         2   32[BANK0 ] int 
  6612 ;;  aexp            1   39[BANK0 ] unsigned char 
  6613 ;;  bexp            1   38[BANK0 ] unsigned char 
  6614 ;;  sign            1   31[BANK0 ] unsigned char 
  6615 ;; Return value:  Size  Location     Type
  6616 ;;                  4   14[BANK0 ] unsigned char 
  6617 ;; Registers used:
  6618 ;;		wreg, status,2, status,0
  6619 ;; Tracked objects:
  6620 ;;		On entry : 0/0
  6621 ;;		On exit  : 0/0
  6622 ;;		Unchanged: 0/0
  6623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6624 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6625 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6626 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6627 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6628 ;;Total ram usage:       26 bytes
  6629 ;; Hardware stack levels used: 1
  6630 ;; Hardware stack levels required when called: 5
  6631 ;; This function calls:
  6632 ;;		Nothing
  6633 ;; This function is called by:
  6634 ;;		__ReadSensor
  6635 ;;		_my_log
  6636 ;; This function uses a non-reentrant model
  6637 ;;
  6638                           
  6639     0CDE                     ___fldiv:	
  6640                           ;psect for function ___fldiv
  6641                           
  6642                           
  6643                           ;incstack = 0
  6644                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  6645     0CDE  0020               	movlb	0	; select bank0
  6646     0CDF  0835               	movf	___fldiv@b+3,w
  6647     0CE0  3980               	andlw	128
  6648     0CE1  00BF               	movwf	___fldiv@sign
  6649     0CE2  3535               	lslf	___fldiv@b+3,w
  6650     0CE3  00C6               	movwf	___fldiv@bexp
  6651     0CE4  1BB4               	btfsc	___fldiv@b+2,7
  6652     0CE5  1446               	bsf	___fldiv@bexp,0
  6653     0CE6  0846               	movf	___fldiv@bexp,w
  6654     0CE7  1903               	btfsc	3,2
  6655     0CE8  2CF7               	goto	l4110
  6656     0CE9  0A46               	incf	___fldiv@bexp,w
  6657     0CEA  1D03               	btfss	3,2
  6658     0CEB  2CF4               	goto	l4106
  6659     0CEC  3000               	movlw	0
  6660     0CED  00B5               	movwf	___fldiv@b+3
  6661     0CEE  3000               	movlw	0
  6662     0CEF  00B4               	movwf	___fldiv@b+2
  6663     0CF0  3000               	movlw	0
  6664     0CF1  00B3               	movwf	___fldiv@b+1
  6665     0CF2  3000               	movlw	0
  6666     0CF3  00B2               	movwf	___fldiv@b
  6667     0CF4                     l4106:
  6668     0CF4  17B4               	bsf	___fldiv@b+2,7
  6669     0CF5  01B5               	clrf	___fldiv@b+3
  6670     0CF6  2CFF               	goto	l4112
  6671     0CF7                     l4110:
  6672     0CF7  3000               	movlw	0
  6673     0CF8  00B5               	movwf	___fldiv@b+3
  6674     0CF9  3000               	movlw	0
  6675     0CFA  00B4               	movwf	___fldiv@b+2
  6676     0CFB  3000               	movlw	0
  6677     0CFC  00B3               	movwf	___fldiv@b+1
  6678     0CFD  3000               	movlw	0
  6679     0CFE  00B2               	movwf	___fldiv@b
  6680     0CFF                     l4112:
  6681     0CFF  0831               	movf	___fldiv@a+3,w
  6682     0D00  3980               	andlw	128
  6683     0D01  00B6               	movwf	??___fldiv
  6684     0D02  0836               	movf	??___fldiv,w
  6685     0D03  06BF               	xorwf	___fldiv@sign,f
  6686     0D04  3531               	lslf	___fldiv@a+3,w
  6687     0D05  00C7               	movwf	___fldiv@aexp
  6688     0D06  1BB0               	btfsc	___fldiv@a+2,7
  6689     0D07  1447               	bsf	___fldiv@aexp,0
  6690     0D08  0847               	movf	___fldiv@aexp,w
  6691     0D09  1903               	btfsc	3,2
  6692     0D0A  2D19               	goto	l4130
  6693     0D0B  0A47               	incf	___fldiv@aexp,w
  6694     0D0C  1D03               	btfss	3,2
  6695     0D0D  2D16               	goto	l4126
  6696     0D0E  3000               	movlw	0
  6697     0D0F  00B1               	movwf	___fldiv@a+3
  6698     0D10  3000               	movlw	0
  6699     0D11  00B0               	movwf	___fldiv@a+2
  6700     0D12  3000               	movlw	0
  6701     0D13  00AF               	movwf	___fldiv@a+1
  6702     0D14  3000               	movlw	0
  6703     0D15  00AE               	movwf	___fldiv@a
  6704     0D16                     l4126:
  6705     0D16  17B0               	bsf	___fldiv@a+2,7
  6706     0D17  01B1               	clrf	___fldiv@a+3
  6707     0D18  2D21               	goto	l1189
  6708     0D19                     l4130:
  6709     0D19  3000               	movlw	0
  6710     0D1A  00B1               	movwf	___fldiv@a+3
  6711     0D1B  3000               	movlw	0
  6712     0D1C  00B0               	movwf	___fldiv@a+2
  6713     0D1D  3000               	movlw	0
  6714     0D1E  00AF               	movwf	___fldiv@a+1
  6715     0D1F  3000               	movlw	0
  6716     0D20  00AE               	movwf	___fldiv@a
  6717     0D21                     l1189:
  6718     0D21  0831               	movf	___fldiv@a+3,w
  6719     0D22  0430               	iorwf	___fldiv@a+2,w
  6720     0D23  042F               	iorwf	___fldiv@a+1,w
  6721     0D24  042E               	iorwf	___fldiv@a,w
  6722     0D25  1D03               	skipz
  6723     0D26  2D40               	goto	l4140
  6724     0D27  3000               	movlw	0
  6725     0D28  00B5               	movwf	___fldiv@b+3
  6726     0D29  3000               	movlw	0
  6727     0D2A  00B4               	movwf	___fldiv@b+2
  6728     0D2B  3000               	movlw	0
  6729     0D2C  00B3               	movwf	___fldiv@b+1
  6730     0D2D  3000               	movlw	0
  6731     0D2E  00B2               	movwf	___fldiv@b
  6732     0D2F  3080               	movlw	128
  6733     0D30  04B4               	iorwf	___fldiv@b+2,f
  6734     0D31  307F               	movlw	127
  6735     0D32  04B5               	iorwf	___fldiv@b+3,f
  6736     0D33                     L4:
  6737     0D33  083F               	movf	___fldiv@sign,w
  6738     0D34  00B6               	movwf	??___fldiv
  6739     0D35  0836               	movf	??___fldiv,w
  6740     0D36  04B5               	iorwf	___fldiv@b+3,f
  6741     0D37  0835               	movf	___fldiv@b+3,w
  6742     0D38  00B1               	movwf	?___fldiv+3
  6743     0D39  0834               	movf	___fldiv@b+2,w
  6744     0D3A  00B0               	movwf	?___fldiv+2
  6745     0D3B  0833               	movf	___fldiv@b+1,w
  6746     0D3C  00AF               	movwf	?___fldiv+1
  6747     0D3D  0832               	movf	___fldiv@b,w
  6748     0D3E  00AE               	movwf	?___fldiv
  6749     0D3F  0008               	return
  6750     0D40                     l4140:
  6751     0D40  0846               	movf	___fldiv@bexp,w
  6752     0D41  1D03               	btfss	3,2
  6753     0D42  2D4C               	goto	l4146
  6754     0D43  3000               	movlw	0
  6755     0D44  00B1               	movwf	?___fldiv+3
  6756     0D45  3000               	movlw	0
  6757     0D46  00B0               	movwf	?___fldiv+2
  6758     0D47  3000               	movlw	0
  6759     0D48  00AF               	movwf	?___fldiv+1
  6760     0D49  3000               	movlw	0
  6761     0D4A  00AE               	movwf	?___fldiv
  6762     0D4B  0008               	return
  6763     0D4C                     l4146:
  6764     0D4C  0846               	movf	___fldiv@bexp,w
  6765     0D4D  00B6               	movwf	??___fldiv
  6766     0D4E  01B7               	clrf	??___fldiv+1
  6767     0D4F  0837               	movf	??___fldiv+1,w
  6768     0D50  00B9               	movwf	??___fldiv+3
  6769     0D51  0847               	movf	___fldiv@aexp,w
  6770     0D52  0236               	subwf	??___fldiv,w
  6771     0D53  00B8               	movwf	??___fldiv+2
  6772     0D54  1C03               	skipc
  6773     0D55  03B9               	decf	??___fldiv+3,f
  6774     0D56  0838               	movf	??___fldiv+2,w
  6775     0D57  3E7F               	addlw	127
  6776     0D58  00C0               	movwf	___fldiv@new_exp
  6777     0D59  3000               	movlw	0
  6778     0D5A  3D39               	addwfc	??___fldiv+3,w
  6779     0D5B  00C1               	movwf	___fldiv@new_exp+1
  6780     0D5C  0835               	movf	___fldiv@b+3,w
  6781     0D5D  00BE               	movwf	___fldiv@rem+3
  6782     0D5E  0834               	movf	___fldiv@b+2,w
  6783     0D5F  00BD               	movwf	___fldiv@rem+2
  6784     0D60  0833               	movf	___fldiv@b+1,w
  6785     0D61  00BC               	movwf	___fldiv@rem+1
  6786     0D62  0832               	movf	___fldiv@b,w
  6787     0D63  00BB               	movwf	___fldiv@rem
  6788     0D64  3000               	movlw	0
  6789     0D65  00B5               	movwf	___fldiv@b+3
  6790     0D66  3000               	movlw	0
  6791     0D67  00B4               	movwf	___fldiv@b+2
  6792     0D68  3000               	movlw	0
  6793     0D69  00B3               	movwf	___fldiv@b+1
  6794     0D6A  3000               	movlw	0
  6795     0D6B  00B2               	movwf	___fldiv@b
  6796     0D6C  3000               	movlw	0
  6797     0D6D  00C5               	movwf	___fldiv@grs+3
  6798     0D6E  3000               	movlw	0
  6799     0D6F  00C4               	movwf	___fldiv@grs+2
  6800     0D70  3000               	movlw	0
  6801     0D71  00C3               	movwf	___fldiv@grs+1
  6802     0D72  3000               	movlw	0
  6803     0D73  00C2               	movwf	___fldiv@grs
  6804     0D74  01C7               	clrf	___fldiv@aexp
  6805     0D75                     l4174:
  6806     0D75  301A               	movlw	26
  6807     0D76  0247               	subwf	___fldiv@aexp,w
  6808     0D77  1803               	btfsc	3,0
  6809     0D78  2DB1               	goto	l4176
  6810     0D79  0847               	movf	___fldiv@aexp,w
  6811     0D7A  1903               	btfsc	3,2
  6812     0D7B  2D93               	goto	l4166
  6813     0D7C  3001               	movlw	1
  6814     0D7D                     u4955:
  6815     0D7D  35BB               	lslf	___fldiv@rem,f
  6816     0D7E  0DBC               	rlf	___fldiv@rem+1,f
  6817     0D7F  0DBD               	rlf	___fldiv@rem+2,f
  6818     0D80  0DBE               	rlf	___fldiv@rem+3,f
  6819     0D81  0B89               	decfsz	9,f
  6820     0D82  2D7D               	goto	u4955
  6821     0D83  3001               	movlw	1
  6822     0D84                     u4965:
  6823     0D84  35B2               	lslf	___fldiv@b,f
  6824     0D85  0DB3               	rlf	___fldiv@b+1,f
  6825     0D86  0DB4               	rlf	___fldiv@b+2,f
  6826     0D87  0DB5               	rlf	___fldiv@b+3,f
  6827     0D88  0B89               	decfsz	9,f
  6828     0D89  2D84               	goto	u4965
  6829     0D8A  1BC5               	btfsc	___fldiv@grs+3,7
  6830     0D8B  1432               	bsf	___fldiv@b,0
  6831     0D8C  3001               	movlw	1
  6832     0D8D                     u4985:
  6833     0D8D  35C2               	lslf	___fldiv@grs,f
  6834     0D8E  0DC3               	rlf	___fldiv@grs+1,f
  6835     0D8F  0DC4               	rlf	___fldiv@grs+2,f
  6836     0D90  0DC5               	rlf	___fldiv@grs+3,f
  6837     0D91  0B89               	decfsz	9,f
  6838     0D92  2D8D               	goto	u4985
  6839     0D93                     l4166:
  6840     0D93  0831               	movf	___fldiv@a+3,w
  6841     0D94  023E               	subwf	___fldiv@rem+3,w
  6842     0D95  1D03               	skipz
  6843     0D96  2DA1               	goto	u4995
  6844     0D97  0830               	movf	___fldiv@a+2,w
  6845     0D98  023D               	subwf	___fldiv@rem+2,w
  6846     0D99  1D03               	skipz
  6847     0D9A  2DA1               	goto	u4995
  6848     0D9B  082F               	movf	___fldiv@a+1,w
  6849     0D9C  023C               	subwf	___fldiv@rem+1,w
  6850     0D9D  1D03               	skipz
  6851     0D9E  2DA1               	goto	u4995
  6852     0D9F  082E               	movf	___fldiv@a,w
  6853     0DA0  023B               	subwf	___fldiv@rem,w
  6854     0DA1                     u4995:
  6855     0DA1  1C03               	skipc
  6856     0DA2  2DAC               	goto	l4172
  6857     0DA3  1745               	bsf	___fldiv@grs+3,6
  6858     0DA4  082E               	movf	___fldiv@a,w
  6859     0DA5  02BB               	subwf	___fldiv@rem,f
  6860     0DA6  082F               	movf	___fldiv@a+1,w
  6861     0DA7  3BBC               	subwfb	___fldiv@rem+1,f
  6862     0DA8  0830               	movf	___fldiv@a+2,w
  6863     0DA9  3BBD               	subwfb	___fldiv@rem+2,f
  6864     0DAA  0831               	movf	___fldiv@a+3,w
  6865     0DAB  3BBE               	subwfb	___fldiv@rem+3,f
  6866     0DAC                     l4172:
  6867     0DAC  3001               	movlw	1
  6868     0DAD  00B6               	movwf	??___fldiv
  6869     0DAE  0836               	movf	??___fldiv,w
  6870     0DAF  07C7               	addwf	___fldiv@aexp,f
  6871     0DB0  2D75               	goto	l4174
  6872     0DB1                     l4176:
  6873     0DB1  083E               	movf	___fldiv@rem+3,w
  6874     0DB2  043D               	iorwf	___fldiv@rem+2,w
  6875     0DB3  043C               	iorwf	___fldiv@rem+1,w
  6876     0DB4  043B               	iorwf	___fldiv@rem,w
  6877     0DB5  1D03               	btfss	3,2
  6878     0DB6  1442               	bsf	___fldiv@grs,0
  6879     0DB7                     l4190:
  6880     0DB7  1BB4               	btfsc	___fldiv@b+2,7
  6881     0DB8  2DCE               	goto	l4192
  6882     0DB9  3001               	movlw	1
  6883     0DBA                     u5025:
  6884     0DBA  35B2               	lslf	___fldiv@b,f
  6885     0DBB  0DB3               	rlf	___fldiv@b+1,f
  6886     0DBC  0DB4               	rlf	___fldiv@b+2,f
  6887     0DBD  0DB5               	rlf	___fldiv@b+3,f
  6888     0DBE  0B89               	decfsz	9,f
  6889     0DBF  2DBA               	goto	u5025
  6890     0DC0  1BC5               	btfsc	___fldiv@grs+3,7
  6891     0DC1  1432               	bsf	___fldiv@b,0
  6892     0DC2  3001               	movlw	1
  6893     0DC3                     u5045:
  6894     0DC3  35C2               	lslf	___fldiv@grs,f
  6895     0DC4  0DC3               	rlf	___fldiv@grs+1,f
  6896     0DC5  0DC4               	rlf	___fldiv@grs+2,f
  6897     0DC6  0DC5               	rlf	___fldiv@grs+3,f
  6898     0DC7  0B89               	decfsz	9,f
  6899     0DC8  2DC3               	goto	u5045
  6900     0DC9  30FF               	movlw	255
  6901     0DCA  07C0               	addwf	___fldiv@new_exp,f
  6902     0DCB  30FF               	movlw	255
  6903     0DCC  3DC1               	addwfc	___fldiv@new_exp+1,f
  6904     0DCD  2DB7               	goto	l4190
  6905     0DCE                     l4192:
  6906     0DCE  01C7               	clrf	___fldiv@aexp
  6907     0DCF  1FC5               	btfss	___fldiv@grs+3,7
  6908     0DD0  2DE7               	goto	l4202
  6909     0DD1  30FF               	movlw	255
  6910     0DD2  0542               	andwf	___fldiv@grs,w
  6911     0DD3  00B6               	movwf	??___fldiv
  6912     0DD4  30FF               	movlw	255
  6913     0DD5  0543               	andwf	___fldiv@grs+1,w
  6914     0DD6  00B7               	movwf	??___fldiv+1
  6915     0DD7  30FF               	movlw	255
  6916     0DD8  0544               	andwf	___fldiv@grs+2,w
  6917     0DD9  00B8               	movwf	??___fldiv+2
  6918     0DDA  307F               	movlw	127
  6919     0DDB  0545               	andwf	___fldiv@grs+3,w
  6920     0DDC  00B9               	movwf	??___fldiv+3
  6921     0DDD  0839               	movf	??___fldiv+3,w
  6922     0DDE  0438               	iorwf	??___fldiv+2,w
  6923     0DDF  0437               	iorwf	??___fldiv+1,w
  6924     0DE0  0436               	iorwf	??___fldiv,w
  6925     0DE1  1903               	skipnz
  6926     0DE2  1832               	btfsc	___fldiv@b,0
  6927     0DE3  2DE5               	goto	l4198
  6928     0DE4  2DE7               	goto	l4202
  6929     0DE5                     l4198:
  6930     0DE5  01C7               	clrf	___fldiv@aexp
  6931     0DE6  0AC7               	incf	___fldiv@aexp,f
  6932     0DE7                     l4202:
  6933     0DE7  0847               	movf	___fldiv@aexp,w
  6934     0DE8  1903               	btfsc	3,2
  6935     0DE9  2E10               	goto	l4212
  6936     0DEA  3001               	movlw	1
  6937     0DEB  07B2               	addwf	___fldiv@b,f
  6938     0DEC  3000               	movlw	0
  6939     0DED  3DB3               	addwfc	___fldiv@b+1,f
  6940     0DEE  3000               	movlw	0
  6941     0DEF  3DB4               	addwfc	___fldiv@b+2,f
  6942     0DF0  3000               	movlw	0
  6943     0DF1  3DB5               	addwfc	___fldiv@b+3,f
  6944     0DF2  1C35               	btfss	___fldiv@b+3,0
  6945     0DF3  2E10               	goto	l4212
  6946     0DF4  0832               	movf	___fldiv@b,w
  6947     0DF5  00B6               	movwf	??___fldiv
  6948     0DF6  0833               	movf	___fldiv@b+1,w
  6949     0DF7  00B7               	movwf	??___fldiv+1
  6950     0DF8  0834               	movf	___fldiv@b+2,w
  6951     0DF9  00B8               	movwf	??___fldiv+2
  6952     0DFA  0835               	movf	___fldiv@b+3,w
  6953     0DFB  00B9               	movwf	??___fldiv+3
  6954     0DFC  3001               	movlw	1
  6955     0DFD  00BA               	movwf	??___fldiv+4
  6956     0DFE                     u5115:
  6957     0DFE  37B9               	asrf	??___fldiv+3,f
  6958     0DFF  0CB8               	rrf	??___fldiv+2,f
  6959     0E00  0CB7               	rrf	??___fldiv+1,f
  6960     0E01  0CB6               	rrf	??___fldiv,f
  6961     0E02  0BBA               	decfsz	??___fldiv+4,f
  6962     0E03  2DFE               	goto	u5115
  6963     0E04  0839               	movf	??___fldiv+3,w
  6964     0E05  00B5               	movwf	___fldiv@b+3
  6965     0E06  0838               	movf	??___fldiv+2,w
  6966     0E07  00B4               	movwf	___fldiv@b+2
  6967     0E08  0837               	movf	??___fldiv+1,w
  6968     0E09  00B3               	movwf	___fldiv@b+1
  6969     0E0A  0836               	movf	??___fldiv,w
  6970     0E0B  00B2               	movwf	___fldiv@b
  6971     0E0C  3001               	movlw	1
  6972     0E0D  07C0               	addwf	___fldiv@new_exp,f
  6973     0E0E  3000               	movlw	0
  6974     0E0F  3DC1               	addwfc	___fldiv@new_exp+1,f
  6975     0E10                     l4212:
  6976     0E10  0841               	movf	___fldiv@new_exp+1,w
  6977     0E11  3A80               	xorlw	128
  6978     0E12  00B6               	movwf	??___fldiv
  6979     0E13  3080               	movlw	128
  6980     0E14  0236               	subwf	??___fldiv,w
  6981     0E15  1D03               	skipz
  6982     0E16  2E19               	goto	u5125
  6983     0E17  30FF               	movlw	255
  6984     0E18  0240               	subwf	___fldiv@new_exp,w
  6985     0E19                     u5125:
  6986     0E19  1C03               	skipc
  6987     0E1A  2E28               	goto	l1210
  6988     0E1B  30FF               	movlw	255
  6989     0E1C  0020               	movlb	0	; select bank0
  6990     0E1D  00C0               	movwf	___fldiv@new_exp
  6991     0E1E  3000               	movlw	0
  6992     0E1F  00C1               	movwf	___fldiv@new_exp+1
  6993     0E20  3000               	movlw	0
  6994     0E21  00B5               	movwf	___fldiv@b+3
  6995     0E22  3000               	movlw	0
  6996     0E23  00B4               	movwf	___fldiv@b+2
  6997     0E24  3000               	movlw	0
  6998     0E25  00B3               	movwf	___fldiv@b+1
  6999     0E26  3000               	movlw	0
  7000     0E27  00B2               	movwf	___fldiv@b
  7001     0E28                     l1210:
  7002     0E28  0020               	movlb	0	; select bank0
  7003     0E29  0841               	movf	___fldiv@new_exp+1,w
  7004     0E2A  3A80               	xorlw	128
  7005     0E2B  00B6               	movwf	??___fldiv
  7006     0E2C  3080               	movlw	128
  7007     0E2D  0236               	subwf	??___fldiv,w
  7008     0E2E  1D03               	skipz
  7009     0E2F  2E32               	goto	u5135
  7010     0E30  3001               	movlw	1
  7011     0E31  0240               	subwf	___fldiv@new_exp,w
  7012     0E32                     u5135:
  7013     0E32  1803               	skipnc
  7014     0E33  2E40               	goto	l1211
  7015     0E34  0020               	movlb	0	; select bank0
  7016     0E35  01C0               	clrf	___fldiv@new_exp
  7017     0E36  01C1               	clrf	___fldiv@new_exp+1
  7018     0E37  3000               	movlw	0
  7019     0E38  00B5               	movwf	___fldiv@b+3
  7020     0E39  3000               	movlw	0
  7021     0E3A  00B4               	movwf	___fldiv@b+2
  7022     0E3B  3000               	movlw	0
  7023     0E3C  00B3               	movwf	___fldiv@b+1
  7024     0E3D  3000               	movlw	0
  7025     0E3E  00B2               	movwf	___fldiv@b
  7026     0E3F  01BF               	clrf	___fldiv@sign
  7027     0E40                     l1211:
  7028     0E40  0020               	movlb	0	; select bank0
  7029     0E41  0840               	movf	___fldiv@new_exp,w
  7030     0E42  00C6               	movwf	___fldiv@bexp
  7031     0E43  1C46               	btfss	___fldiv@bexp,0
  7032     0E44  2E47               	goto	l4226
  7033     0E45  17B4               	bsf	___fldiv@b+2,7
  7034     0E46  2E4B               	goto	l1213
  7035     0E47                     l4226:
  7036     0E47  307F               	movlw	127
  7037     0E48  00B6               	movwf	??___fldiv
  7038     0E49  0836               	movf	??___fldiv,w
  7039     0E4A  05B4               	andwf	___fldiv@b+2,f
  7040     0E4B                     l1213:
  7041     0E4B  3646               	lsrf	___fldiv@bexp,w
  7042     0E4C  00B5               	movwf	___fldiv@b+3
  7043     0E4D  2D33               	goto	L4
  7044     0E4E                     __end_of___fldiv:
  7045                           
  7046                           	psect	text14
  7047     0977                     __ptext14:	
  7048 ;; *************** function ___fltol *****************
  7049 ;; Defined at:
  7050 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;  f1              4    0[BANK0 ] unsigned char 
  7053 ;; Auto vars:     Size  Location     Type
  7054 ;;  exp1            1    5[COMMON] unsigned char 
  7055 ;;  sign1           1    4[COMMON] unsigned char 
  7056 ;; Return value:  Size  Location     Type
  7057 ;;                  4    0[BANK0 ] long 
  7058 ;; Registers used:
  7059 ;;		wreg, status,2, status,0
  7060 ;; Tracked objects:
  7061 ;;		On entry : 0/0
  7062 ;;		On exit  : 0/0
  7063 ;;		Unchanged: 0/0
  7064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7065 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7066 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7067 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7068 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7069 ;;Total ram usage:       10 bytes
  7070 ;; Hardware stack levels used: 1
  7071 ;; Hardware stack levels required when called: 5
  7072 ;; This function calls:
  7073 ;;		Nothing
  7074 ;; This function is called by:
  7075 ;;		__ReadSensor
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079     0977                     ___fltol:	
  7080                           ;psect for function ___fltol
  7081                           
  7082                           
  7083                           ;incstack = 0
  7084                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7085     0977  1003               	clrc
  7086     0978  0020               	movlb	0	; select bank0
  7087     0979  0D22               	rlf	___fltol@f1+2,w
  7088     097A  0D23               	rlf	___fltol@f1+3,w
  7089     097B  00F5               	movwf	___fltol@exp1
  7090     097C  0875               	movf	___fltol@exp1,w
  7091     097D  1D03               	btfss	3,2
  7092     097E  2988               	goto	l4604
  7093     097F                     l4600:
  7094     097F  3000               	movlw	0
  7095     0980  00A3               	movwf	?___fltol+3
  7096     0981  3000               	movlw	0
  7097     0982  00A2               	movwf	?___fltol+2
  7098     0983  3000               	movlw	0
  7099     0984  00A1               	movwf	?___fltol+1
  7100     0985  3000               	movlw	0
  7101     0986  00A0               	movwf	?___fltol
  7102     0987  0008               	return
  7103     0988                     l4604:
  7104     0988  0820               	movf	___fltol@f1,w
  7105     0989  00A4               	movwf	??___fltol
  7106     098A  0821               	movf	___fltol@f1+1,w
  7107     098B  00A5               	movwf	??___fltol+1
  7108     098C  0822               	movf	___fltol@f1+2,w
  7109     098D  00A6               	movwf	??___fltol+2
  7110     098E  0823               	movf	___fltol@f1+3,w
  7111     098F  00A7               	movwf	??___fltol+3
  7112     0990  301F               	movlw	31
  7113     0991                     u5765:
  7114     0991  36A7               	lsrf	??___fltol+3,f
  7115     0992  0CA6               	rrf	??___fltol+2,f
  7116     0993  0CA5               	rrf	??___fltol+1,f
  7117     0994  0CA4               	rrf	??___fltol,f
  7118     0995  0B89               	decfsz	9,f
  7119     0996  2991               	goto	u5765
  7120     0997  0824               	movf	??___fltol,w
  7121     0998  00F4               	movwf	___fltol@sign1
  7122     0999  17A2               	bsf	___fltol@f1+2,7
  7123     099A  30FF               	movlw	255
  7124     099B  05A0               	andwf	___fltol@f1,f
  7125     099C  30FF               	movlw	255
  7126     099D  05A1               	andwf	___fltol@f1+1,f
  7127     099E  30FF               	movlw	255
  7128     099F  05A2               	andwf	___fltol@f1+2,f
  7129     09A0  3000               	movlw	0
  7130     09A1  05A3               	andwf	___fltol@f1+3,f
  7131     09A2  3096               	movlw	150
  7132     09A3  02F5               	subwf	___fltol@exp1,f
  7133     09A4  1FF5               	btfss	___fltol@exp1,7
  7134     09A5  29B9               	goto	l4622
  7135     09A6  0875               	movf	___fltol@exp1,w
  7136     09A7  3A80               	xorlw	128
  7137     09A8  3E97               	addlw	151
  7138     09A9  1C03               	btfss	3,0
  7139     09AA  297F               	goto	l4600
  7140     09AB                     l4620:
  7141     09AB  3001               	movlw	1
  7142     09AC                     u5795:
  7143     09AC  36A3               	lsrf	___fltol@f1+3,f
  7144     09AD  0CA2               	rrf	___fltol@f1+2,f
  7145     09AE  0CA1               	rrf	___fltol@f1+1,f
  7146     09AF  0CA0               	rrf	___fltol@f1,f
  7147     09B0  0B89               	decfsz	9,f
  7148     09B1  29AC               	goto	u5795
  7149     09B2  3001               	movlw	1
  7150     09B3  00A4               	movwf	??___fltol
  7151     09B4  0824               	movf	??___fltol,w
  7152     09B5  07F5               	addwf	___fltol@exp1,f
  7153     09B6  1903               	btfsc	3,2
  7154     09B7  29CA               	goto	l4630
  7155     09B8  29AB               	goto	l4620
  7156     09B9                     l4622:
  7157     09B9  3020               	movlw	32
  7158     09BA  0275               	subwf	___fltol@exp1,w
  7159     09BB  1803               	btfsc	3,0
  7160     09BC  297F               	goto	l4600
  7161     09BD                     l1033:
  7162     09BD  0875               	movf	___fltol@exp1,w
  7163     09BE  1903               	btfsc	3,2
  7164     09BF  29CA               	goto	l4630
  7165     09C0  3001               	movlw	1
  7166     09C1                     u5825:
  7167     09C1  35A0               	lslf	___fltol@f1,f
  7168     09C2  0DA1               	rlf	___fltol@f1+1,f
  7169     09C3  0DA2               	rlf	___fltol@f1+2,f
  7170     09C4  0DA3               	rlf	___fltol@f1+3,f
  7171     09C5  0B89               	decfsz	9,f
  7172     09C6  29C1               	goto	u5825
  7173     09C7  3001               	movlw	1
  7174     09C8  02F5               	subwf	___fltol@exp1,f
  7175     09C9  29BD               	goto	l1033
  7176     09CA                     l4630:
  7177     09CA  0874               	movf	___fltol@sign1,w
  7178     09CB  1903               	btfsc	3,2
  7179     09CC  0008               	return
  7180     09CD  09A0               	comf	___fltol@f1,f
  7181     09CE  09A1               	comf	___fltol@f1+1,f
  7182     09CF  09A2               	comf	___fltol@f1+2,f
  7183     09D0  09A3               	comf	___fltol@f1+3,f
  7184     09D1  0AA0               	incf	___fltol@f1,f
  7185     09D2  1903               	skipnz
  7186     09D3  0AA1               	incf	___fltol@f1+1,f
  7187     09D4  1903               	skipnz
  7188     09D5  0AA2               	incf	___fltol@f1+2,f
  7189     09D6  1903               	skipnz
  7190     09D7  0AA3               	incf	___fltol@f1+3,f
  7191     09D8  0008               	return
  7192     09D9                     __end_of___fltol:
  7193                           
  7194                           	psect	text15
  7195     0802                     __ptext15:	
  7196 ;; *************** function _ADC_GetConversion *****************
  7197 ;; Defined at:
  7198 ;;		line 112 in file "mcc_generated_files/adc.c"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;  channel         1    wreg     enum E2490
  7201 ;; Auto vars:     Size  Location     Type
  7202 ;;  channel         1    1[BANK0 ] enum E2490
  7203 ;; Return value:  Size  Location     Type
  7204 ;;                  2    4[COMMON] unsigned short 
  7205 ;; Registers used:
  7206 ;;		wreg, status,2, status,0
  7207 ;; Tracked objects:
  7208 ;;		On entry : 0/0
  7209 ;;		On exit  : 0/0
  7210 ;;		Unchanged: 0/0
  7211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7212 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7213 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7214 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7215 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7216 ;;Total ram usage:        4 bytes
  7217 ;; Hardware stack levels used: 1
  7218 ;; Hardware stack levels required when called: 5
  7219 ;; This function calls:
  7220 ;;		Nothing
  7221 ;; This function is called by:
  7222 ;;		__ReadSensor
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226     0802                     _ADC_GetConversion:	
  7227                           ;psect for function _ADC_GetConversion
  7228                           
  7229                           
  7230                           ;incstack = 0
  7231                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  7232                           ;ADC_GetConversion@channel stored from wreg
  7233     0802  0020               	movlb	0	; select bank0
  7234     0803  00A1               	movwf	ADC_GetConversion@channel
  7235                           
  7236                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  7237     0804  0821               	movf	ADC_GetConversion@channel,w
  7238     0805  00A0               	movwf	??_ADC_GetConversion
  7239     0806  0DA0               	rlf	??_ADC_GetConversion,f
  7240     0807  0DA0               	rlf	??_ADC_GetConversion,f
  7241     0808  0021               	movlb	1	; select bank1
  7242     0809  081D               	movf	29,w	;volatile
  7243     080A  0020               	movlb	0	; select bank0
  7244     080B  0620               	xorwf	??_ADC_GetConversion,w
  7245     080C  3983               	andlw	-125
  7246     080D  0620               	xorwf	??_ADC_GetConversion,w
  7247     080E  0021               	movlb	1	; select bank1
  7248     080F  009D               	movwf	29	;volatile
  7249                           
  7250                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  7251     0810  141D               	bsf	29,0	;volatile
  7252                           
  7253                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  7254     0811  3003               	movlw	3
  7255     0812                     u6077:
  7256     0812  0B89               	decfsz	9,f
  7257     0813  2812               	goto	u6077
  7258     0814  0000               	nop
  7259                           
  7260                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  7261     0815  0021               	movlb	1	; select bank1
  7262     0816  149D               	bsf	29,1	;volatile
  7263     0817                     l93:	
  7264                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  7265                           
  7266                           
  7267                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  7268     0817  189D               	btfsc	29,1	;volatile
  7269     0818  2817               	goto	l93
  7270                           
  7271                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  7272     0819  081C               	movf	28,w	;volatile
  7273     081A  00F5               	movwf	?_ADC_GetConversion+1
  7274     081B  081B               	movf	27,w	;volatile
  7275     081C  00F4               	movwf	?_ADC_GetConversion
  7276     081D  0008               	return
  7277     081E                     __end_of_ADC_GetConversion:
  7278                           
  7279                           	psect	text16
  7280     09D9                     __ptext16:	
  7281 ;; *************** function __ControlHeat *****************
  7282 ;; Defined at:
  7283 ;;		line 399 in file "main.c"
  7284 ;; Parameters:    Size  Location     Type
  7285 ;;		None
  7286 ;; Auto vars:     Size  Location     Type
  7287 ;;		None
  7288 ;; Return value:  Size  Location     Type
  7289 ;;                  1    wreg      void 
  7290 ;; Registers used:
  7291 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7292 ;; Tracked objects:
  7293 ;;		On entry : 0/0
  7294 ;;		On exit  : 0/0
  7295 ;;		Unchanged: 0/0
  7296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7299 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7300 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7301 ;;Total ram usage:        5 bytes
  7302 ;; Hardware stack levels used: 1
  7303 ;; Hardware stack levels required when called: 6
  7304 ;; This function calls:
  7305 ;;		_EUSART_Write
  7306 ;; This function is called by:
  7307 ;;		_main
  7308 ;; This function uses a non-reentrant model
  7309 ;;
  7310                           
  7311     09D9                     __ControlHeat:	
  7312                           ;psect for function __ControlHeat
  7313                           
  7314                           
  7315                           ;main.c: 401:     if (CURRENT_MODE == HEAT_MODE_0)
  7316                           
  7317                           ;incstack = 0
  7318                           ; Regs used in __ControlHeat: [wreg-fsr0h+status,2+status,0+pclath]
  7319     09D9  0876               	movf	_CURRENT_MODE,w
  7320     09DA  0477               	iorwf	_CURRENT_MODE+1,w
  7321     09DB  1903               	btfsc	3,2
  7322     09DC  29E6               	goto	l4698
  7323     09DD  29E9               	goto	l4702
  7324     09DE                     l4708:
  7325     09DE  3000               	movlw	0
  7326     09DF  0022               	movlb	2	; select bank2
  7327     09E0  0259               	subwf	(_HEAT_CALL_TICKS+1)^(0+256),w
  7328     09E1  303D               	movlw	61
  7329     09E2  1903               	skipnz
  7330     09E3  0258               	subwf	_HEAT_CALL_TICKS^(0+256),w
  7331     09E4  1C03               	skipc
  7332     09E5  2A10               	goto	l4718
  7333     09E6                     l4698:
  7334                           
  7335                           ;main.c: 405:         RELAY_STATUS = 0;
  7336     09E6  0020               	movlb	0	; select bank0
  7337     09E7  01EF               	clrf	_RELAY_STATUS
  7338     09E8  0008               	return
  7339     09E9                     l4702:
  7340     09E9  0877               	movf	_CURRENT_MODE+1,w
  7341     09EA  0085               	movwf	5
  7342     09EB  0876               	movf	_CURRENT_MODE,w
  7343     09EC  0084               	movwf	4
  7344     09ED  3584               	lslf	4,f
  7345     09EE  0D85               	rlf	5,f
  7346     09EF  3000               	movlw	low _SETPOINTS
  7347     09F0  0784               	addwf	4,f
  7348     09F1  3018               	movlw	high _SETPOINTS
  7349     09F2  3D05               	addwfc	5,w
  7350     09F3  3880               	iorlw	128
  7351     09F4  0085               	movwf	5
  7352     09F5  3F00               	moviw [0]fsr0
  7353     09F6  0020               	movlb	0	; select bank0
  7354     09F7  00A0               	movwf	??__ControlHeat
  7355     09F8  3F01               	moviw [1]fsr0
  7356     09F9  00A1               	movwf	??__ControlHeat+1
  7357     09FA  0820               	movf	??__ControlHeat,w
  7358     09FB  3E02               	addlw	2
  7359     09FC  00A2               	movwf	??__ControlHeat+2
  7360     09FD  3000               	movlw	0
  7361     09FE  3D21               	addwfc	??__ControlHeat+1,w
  7362     09FF  00A3               	movwf	??__ControlHeat+3
  7363     0A00  0823               	movf	??__ControlHeat+3,w
  7364     0A01  3A80               	xorlw	128
  7365     0A02  00A4               	movwf	??__ControlHeat+4
  7366     0A03  0022               	movlb	2	; select bank2
  7367     0A04  0853               	movf	(_TEMP+1)^(0+256),w
  7368     0A05  3A80               	xorlw	128
  7369     0A06  0020               	movlb	0	; select bank0
  7370     0A07  0224               	subwf	??__ControlHeat+4,w
  7371     0A08  1D03               	skipz
  7372     0A09  2A0E               	goto	u5905
  7373     0A0A  0022               	movlb	2	; select bank2
  7374     0A0B  0852               	movf	_TEMP^(0+256),w
  7375     0A0C  0020               	movlb	0	; select bank0
  7376     0A0D  0222               	subwf	??__ControlHeat+2,w
  7377     0A0E                     u5905:
  7378     0A0E  1C03               	btfss	3,0
  7379     0A0F  29DE               	goto	l4708
  7380     0A10                     l4718:
  7381     0A10  0877               	movf	_CURRENT_MODE+1,w
  7382     0A11  0085               	movwf	5
  7383     0A12  0876               	movf	_CURRENT_MODE,w
  7384     0A13  0084               	movwf	4
  7385     0A14  3584               	lslf	4,f
  7386     0A15  0D85               	rlf	5,f
  7387     0A16  3000               	movlw	low _SETPOINTS
  7388     0A17  0784               	addwf	4,f
  7389     0A18  3018               	movlw	high _SETPOINTS
  7390     0A19  3D05               	addwfc	5,w
  7391     0A1A  3880               	iorlw	128
  7392     0A1B  0085               	movwf	5
  7393     0A1C  3F00               	moviw [0]fsr0
  7394     0A1D  0020               	movlb	0	; select bank0
  7395     0A1E  00A0               	movwf	??__ControlHeat
  7396     0A1F  3F01               	moviw [1]fsr0
  7397     0A20  00A1               	movwf	??__ControlHeat+1
  7398     0A21  0820               	movf	??__ControlHeat,w
  7399     0A22  3EFF               	addlw	255
  7400     0A23  00A2               	movwf	??__ControlHeat+2
  7401     0A24  30FF               	movlw	255
  7402     0A25  3D21               	addwfc	??__ControlHeat+1,w
  7403     0A26  00A3               	movwf	??__ControlHeat+3
  7404     0A27  0022               	movlb	2	; select bank2
  7405     0A28  0853               	movf	(_TEMP+1)^(0+256),w
  7406     0A29  3A80               	xorlw	128
  7407     0A2A  0020               	movlb	0	; select bank0
  7408     0A2B  00A4               	movwf	??__ControlHeat+4
  7409     0A2C  0823               	movf	??__ControlHeat+3,w
  7410     0A2D  3A80               	xorlw	128
  7411     0A2E  0224               	subwf	??__ControlHeat+4,w
  7412     0A2F  1D03               	skipz
  7413     0A30  2A34               	goto	u5925
  7414     0A31  0822               	movf	??__ControlHeat+2,w
  7415     0A32  0022               	movlb	2	; select bank2
  7416     0A33  0252               	subwf	_TEMP^(0+256),w
  7417     0A34                     u5925:
  7418     0A34  1803               	skipnc
  7419     0A35  0008               	return
  7420     0A36  3000               	movlw	0
  7421     0A37  0022               	movlb	2	; select bank2
  7422     0A38  0259               	subwf	(_HEAT_CALL_TICKS+1)^(0+256),w
  7423     0A39  303D               	movlw	61
  7424     0A3A  1903               	skipnz
  7425     0A3B  0258               	subwf	_HEAT_CALL_TICKS^(0+256),w
  7426     0A3C  1C03               	skipc
  7427     0A3D  0008               	return
  7428                           
  7429                           ;main.c: 436:             RELAY_STATUS = 1;
  7430     0A3E  0020               	movlb	0	; select bank0
  7431     0A3F  01EF               	clrf	_RELAY_STATUS
  7432     0A40  0AEF               	incf	_RELAY_STATUS,f
  7433     0A41  0008               	return
  7434     0A42                     __end_of__ControlHeat:
  7435                           
  7436                           	psect	text17
  7437     1742                     __ptext17:	
  7438 ;; *************** function _EUSART_Write *****************
  7439 ;; Defined at:
  7440 ;;		line 132 in file "mcc_generated_files/eusart.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;  txData          1    wreg     unsigned char 
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;  txData          1    4[COMMON] unsigned char 
  7445 ;; Return value:  Size  Location     Type
  7446 ;;                  1    wreg      void 
  7447 ;; Registers used:
  7448 ;;		wreg
  7449 ;; Tracked objects:
  7450 ;;		On entry : 0/0
  7451 ;;		On exit  : 0/0
  7452 ;;		Unchanged: 0/0
  7453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7455 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7457 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7458 ;;Total ram usage:        1 bytes
  7459 ;; Hardware stack levels used: 1
  7460 ;; Hardware stack levels required when called: 5
  7461 ;; This function calls:
  7462 ;;		Nothing
  7463 ;; This function is called by:
  7464 ;;		__ControlHeat
  7465 ;;		__SendDataToConsole
  7466 ;; This function uses a non-reentrant model
  7467 ;;
  7468                           
  7469     1742                     _EUSART_Write:	
  7470                           ;psect for function _EUSART_Write
  7471                           
  7472                           
  7473                           ;incstack = 0
  7474                           ; Regs used in _EUSART_Write: [wreg]
  7475                           ;EUSART_Write@txData stored from wreg
  7476     1742  00F4               	movwf	EUSART_Write@txData
  7477     1743                     l297:	
  7478                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  7479                           
  7480                           
  7481                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  7482     1743  0020               	movlb	0	; select bank0
  7483     1744  1E11               	btfss	17,4	;volatile
  7484     1745  2F43               	goto	l297
  7485                           
  7486                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  7487     1746  0874               	movf	EUSART_Write@txData,w
  7488     1747  0023               	movlb	3	; select bank3
  7489     1748  009A               	movwf	26	;volatile
  7490     1749  0008               	return
  7491     174A                     __end_of_EUSART_Write:
  7492                           
  7493                           	psect	text18
  7494     17B5                     __ptext18:	
  7495 ;; *************** function _SYSTEM_Initialize *****************
  7496 ;; Defined at:
  7497 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7498 ;; Parameters:    Size  Location     Type
  7499 ;;		None
  7500 ;; Auto vars:     Size  Location     Type
  7501 ;;		None
  7502 ;; Return value:  Size  Location     Type
  7503 ;;                  1    wreg      void 
  7504 ;; Registers used:
  7505 ;;		wreg, status,2, status,0, pclath, cstack
  7506 ;; Tracked objects:
  7507 ;;		On entry : 0/0
  7508 ;;		On exit  : 0/0
  7509 ;;		Unchanged: 0/0
  7510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7515 ;;Total ram usage:        0 bytes
  7516 ;; Hardware stack levels used: 1
  7517 ;; Hardware stack levels required when called: 7
  7518 ;; This function calls:
  7519 ;;		_ADC_Initialize
  7520 ;;		_EUSART_Initialize
  7521 ;;		_OSCILLATOR_Initialize
  7522 ;;		_PIN_MANAGER_Initialize
  7523 ;;		_TMR0_Initialize
  7524 ;;		_TMR1_Initialize
  7525 ;;		_TMR2_Initialize
  7526 ;;		_WDT_Initialize
  7527 ;; This function is called by:
  7528 ;;		_main
  7529 ;; This function uses a non-reentrant model
  7530 ;;
  7531                           
  7532     17B5                     _SYSTEM_Initialize:	
  7533                           ;psect for function _SYSTEM_Initialize
  7534                           
  7535                           
  7536                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  7537                           
  7538                           ;incstack = 0
  7539                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7540     17B5  3197  27E6  3197   	fcall	_PIN_MANAGER_Initialize
  7541                           
  7542                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  7543     17B8  3197  272B  3197   	fcall	_OSCILLATOR_Initialize
  7544                           
  7545                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  7546     17BB  3196  26F1  3197   	fcall	_WDT_Initialize
  7547                           
  7548                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  7549     17BE  3197  273A  3197   	fcall	_ADC_Initialize
  7550                           
  7551                           ;mcc_generated_files/mcc.c: 57:     TMR2_Initialize();
  7552     17C1  3197  2791  3197   	fcall	_TMR2_Initialize
  7553                           
  7554                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
  7555     17C4  3197  27CD  3197   	fcall	_TMR1_Initialize
  7556                           
  7557                           ;mcc_generated_files/mcc.c: 59:     TMR0_Initialize();
  7558     17C7  3197  27A2  3197   	fcall	_TMR0_Initialize
  7559                           
  7560                           ;mcc_generated_files/mcc.c: 60:     EUSART_Initialize();
  7561     17CA  3188  2079         	fcall	_EUSART_Initialize
  7562     17CC  0008               	return
  7563     17CD                     __end_of_SYSTEM_Initialize:
  7564                           
  7565                           	psect	text19
  7566     16F1                     __ptext19:	
  7567 ;; *************** function _WDT_Initialize *****************
  7568 ;; Defined at:
  7569 ;;		line 73 in file "mcc_generated_files/mcc.c"
  7570 ;; Parameters:    Size  Location     Type
  7571 ;;		None
  7572 ;; Auto vars:     Size  Location     Type
  7573 ;;		None
  7574 ;; Return value:  Size  Location     Type
  7575 ;;                  1    wreg      void 
  7576 ;; Registers used:
  7577 ;;		wreg
  7578 ;; Tracked objects:
  7579 ;;		On entry : 0/0
  7580 ;;		On exit  : 0/0
  7581 ;;		Unchanged: 0/0
  7582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7587 ;;Total ram usage:        0 bytes
  7588 ;; Hardware stack levels used: 1
  7589 ;; Hardware stack levels required when called: 5
  7590 ;; This function calls:
  7591 ;;		Nothing
  7592 ;; This function is called by:
  7593 ;;		_SYSTEM_Initialize
  7594 ;; This function uses a non-reentrant model
  7595 ;;
  7596                           
  7597     16F1                     _WDT_Initialize:	
  7598                           ;psect for function _WDT_Initialize
  7599                           
  7600                           
  7601                           ;mcc_generated_files/mcc.c: 76:     WDTCON = 0x16;
  7602                           
  7603                           ;incstack = 0
  7604                           ; Regs used in _WDT_Initialize: [wreg]
  7605     16F1  3016               	movlw	22
  7606     16F2  0021               	movlb	1	; select bank1
  7607     16F3  0097               	movwf	23	;volatile
  7608     16F4  0008               	return
  7609     16F5                     __end_of_WDT_Initialize:
  7610                           
  7611                           	psect	text20
  7612     1791                     __ptext20:	
  7613 ;; *************** function _TMR2_Initialize *****************
  7614 ;; Defined at:
  7615 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;		None
  7618 ;; Auto vars:     Size  Location     Type
  7619 ;;		None
  7620 ;; Return value:  Size  Location     Type
  7621 ;;                  1    wreg      void 
  7622 ;; Registers used:
  7623 ;;		wreg, status,2, status,0, pclath, cstack
  7624 ;; Tracked objects:
  7625 ;;		On entry : 0/0
  7626 ;;		On exit  : 0/0
  7627 ;;		Unchanged: 0/0
  7628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7633 ;;Total ram usage:        0 bytes
  7634 ;; Hardware stack levels used: 1
  7635 ;; Hardware stack levels required when called: 6
  7636 ;; This function calls:
  7637 ;;		_TMR2_SetInterruptHandler
  7638 ;; This function is called by:
  7639 ;;		_SYSTEM_Initialize
  7640 ;; This function uses a non-reentrant model
  7641 ;;
  7642                           
  7643     1791                     _TMR2_Initialize:	
  7644                           ;psect for function _TMR2_Initialize
  7645                           
  7646                           
  7647                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x03;
  7648                           
  7649                           ;incstack = 0
  7650                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7651     1791  3003               	movlw	3
  7652     1792  0020               	movlb	0	; select bank0
  7653     1793  009B               	movwf	27	;volatile
  7654                           
  7655                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  7656     1794  019A               	clrf	26	;volatile
  7657                           
  7658                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  7659     1795  1091               	bcf	17,1	;volatile
  7660                           
  7661                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  7662     1796  0021               	movlb	1	; select bank1
  7663     1797  1491               	bsf	17,1	;volatile
  7664                           
  7665                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  7666     1798  30F0               	movlw	low _TMR2_DefaultInterruptHandler
  7667     1799  00F4               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  7668     179A  3016               	movlw	high _TMR2_DefaultInterruptHandler
  7669     179B  00F5               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  7670     179C  3197  2718         	fcall	_TMR2_SetInterruptHandler
  7671                           
  7672                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x7E;
  7673     179E  307E               	movlw	126
  7674     179F  0020               	movlb	0	; select bank0
  7675     17A0  009C               	movwf	28	;volatile
  7676     17A1  0008               	return
  7677     17A2                     __end_of_TMR2_Initialize:
  7678                           
  7679                           	psect	text21
  7680     1718                     __ptext21:	
  7681 ;; *************** function _TMR2_SetInterruptHandler *****************
  7682 ;; Defined at:
  7683 ;;		line 140 in file "mcc_generated_files/tmr2.c"
  7684 ;; Parameters:    Size  Location     Type
  7685 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
  7686 ;;		 -> TMR2_DefaultInterruptHandler(1), _SpkrControlISR(1), 
  7687 ;; Auto vars:     Size  Location     Type
  7688 ;;		None
  7689 ;; Return value:  Size  Location     Type
  7690 ;;                  1    wreg      void 
  7691 ;; Registers used:
  7692 ;;		wreg
  7693 ;; Tracked objects:
  7694 ;;		On entry : 0/0
  7695 ;;		On exit  : 0/0
  7696 ;;		Unchanged: 0/0
  7697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7698 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7701 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7702 ;;Total ram usage:        2 bytes
  7703 ;; Hardware stack levels used: 1
  7704 ;; Hardware stack levels required when called: 5
  7705 ;; This function calls:
  7706 ;;		Nothing
  7707 ;; This function is called by:
  7708 ;;		_main
  7709 ;;		_TMR2_Initialize
  7710 ;; This function uses a non-reentrant model
  7711 ;;
  7712                           
  7713     1718                     _TMR2_SetInterruptHandler:	
  7714                           ;psect for function _TMR2_SetInterruptHandler
  7715                           
  7716                           
  7717                           ;mcc_generated_files/tmr2.c: 141:     TMR2_InterruptHandler = InterruptHandler;
  7718                           
  7719                           ;incstack = 0
  7720                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  7721     1718  0875               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  7722     1719  0021               	movlb	1	; select bank1
  7723     171A  00D2               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
  7724     171B  0874               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  7725     171C  00D1               	movwf	_TMR2_InterruptHandler^(0+128)
  7726     171D  0008               	return
  7727     171E                     __end_of_TMR2_SetInterruptHandler:
  7728                           
  7729                           	psect	text22
  7730     17CD                     __ptext22:	
  7731 ;; *************** function _TMR1_Initialize *****************
  7732 ;; Defined at:
  7733 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  7734 ;; Parameters:    Size  Location     Type
  7735 ;;		None
  7736 ;; Auto vars:     Size  Location     Type
  7737 ;;		None
  7738 ;; Return value:  Size  Location     Type
  7739 ;;                  1    wreg      void 
  7740 ;; Registers used:
  7741 ;;		wreg, status,2, status,0, pclath, cstack
  7742 ;; Tracked objects:
  7743 ;;		On entry : 0/0
  7744 ;;		On exit  : 0/0
  7745 ;;		Unchanged: 0/0
  7746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7751 ;;Total ram usage:        0 bytes
  7752 ;; Hardware stack levels used: 1
  7753 ;; Hardware stack levels required when called: 6
  7754 ;; This function calls:
  7755 ;;		_TMR1_SetInterruptHandler
  7756 ;; This function is called by:
  7757 ;;		_SYSTEM_Initialize
  7758 ;; This function uses a non-reentrant model
  7759 ;;
  7760                           
  7761     17CD                     _TMR1_Initialize:	
  7762                           ;psect for function _TMR1_Initialize
  7763                           
  7764                           
  7765                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  7766                           
  7767                           ;incstack = 0
  7768                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7769     17CD  0020               	movlb	0	; select bank0
  7770     17CE  0199               	clrf	25	;volatile
  7771                           
  7772                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x9E;
  7773     17CF  309E               	movlw	158
  7774     17D0  0097               	movwf	23	;volatile
  7775                           
  7776                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x58;
  7777     17D1  3058               	movlw	88
  7778     17D2  0096               	movwf	22	;volatile
  7779                           
  7780                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  7781     17D3  1011               	bcf	17,0	;volatile
  7782                           
  7783                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  7784     17D4  0817               	movf	23,w	;volatile
  7785     17D5  0021               	movlb	1	; select bank1
  7786     17D6  00C8               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  7787     17D7  0020               	movlb	0	; select bank0
  7788     17D8  0816               	movf	22,w	;volatile
  7789     17D9  0021               	movlb	1	; select bank1
  7790     17DA  00C7               	movwf	_timer1ReloadVal^(0+128)	;volatile
  7791                           
  7792                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  7793     17DB  1411               	bsf	17,0	;volatile
  7794                           
  7795                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  7796     17DC  30EF               	movlw	low _TMR1_DefaultInterruptHandler
  7797     17DD  00F4               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  7798     17DE  3016               	movlw	high _TMR1_DefaultInterruptHandler
  7799     17DF  00F5               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  7800     17E0  3197  2712         	fcall	_TMR1_SetInterruptHandler
  7801                           
  7802                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x31;
  7803     17E2  3031               	movlw	49
  7804     17E3  0020               	movlb	0	; select bank0
  7805     17E4  0098               	movwf	24	;volatile
  7806     17E5  0008               	return
  7807     17E6                     __end_of_TMR1_Initialize:
  7808                           
  7809                           	psect	text23
  7810     1712                     __ptext23:	
  7811 ;; *************** function _TMR1_SetInterruptHandler *****************
  7812 ;; Defined at:
  7813 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  7814 ;; Parameters:    Size  Location     Type
  7815 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
  7816 ;;		 -> _LogicControlISR(1), TMR1_DefaultInterruptHandler(1), 
  7817 ;; Auto vars:     Size  Location     Type
  7818 ;;		None
  7819 ;; Return value:  Size  Location     Type
  7820 ;;                  1    wreg      void 
  7821 ;; Registers used:
  7822 ;;		wreg
  7823 ;; Tracked objects:
  7824 ;;		On entry : 0/0
  7825 ;;		On exit  : 0/0
  7826 ;;		Unchanged: 0/0
  7827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7828 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7831 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7832 ;;Total ram usage:        2 bytes
  7833 ;; Hardware stack levels used: 1
  7834 ;; Hardware stack levels required when called: 5
  7835 ;; This function calls:
  7836 ;;		Nothing
  7837 ;; This function is called by:
  7838 ;;		_TMR1_Initialize
  7839 ;;		_main
  7840 ;; This function uses a non-reentrant model
  7841 ;;
  7842                           
  7843     1712                     _TMR1_SetInterruptHandler:	
  7844                           ;psect for function _TMR1_SetInterruptHandler
  7845                           
  7846                           
  7847                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  7848                           
  7849                           ;incstack = 0
  7850                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  7851     1712  0875               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  7852     1713  0021               	movlb	1	; select bank1
  7853     1714  00DA               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
  7854     1715  0874               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  7855     1716  00D9               	movwf	_TMR1_InterruptHandler^(0+128)
  7856     1717  0008               	return
  7857     1718                     __end_of_TMR1_SetInterruptHandler:
  7858                           
  7859                           	psect	text24
  7860     17A2                     __ptext24:	
  7861 ;; *************** function _TMR0_Initialize *****************
  7862 ;; Defined at:
  7863 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  7864 ;; Parameters:    Size  Location     Type
  7865 ;;		None
  7866 ;; Auto vars:     Size  Location     Type
  7867 ;;		None
  7868 ;; Return value:  Size  Location     Type
  7869 ;;                  1    wreg      void 
  7870 ;; Registers used:
  7871 ;;		wreg, status,2, status,0, pclath, cstack
  7872 ;; Tracked objects:
  7873 ;;		On entry : 0/0
  7874 ;;		On exit  : 0/0
  7875 ;;		Unchanged: 0/0
  7876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7881 ;;Total ram usage:        0 bytes
  7882 ;; Hardware stack levels used: 1
  7883 ;; Hardware stack levels required when called: 6
  7884 ;; This function calls:
  7885 ;;		_TMR0_SetInterruptHandler
  7886 ;; This function is called by:
  7887 ;;		_SYSTEM_Initialize
  7888 ;; This function uses a non-reentrant model
  7889 ;;
  7890                           
  7891     17A2                     _TMR0_Initialize:	
  7892                           ;psect for function _TMR0_Initialize
  7893                           
  7894                           
  7895                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  7896                           
  7897                           ;incstack = 0
  7898                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7899     17A2  0021               	movlb	1	; select bank1
  7900     17A3  0815               	movf	21,w	;volatile
  7901     17A4  39C0               	andlw	192
  7902     17A5  3817               	iorlw	23
  7903     17A6  0095               	movwf	21	;volatile
  7904                           
  7905                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0xF8;
  7906     17A7  30F8               	movlw	248
  7907     17A8  0020               	movlb	0	; select bank0
  7908     17A9  0095               	movwf	21	;volatile
  7909                           
  7910                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 248;
  7911     17AA  30F8               	movlw	248
  7912     17AB  00F9               	movwf	_timer0ReloadVal	;volatile
  7913                           
  7914                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  7915     17AC  110B               	bcf	11,2	;volatile
  7916                           
  7917                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  7918     17AD  168B               	bsf	11,5	;volatile
  7919                           
  7920                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  7921     17AE  30EE               	movlw	low _TMR0_DefaultInterruptHandler
  7922     17AF  00F4               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  7923     17B0  3016               	movlw	high _TMR0_DefaultInterruptHandler
  7924     17B1  00F5               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  7925     17B2  3197  270C         	fcall	_TMR0_SetInterruptHandler
  7926     17B4  0008               	return
  7927     17B5                     __end_of_TMR0_Initialize:
  7928                           
  7929                           	psect	text25
  7930     170C                     __ptext25:	
  7931 ;; *************** function _TMR0_SetInterruptHandler *****************
  7932 ;; Defined at:
  7933 ;;		line 133 in file "mcc_generated_files/tmr0.c"
  7934 ;; Parameters:    Size  Location     Type
  7935 ;;  InterruptHan    2    4[COMMON] PTR FTN()void 
  7936 ;;		 -> _UIControlISR(1), TMR0_DefaultInterruptHandler(1), 
  7937 ;; Auto vars:     Size  Location     Type
  7938 ;;		None
  7939 ;; Return value:  Size  Location     Type
  7940 ;;                  1    wreg      void 
  7941 ;; Registers used:
  7942 ;;		wreg
  7943 ;; Tracked objects:
  7944 ;;		On entry : 0/0
  7945 ;;		On exit  : 0/0
  7946 ;;		Unchanged: 0/0
  7947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7948 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7951 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7952 ;;Total ram usage:        2 bytes
  7953 ;; Hardware stack levels used: 1
  7954 ;; Hardware stack levels required when called: 5
  7955 ;; This function calls:
  7956 ;;		Nothing
  7957 ;; This function is called by:
  7958 ;;		_TMR0_Initialize
  7959 ;;		_main
  7960 ;; This function uses a non-reentrant model
  7961 ;;
  7962                           
  7963     170C                     _TMR0_SetInterruptHandler:	
  7964                           ;psect for function _TMR0_SetInterruptHandler
  7965                           
  7966                           
  7967                           ;mcc_generated_files/tmr0.c: 134:     TMR0_InterruptHandler = InterruptHandler;
  7968                           
  7969                           ;incstack = 0
  7970                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  7971     170C  0875               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  7972     170D  0021               	movlb	1	; select bank1
  7973     170E  00DC               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  7974     170F  0874               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  7975     1710  00DB               	movwf	_TMR0_InterruptHandler^(0+128)
  7976     1711  0008               	return
  7977     1712                     __end_of_TMR0_SetInterruptHandler:
  7978                           
  7979                           	psect	text26
  7980     17E6                     __ptext26:	
  7981 ;; *************** function _PIN_MANAGER_Initialize *****************
  7982 ;; Defined at:
  7983 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7984 ;; Parameters:    Size  Location     Type
  7985 ;;		None
  7986 ;; Auto vars:     Size  Location     Type
  7987 ;;		None
  7988 ;; Return value:  Size  Location     Type
  7989 ;;                  1    wreg      void 
  7990 ;; Registers used:
  7991 ;;		wreg, status,2
  7992 ;; Tracked objects:
  7993 ;;		On entry : 0/0
  7994 ;;		On exit  : 0/0
  7995 ;;		Unchanged: 0/0
  7996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8001 ;;Total ram usage:        0 bytes
  8002 ;; Hardware stack levels used: 1
  8003 ;; Hardware stack levels required when called: 5
  8004 ;; This function calls:
  8005 ;;		Nothing
  8006 ;; This function is called by:
  8007 ;;		_SYSTEM_Initialize
  8008 ;; This function uses a non-reentrant model
  8009 ;;
  8010                           
  8011     17E6                     _PIN_MANAGER_Initialize:	
  8012                           ;psect for function _PIN_MANAGER_Initialize
  8013                           
  8014                           
  8015                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x04;
  8016                           
  8017                           ;incstack = 0
  8018                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8019     17E6  3004               	movlw	4
  8020     17E7  0022               	movlb	2	; select bank2
  8021     17E8  008C               	movwf	12	;volatile
  8022                           
  8023                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x0C;
  8024     17E9  300C               	movlw	12
  8025     17EA  008D               	movwf	13	;volatile
  8026                           
  8027                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xF3;
  8028     17EB  30F3               	movlw	243
  8029     17EC  0021               	movlb	1	; select bank1
  8030     17ED  008C               	movwf	12	;volatile
  8031                           
  8032                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xB1;
  8033     17EE  30B1               	movlw	177
  8034     17EF  008D               	movwf	13	;volatile
  8035                           
  8036                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0x90;
  8037     17F0  3090               	movlw	144
  8038     17F1  0023               	movlb	3	; select bank3
  8039     17F2  008D               	movwf	13	;volatile
  8040                           
  8041                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x01;
  8042     17F3  3001               	movlw	1
  8043     17F4  008C               	movwf	12	;volatile
  8044                           
  8045                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x01;
  8046     17F5  3001               	movlw	1
  8047     17F6  0024               	movlb	4	; select bank4
  8048     17F7  008D               	movwf	13	;volatile
  8049                           
  8050                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  8051     17F8  018C               	clrf	12	;volatile
  8052                           
  8053                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 0;
  8054     17F9  0021               	movlb	1	; select bank1
  8055     17FA  1395               	bcf	21,7	;volatile
  8056                           
  8057                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  8058     17FB  0022               	movlb	2	; select bank2
  8059     17FC  019D               	clrf	29	;volatile
  8060                           
  8061                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x01;
  8062     17FD  3001               	movlw	1
  8063     17FE  009E               	movwf	30	;volatile
  8064     17FF  0008               	return
  8065     1800                     __end_of_PIN_MANAGER_Initialize:
  8066                           
  8067                           	psect	text27
  8068     172B                     __ptext27:	
  8069 ;; *************** function _OSCILLATOR_Initialize *****************
  8070 ;; Defined at:
  8071 ;;		line 63 in file "mcc_generated_files/mcc.c"
  8072 ;; Parameters:    Size  Location     Type
  8073 ;;		None
  8074 ;; Auto vars:     Size  Location     Type
  8075 ;;		None
  8076 ;; Return value:  Size  Location     Type
  8077 ;;                  1    wreg      void 
  8078 ;; Registers used:
  8079 ;;		wreg, status,2
  8080 ;; Tracked objects:
  8081 ;;		On entry : 0/0
  8082 ;;		On exit  : 0/0
  8083 ;;		Unchanged: 0/0
  8084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8089 ;;Total ram usage:        0 bytes
  8090 ;; Hardware stack levels used: 1
  8091 ;; Hardware stack levels required when called: 5
  8092 ;; This function calls:
  8093 ;;		Nothing
  8094 ;; This function is called by:
  8095 ;;		_SYSTEM_Initialize
  8096 ;; This function uses a non-reentrant model
  8097 ;;
  8098                           
  8099     172B                     _OSCILLATOR_Initialize:	
  8100                           ;psect for function _OSCILLATOR_Initialize
  8101                           
  8102                           
  8103                           ;mcc_generated_files/mcc.c: 66:     OSCCON = 0x70;
  8104                           
  8105                           ;incstack = 0
  8106                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8107     172B  3070               	movlw	112
  8108     172C  0021               	movlb	1	; select bank1
  8109     172D  0099               	movwf	25	;volatile
  8110                           
  8111                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  8112     172E  0198               	clrf	24	;volatile
  8113                           
  8114                           ;mcc_generated_files/mcc.c: 70:     BORCON = 0x00;
  8115     172F  0022               	movlb	2	; select bank2
  8116     1730  0196               	clrf	22	;volatile
  8117     1731  0008               	return
  8118     1732                     __end_of_OSCILLATOR_Initialize:
  8119                           
  8120                           	psect	text28
  8121     0879                     __ptext28:	
  8122 ;; *************** function _EUSART_Initialize *****************
  8123 ;; Defined at:
  8124 ;;		line 66 in file "mcc_generated_files/eusart.c"
  8125 ;; Parameters:    Size  Location     Type
  8126 ;;		None
  8127 ;; Auto vars:     Size  Location     Type
  8128 ;;		None
  8129 ;; Return value:  Size  Location     Type
  8130 ;;                  1    wreg      void 
  8131 ;; Registers used:
  8132 ;;		wreg, status,2, status,0, pclath, cstack
  8133 ;; Tracked objects:
  8134 ;;		On entry : 0/0
  8135 ;;		On exit  : 0/0
  8136 ;;		Unchanged: 0/0
  8137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8142 ;;Total ram usage:        0 bytes
  8143 ;; Hardware stack levels used: 1
  8144 ;; Hardware stack levels required when called: 6
  8145 ;; This function calls:
  8146 ;;		_EUSART_SetErrorHandler
  8147 ;;		_EUSART_SetFramingErrorHandler
  8148 ;;		_EUSART_SetOverrunErrorHandler
  8149 ;; This function is called by:
  8150 ;;		_SYSTEM_Initialize
  8151 ;; This function uses a non-reentrant model
  8152 ;;
  8153                           
  8154     0879                     _EUSART_Initialize:	
  8155                           ;psect for function _EUSART_Initialize
  8156                           
  8157                           
  8158                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  8159                           
  8160                           ;incstack = 0
  8161                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8162     0879  3008               	movlw	8
  8163     087A  0023               	movlb	3	; select bank3
  8164     087B  009F               	movwf	31	;volatile
  8165                           
  8166                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x80;
  8167     087C  3080               	movlw	128
  8168     087D  009D               	movwf	29	;volatile
  8169                           
  8170                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  8171     087E  3024               	movlw	36
  8172     087F  009E               	movwf	30	;volatile
  8173                           
  8174                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x10;
  8175     0880  3010               	movlw	16
  8176     0881  009B               	movwf	27	;volatile
  8177                           
  8178                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  8179     0882  019C               	clrf	28	;volatile
  8180                           
  8181                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  8182     0883  3000               	movlw	0
  8183     0884  00F4               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  8184     0885  3000               	movlw	0
  8185     0886  00F5               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  8186     0887  3197  2700  3188   	fcall	_EUSART_SetFramingErrorHandler
  8187                           
  8188                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  8189     088A  3000               	movlw	0
  8190     088B  00F4               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  8191     088C  3000               	movlw	0
  8192     088D  00F5               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  8193     088E  3197  2706  3188   	fcall	_EUSART_SetOverrunErrorHandler
  8194                           
  8195                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  8196     0891  3000               	movlw	0
  8197     0892  00F4               	movwf	EUSART_SetErrorHandler@interruptHandler
  8198     0893  3000               	movlw	0
  8199     0894  00F5               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  8200     0895  3196  26FA         	fcall	_EUSART_SetErrorHandler
  8201                           
  8202                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  8203     0897  0021               	movlb	1	; select bank1
  8204     0898  01D0               	clrf	_eusartRxLastError^(0+128)	;volatile
  8205     0899  0008               	return
  8206     089A                     __end_of_EUSART_Initialize:
  8207                           
  8208                           	psect	text29
  8209     1706                     __ptext29:	
  8210 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  8211 ;; Defined at:
  8212 ;;		line 161 in file "mcc_generated_files/eusart.c"
  8213 ;; Parameters:    Size  Location     Type
  8214 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
  8215 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  8216 ;; Auto vars:     Size  Location     Type
  8217 ;;		None
  8218 ;; Return value:  Size  Location     Type
  8219 ;;                  1    wreg      void 
  8220 ;; Registers used:
  8221 ;;		wreg
  8222 ;; Tracked objects:
  8223 ;;		On entry : 0/0
  8224 ;;		On exit  : 0/0
  8225 ;;		Unchanged: 0/0
  8226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8227 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8230 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8231 ;;Total ram usage:        2 bytes
  8232 ;; Hardware stack levels used: 1
  8233 ;; Hardware stack levels required when called: 5
  8234 ;; This function calls:
  8235 ;;		Nothing
  8236 ;; This function is called by:
  8237 ;;		_EUSART_Initialize
  8238 ;; This function uses a non-reentrant model
  8239 ;;
  8240                           
  8241     1706                     _EUSART_SetOverrunErrorHandler:	
  8242                           ;psect for function _EUSART_SetOverrunErrorHandler
  8243                           
  8244                           
  8245                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  8246                           
  8247                           ;incstack = 0
  8248                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  8249     1706  0875               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  8250     1707  0021               	movlb	1	; select bank1
  8251     1708  00D6               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  8252     1709  0874               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  8253     170A  00D5               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  8254     170B  0008               	return
  8255     170C                     __end_of_EUSART_SetOverrunErrorHandler:
  8256                           
  8257                           	psect	text30
  8258     1700                     __ptext30:	
  8259 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  8260 ;; Defined at:
  8261 ;;		line 157 in file "mcc_generated_files/eusart.c"
  8262 ;; Parameters:    Size  Location     Type
  8263 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
  8264 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  8265 ;; Auto vars:     Size  Location     Type
  8266 ;;		None
  8267 ;; Return value:  Size  Location     Type
  8268 ;;                  1    wreg      void 
  8269 ;; Registers used:
  8270 ;;		wreg
  8271 ;; Tracked objects:
  8272 ;;		On entry : 0/0
  8273 ;;		On exit  : 0/0
  8274 ;;		Unchanged: 0/0
  8275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8276 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8279 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8280 ;;Total ram usage:        2 bytes
  8281 ;; Hardware stack levels used: 1
  8282 ;; Hardware stack levels required when called: 5
  8283 ;; This function calls:
  8284 ;;		Nothing
  8285 ;; This function is called by:
  8286 ;;		_EUSART_Initialize
  8287 ;; This function uses a non-reentrant model
  8288 ;;
  8289                           
  8290     1700                     _EUSART_SetFramingErrorHandler:	
  8291                           ;psect for function _EUSART_SetFramingErrorHandler
  8292                           
  8293                           
  8294                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  8295                           
  8296                           ;incstack = 0
  8297                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  8298     1700  0875               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  8299     1701  0021               	movlb	1	; select bank1
  8300     1702  00D8               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  8301     1703  0874               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  8302     1704  00D7               	movwf	_EUSART_FramingErrorHandler^(0+128)
  8303     1705  0008               	return
  8304     1706                     __end_of_EUSART_SetFramingErrorHandler:
  8305                           
  8306                           	psect	text31
  8307     16FA                     __ptext31:	
  8308 ;; *************** function _EUSART_SetErrorHandler *****************
  8309 ;; Defined at:
  8310 ;;		line 165 in file "mcc_generated_files/eusart.c"
  8311 ;; Parameters:    Size  Location     Type
  8312 ;;  interruptHan    2    4[COMMON] PTR FTN()void 
  8313 ;;		 -> EUSART_DefaultErrorHandler(1), 
  8314 ;; Auto vars:     Size  Location     Type
  8315 ;;		None
  8316 ;; Return value:  Size  Location     Type
  8317 ;;                  1    wreg      void 
  8318 ;; Registers used:
  8319 ;;		wreg
  8320 ;; Tracked objects:
  8321 ;;		On entry : 0/0
  8322 ;;		On exit  : 0/0
  8323 ;;		Unchanged: 0/0
  8324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8325 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8328 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8329 ;;Total ram usage:        2 bytes
  8330 ;; Hardware stack levels used: 1
  8331 ;; Hardware stack levels required when called: 5
  8332 ;; This function calls:
  8333 ;;		Nothing
  8334 ;; This function is called by:
  8335 ;;		_EUSART_Initialize
  8336 ;; This function uses a non-reentrant model
  8337 ;;
  8338                           
  8339     16FA                     _EUSART_SetErrorHandler:	
  8340                           ;psect for function _EUSART_SetErrorHandler
  8341                           
  8342                           
  8343                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  8344                           
  8345                           ;incstack = 0
  8346                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  8347     16FA  0875               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  8348     16FB  0021               	movlb	1	; select bank1
  8349     16FC  00D4               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  8350     16FD  0874               	movf	EUSART_SetErrorHandler@interruptHandler,w
  8351     16FE  00D3               	movwf	_EUSART_ErrorHandler^(0+128)
  8352     16FF  0008               	return
  8353     1700                     __end_of_EUSART_SetErrorHandler:
  8354                           
  8355                           	psect	text32
  8356     173A                     __ptext32:	
  8357 ;; *************** function _ADC_Initialize *****************
  8358 ;; Defined at:
  8359 ;;		line 67 in file "mcc_generated_files/adc.c"
  8360 ;; Parameters:    Size  Location     Type
  8361 ;;		None
  8362 ;; Auto vars:     Size  Location     Type
  8363 ;;		None
  8364 ;; Return value:  Size  Location     Type
  8365 ;;                  1    wreg      void 
  8366 ;; Registers used:
  8367 ;;		wreg, status,2
  8368 ;; Tracked objects:
  8369 ;;		On entry : 0/0
  8370 ;;		On exit  : 0/0
  8371 ;;		Unchanged: 0/0
  8372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8377 ;;Total ram usage:        0 bytes
  8378 ;; Hardware stack levels used: 1
  8379 ;; Hardware stack levels required when called: 5
  8380 ;; This function calls:
  8381 ;;		Nothing
  8382 ;; This function is called by:
  8383 ;;		_SYSTEM_Initialize
  8384 ;; This function uses a non-reentrant model
  8385 ;;
  8386                           
  8387     173A                     _ADC_Initialize:	
  8388                           ;psect for function _ADC_Initialize
  8389                           
  8390                           
  8391                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xA0;
  8392                           
  8393                           ;incstack = 0
  8394                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  8395     173A  30A0               	movlw	160
  8396     173B  0021               	movlb	1	; select bank1
  8397     173C  009E               	movwf	30	;volatile
  8398                           
  8399                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  8400     173D  019B               	clrf	27	;volatile
  8401                           
  8402                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  8403     173E  019C               	clrf	28	;volatile
  8404                           
  8405                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  8406     173F  3001               	movlw	1
  8407     1740  009D               	movwf	29	;volatile
  8408     1741  0008               	return
  8409     1742                     __end_of_ADC_Initialize:
  8410                           
  8411                           	psect	text33
  8412     089A                     __ptext33:	
  8413 ;; *************** function _DATAEE_WriteByte *****************
  8414 ;; Defined at:
  8415 ;;		line 187 in file "mcc_generated_files/memory.c"
  8416 ;; Parameters:    Size  Location     Type
  8417 ;;  bAdd            1    wreg     unsigned char 
  8418 ;;  bData           1    4[COMMON] unsigned char 
  8419 ;; Auto vars:     Size  Location     Type
  8420 ;;  bAdd            1    0[BANK0 ] unsigned char 
  8421 ;;  GIEBitValue     1    1[BANK0 ] unsigned char 
  8422 ;; Return value:  Size  Location     Type
  8423 ;;                  1    wreg      void 
  8424 ;; Registers used:
  8425 ;;		wreg, status,2, status,0
  8426 ;; Tracked objects:
  8427 ;;		On entry : 0/0
  8428 ;;		On exit  : 0/0
  8429 ;;		Unchanged: 0/0
  8430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8431 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8432 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8434 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8435 ;;Total ram usage:        3 bytes
  8436 ;; Hardware stack levels used: 1
  8437 ;; Hardware stack levels required when called: 5
  8438 ;; This function calls:
  8439 ;;		Nothing
  8440 ;; This function is called by:
  8441 ;;		_main
  8442 ;; This function uses a non-reentrant model
  8443 ;;
  8444                           
  8445     089A                     _DATAEE_WriteByte:	
  8446                           ;psect for function _DATAEE_WriteByte
  8447                           
  8448                           
  8449                           ;incstack = 0
  8450                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
  8451                           ;DATAEE_WriteByte@bAdd stored from wreg
  8452     089A  0020               	movlb	0	; select bank0
  8453     089B  00A0               	movwf	DATAEE_WriteByte@bAdd
  8454     089C  0820               	movf	DATAEE_WriteByte@bAdd,w
  8455     089D  0023               	movlb	3	; select bank3
  8456     089E  0091               	movwf	17	;volatile
  8457     089F  0874               	movf	DATAEE_WriteByte@bData,w
  8458     08A0  0093               	movwf	19	;volatile
  8459     08A1  1395               	bcf	21,7	;volsfr
  8460     08A2  1315               	bcf	21,6	;volsfr
  8461     08A3  1515               	bsf	21,2	;volsfr
  8462     08A4  3000               	movlw	0
  8463     08A5  1B8B               	btfsc	11,7	;volatile
  8464     08A6  3001               	movlw	1
  8465     08A7  0020               	movlb	0	; select bank0
  8466     08A8  00A1               	movwf	DATAEE_WriteByte@GIEBitValue
  8467     08A9  138B               	bcf	11,7	;volatile
  8468     08AA  3055               	movlw	85
  8469     08AB  0023               	movlb	3	; select bank3
  8470     08AC  0096               	movwf	22	;volsfr
  8471     08AD  30AA               	movlw	170
  8472     08AE  0096               	movwf	22	;volsfr
  8473     08AF  1495               	bsf	21,1	;volsfr
  8474     08B0  28B2               	goto	l362
  8475     08B1                     l363:
  8476     08B1  0000               	nop
  8477     08B2                     l362:
  8478     08B2  0023               	movlb	3	; select bank3
  8479     08B3  1895               	btfsc	21,1	;volsfr
  8480     08B4  28B1               	goto	l363
  8481     08B5  1115               	bcf	21,2	;volsfr
  8482     08B6  0020               	movlb	0	; select bank0
  8483     08B7  0C21               	rrf	DATAEE_WriteByte@GIEBitValue,w
  8484     08B8  1C03               	skipc
  8485     08B9  138B               	bcf	11,7	;volatile
  8486     08BA  1803               	skipnc
  8487     08BB  178B               	bsf	11,7	;volatile
  8488     08BC  0008               	return
  8489     08BD                     __end_of_DATAEE_WriteByte:
  8490                           
  8491                           	psect	text34
  8492     07F3                     __ptext34:	
  8493 ;; *************** function _DATAEE_ReadByte *****************
  8494 ;; Defined at:
  8495 ;;		line 212 in file "mcc_generated_files/memory.c"
  8496 ;; Parameters:    Size  Location     Type
  8497 ;;  bAdd            1    wreg     unsigned char 
  8498 ;; Auto vars:     Size  Location     Type
  8499 ;;  bAdd            1    4[COMMON] unsigned char 
  8500 ;; Return value:  Size  Location     Type
  8501 ;;                  1    wreg      unsigned char 
  8502 ;; Registers used:
  8503 ;;		wreg
  8504 ;; Tracked objects:
  8505 ;;		On entry : 0/0
  8506 ;;		On exit  : 0/0
  8507 ;;		Unchanged: 0/0
  8508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8510 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8512 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8513 ;;Total ram usage:        1 bytes
  8514 ;; Hardware stack levels used: 1
  8515 ;; Hardware stack levels required when called: 5
  8516 ;; This function calls:
  8517 ;;		Nothing
  8518 ;; This function is called by:
  8519 ;;		_main
  8520 ;; This function uses a non-reentrant model
  8521 ;;
  8522                           
  8523     07F3                     _DATAEE_ReadByte:	
  8524                           ;psect for function _DATAEE_ReadByte
  8525                           
  8526                           
  8527                           ;incstack = 0
  8528                           ; Regs used in _DATAEE_ReadByte: [wreg]
  8529                           ;DATAEE_ReadByte@bAdd stored from wreg
  8530     07F3  00F4               	movwf	DATAEE_ReadByte@bAdd
  8531     07F4  0874               	movf	DATAEE_ReadByte@bAdd,w
  8532     07F5  0023               	movlb	3	; select bank3
  8533     07F6  0091               	movwf	17	;volatile
  8534     07F7  1315               	bcf	21,6	;volsfr
  8535     07F8  1395               	bcf	21,7	;volsfr
  8536     07F9  1415               	bsf	21,0	;volsfr
  8537     07FA  0000               	nop
  8538     07FB  0000               	nop
  8539     07FC  0000               	nop
  8540     07FD  0023               	movlb	3	; select bank3
  8541     07FE  0813               	movf	19,w	;volatile
  8542     07FF  0008               	return
  8543     0800                     __end_of_DATAEE_ReadByte:
  8544                           
  8545                           	psect	intentry
  8546     0004                     __pintentry:	
  8547 ;; *************** function _INTERRUPT_InterruptManager *****************
  8548 ;; Defined at:
  8549 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8550 ;; Parameters:    Size  Location     Type
  8551 ;;		None
  8552 ;; Auto vars:     Size  Location     Type
  8553 ;;		None
  8554 ;; Return value:  Size  Location     Type
  8555 ;;                  1    wreg      void 
  8556 ;; Registers used:
  8557 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8558 ;; Tracked objects:
  8559 ;;		On entry : 0/0
  8560 ;;		On exit  : 0/0
  8561 ;;		Unchanged: 0/0
  8562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8567 ;;Total ram usage:        0 bytes
  8568 ;; Hardware stack levels used: 1
  8569 ;; Hardware stack levels required when called: 4
  8570 ;; This function calls:
  8571 ;;		_TMR0_ISR
  8572 ;;		_TMR1_ISR
  8573 ;;		_TMR2_ISR
  8574 ;; This function is called by:
  8575 ;;		Interrupt level 1
  8576 ;; This function uses a non-reentrant model
  8577 ;;
  8578                           
  8579     0004                     _INTERRUPT_InterruptManager:
  8580                           
  8581                           ;incstack = 0
  8582     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8583                           
  8584                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8585     0005  3180               	pagesel	$
  8586                           
  8587                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  8588     0006  1A8B               	btfsc	11,5	;volatile
  8589     0007  1D0B               	btfss	11,2	;volatile
  8590     0008  280D               	goto	i1l157
  8591                           
  8592                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  8593     0009  3197  2724  3180   	fcall	_TMR0_ISR
  8594                           
  8595                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  8596     000C  2821               	goto	i1l165
  8597     000D                     i1l157:	
  8598                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  8599                           
  8600     000D  1F0B               	btfss	11,6	;volatile
  8601     000E  2821               	goto	i1l165
  8602                           
  8603                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  8604     000F  0021               	movlb	1	; select bank1
  8605     0010  1C91               	btfss	17,1	;volatile
  8606     0011  2819               	goto	i1l160
  8607     0012  0020               	movlb	0	; select bank0
  8608     0013  1C91               	btfss	17,1	;volatile
  8609     0014  2819               	goto	i1l160
  8610                           
  8611                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR2_ISR();
  8612     0015  3196  26F5  3180   	fcall	_TMR2_ISR
  8613                           
  8614                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  8615     0018  2821               	goto	i1l165
  8616     0019                     i1l160:	
  8617                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.TMR1IE == 1 && PI
      +                          R1bits.TMR1IF == 1)
  8618                           
  8619     0019  0021               	movlb	1	; select bank1
  8620     001A  1C11               	btfss	17,0	;volatile
  8621     001B  2821               	goto	i1l165
  8622     001C  0020               	movlb	0	; select bank0
  8623     001D  1C11               	btfss	17,0	;volatile
  8624     001E  2821               	goto	i1l165
  8625                           
  8626                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             TMR1_ISR();
  8627     001F  3197  2775         	fcall	_TMR1_ISR
  8628     0021                     i1l165:	
  8629                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
  8630                           
  8631                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  8632                           
  8633     0021  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8634     0022  0009               	retfie
  8635     0023                     __end_of_INTERRUPT_InterruptManager:
  8636                           
  8637                           	psect	text36
  8638     16F5                     __ptext36:	
  8639 ;; *************** function _TMR2_ISR *****************
  8640 ;; Defined at:
  8641 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  8642 ;; Parameters:    Size  Location     Type
  8643 ;;		None
  8644 ;; Auto vars:     Size  Location     Type
  8645 ;;		None
  8646 ;; Return value:  Size  Location     Type
  8647 ;;                  1    wreg      void 
  8648 ;; Registers used:
  8649 ;;		wreg, status,2, status,0, pclath, cstack
  8650 ;; Tracked objects:
  8651 ;;		On entry : 0/0
  8652 ;;		On exit  : 0/0
  8653 ;;		Unchanged: 0/0
  8654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8659 ;;Total ram usage:        0 bytes
  8660 ;; Hardware stack levels used: 1
  8661 ;; Hardware stack levels required when called: 2
  8662 ;; This function calls:
  8663 ;;		_TMR2_CallBack
  8664 ;; This function is called by:
  8665 ;;		_INTERRUPT_InterruptManager
  8666 ;; This function uses a non-reentrant model
  8667 ;;
  8668                           
  8669     16F5                     _TMR2_ISR:	
  8670                           ;psect for function _TMR2_ISR
  8671                           
  8672                           
  8673                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
  8674                           
  8675                           ;incstack = 0
  8676                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  8677     16F5  0020               	movlb	0	; select bank0
  8678     16F6  1091               	bcf	17,1	;volatile
  8679                           
  8680                           ;mcc_generated_files/tmr2.c: 127:     TMR2_CallBack();
  8681     16F7  3197  276A         	fcall	_TMR2_CallBack
  8682     16F9  0008               	return
  8683     16FA                     __end_of_TMR2_ISR:
  8684                           
  8685                           	psect	text37
  8686     176A                     __ptext37:	
  8687 ;; *************** function _TMR2_CallBack *****************
  8688 ;; Defined at:
  8689 ;;		line 130 in file "mcc_generated_files/tmr2.c"
  8690 ;; Parameters:    Size  Location     Type
  8691 ;;		None
  8692 ;; Auto vars:     Size  Location     Type
  8693 ;;		None
  8694 ;; Return value:  Size  Location     Type
  8695 ;;                  1    wreg      void 
  8696 ;; Registers used:
  8697 ;;		wreg, status,2, status,0, pclath, cstack
  8698 ;; Tracked objects:
  8699 ;;		On entry : 0/0
  8700 ;;		On exit  : 0/0
  8701 ;;		Unchanged: 0/0
  8702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8707 ;;Total ram usage:        0 bytes
  8708 ;; Hardware stack levels used: 1
  8709 ;; Hardware stack levels required when called: 1
  8710 ;; This function calls:
  8711 ;;		NULL
  8712 ;;		_TMR2_DefaultInterruptHandler
  8713 ;;		__SpkrControlISR
  8714 ;; This function is called by:
  8715 ;;		_TMR2_ISR
  8716 ;; This function uses a non-reentrant model
  8717 ;;
  8718                           
  8719     176A                     _TMR2_CallBack:	
  8720                           ;psect for function _TMR2_CallBack
  8721                           
  8722                           
  8723                           ;mcc_generated_files/tmr2.c: 134:     if(TMR2_InterruptHandler)
  8724                           
  8725                           ;incstack = 0
  8726                           ; Regs used in _TMR2_CallBack: [wreg+status,2+status,0+pclath+cstack]
  8727     176A  0021               	movlb	1	; select bank1
  8728     176B  0851               	movf	_TMR2_InterruptHandler^(0+128),w
  8729     176C  0452               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
  8730     176D  1903               	btfsc	3,2
  8731     176E  0008               	return
  8732                           
  8733                           ;mcc_generated_files/tmr2.c: 135:     {;mcc_generated_files/tmr2.c: 136:         TMR2_In
      +                          terruptHandler();
  8734     176F  0852               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
  8735     1770  008A               	movwf	10
  8736     1771  0851               	movf	_TMR2_InterruptHandler^(0+128),w
  8737     1772  000A               	callw
  8738     1773  3197               	pagesel	$
  8739     1774  0008               	return
  8740     1775                     __end_of_TMR2_CallBack:
  8741                           
  8742                           	psect	text38
  8743     16F0                     __ptext38:	
  8744 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  8745 ;; Defined at:
  8746 ;;		line 144 in file "mcc_generated_files/tmr2.c"
  8747 ;; Parameters:    Size  Location     Type
  8748 ;;		None
  8749 ;; Auto vars:     Size  Location     Type
  8750 ;;		None
  8751 ;; Return value:  Size  Location     Type
  8752 ;;                  1    wreg      void 
  8753 ;; Registers used:
  8754 ;;		None
  8755 ;; Tracked objects:
  8756 ;;		On entry : 0/0
  8757 ;;		On exit  : 0/0
  8758 ;;		Unchanged: 0/0
  8759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8764 ;;Total ram usage:        0 bytes
  8765 ;; Hardware stack levels used: 1
  8766 ;; This function calls:
  8767 ;;		Nothing
  8768 ;; This function is called by:
  8769 ;;		_TMR2_Initialize
  8770 ;;		_TMR2_CallBack
  8771 ;; This function uses a non-reentrant model
  8772 ;;
  8773                           
  8774     16F0                     _TMR2_DefaultInterruptHandler:	
  8775                           ;psect for function _TMR2_DefaultInterruptHandler
  8776                           
  8777                           
  8778                           ;incstack = 0
  8779                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  8780     16F0  0008               	return
  8781     16F1                     __end_of_TMR2_DefaultInterruptHandler:
  8782                           
  8783                           	psect	text39
  8784     08E3                     __ptext39:	
  8785 ;; *************** function __SpkrControlISR *****************
  8786 ;; Defined at:
  8787 ;;		line 173 in file "main.c"
  8788 ;; Parameters:    Size  Location     Type
  8789 ;;		None
  8790 ;; Auto vars:     Size  Location     Type
  8791 ;;		None
  8792 ;; Return value:  Size  Location     Type
  8793 ;;                  1    wreg      void 
  8794 ;; Registers used:
  8795 ;;		wreg, status,2, status,0
  8796 ;; Tracked objects:
  8797 ;;		On entry : 0/0
  8798 ;;		On exit  : 0/0
  8799 ;;		Unchanged: 0/0
  8800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8803 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8804 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8805 ;;Total ram usage:        1 bytes
  8806 ;; Hardware stack levels used: 1
  8807 ;; This function calls:
  8808 ;;		Nothing
  8809 ;; This function is called by:
  8810 ;;		_main
  8811 ;;		_TMR2_CallBack
  8812 ;; This function uses a non-reentrant model
  8813 ;;
  8814                           
  8815     08E3                     __SpkrControlISR:	
  8816                           ;psect for function __SpkrControlISR
  8817                           
  8818                           
  8819                           ;main.c: 175:     SPKR_DC++;
  8820                           
  8821                           ;incstack = 0
  8822                           ; Regs used in __SpkrControlISR: [wreg+status,2+status,0]
  8823     08E3  3001               	movlw	1
  8824     08E4  00F0               	movwf	??__SpkrControlISR
  8825     08E5  0870               	movf	??__SpkrControlISR,w
  8826     08E6  0021               	movlb	1	; select bank1
  8827     08E7  07CC               	addwf	_SPKR_DC^(0+128),f
  8828                           
  8829                           ;main.c: 177:     if (SPKR_COUNT == 0)
  8830     08E8  085D               	movf	_SPKR_COUNT^(0+128),w
  8831     08E9  1D03               	btfss	3,2
  8832     08EA  28ED               	goto	i1l2888
  8833                           
  8834                           ;main.c: 178:     {;main.c: 179:         do { TRISAbits.TRISA1 = 0; } while(0);
  8835     08EB  108C               	bcf	12,1	;volatile
  8836                           
  8837                           ;main.c: 180:         SPKR_DC = 0;
  8838     08EC  01CC               	clrf	_SPKR_DC^(0+128)
  8839     08ED                     i1l2888:
  8840                           
  8841                           ;main.c: 183:     if (SPKR_COUNT < SPKR_DURATION)
  8842     08ED  085E               	movf	_SPKR_DURATION^(0+128),w
  8843     08EE  025D               	subwf	_SPKR_COUNT^(0+128),w
  8844     08EF  1803               	skipnc
  8845     08F0  2923               	goto	i1l516
  8846                           
  8847                           ;main.c: 184:     {;main.c: 185:         if (DN_CLICKED)
  8848     08F1  084B               	movf	_DN_CLICKED^(0+128),w
  8849     08F2  1903               	btfsc	3,2
  8850     08F3  2917               	goto	i1l2904
  8851                           
  8852                           ;main.c: 186:         {;main.c: 188:             if (SPKR_DC == 0)
  8853     08F4  084C               	movf	_SPKR_DC^(0+128),w
  8854     08F5  1D03               	btfss	3,2
  8855     08F6  2902               	goto	i1l2896
  8856     08F7  1003               	clrc
  8857     08F8  0022               	movlb	2	; select bank2
  8858     08F9  1C8C               	btfss	12,1	;volatile
  8859     08FA  1403               	setc
  8860     08FB  1C03               	btfss	3,0
  8861     08FC  2900               	goto	u272_20
  8862     08FD  0022               	movlb	2	; select bank2
  8863     08FE  148C               	bsf	12,1	;volatile
  8864     08FF  2902               	goto	i1l2896
  8865     0900                     u272_20:
  8866     0900  0022               	movlb	2	; select bank2
  8867     0901  108C               	bcf	12,1	;volatile
  8868     0902                     i1l2896:
  8869                           
  8870                           ;main.c: 190:             if (SPKR_DC == 2)
  8871     0902  3002               	movlw	2
  8872     0903  0021               	movlb	1	; select bank1
  8873     0904  064C               	xorwf	_SPKR_DC^(0+128),w
  8874     0905  1D03               	btfss	3,2
  8875     0906  2912               	goto	i1l2900
  8876     0907  1003               	clrc
  8877     0908  0022               	movlb	2	; select bank2
  8878     0909  1C8C               	btfss	12,1	;volatile
  8879     090A  1403               	setc
  8880     090B  1C03               	btfss	3,0
  8881     090C  2910               	goto	u275_20
  8882     090D  0022               	movlb	2	; select bank2
  8883     090E  148C               	bsf	12,1	;volatile
  8884     090F  2912               	goto	i1l2900
  8885     0910                     u275_20:
  8886     0910  0022               	movlb	2	; select bank2
  8887     0911  108C               	bcf	12,1	;volatile
  8888     0912                     i1l2900:
  8889                           
  8890                           ;main.c: 193:             if (SPKR_DC == 3)
  8891     0912  3003               	movlw	3
  8892     0913  0021               	movlb	1	; select bank1
  8893     0914  064C               	xorwf	_SPKR_DC^(0+128),w
  8894     0915  1903               	btfsc	3,2
  8895                           
  8896                           ;main.c: 194:                 SPKR_DC = 0;
  8897     0916  01CC               	clrf	_SPKR_DC^(0+128)
  8898     0917                     i1l2904:
  8899     0917  1003               	clrc
  8900     0918  0022               	movlb	2	; select bank2
  8901     0919  1C8C               	btfss	12,1	;volatile
  8902     091A  1403               	setc
  8903     091B  1C03               	btfss	3,0
  8904     091C  2920               	goto	u278_20
  8905     091D  0022               	movlb	2	; select bank2
  8906     091E  148C               	bsf	12,1	;volatile
  8907     091F  0008               	return
  8908     0920                     u278_20:
  8909     0920  0022               	movlb	2	; select bank2
  8910     0921  108C               	bcf	12,1	;volatile
  8911     0922  0008               	return
  8912     0923                     i1l516:	
  8913                           ;main.c: 199:     {;main.c: 200:         do { TRISAbits.TRISA1 = 1; } while(0);
  8914                           
  8915     0923  148C               	bsf	12,1	;volatile
  8916     0924  0008               	return
  8917     0925                     __end_of__SpkrControlISR:
  8918                           
  8919                           	psect	text40
  8920     1775                     __ptext40:	
  8921 ;; *************** function _TMR1_ISR *****************
  8922 ;; Defined at:
  8923 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  8924 ;; Parameters:    Size  Location     Type
  8925 ;;		None
  8926 ;; Auto vars:     Size  Location     Type
  8927 ;;		None
  8928 ;; Return value:  Size  Location     Type
  8929 ;;                  1    wreg      void 
  8930 ;; Registers used:
  8931 ;;		wreg, status,2, status,0, pclath, cstack
  8932 ;; Tracked objects:
  8933 ;;		On entry : 0/0
  8934 ;;		On exit  : 0/0
  8935 ;;		Unchanged: 0/0
  8936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8941 ;;Total ram usage:        0 bytes
  8942 ;; Hardware stack levels used: 1
  8943 ;; Hardware stack levels required when called: 2
  8944 ;; This function calls:
  8945 ;;		_TMR1_CallBack
  8946 ;;		_TMR1_WriteTimer
  8947 ;; This function is called by:
  8948 ;;		_INTERRUPT_InterruptManager
  8949 ;; This function uses a non-reentrant model
  8950 ;;
  8951                           
  8952     1775                     _TMR1_ISR:	
  8953                           ;psect for function _TMR1_ISR
  8954                           
  8955                           
  8956                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  8957                           
  8958                           ;incstack = 0
  8959                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  8960     1775  0020               	movlb	0	; select bank0
  8961     1776  1011               	bcf	17,0	;volatile
  8962                           
  8963                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  8964     1777  0021               	movlb	1	; select bank1
  8965     1778  0848               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
  8966     1779  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  8967     177A  0847               	movf	_timer1ReloadVal^(0+128),w	;volatile
  8968     177B  00F0               	movwf	TMR1_WriteTimer@timerVal
  8969     177C  3197  2782  3197   	fcall	_TMR1_WriteTimer
  8970                           
  8971                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  8972     177F  3197  275F         	fcall	_TMR1_CallBack
  8973     1781  0008               	return
  8974     1782                     __end_of_TMR1_ISR:
  8975                           
  8976                           	psect	text41
  8977     1782                     __ptext41:	
  8978 ;; *************** function _TMR1_WriteTimer *****************
  8979 ;; Defined at:
  8980 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  8981 ;; Parameters:    Size  Location     Type
  8982 ;;  timerVal        2    0[COMMON] unsigned short 
  8983 ;; Auto vars:     Size  Location     Type
  8984 ;;		None
  8985 ;; Return value:  Size  Location     Type
  8986 ;;                  1    wreg      void 
  8987 ;; Registers used:
  8988 ;;		wreg, status,2
  8989 ;; Tracked objects:
  8990 ;;		On entry : 0/0
  8991 ;;		On exit  : 0/0
  8992 ;;		Unchanged: 0/0
  8993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8994 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8997 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8998 ;;Total ram usage:        2 bytes
  8999 ;; Hardware stack levels used: 1
  9000 ;; This function calls:
  9001 ;;		Nothing
  9002 ;; This function is called by:
  9003 ;;		_TMR1_ISR
  9004 ;;		_TMR1_Reload
  9005 ;; This function uses a non-reentrant model
  9006 ;;
  9007                           
  9008     1782                     _TMR1_WriteTimer:	
  9009                           ;psect for function _TMR1_WriteTimer
  9010                           
  9011                           
  9012                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  9013                           
  9014                           ;incstack = 0
  9015                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  9016     1782  0020               	movlb	0	; select bank0
  9017     1783  1D18               	btfss	24,2	;volatile
  9018     1784  2F8C               	goto	i1l3454
  9019                           
  9020                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  9021     1785  1018               	bcf	24,0	;volatile
  9022                           
  9023                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
  9024     1786  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9025     1787  0097               	movwf	23	;volatile
  9026                           
  9027                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  9028     1788  0870               	movf	TMR1_WriteTimer@timerVal,w
  9029     1789  0096               	movwf	22	;volatile
  9030                           
  9031                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  9032     178A  1418               	bsf	24,0	;volatile
  9033                           
  9034                           ;mcc_generated_files/tmr1.c: 133:     }
  9035     178B  0008               	return
  9036     178C                     i1l3454:
  9037                           
  9038                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  9039     178C  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9040     178D  0097               	movwf	23	;volatile
  9041                           
  9042                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
  9043     178E  0870               	movf	TMR1_WriteTimer@timerVal,w
  9044     178F  0096               	movwf	22	;volatile
  9045     1790  0008               	return
  9046     1791                     __end_of_TMR1_WriteTimer:
  9047                           
  9048                           	psect	text42
  9049     175F                     __ptext42:	
  9050 ;; *************** function _TMR1_CallBack *****************
  9051 ;; Defined at:
  9052 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  9053 ;; Parameters:    Size  Location     Type
  9054 ;;		None
  9055 ;; Auto vars:     Size  Location     Type
  9056 ;;		None
  9057 ;; Return value:  Size  Location     Type
  9058 ;;                  1    wreg      void 
  9059 ;; Registers used:
  9060 ;;		wreg, status,2, status,0, pclath, cstack
  9061 ;; Tracked objects:
  9062 ;;		On entry : 0/0
  9063 ;;		On exit  : 0/0
  9064 ;;		Unchanged: 0/0
  9065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9070 ;;Total ram usage:        0 bytes
  9071 ;; Hardware stack levels used: 1
  9072 ;; Hardware stack levels required when called: 1
  9073 ;; This function calls:
  9074 ;;		NULL
  9075 ;;		_TMR1_DefaultInterruptHandler
  9076 ;;		__LogicControlISR
  9077 ;; This function is called by:
  9078 ;;		_TMR1_ISR
  9079 ;; This function uses a non-reentrant model
  9080 ;;
  9081                           
  9082     175F                     _TMR1_CallBack:	
  9083                           ;psect for function _TMR1_CallBack
  9084                           
  9085                           
  9086                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  9087                           
  9088                           ;incstack = 0
  9089                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  9090     175F  0021               	movlb	1	; select bank1
  9091     1760  0859               	movf	_TMR1_InterruptHandler^(0+128),w
  9092     1761  045A               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
  9093     1762  1903               	btfsc	3,2
  9094     1763  0008               	return
  9095                           
  9096                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  9097     1764  085A               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
  9098     1765  008A               	movwf	10
  9099     1766  0859               	movf	_TMR1_InterruptHandler^(0+128),w
  9100     1767  000A               	callw
  9101     1768  3197               	pagesel	$
  9102     1769  0008               	return
  9103     176A                     __end_of_TMR1_CallBack:
  9104                           
  9105                           	psect	text43
  9106     16EF                     __ptext43:	
  9107 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  9108 ;; Defined at:
  9109 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  9110 ;; Parameters:    Size  Location     Type
  9111 ;;		None
  9112 ;; Auto vars:     Size  Location     Type
  9113 ;;		None
  9114 ;; Return value:  Size  Location     Type
  9115 ;;                  1    wreg      void 
  9116 ;; Registers used:
  9117 ;;		None
  9118 ;; Tracked objects:
  9119 ;;		On entry : 0/0
  9120 ;;		On exit  : 0/0
  9121 ;;		Unchanged: 0/0
  9122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9127 ;;Total ram usage:        0 bytes
  9128 ;; Hardware stack levels used: 1
  9129 ;; This function calls:
  9130 ;;		Nothing
  9131 ;; This function is called by:
  9132 ;;		_TMR1_Initialize
  9133 ;;		_TMR1_CallBack
  9134 ;; This function uses a non-reentrant model
  9135 ;;
  9136                           
  9137     16EF                     _TMR1_DefaultInterruptHandler:	
  9138                           ;psect for function _TMR1_DefaultInterruptHandler
  9139                           
  9140                           
  9141                           ;incstack = 0
  9142                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  9143     16EF  0008               	return
  9144     16F0                     __end_of_TMR1_DefaultInterruptHandler:
  9145                           
  9146                           	psect	text44
  9147     08BD                     __ptext44:	
  9148 ;; *************** function __LogicControlISR *****************
  9149 ;; Defined at:
  9150 ;;		line 354 in file "main.c"
  9151 ;; Parameters:    Size  Location     Type
  9152 ;;		None
  9153 ;; Auto vars:     Size  Location     Type
  9154 ;;		None
  9155 ;; Return value:  Size  Location     Type
  9156 ;;                  1    wreg      void 
  9157 ;; Registers used:
  9158 ;;		wreg, status,2, status,0
  9159 ;; Tracked objects:
  9160 ;;		On entry : 0/0
  9161 ;;		On exit  : 0/0
  9162 ;;		Unchanged: 0/0
  9163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9166 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9167 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9168 ;;Total ram usage:        1 bytes
  9169 ;; Hardware stack levels used: 1
  9170 ;; This function calls:
  9171 ;;		Nothing
  9172 ;; This function is called by:
  9173 ;;		_main
  9174 ;;		_TMR1_CallBack
  9175 ;; This function uses a non-reentrant model
  9176 ;;
  9177                           
  9178     08BD                     __LogicControlISR:	
  9179                           ;psect for function __LogicControlISR
  9180                           
  9181                           
  9182                           ;main.c: 357:     LOGIC_TICK++;
  9183                           
  9184                           ;incstack = 0
  9185                           ; Regs used in __LogicControlISR: [wreg+status,2+status,0]
  9186     08BD  3001               	movlw	1
  9187     08BE  00F0               	movwf	??__LogicControlISR
  9188     08BF  0870               	movf	??__LogicControlISR,w
  9189     08C0  07F8               	addwf	_LOGIC_TICK,f
  9190                           
  9191                           ;main.c: 358:     SPKR_COUNT++;
  9192     08C1  3001               	movlw	1
  9193     08C2  00F0               	movwf	??__LogicControlISR
  9194     08C3  0870               	movf	??__LogicControlISR,w
  9195     08C4  0021               	movlb	1	; select bank1
  9196     08C5  07DD               	addwf	_SPKR_COUNT^(0+128),f
  9197                           
  9198                           ;main.c: 360:     if (SPKR_COUNT >= SPKR_DURATION)
  9199     08C6  085E               	movf	_SPKR_DURATION^(0+128),w
  9200     08C7  025D               	subwf	_SPKR_COUNT^(0+128),w
  9201     08C8  1C03               	skipc
  9202     08C9  28CC               	goto	i1l595
  9203                           
  9204                           ;main.c: 361:         SPKR_COUNT = SPKR_DURATION;
  9205     08CA  085E               	movf	_SPKR_DURATION^(0+128),w
  9206     08CB  00DD               	movwf	_SPKR_COUNT^(0+128)
  9207     08CC                     i1l595:
  9208                           
  9209                           ;main.c: 363:     if (LOGIC_TICK >= 3)
  9210     08CC  3003               	movlw	3
  9211     08CD  0278               	subwf	_LOGIC_TICK,w
  9212     08CE  1C03               	skipc
  9213     08CF  28D3               	goto	i1l2986
  9214                           
  9215                           ;main.c: 364:         READ_FLAG = 1;
  9216     08D0  0022               	movlb	2	; select bank2
  9217     08D1  01D6               	clrf	_READ_FLAG^(0+256)
  9218     08D2  0AD6               	incf	_READ_FLAG^(0+256),f
  9219     08D3                     i1l2986:
  9220                           
  9221                           ;main.c: 366:     if (LOGIC_TICK >= 5)
  9222     08D3  3005               	movlw	5
  9223     08D4  0278               	subwf	_LOGIC_TICK,w
  9224     08D5  1C03               	skipc
  9225     08D6  28DA               	goto	i1l2990
  9226                           
  9227                           ;main.c: 367:         UART_FLAG = 1;
  9228     08D7  0022               	movlb	2	; select bank2
  9229     08D8  01D5               	clrf	_UART_FLAG^(0+256)
  9230     08D9  0AD5               	incf	_UART_FLAG^(0+256),f
  9231     08DA                     i1l2990:
  9232     08DA  300A               	movlw	10
  9233     08DB  0278               	subwf	_LOGIC_TICK,w
  9234     08DC  1C03               	skipc
  9235     08DD  0008               	return
  9236                           
  9237                           ;main.c: 370:     {;main.c: 371:         LOGIC_FLAG = 1;
  9238     08DE  0022               	movlb	2	; select bank2
  9239     08DF  01D4               	clrf	_LOGIC_FLAG^(0+256)
  9240     08E0  0AD4               	incf	_LOGIC_FLAG^(0+256),f
  9241                           
  9242                           ;main.c: 372:         LOGIC_TICK = 0;
  9243     08E1  01F8               	clrf	_LOGIC_TICK
  9244     08E2  0008               	return
  9245     08E3                     __end_of__LogicControlISR:
  9246                           
  9247                           	psect	text45
  9248     1724                     __ptext45:	
  9249 ;; *************** function _TMR0_ISR *****************
  9250 ;; Defined at:
  9251 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  9252 ;; Parameters:    Size  Location     Type
  9253 ;;		None
  9254 ;; Auto vars:     Size  Location     Type
  9255 ;;		None
  9256 ;; Return value:  Size  Location     Type
  9257 ;;                  1    wreg      void 
  9258 ;; Registers used:
  9259 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9260 ;; Tracked objects:
  9261 ;;		On entry : 0/0
  9262 ;;		On exit  : 0/0
  9263 ;;		Unchanged: 0/0
  9264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9269 ;;Total ram usage:        0 bytes
  9270 ;; Hardware stack levels used: 1
  9271 ;; Hardware stack levels required when called: 3
  9272 ;; This function calls:
  9273 ;;		_TMR0_CallBack
  9274 ;; This function is called by:
  9275 ;;		_INTERRUPT_InterruptManager
  9276 ;; This function uses a non-reentrant model
  9277 ;;
  9278                           
  9279     1724                     _TMR0_ISR:	
  9280                           ;psect for function _TMR0_ISR
  9281                           
  9282                           
  9283                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  9284                           
  9285                           ;incstack = 0
  9286                           ; Regs used in _TMR0_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9287     1724  110B               	bcf	11,2	;volatile
  9288                           
  9289                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  9290     1725  0879               	movf	_timer0ReloadVal,w	;volatile
  9291     1726  0020               	movlb	0	; select bank0
  9292     1727  0095               	movwf	21	;volatile
  9293                           
  9294                           ;mcc_generated_files/tmr0.c: 118:     TMR0_CallBack();
  9295     1728  3197  2754         	fcall	_TMR0_CallBack
  9296     172A  0008               	return
  9297     172B                     __end_of_TMR0_ISR:
  9298                           
  9299                           	psect	text46
  9300     1754                     __ptext46:	
  9301 ;; *************** function _TMR0_CallBack *****************
  9302 ;; Defined at:
  9303 ;;		line 123 in file "mcc_generated_files/tmr0.c"
  9304 ;; Parameters:    Size  Location     Type
  9305 ;;		None
  9306 ;; Auto vars:     Size  Location     Type
  9307 ;;		None
  9308 ;; Return value:  Size  Location     Type
  9309 ;;                  1    wreg      void 
  9310 ;; Registers used:
  9311 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9312 ;; Tracked objects:
  9313 ;;		On entry : 0/0
  9314 ;;		On exit  : 0/0
  9315 ;;		Unchanged: 0/0
  9316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9321 ;;Total ram usage:        0 bytes
  9322 ;; Hardware stack levels used: 1
  9323 ;; Hardware stack levels required when called: 2
  9324 ;; This function calls:
  9325 ;;		NULL
  9326 ;;		_TMR0_DefaultInterruptHandler
  9327 ;;		__UIControlISR
  9328 ;; This function is called by:
  9329 ;;		_TMR0_ISR
  9330 ;; This function uses a non-reentrant model
  9331 ;;
  9332                           
  9333     1754                     _TMR0_CallBack:	
  9334                           ;psect for function _TMR0_CallBack
  9335                           
  9336                           
  9337                           ;mcc_generated_files/tmr0.c: 127:     if(TMR0_InterruptHandler)
  9338                           
  9339                           ;incstack = 0
  9340                           ; Regs used in _TMR0_CallBack: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9341     1754  0021               	movlb	1	; select bank1
  9342     1755  085B               	movf	_TMR0_InterruptHandler^(0+128),w
  9343     1756  045C               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
  9344     1757  1903               	btfsc	3,2
  9345     1758  0008               	return
  9346                           
  9347                           ;mcc_generated_files/tmr0.c: 128:     {;mcc_generated_files/tmr0.c: 129:         TMR0_In
      +                          terruptHandler();
  9348     1759  085C               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
  9349     175A  008A               	movwf	10
  9350     175B  085B               	movf	_TMR0_InterruptHandler^(0+128),w
  9351     175C  000A               	callw
  9352     175D  3197               	pagesel	$
  9353     175E  0008               	return
  9354     175F                     __end_of_TMR0_CallBack:
  9355                           
  9356                           	psect	text47
  9357     16EE                     __ptext47:	
  9358 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  9359 ;; Defined at:
  9360 ;;		line 137 in file "mcc_generated_files/tmr0.c"
  9361 ;; Parameters:    Size  Location     Type
  9362 ;;		None
  9363 ;; Auto vars:     Size  Location     Type
  9364 ;;		None
  9365 ;; Return value:  Size  Location     Type
  9366 ;;                  1    wreg      void 
  9367 ;; Registers used:
  9368 ;;		None
  9369 ;; Tracked objects:
  9370 ;;		On entry : 0/0
  9371 ;;		On exit  : 0/0
  9372 ;;		Unchanged: 0/0
  9373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9378 ;;Total ram usage:        0 bytes
  9379 ;; Hardware stack levels used: 1
  9380 ;; This function calls:
  9381 ;;		Nothing
  9382 ;; This function is called by:
  9383 ;;		_TMR0_Initialize
  9384 ;;		_TMR0_CallBack
  9385 ;; This function uses a non-reentrant model
  9386 ;;
  9387                           
  9388     16EE                     _TMR0_DefaultInterruptHandler:	
  9389                           ;psect for function _TMR0_DefaultInterruptHandler
  9390                           
  9391                           
  9392                           ;incstack = 0
  9393                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  9394     16EE  0008               	return
  9395     16EF                     __end_of_TMR0_DefaultInterruptHandler:
  9396                           
  9397                           	psect	text48
  9398     0B52                     __ptext48:	
  9399 ;; *************** function __UIControlISR *****************
  9400 ;; Defined at:
  9401 ;;		line 206 in file "main.c"
  9402 ;; Parameters:    Size  Location     Type
  9403 ;;		None
  9404 ;; Auto vars:     Size  Location     Type
  9405 ;;  btnDnRead       1    3[COMMON] _Bool 
  9406 ;;  btnUpRead       1    2[COMMON] _Bool 
  9407 ;; Return value:  Size  Location     Type
  9408 ;;                  1    wreg      void 
  9409 ;; Registers used:
  9410 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9411 ;; Tracked objects:
  9412 ;;		On entry : 0/0
  9413 ;;		On exit  : 0/0
  9414 ;;		Unchanged: 0/0
  9415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9417 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9418 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9419 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9420 ;;Total ram usage:        3 bytes
  9421 ;; Hardware stack levels used: 1
  9422 ;; Hardware stack levels required when called: 1
  9423 ;; This function calls:
  9424 ;;		i1_EUSART_Write
  9425 ;; This function is called by:
  9426 ;;		_main
  9427 ;;		_TMR0_CallBack
  9428 ;; This function uses a non-reentrant model
  9429 ;;
  9430                           
  9431     0B52                     __UIControlISR:	
  9432                           ;psect for function __UIControlISR
  9433                           
  9434                           
  9435                           ;main.c: 208:     _Bool btnUpRead, btnDnRead;;main.c: 211:     switch(DISP_STATE)
  9436                           
  9437                           ;incstack = 0
  9438                           ; Regs used in __UIControlISR: [wreg-fsr0h+status,2+status,0]
  9439     0B52  2C02               	goto	i1l2972
  9440     0B53                     i1l2908:
  9441                           
  9442                           ;main.c: 215:             btnUpRead = PORTAbits.RA4;
  9443     0B53  3000               	movlw	0
  9444     0B54  0020               	movlb	0	; select bank0
  9445     0B55  1A0C               	btfsc	12,4	;volatile
  9446     0B56  3001               	movlw	1
  9447     0B57  00F2               	movwf	__UIControlISR@btnUpRead
  9448                           
  9449                           ;main.c: 216:             btnDnRead = PORTBbits.RB0;
  9450     0B58  3000               	movlw	0
  9451     0B59  180D               	btfsc	13,0	;volatile
  9452     0B5A  3001               	movlw	1
  9453     0B5B  00F3               	movwf	__UIControlISR@btnDnRead
  9454     0B5C  0021               	movlb	1	; select bank1
  9455     0B5D  120C               	bcf	12,4	;volatile
  9456     0B5E  100D               	bcf	13,0	;volatile
  9457                           
  9458                           ;main.c: 234:             if (!btnDnRead)
  9459     0B5F  0873               	movf	__UIControlISR@btnDnRead,w
  9460     0B60  1D03               	btfss	3,2
  9461     0B61  2B78               	goto	i1l2928
  9462                           
  9463                           ;main.c: 235:             {;main.c: 237:                 if (_LastDownState)
  9464     0B62  084E               	movf	__LastDownState^(0+128),w
  9465     0B63  1903               	btfsc	3,2
  9466     0B64  2B78               	goto	i1l2928
  9467                           
  9468                           ;main.c: 238:                 {;main.c: 241:                     if (CURRENT_MODE > HEAT
      +                          _MODE_0)
  9469     0B65  0877               	movf	_CURRENT_MODE+1,w
  9470     0B66  3A80               	xorlw	128
  9471     0B67  00F1               	movwf	??__UIControlISR
  9472     0B68  3080               	movlw	128
  9473     0B69  0271               	subwf	??__UIControlISR,w
  9474     0B6A  1D03               	skipz
  9475     0B6B  2B6E               	goto	u282_25
  9476     0B6C  3001               	movlw	1
  9477     0B6D  0276               	subwf	_CURRENT_MODE,w
  9478     0B6E                     u282_25:
  9479     0B6E  1C03               	skipc
  9480     0B6F  2B74               	goto	i1l2924
  9481                           
  9482                           ;main.c: 242:                         CURRENT_MODE--;
  9483     0B70  30FF               	movlw	255
  9484     0B71  07F6               	addwf	_CURRENT_MODE,f
  9485     0B72  30FF               	movlw	255
  9486     0B73  3DF7               	addwfc	_CURRENT_MODE+1,f
  9487     0B74                     i1l2924:
  9488                           
  9489                           ;main.c: 245:                     SPKR_COUNT = 0;
  9490     0B74  0021               	movlb	1	; select bank1
  9491     0B75  01DD               	clrf	_SPKR_COUNT^(0+128)
  9492                           
  9493                           ;main.c: 246:                     DN_CLICKED = 1;
  9494     0B76  01CB               	clrf	_DN_CLICKED^(0+128)
  9495     0B77  0ACB               	incf	_DN_CLICKED^(0+128),f
  9496     0B78                     i1l2928:	
  9497                           ;main.c: 247:                 }
  9498                           
  9499                           
  9500                           ;main.c: 255:             _LastDownState = btnDnRead;
  9501     0B78  0873               	movf	__UIControlISR@btnDnRead,w
  9502     0B79  00CE               	movwf	__LastDownState^(0+128)
  9503                           
  9504                           ;main.c: 257:             if (!btnUpRead)
  9505     0B7A  0872               	movf	__UIControlISR@btnUpRead,w
  9506     0B7B  1D03               	btfss	3,2
  9507     0B7C  2B92               	goto	i1l2942
  9508                           
  9509                           ;main.c: 258:             {;main.c: 260:                 if (_LastUpState)
  9510     0B7D  084F               	movf	__LastUpState^(0+128),w
  9511     0B7E  1903               	btfsc	3,2
  9512     0B7F  2B92               	goto	i1l2942
  9513                           
  9514                           ;main.c: 261:                 {;main.c: 264:                     if (CURRENT_MODE < HEAT
      +                          _MODE_5)
  9515     0B80  0877               	movf	_CURRENT_MODE+1,w
  9516     0B81  3A80               	xorlw	128
  9517     0B82  00F1               	movwf	??__UIControlISR
  9518     0B83  3080               	movlw	128
  9519     0B84  0271               	subwf	??__UIControlISR,w
  9520     0B85  1D03               	skipz
  9521     0B86  2B89               	goto	u285_25
  9522     0B87  3005               	movlw	5
  9523     0B88  0276               	subwf	_CURRENT_MODE,w
  9524     0B89                     u285_25:
  9525     0B89  1803               	skipnc
  9526     0B8A  2B8F               	goto	i1l2938
  9527                           
  9528                           ;main.c: 265:                         CURRENT_MODE++;
  9529     0B8B  3001               	movlw	1
  9530     0B8C  07F6               	addwf	_CURRENT_MODE,f
  9531     0B8D  3000               	movlw	0
  9532     0B8E  3DF7               	addwfc	_CURRENT_MODE+1,f
  9533     0B8F                     i1l2938:
  9534                           
  9535                           ;main.c: 268:                     SPKR_COUNT = 0;
  9536     0B8F  0021               	movlb	1	; select bank1
  9537     0B90  01DD               	clrf	_SPKR_COUNT^(0+128)
  9538                           
  9539                           ;main.c: 269:                     DN_CLICKED = 0;
  9540     0B91  01CB               	clrf	_DN_CLICKED^(0+128)
  9541     0B92                     i1l2942:	
  9542                           ;main.c: 270:                 }
  9543                           
  9544                           
  9545                           ;main.c: 278:             _LastUpState = btnUpRead;
  9546     0B92  0872               	movf	__UIControlISR@btnUpRead,w
  9547     0B93  00CF               	movwf	__LastUpState^(0+128)
  9548                           
  9549                           ;main.c: 281:             DISP_STATE = DISP_STATE_2;
  9550     0B94  3001               	movlw	1
  9551     0B95  00C5               	movwf	_DISP_STATE^(0+128)
  9552     0B96  3000               	movlw	0
  9553     0B97  00C6               	movwf	(_DISP_STATE^(0+128)+1)
  9554     0B98  0022               	movlb	2	; select bank2
  9555     0B99  148D               	bsf	13,1	;volatile
  9556     0B9A  118C               	bcf	12,3	;volatile
  9557                           
  9558                           ;main.c: 287:             if (CURRENT_MODE > HEAT_MODE_1)
  9559     0B9B  0877               	movf	_CURRENT_MODE+1,w
  9560     0B9C  3A80               	xorlw	128
  9561     0B9D  00F1               	movwf	??__UIControlISR
  9562     0B9E  3080               	movlw	128
  9563     0B9F  0271               	subwf	??__UIControlISR,w
  9564     0BA0  1D03               	skipz
  9565     0BA1  2BA4               	goto	u286_25
  9566     0BA2  3002               	movlw	2
  9567     0BA3  0276               	subwf	_CURRENT_MODE,w
  9568     0BA4                     u286_25:
  9569     0BA4  1C03               	skipc
  9570     0BA5  2BB8               	goto	i1l550
  9571                           
  9572                           ;main.c: 288:             {;main.c: 289:                 do { LATAbits.LATA4 = 0; } whil
      +                          e(0);
  9573     0BA6  0022               	movlb	2	; select bank2
  9574     0BA7  120C               	bcf	12,4	;volatile
  9575                           
  9576                           ;main.c: 291:                 if (CURRENT_MODE > HEAT_MODE_2)
  9577     0BA8  0877               	movf	_CURRENT_MODE+1,w
  9578     0BA9  3A80               	xorlw	128
  9579     0BAA  00F1               	movwf	??__UIControlISR
  9580     0BAB  3080               	movlw	128
  9581     0BAC  0271               	subwf	??__UIControlISR,w
  9582     0BAD  1D03               	skipz
  9583     0BAE  2BB1               	goto	u287_25
  9584     0BAF  3003               	movlw	3
  9585     0BB0  0276               	subwf	_CURRENT_MODE,w
  9586     0BB1                     u287_25:
  9587     0BB1  1C03               	skipc
  9588     0BB2  2BB6               	goto	i1l547
  9589                           
  9590                           ;main.c: 292:                     do { LATBbits.LATB0 = 0; } while(0);
  9591     0BB3  0022               	movlb	2	; select bank2
  9592     0BB4  100D               	bcf	13,0	;volatile
  9593     0BB5  2BBB               	goto	i1l554
  9594     0BB6                     i1l547:	
  9595                           ;main.c: 294:                     do { LATBbits.LATB0 = 1; } while(0);
  9596                           
  9597     0BB6  0022               	movlb	2	; select bank2
  9598     0BB7  2BBA               	goto	i1l552
  9599     0BB8                     i1l550:	
  9600                           ;main.c: 297:             {;main.c: 298:                 do { LATAbits.LATA4 = 1; } whil
      +                          e(0);
  9601                           
  9602     0BB8  0022               	movlb	2	; select bank2
  9603     0BB9  160C               	bsf	12,4	;volatile
  9604     0BBA                     i1l552:	
  9605                           ;main.c: 299:                 do { LATBbits.LATB0 = 1; } while(0);
  9606                           
  9607     0BBA  140D               	bsf	13,0	;volatile
  9608     0BBB                     i1l554:	
  9609                           ;main.c: 303:             do { LATBbits.LATB2 = 1; } while(0);
  9610                           
  9611     0BBB  150D               	bsf	13,2	;volatile
  9612     0BBC  0008               	return
  9613     0BBD                     i1l2950:
  9614                           
  9615                           ;main.c: 308:             DISP_STATE = DISP_STATE_3;
  9616     0BBD  3002               	movlw	2
  9617     0BBE  00C5               	movwf	_DISP_STATE^(0+128)
  9618     0BBF  3000               	movlw	0
  9619     0BC0  00C6               	movwf	(_DISP_STATE^(0+128)+1)
  9620     0BC1  0022               	movlb	2	; select bank2
  9621     0BC2  108D               	bcf	13,1	;volatile
  9622     0BC3  158C               	bsf	12,3	;volatile
  9623                           
  9624                           ;main.c: 314:             if (CURRENT_MODE > HEAT_MODE_3)
  9625     0BC4  0877               	movf	_CURRENT_MODE+1,w
  9626     0BC5  3A80               	xorlw	128
  9627     0BC6  00F1               	movwf	??__UIControlISR
  9628     0BC7  3080               	movlw	128
  9629     0BC8  0271               	subwf	??__UIControlISR,w
  9630     0BC9  1D03               	skipz
  9631     0BCA  2BCD               	goto	u288_25
  9632     0BCB  3004               	movlw	4
  9633     0BCC  0276               	subwf	_CURRENT_MODE,w
  9634     0BCD                     u288_25:
  9635     0BCD  1C03               	skipc
  9636     0BCE  2BE2               	goto	i1l572
  9637                           
  9638                           ;main.c: 315:             {;main.c: 316:                 do { LATBbits.LATB0 = 0; } whil
      +                          e(0);
  9639     0BCF  0022               	movlb	2	; select bank2
  9640     0BD0  100D               	bcf	13,0	;volatile
  9641                           
  9642                           ;main.c: 318:                 if (CURRENT_MODE > HEAT_MODE_4)
  9643     0BD1  0877               	movf	_CURRENT_MODE+1,w
  9644     0BD2  3A80               	xorlw	128
  9645     0BD3  00F1               	movwf	??__UIControlISR
  9646     0BD4  3080               	movlw	128
  9647     0BD5  0271               	subwf	??__UIControlISR,w
  9648     0BD6  1D03               	skipz
  9649     0BD7  2BDA               	goto	u289_25
  9650     0BD8  3005               	movlw	5
  9651     0BD9  0276               	subwf	_CURRENT_MODE,w
  9652     0BDA                     u289_25:
  9653     0BDA  1C03               	skipc
  9654     0BDB  2BDF               	goto	i1l569
  9655                           
  9656                           ;main.c: 319:                     do { LATAbits.LATA4 = 0; } while(0);
  9657     0BDC  0022               	movlb	2	; select bank2
  9658     0BDD  120C               	bcf	12,4	;volatile
  9659     0BDE  0008               	return
  9660     0BDF                     i1l569:	
  9661                           ;main.c: 321:                     do { LATAbits.LATA4 = 1; } while(0);
  9662                           
  9663     0BDF  0022               	movlb	2	; select bank2
  9664     0BE0  160C               	bsf	12,4	;volatile
  9665     0BE1  0008               	return
  9666     0BE2                     i1l572:	
  9667                           ;main.c: 324:             {;main.c: 325:                 do { LATAbits.LATA4 = 1; } whil
      +                          e(0);
  9668                           
  9669     0BE2  0022               	movlb	2	; select bank2
  9670     0BE3  160C               	bsf	12,4	;volatile
  9671                           
  9672                           ;main.c: 326:                 do { LATBbits.LATB0 = 1; } while(0);
  9673     0BE4  140D               	bsf	13,0	;volatile
  9674     0BE5  0008               	return
  9675     0BE6                     i1l2958:
  9676                           
  9677                           ;main.c: 332:             DISP_STATE = DISP_STATE_1;
  9678     0BE6  01C5               	clrf	_DISP_STATE^(0+128)
  9679     0BE7  01C6               	clrf	(_DISP_STATE+1)^(0+128)
  9680     0BE8  0022               	movlb	2	; select bank2
  9681     0BE9  108D               	bcf	13,1	;volatile
  9682     0BEA  118C               	bcf	12,3	;volatile
  9683     0BEB  0021               	movlb	1	; select bank1
  9684     0BEC  160C               	bsf	12,4	;volatile
  9685     0BED  140D               	bsf	13,0	;volatile
  9686                           
  9687                           ;main.c: 339:             if (CURRENT_MODE > HEAT_MODE_0)
  9688     0BEE  0877               	movf	_CURRENT_MODE+1,w
  9689     0BEF  3A80               	xorlw	128
  9690     0BF0  00F1               	movwf	??__UIControlISR
  9691     0BF1  3080               	movlw	128
  9692     0BF2  0271               	subwf	??__UIControlISR,w
  9693     0BF3  1D03               	skipz
  9694     0BF4  2BF7               	goto	u290_25
  9695     0BF5  3001               	movlw	1
  9696     0BF6  0276               	subwf	_CURRENT_MODE,w
  9697     0BF7                     u290_25:
  9698     0BF7  1C03               	skipc
  9699     0BF8  2BFC               	goto	i1l589
  9700                           
  9701                           ;main.c: 340:                 do { LATBbits.LATB2 = 0; } while(0);
  9702     0BF9  0022               	movlb	2	; select bank2
  9703     0BFA  110D               	bcf	13,2	;volatile
  9704     0BFB  0008               	return
  9705     0BFC                     i1l589:	
  9706                           ;main.c: 342:                 do { LATBbits.LATB2 = 1; } while(0);
  9707                           
  9708     0BFC  0022               	movlb	2	; select bank2
  9709     0BFD  150D               	bsf	13,2	;volatile
  9710     0BFE  0008               	return
  9711     0BFF                     i1l2970:
  9712                           
  9713                           ;main.c: 347:             DISP_STATE = DISP_STATE_1;
  9714     0BFF  01C5               	clrf	_DISP_STATE^(0+128)
  9715     0C00  01C6               	clrf	(_DISP_STATE+1)^(0+128)
  9716                           
  9717                           ;main.c: 348:     }
  9718     0C01  0008               	return
  9719     0C02                     i1l2972:
  9720                           
  9721                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9722                           ; Switch size 1, requested type "simple"
  9723                           ; Number of cases is 1, Range of values is 0 to 0
  9724                           ; switch strategies available:
  9725                           ; Name         Instructions Cycles
  9726                           ; simple_byte            4     3 (average)
  9727                           ; direct_byte            8     6 (fixed)
  9728                           ; jumptable            260     6 (fixed)
  9729                           ;	Chosen strategy is simple_byte
  9730     0C02  0021               	movlb	1	; select bank1
  9731     0C03  0846               	movf	(_DISP_STATE+1)^(0+128),w
  9732     0C04  3A00               	xorlw	0	; case 0
  9733     0C05  1903               	skipnz
  9734     0C06  2C08               	goto	i1l4830
  9735     0C07  2BFF               	goto	i1l2970
  9736     0C08                     i1l4830:
  9737                           
  9738                           ; Switch size 1, requested type "simple"
  9739                           ; Number of cases is 3, Range of values is 0 to 2
  9740                           ; switch strategies available:
  9741                           ; Name         Instructions Cycles
  9742                           ; simple_byte           10     6 (average)
  9743                           ; direct_byte           12     6 (fixed)
  9744                           ; jumptable            260     6 (fixed)
  9745                           ;	Chosen strategy is simple_byte
  9746     0C08  0845               	movf	_DISP_STATE^(0+128),w
  9747     0C09  3A00               	xorlw	0	; case 0
  9748     0C0A  1903               	skipnz
  9749     0C0B  2B53               	goto	i1l2908
  9750     0C0C  3A01               	xorlw	1	; case 1
  9751     0C0D  1903               	skipnz
  9752     0C0E  2BBD               	goto	i1l2950
  9753     0C0F  3A03               	xorlw	3	; case 2
  9754     0C10  1903               	skipnz
  9755     0C11  2BE6               	goto	i1l2958
  9756     0C12  2BFF               	goto	i1l2970
  9757     0C13  0008               	return
  9758     0C14                     __end_of__UIControlISR:
  9759                           
  9760                           	psect	text49
  9761     1732                     __ptext49:	
  9762 ;; *************** function i1_EUSART_Write *****************
  9763 ;; Defined at:
  9764 ;;		line 132 in file "mcc_generated_files/eusart.c"
  9765 ;; Parameters:    Size  Location     Type
  9766 ;;  txData          1    wreg     unsigned char 
  9767 ;; Auto vars:     Size  Location     Type
  9768 ;;  txData          1    0[COMMON] unsigned char 
  9769 ;; Return value:  Size  Location     Type
  9770 ;;                  1    wreg      void 
  9771 ;; Registers used:
  9772 ;;		wreg
  9773 ;; Tracked objects:
  9774 ;;		On entry : 0/0
  9775 ;;		On exit  : 0/0
  9776 ;;		Unchanged: 0/0
  9777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9779 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9781 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9782 ;;Total ram usage:        1 bytes
  9783 ;; Hardware stack levels used: 1
  9784 ;; This function calls:
  9785 ;;		Nothing
  9786 ;; This function is called by:
  9787 ;;		__UIControlISR
  9788 ;; This function uses a non-reentrant model
  9789 ;;
  9790                           
  9791     1732                     i1_EUSART_Write:	
  9792                           ;psect for function i1_EUSART_Write
  9793                           
  9794                           
  9795                           ;incstack = 0
  9796                           ; Regs used in i1_EUSART_Write: [wreg]
  9797                           ;i1EUSART_Write@txData stored from wreg
  9798     1732  00F0               	movwf	i1EUSART_Write@txData
  9799     1733                     i1l297:	
  9800                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  9801                           
  9802                           
  9803                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  9804     1733  0020               	movlb	0	; select bank0
  9805     1734  1E11               	btfss	17,4	;volatile
  9806     1735  2F33               	goto	i1l297
  9807                           
  9808                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  9809     1736  0870               	movf	i1EUSART_Write@txData,w
  9810     1737  0023               	movlb	3	; select bank3
  9811     1738  009A               	movwf	26	;volatile
  9812     1739  0008               	return
  9813     173A                     __end_ofi1_EUSART_Write:
  9814     007E                     btemp	set	126	;btemp
  9815     007E                     int$flags	set	126
  9816     007E                     wtemp0	set	126
  9817                           
  9818                           	psect	idloc
  9819                           
  9820                           ;Config register IDLOC0 @ 0x8000
  9821                           ;	unspecified, using default values
  9822     8000                     	org	32768
  9823     8000  3FFF               	dw	16383
  9824                           
  9825                           ;Config register IDLOC1 @ 0x8001
  9826                           ;	unspecified, using default values
  9827     8001                     	org	32769
  9828     8001  3FFF               	dw	16383
  9829                           
  9830                           ;Config register IDLOC2 @ 0x8002
  9831                           ;	unspecified, using default values
  9832     8002                     	org	32770
  9833     8002  3FFF               	dw	16383
  9834                           
  9835                           ;Config register IDLOC3 @ 0x8003
  9836                           ;	unspecified, using default values
  9837     8003                     	org	32771
  9838     8003  3FFF               	dw	16383
  9839                           
  9840                           	psect	config
  9841                           
  9842                           ;Config register CONFIG1 @ 0x8007
  9843                           ;	Oscillator Selection
  9844                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  9845                           ;	Watchdog Timer Enable
  9846                           ;	WDTE = ON, WDT enabled
  9847                           ;	Power-up Timer Enable
  9848                           ;	PWRTE = OFF, PWRT disabled
  9849                           ;	MCLR Pin Function Select
  9850                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  9851                           ;	Flash Program Memory Code Protection
  9852                           ;	CP = OFF, Program memory code protection is disabled
  9853                           ;	Data Memory Code Protection
  9854                           ;	CPD = OFF, Data memory code protection is disabled
  9855                           ;	Brown-out Reset Enable
  9856                           ;	BOREN = ON, Brown-out Reset enabled
  9857                           ;	Clock Out Enable
  9858                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  9859                           ;	Internal/External Switchover
  9860                           ;	IESO = ON, Internal/External Switchover mode is enabled
  9861                           ;	Fail-Safe Clock Monitor Enable
  9862                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  9863     8007                     	org	32775
  9864     8007  3FFC               	dw	16380
  9865                           
  9866                           ;Config register CONFIG2 @ 0x8008
  9867                           ;	Flash Memory Self-Write Protection
  9868                           ;	WRT = OFF, Write protection off
  9869                           ;	PLL Enable
  9870                           ;	PLLEN = OFF, 4x PLL disabled
  9871                           ;	Stack Overflow/Underflow Reset Enable
  9872                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  9873                           ;	Brown-out Reset Voltage Selection
  9874                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  9875                           ;	Low-Voltage Programming Enable
  9876                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  9877     8008                     	org	32776
  9878     8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    34
    Data        4
    BSS         25
    Persistent  44
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     79      80
    BANK1            80     35      63
    BANK2            80     50      58
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), _SpkrControlISR(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), _SpkrControlISR(), NULL(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _LogicControlISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _LogicControlISR(), TMR1_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _UIControlISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _UIControlISR(), NULL(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_TMR0_SetInterruptHandler
    _main->_TMR1_SetInterruptHandler
    _main->_TMR2_SetInterruptHandler
    __SendDataToConsole->___wmul
    ___awdiv->___wmul
    __ReadSensor->_ADC_GetConversion
    __ReadSensor->___fltol
    ___fladd->__Umul8_16
    ___flmul->__Umul8_16
    ___fldiv->__Umul8_16
    __ControlHeat->_EUSART_Write
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR2_CallBack->__SpkrControlISR
    _TMR1_ISR->_TMR1_WriteTimer
    _TMR1_CallBack->__LogicControlISR
    _TMR0_CallBack->__UIControlISR
    __UIControlISR->i1_EUSART_Write

Critical Paths under _main in BANK0

    __SendDataToConsole->___awdiv
    ___awdiv->___wmul
    __ReadSensor->_my_log
    _my_log->___flmul
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___fladd
    ___fldiv->___xxtofl

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    __ReadSensor->_my_log
    _my_log->___flmul

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->__ReadSensor

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   36477
                                             77 BANK0      2     2      0
                                             31 BANK1      4     4      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR1_SetInterruptHandler
           _TMR2_SetInterruptHandler
                       __ControlHeat
                        __ReadSensor
                 __SendDataToConsole
 ---------------------------------------------------------------------------------
 (1) __SendDataToConsole                                  10    10      0    1769
                                             13 BANK0     10    10      0
                       _EUSART_Write
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     676
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              4 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) __ReadSensor                                         50    50      0   32599
                                              0 BANK2     50    50      0
                  _ADC_GetConversion
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                             _my_log
 ---------------------------------------------------------------------------------
 (2) _my_log                                              22    18      4   19102
                                             73 BANK0      4     0      4
                                             13 BANK1     18    18      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     746
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4807
                                             60 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    4562
                                             40 BANK0     20    12      8
                          __Umul8_16 (ARG)
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     155
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4793
                                             60 BANK0     13     5      8
                                              0 BANK1     13    13      0
                          __Umul8_16
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              4 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     986
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    2403
                                             14 BANK0     26    18      8
                          __Umul8_16 (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     427
                                              4 COMMON     2     2      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    4     2      2      31
                                              4 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) __ControlHeat                                         5     5      0      31
                                              0 BANK0      5     5      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     211
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     211
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     211
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     363
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     3     2      1     189
                                              4 COMMON     1     0      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0     396
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR2_CallBack                                        0     0      0       0
                                NULL *
       _TMR2_DefaultInterruptHandler *
                    __SpkrControlISR *
 ---------------------------------------------------------------------------------
 (8) __SpkrControlISR                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_CallBack                                        0     0      0       0
                                NULL *
       _TMR1_DefaultInterruptHandler *
                   __LogicControlISR *
 ---------------------------------------------------------------------------------
 (8) __LogicControlISR                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0     156
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR0_CallBack                                        0     0      0     156
                                NULL *
       _TMR0_DefaultInterruptHandler *
                      __UIControlISR *
 ---------------------------------------------------------------------------------
 (8) __UIControlISR                                        3     3      0     156
                                              1 COMMON     3     3      0
                     i1_EUSART_Write
 ---------------------------------------------------------------------------------
 (9) i1_EUSART_Write                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _TMR2_SetInterruptHandler
   __ControlHeat
     _EUSART_Write
   __ReadSensor
     _ADC_GetConversion
     ___fladd
       __Umul8_16 (ARG)
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___flneg (ARG)
         ___xxtofl (ARG)
     ___fldiv
     ___flmul
       __Umul8_16
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flneg (ARG)
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
     _my_log
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___flsub
         ___fladd
       ___xxtofl
   __SendDataToConsole
     _EUSART_Write
     ___awdiv
       ___wmul (ARG)
     ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       NULL(Fake) *
       _TMR0_DefaultInterruptHandler *
       __UIControlISR *
         i1_EUSART_Write
   _TMR1_ISR
     _TMR1_CallBack
       NULL(Fake) *
       _TMR1_DefaultInterruptHandler *
       __LogicControlISR *
     _TMR1_WriteTimer
   _TMR2_ISR
     _TMR2_CallBack
       NULL(Fake) *
       _TMR2_DefaultInterruptHandler *
       __SpkrControlISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     23      3F       7       78.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     32      3A       9       72.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      D3      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      D3      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed May 29 22:36:17 2024

                             ??i1_EUSART_Write 0070               __end_of_TMR2_SetInterruptHandler 171E  
                                            _A 1814                                              _B 1810  
                                            _C 180C                                   ___fldiv@aexp 0047  
                                 ___fldiv@bexp 0046                                   ___fldiv@sign 003F  
                                           l93 0817                                   ___awdiv@sign 002A  
                          ___wmul@multiplicand 0022                                _timer0ReloadVal 0079  
                          __Umul8_16@word_mpld 0024                                            l362 08B2  
                                          l363 08B1                                            l620 0CA9  
                                          l297 1743                                            l477 0796  
                                          l494 07F0                                            l832 0827  
                                          _PR2 001B                                _timer1ReloadVal 00C7  
               ?_EUSART_SetFramingErrorHandler 0074                                _TMR2_Initialize 1791  
                                          wreg 0009                                   ___flmul@aexp 00A1  
                                 ___flmul@bexp 00A6                                   ___flmul@sign 00A0  
                                 ___flmul@temp 00AB                                   ___flmul@prod 00A7  
                                 ___fltol@exp1 0075                                           l1010 0A5D  
                                         l1013 0AAB                                           l1033 09BD  
                                         l1210 0E28                                           l1211 0E40  
                                         l1213 0E4B                                           l1133 0E93  
                                         l1241 02D8                                           l1137 0F02  
                                         l1154 0F83                                           l1139 0EE7  
                                         l1175 0FFA                                           l1167 0FE2  
                                         l1248 086A                                           l4000 0FB4  
                                         l1273 0ADC                                           l4004 0FB6  
                                         l1189 0D21                                           l4110 0CF7  
                                         l4022 0FF2                                           l1286 0B24  
                                         l1287 0B2E                                           l1279 0B10  
                                         l4112 0CFF                                           l4202 0DE7  
                                         l4130 0D19                                           l4106 0CF4  
                                         l4026 0FF6                                           l4212 0E10  
                                         l4140 0D40                                           l4036 0864  
                                         l4126 0D16                                           l4064 0A77  
                                         l4240 005D                                           l4400 0B15  
                                         l4226 0E47                                           l4146 0D4C  
                                         l4330 0240                                           l4250 0079  
                                         l4172 0DAC                                           l4068 0A91  
                                         l4340 0262                                           l4412 0B49  
                                         l4190 0DB7                                           l4166 0D93  
                                         l4174 0D75                                           l4350 0299  
                                         l4246 006D                                           l4600 097F  
                                         l4192 0DCE                                           l4176 0DB1  
                                         l4360 02C9                                           l4336 025F  
                                         l4328 0229                                           l4264 0098  
                                         l4248 0070                                           l4512 057A  
                                         l4354 02B0                                           l4266 009B  
                                         l4258 0088                                           l4620 09AB  
                                         l4604 0988                                           l4276 00B4  
                                         l4268 00A4                                           l4524 0637  
                                         l4532 0619                                           l4516 05E1  
                                         l4702 09E9                                           l4630 09CA  
                                         l4622 09B9                                           l4198 0DE5  
                                         l4390 0AFD                                           l4534 0709  
                                         l4542 0820                                           l4384 0AEB  
                                         l4378 0AD4                                           l4562 0930  
                                         l4802 07DD                                           l4708 09DE  
                                         l3924 0EED                                           l3916 0EBB  
                                         l3852 0E64                                           l4388 0AED  
                                         l4580 094F                                           l4718 0A10  
                                         l3950 0F20                                           l3942 0F10  
                                         l3926 0EEF                                           l3934 0EFD  
                                         l4398 0B22                                           l4590 096A  
                                         l3952 0F22                                           l3960 0F31  
                                         l3880 0E8B                                           l3856 0E67  
                                         l4568 093B                                           l4808 07E9  
                                         l3970 0F7B                                           l3858 0E6F  
                                         l4594 0972                                           l4586 0961  
                                         l4578 0943                                           l4754 0787  
                                         l3876 0E88                                           l4684 0C85  
                                         l4772 07A7                                           l3886 0E9D  
                                         l4766 079F                                           l4758 078F  
                                         l3992 0FA9                                           l4688 0C97  
                                         l4698 09E6                                           l3986 0FA2  
                                         l3978 0F95                                           l3994 0FAB  
                                         l4786 07C0                                           l4788 07C6  
                                         _LATA 010C                                           _LATB 010D  
                                         u5025 0DBA                                           u5115 0DFE  
                                         u5125 0E19                                           u5045 0DC3  
                                         u5135 0E32                                           u4440 0EDA  
                                         u5305 0235                                           u4450 0EDB  
                                         u5235 0157                                           u4435 0ECF  
                                         u5245 0184                                           u4605 0F96  
                                         u5255 01D9                                           u5265 01FE  
                                         u4705 0FCD                                           u5275 0214  
                                         u4563 0F43                                           u4555 0F26  
                                         u6067 075B                                           u6077 0812  
                                         u5285 022C                                           u4485 0EF3  
                                         u5525 0B36                                           u5445 0AF6  
                                         u5375 0280                                           u5385 02A4  
                                         u5465 0B0A                                           u5705 0950  
                                         u5625 0828                                           u5395 02BC  
                                         u5715 095A                                           u5635 082D  
                                         u5485 0B1C                                           u5725 0962  
                                         u5905 0A0E                                           u5825 09C1  
                                         u4785 086B                                           u4955 0D7D  
                                         u5925 0A34                                           u5765 0991  
                                         u4965 0D84                                           u5685 0946  
                                         u4985 0D8D                                           u5795 09AC  
                                         u4995 0DA1                                           u5875 0C8F  
                                         u5885 0CA1                                           _TEMP 0152  
                                         _TMR0 0015                                           _TMR2 001A  
                                  main@readVal 00C2                                           _WPUA 020C  
                                         _WPUB 020D                                    main@saveVal 00C1  
                                         _main 0752                                           fsr0h 0005  
                                         indf0 0000                                           fsr0l 0004  
                                         btemp 007E                                __end_of_TURN_ON 181C  
                                         start 0023                                ___fldiv@new_exp 0040  
                   ??_TMR1_SetInterruptHandler 0076                                __SpkrControlISR 08E3  
                      __end_of_TMR0_Initialize 17B5                 ??_TMR0_DefaultInterruptHandler 0070  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 1732  
                                ___fltol@sign1 0074                                __end_of___fladd 1000  
                                        ?_main 0070                                __end_of___fldiv 0E4E  
                              __end_of___awdiv 0977                                __end_of___flneg 1754  
                              __end_of___flmul 02EE                                __end_of___flsub 0859  
                              __end_of___fltol 09D9                                ___awdiv@divisor 0024  
                                        _T1CON 0018                                          _T2CON 001C  
                                        i1l160 0019                                          i1l165 0021  
                                        i1l157 000D                                          i1l516 0923  
                                        i1l550 0BB8                                          i1l552 0BBA  
                                        i1l297 1733                                          i1l554 0BBB  
                                        i1l547 0BB6                                          i1l572 0BE2  
                                        i1l569 0BDF                                          i1l595 08CC  
                                        i1l589 0BFC                                ___awdiv@counter 0029  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
                    ?_TMR0_SetInterruptHandler 0074                               __end_of_TMR0_ISR 172B  
                             __end_of_TMR1_ISR 1782                               __end_of_TMR2_ISR 16FA  
                              _DATAEE_ReadByte 07F3                               __end_of_SHUT_OFF 181E  
                               _WDT_Initialize 16F1                                ??__UIControlISR 0071  
                      __end_of_TMR1_Initialize 17E6                                          pclath 000A  
                                        status 0003                                          wtemp0 007E  
                              _TMR1_WriteTimer 1782                                __initialization 0025  
                                 __end_of_main 07F3                                 ??_EUSART_Write 0074  
                      __end_of_TMR2_Initialize 17A2                    ?_INTERRUPT_InterruptManager 0070  
                     _TMR2_SetInterruptHandler 1718                                         ??_main 006D  
                                ??__ReadSensor 0076                         __end_of_WDT_Initialize 16F5  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 00D5  
                                       _ADRESH 009C                                         _EEADRH 0192  
                                       _ADRESL 009B                                         _EEADRL 0191  
                                       _EEDATH 0194                                         _EEDATL 0193  
                                       _EECON2 0196                               ___awdiv@dividend 0026  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _BORCON 0116                                         _T1GCON 0019  
                      TMR1_WriteTimer@timerVal 0070                                         i1l2900 0912  
                                       i1l3454 178C                                         i1l2904 0917  
                                       i1l2924 0B74                                         i1l2908 0B53  
                                       i1l2950 0BBD                                         i1l2942 0B92  
                                       i1l2928 0B78                                         i1l2970 0BFF  
                                       i1l2938 0B8F                                         i1l2972 0C02  
                                       i1l4830 0C08                                         i1l2958 0BE6  
                                       i1l2990 08DA                                         i1l2896 0902  
                                       i1l2888 08ED                                         i1l2986 08D3  
                                       u272_20 0900                                         u290_25 0BF7  
                                       u282_25 0B6E                                         u275_20 0910  
                                       u285_25 0B89                                         u278_20 0920  
                                       u286_25 0BA4                                         u287_25 0BB1  
                                       u288_25 0BCD                                         u289_25 0BDA  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                             __end_of___xxtofl 0B52                        __end_of__SpkrControlISR 0925  
                            __end_of_SETPOINTS 180C                                  ?__ControlHeat 0070  
         __end_of_TMR1_DefaultInterruptHandler 16F0                   _TMR1_DefaultInterruptHandler 16EF  
                                       ___flge 0A42                                      ??___fladd 0050  
                                       ___wmul 081E                                      ??___fldiv 0036  
                                    ??___awdiv 0028                                      ??___flneg 0074  
                                    ??___flmul 0064                                      ??___flsub 0076  
                                    ??___fltol 0024                              ?__LogicControlISR 0070  
                             ?_TMR0_Initialize 0070                               ___awdiv@quotient 002B  
                                       _my_log 055A                             ??__LogicControlISR 0070  
                      __end_of_DATAEE_ReadByte 0800                                ?_WDT_Initialize 0070  
                     ADC_GetConversion@channel 0021                          __end_of_TMR0_CallBack 175F  
                          __end_of__ReadSensor 055A       TMR2_SetInterruptHandler@InterruptHandler 0074  
     TMR1_SetInterruptHandler@InterruptHandler 0074       TMR0_SetInterruptHandler@InterruptHandler 0074  
                      __end_of_TMR1_WriteTimer 1791                          __end_of_TMR1_CallBack 176A  
                                   ___flge@ff1 0020                                     ___flge@ff2 0024  
                             ?_TMR1_Initialize 0070                                   ___xxtofl@arg 002A  
                                 ___xxtofl@exp 0029                              _SYSTEM_Initialize 17B5  
                                 ___xxtofl@val 0020                        __end_of__initialization 004B  
                                   ___flneg@f1 0020                          __end_of_TMR2_CallBack 1775  
                           ?_SYSTEM_Initialize 0070                                 ??__ControlHeat 0020  
                                   ___fltol@f1 0020                            __ReadSensor@Rpullup 0124  
                               __pcstackCOMMON 0070                                   __pidataBANK1 0002  
                                 __pidataBANK2 0800                            ??_SYSTEM_Initialize 0076  
                                    ?_TMR0_ISR 0070                                      ?_TMR1_ISR 0070  
                                    ?_TMR2_ISR 0070                  ?_TMR1_DefaultInterruptHandler 0070  
                             _DATAEE_WriteByte 089A                               ?_TMR2_Initialize 0070  
                                _MIN_IDLE_TIME 181E                                 _OPTION_REGbits 0095  
              ??_EUSART_SetOverrunErrorHandler 0076                      __end_of_SYSTEM_Initialize 17CD  
                                   __pbssBANK0 006F                                     __pbssBANK1 00C3  
                                   __pbssBANK2 0152                           __end_of_EUSART_Write 174A  
                             ?__SpkrControlISR 0070                              __end_of__Umul8_16 0879  
                              _HEAT_CALL_TICKS 0158                                     __pmaintext 0752  
                                      ?___flge 0020               __end_of_TMR0_SetInterruptHandler 1712  
                                      ?___wmul 0020                                     ??_TMR0_ISR 0074  
                                   ??_TMR1_ISR 0072                                     ??_TMR2_ISR 0071  
                                   __pintentry 0004                                        _BAUDCON 019F  
                                      _APFCON0 011D                                        _APFCON1 011E  
                                      ?_my_log 0069                               ?_DATAEE_ReadByte 0070  
                                  __ReadSensor 02EE                                      ?___xxtofl 0020  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 0076  
                                      _SPKR_DC 00CC                             __end_of_ONE_SECOND 181A  
                             ?_TMR1_WriteTimer 0070                                        _TURN_ON 181A  
                         DATAEE_WriteByte@bAdd 0020                               __ReadSensor$1847 0140  
                             __ReadSensor$1848 0144                               __ReadSensor$1849 0148  
                                  __SaveMemory 0157                           _ADC_InterruptHandler 00C9  
                      __UIControlISR@btnDnRead 0073                     ??_TMR2_SetInterruptHandler 0076  
                                      ___fladd 0E4E                                        ___fldiv 0CDE  
                                      ___awdiv 0925                                        ___flneg 174A  
                                      ___flmul 004F                                        ___flsub 083A  
                                      ___fltol 0977                        __UIControlISR@btnUpRead 0072  
                             __ReadSensor@Rntc 012C                               __ReadSensor@Vout 0120  
                             __ReadSensor@logR 014E                               __ReadSensor@invT 0130  
                               main@savedRelay 00BF                                        __ptext1 0C14  
                                      __ptext2 081E                                        __ptext3 0925  
                                      __ptext4 02EE                                        __ptext5 055A  
                                      __ptext6 0ABE                                        __ptext7 083A  
                                      __ptext8 0E4E                                        __ptext9 174A  
               ??_TMR1_DefaultInterruptHandler 0070                                      _T1CONbits 0018  
                        _OSCILLATOR_Initialize 172B                                  __ReadSensor@T 0134  
                                    _T2CONbits 001C                                     ??___xxtofl 0024  
                         __end_of__ControlHeat 0A42                       ??_PIN_MANAGER_Initialize 0074  
                    ?_TMR1_SetInterruptHandler 0074                                        clrloop0 171F  
                         end_of_initialization 004B                                      _READ_FLAG 0156  
                        __end_of__UIControlISR 0C14          __end_of_EUSART_SetOverrunErrorHandler 170C  
                _EUSART_SetOverrunErrorHandler 1706                           __end_of_MIN_RUN_TIME 1822  
                            _EUSART_Initialize 0879                                        my_log@n 00B9  
                                      my_log@x 0069                             ?_EUSART_Initialize 0070  
                                    _RCSTAbits 019D                                      _SETPOINTS 1800  
                                    _UART_FLAG 0155                            ??_EUSART_Initialize 0076  
                             ??_WDT_Initialize 0074                       _TMR0_SetInterruptHandler 170C  
                                    _PORTAbits 000C                                      _PORTBbits 000D  
                                  ___fladd@grs 005B                                  ___xxtofl@sign 0028  
                                    _TRISAbits 008C                                      _TRISBbits 008D  
                                 _CURRENT_MODE 0076                                    ___fldiv@grs 0042  
                                  ___fldiv@rem 003B                       __end_of_DATAEE_WriteByte 08BD  
                                  ___flmul@grs 00A2                      __end_of_EUSART_Initialize 089A  
                                    _TXSTAbits 019E                                   _READING_ITER 00C3  
                         __ReadSensor@adcValue 014C           __end_of_TMR2_DefaultInterruptHandler 16F1  
                 _TMR2_DefaultInterruptHandler 16F0                                 __end_of___flge 0ABE  
                   _EUSART_DefaultErrorHandler 0000                                 __end_of___wmul 083A  
                                 _EUSART_Write 1742                                 _ADC_Initialize 173A  
                       ?_OSCILLATOR_Initialize 0070                                 __end_of_my_log 0752  
                          start_initialization 0025                            DATAEE_ReadByte@bAdd 0074  
               ?_EUSART_SetOverrunErrorHandler 0074                     _EUSART_FramingErrorHandler 00D7  
                                     ??___flge 0028                                       ??___wmul 0074  
                       _EUSART_SetErrorHandler 16FA                         __end_of_ADC_Initialize 1742  
                                    __Umul8_16 0859                                    __pdataBANK1 00DD  
                                  __pdataBANK2 0158                  ?_TMR2_DefaultInterruptHandler 0070  
                                     ??_my_log 0076                                   ?__ReadSensor 0070  
                                    ___fladd@a 004C                                      ___fladd@b 0048  
                               i1_EUSART_Write 1732                                      ___fldiv@a 002E  
                                    ___fldiv@b 0032                                      ___flmul@a 0060  
                                    ___flmul@b 005C                                    __pbssCOMMON 0076  
                                    ___flsub@a 005C                                      ___flsub@b 0060  
                                    ___latbits 0002                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00A0                                  __pcstackBANK2 0120  
                   __end_of__SendDataToConsole 0CDE                                      __end_of_A 1818  
                                    __end_of_B 1814                                      __end_of_C 1810  
                        _TMR0_InterruptHandler 00DB                                      __pnvBANK1 00D1  
                                 __ControlHeat 09D9                         _PIN_MANAGER_Initialize 17E6  
                                 _RELAY_STATUS 006F               __end_of_TMR1_SetInterruptHandler 1718  
                                     ?___fladd 0048                                       ?___fldiv 002E  
                                     ?___awdiv 0024                                       ?___flneg 0020  
                                     ?___flmul 005C                                       ?___flsub 005C  
                                     ?___fltol 0020                                     ?__Umul8_16 0074  
                              ?_ADC_Initialize 0070                         __end_ofi1_EUSART_Write 173A  
                 ??_INTERRUPT_InterruptManager 0074                                   _MIN_RUN_TIME 1820  
                                 __LastUpState 00CF                                __ReadSensor@Vcc 0128  
                             __LogicControlISR 08BD                                  _TMR0_CallBack 1754  
                         i1EUSART_Write@txData 0070                                 __LastDownState 00CE  
                                _TMR1_CallBack 175F                              ??_TMR0_Initialize 0076  
                                   my_log@term 00BB                                 ___wmul@product 0074  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0074  
                                     _LATBbits 010D                                      clear_ram0 171E  
                                _TMR2_CallBack 176A                                       _PIE1bits 0091  
                            _eusartRxLastError 00D0                     ??_TMR0_SetInterruptHandler 0076  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0076  
                                     _TMR0_ISR 1724              _EUSART_DefaultOverrunErrorHandler 0000  
                                     _TMR1_ISR 1775                                       _TMR2_ISR 16F5  
                                     _SHUT_OFF 181C                                main@readVal_991 00C0  
                              ?i1_EUSART_Write 0070                              ??_TMR1_Initialize 0076  
                                   _ADCON0bits 009D                              ___wmul@multiplier 0020  
               ??_TMR2_DefaultInterruptHandler 0070                      ?_TMR2_SetInterruptHandler 0074  
                        DATAEE_WriteByte@bData 0074                                 ?_TMR0_CallBack 0070  
                               ?_TMR1_CallBack 0070                              ?_DATAEE_WriteByte 0074  
                            ??_TMR2_Initialize 0076                                    _FULL_SAMPLE 00CD  
                               ?_TMR2_CallBack 0070                             ??_DATAEE_WriteByte 0075  
                                   _EECON1bits 0195                              _ADC_GetConversion 0802  
                      ??_OSCILLATOR_Initialize 0074                                    ??__Umul8_16 0020  
                          _EUSART_ErrorHandler 00D3                             ?_ADC_GetConversion 0074  
                     _TMR1_SetInterruptHandler 1712                          __end_of_MIN_IDLE_TIME 1820  
                        _TMR1_InterruptHandler 00D9                            ??_ADC_GetConversion 0020  
                                     ___xxtofl 0ABE                              ??__SpkrControlISR 0070  
                                     __ptext10 004F                                       __ptext11 0859  
                                     __ptext20 1791                                       __ptext12 0A42  
                                     __ptext21 1718                                       __ptext13 0CDE  
                                   _T1GCONbits 0019                                       __ptext30 1700  
                                     __ptext22 17CD                                       __ptext14 0977  
                                     __ptext31 16FA                                       __ptext23 1712  
                                     __ptext15 0802                                       __ptext40 1775  
                                     __ptext32 173A                                       __ptext24 17A2  
                                     __ptext16 09D9                                       __ptext41 1782  
                                     __ptext33 089A                                       __ptext25 170C  
                                     __ptext17 1742                                       __ptext42 175F  
                                     __ptext34 07F3                                       __ptext26 17E6  
                                     __ptext18 17B5                                       __ptext43 16EF  
                                     __ptext27 172B                                       __ptext19 16F1  
                                     __ptext44 08BD                                       __ptext36 16F5  
                                     __ptext28 0879                                       __ptext45 1724  
                                     __ptext37 176A                                       __ptext29 1706  
                                     __ptext46 1754                                       __ptext38 16F0  
                                     __ptext47 16EE                                       __ptext39 08E3  
                                     __ptext48 0B52                                       __ptext49 1732  
                  DATAEE_WriteByte@GIEBitValue 0021                                     _DISP_STATE 00C5  
                               __ReadSensor@Tc 0138                                 __ReadSensor@Tf 013C  
                      __SendDataToConsole@huns 0035                        __SendDataToConsole@ones 0031  
                      __SendDataToConsole@tens 0033           __end_of_TMR0_DefaultInterruptHandler 16EF  
                 _TMR0_DefaultInterruptHandler 16EE                                      my_log@sum 00B5  
                            ??_DATAEE_ReadByte 0074                      __end_of_ADC_GetConversion 081E  
                      ?_EUSART_SetErrorHandler 0074                                     _DN_CLICKED 00CB  
EUSART_SetOverrunErrorHandler@interruptHandler 0074                                   my_log@result 00B1  
                                     int$flags 007E                                  _SPKR_DURATION 00DE  
           __end_of_INTERRUPT_InterruptManager 0023                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 1706                  _EUSART_SetFramingErrorHandler 1700  
                            ??_TMR1_WriteTimer 0072                                     _LOGIC_FLAG 0154  
                                   _INTCONbits 000B                                     _LOGIC_TICK 0078  
                              ??_TMR0_CallBack 0074                                ??_TMR1_CallBack 0071  
                                  _my_log$1850 00AD                                       intlevel1 0000  
                              ??_TMR2_CallBack 0071                                  __UIControlISR 0B52  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 1700  
                             ??_ADC_Initialize 0074                  ?_TMR0_DefaultInterruptHandler 0070  
                           __SendDataToConsole 0C14                                     _ONE_SECOND 1818  
                     __end_of__LogicControlISR 08E3  EUSART_SetFramingErrorHandler@interruptHandler 0074  
                          ?__SendDataToConsole 0070                                  __pstringtext1 1800  
                                __pstringtext2 180C                                  __pstringtext3 1810  
                                __pstringtext4 1814                                  __pstringtext5 1818  
                                __pstringtext6 181A                                  __pstringtext7 181C  
                                __pstringtext8 181E                                  __pstringtext9 1820  
                       __Umul8_16@multiplicand 0074                                     _OPTION_REG 0095  
                              _TMR0_Initialize 17A2                                  ___fladd@signs 0058  
                           EUSART_Write@txData 0074                 __end_of_PIN_MANAGER_Initialize 1800  
                               ?__UIControlISR 0070                           ??__SendDataToConsole 002D  
                                   _SPKR_COUNT 00DD                                   ___fladd@aexp 0059  
                                 ___fladd@bexp 005A                           __Umul8_16@multiplier 0026  
                        _TMR2_InterruptHandler 00D1                                _TMR1_Initialize 17CD  
                            __Umul8_16@product 0022  
