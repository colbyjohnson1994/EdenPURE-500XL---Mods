

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon May 20 22:38:47 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    14                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
    15                           	psect	cinit,global,class=CODE,merge=1,delta=2
    16                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    20                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    21                           	psect	clrtext,global,class=CODE,delta=2
    22                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    24                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    27                           	psect	text1,local,class=CODE,merge=1,delta=2
    28                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text4,local,class=CODE,merge=1,delta=2
    31                           	psect	text5,local,class=CODE,merge=1,delta=2
    32                           	psect	text6,local,class=CODE,merge=1,delta=2
    33                           	psect	text7,local,class=CODE,merge=1,delta=2
    34                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text15,local,class=CODE,merge=1,delta=2
    42                           	psect	text16,local,class=CODE,merge=1,delta=2
    43                           	psect	text17,local,class=CODE,merge=1,delta=2
    44                           	psect	text18,local,class=CODE,merge=1,delta=2
    45                           	psect	text19,local,class=CODE,merge=1,delta=2
    46                           	psect	text20,local,class=CODE,merge=1,delta=2
    47                           	psect	text21,local,class=CODE,merge=1,delta=2
    48                           	psect	text22,local,class=CODE,merge=1,delta=2
    49                           	psect	text23,local,class=CODE,merge=1,delta=2
    50                           	psect	text24,local,class=CODE,merge=1,delta=2
    51                           	psect	text25,local,class=CODE,merge=1,delta=2
    52                           	psect	text26,local,class=CODE,merge=1,delta=2
    53                           	psect	text27,local,class=CODE,merge=1,delta=2
    54                           	psect	text28,local,class=CODE,merge=1,delta=2
    55                           	psect	text29,local,class=CODE,merge=1,delta=2
    56                           	psect	intentry,global,class=CODE,delta=2
    57                           	psect	text31,local,class=CODE,merge=1,delta=2
    58                           	psect	text32,local,class=CODE,merge=1,delta=2
    59                           	psect	text33,local,class=CODE,merge=1,delta=2
    60                           	psect	text34,local,class=CODE,merge=1,delta=2
    61                           	psect	text35,local,class=CODE,merge=1,delta=2
    62                           	psect	text36,local,class=CODE,merge=1,delta=2
    63                           	psect	text37,local,class=CODE,merge=1,delta=2
    64                           	psect	text38,local,class=CODE,merge=1,delta=2
    65                           	psect	text39,local,class=CODE,merge=1,delta=2
    66                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    68                           	dabs	1,0x7E,2
    69     0000                     
    70                           ; Version 2.40
    71                           ; Generated 17/11/2021 GMT
    72                           ; 
    73                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution. Publication is not required when
    87                           ;        this file is used in an embedded application.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC16F1827 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105     0000                     	;# 
   106     0001                     	;# 
   107     0002                     	;# 
   108     0003                     	;# 
   109     0004                     	;# 
   110     0005                     	;# 
   111     0006                     	;# 
   112     0007                     	;# 
   113     0008                     	;# 
   114     0009                     	;# 
   115     000A                     	;# 
   116     000B                     	;# 
   117     000C                     	;# 
   118     000D                     	;# 
   119     0011                     	;# 
   120     0012                     	;# 
   121     0013                     	;# 
   122     0014                     	;# 
   123     0015                     	;# 
   124     0016                     	;# 
   125     0016                     	;# 
   126     0017                     	;# 
   127     0018                     	;# 
   128     0019                     	;# 
   129     001A                     	;# 
   130     001B                     	;# 
   131     001C                     	;# 
   132     001E                     	;# 
   133     001F                     	;# 
   134     008C                     	;# 
   135     008D                     	;# 
   136     0091                     	;# 
   137     0092                     	;# 
   138     0093                     	;# 
   139     0094                     	;# 
   140     0095                     	;# 
   141     0096                     	;# 
   142     0097                     	;# 
   143     0098                     	;# 
   144     0099                     	;# 
   145     009A                     	;# 
   146     009B                     	;# 
   147     009B                     	;# 
   148     009C                     	;# 
   149     009D                     	;# 
   150     009E                     	;# 
   151     010C                     	;# 
   152     010D                     	;# 
   153     0111                     	;# 
   154     0112                     	;# 
   155     0113                     	;# 
   156     0114                     	;# 
   157     0115                     	;# 
   158     0116                     	;# 
   159     0117                     	;# 
   160     0118                     	;# 
   161     0119                     	;# 
   162     011A                     	;# 
   163     011B                     	;# 
   164     011D                     	;# 
   165     011E                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     0191                     	;# 
   169     0191                     	;# 
   170     0192                     	;# 
   171     0193                     	;# 
   172     0193                     	;# 
   173     0193                     	;# 
   174     0194                     	;# 
   175     0195                     	;# 
   176     0196                     	;# 
   177     0199                     	;# 
   178     019A                     	;# 
   179     019B                     	;# 
   180     019B                     	;# 
   181     019B                     	;# 
   182     019B                     	;# 
   183     019C                     	;# 
   184     019C                     	;# 
   185     019D                     	;# 
   186     019E                     	;# 
   187     019F                     	;# 
   188     020C                     	;# 
   189     020D                     	;# 
   190     0211                     	;# 
   191     0211                     	;# 
   192     0212                     	;# 
   193     0212                     	;# 
   194     0213                     	;# 
   195     0213                     	;# 
   196     0214                     	;# 
   197     0214                     	;# 
   198     0215                     	;# 
   199     0215                     	;# 
   200     0215                     	;# 
   201     0216                     	;# 
   202     0216                     	;# 
   203     0217                     	;# 
   204     0217                     	;# 
   205     0219                     	;# 
   206     021A                     	;# 
   207     021B                     	;# 
   208     021C                     	;# 
   209     021D                     	;# 
   210     021E                     	;# 
   211     021F                     	;# 
   212     0291                     	;# 
   213     0291                     	;# 
   214     0292                     	;# 
   215     0293                     	;# 
   216     0294                     	;# 
   217     0295                     	;# 
   218     0295                     	;# 
   219     0296                     	;# 
   220     0298                     	;# 
   221     0298                     	;# 
   222     0299                     	;# 
   223     029A                     	;# 
   224     029B                     	;# 
   225     029C                     	;# 
   226     029C                     	;# 
   227     029D                     	;# 
   228     029E                     	;# 
   229     029E                     	;# 
   230     0311                     	;# 
   231     0311                     	;# 
   232     0312                     	;# 
   233     0313                     	;# 
   234     0318                     	;# 
   235     0318                     	;# 
   236     0319                     	;# 
   237     031A                     	;# 
   238     0394                     	;# 
   239     0395                     	;# 
   240     0396                     	;# 
   241     039A                     	;# 
   242     039C                     	;# 
   243     039D                     	;# 
   244     039E                     	;# 
   245     039F                     	;# 
   246     0415                     	;# 
   247     0416                     	;# 
   248     0417                     	;# 
   249     041C                     	;# 
   250     041D                     	;# 
   251     041E                     	;# 
   252     0FE4                     	;# 
   253     0FE5                     	;# 
   254     0FE6                     	;# 
   255     0FE7                     	;# 
   256     0FE8                     	;# 
   257     0FE9                     	;# 
   258     0FEA                     	;# 
   259     0FEB                     	;# 
   260     0FED                     	;# 
   261     0FEE                     	;# 
   262     0FEF                     	;# 
   263     0000                     	;# 
   264     0001                     	;# 
   265     0002                     	;# 
   266     0003                     	;# 
   267     0004                     	;# 
   268     0005                     	;# 
   269     0006                     	;# 
   270     0007                     	;# 
   271     0008                     	;# 
   272     0009                     	;# 
   273     000A                     	;# 
   274     000B                     	;# 
   275     000C                     	;# 
   276     000D                     	;# 
   277     0011                     	;# 
   278     0012                     	;# 
   279     0013                     	;# 
   280     0014                     	;# 
   281     0015                     	;# 
   282     0016                     	;# 
   283     0016                     	;# 
   284     0017                     	;# 
   285     0018                     	;# 
   286     0019                     	;# 
   287     001A                     	;# 
   288     001B                     	;# 
   289     001C                     	;# 
   290     001E                     	;# 
   291     001F                     	;# 
   292     008C                     	;# 
   293     008D                     	;# 
   294     0091                     	;# 
   295     0092                     	;# 
   296     0093                     	;# 
   297     0094                     	;# 
   298     0095                     	;# 
   299     0096                     	;# 
   300     0097                     	;# 
   301     0098                     	;# 
   302     0099                     	;# 
   303     009A                     	;# 
   304     009B                     	;# 
   305     009B                     	;# 
   306     009C                     	;# 
   307     009D                     	;# 
   308     009E                     	;# 
   309     010C                     	;# 
   310     010D                     	;# 
   311     0111                     	;# 
   312     0112                     	;# 
   313     0113                     	;# 
   314     0114                     	;# 
   315     0115                     	;# 
   316     0116                     	;# 
   317     0117                     	;# 
   318     0118                     	;# 
   319     0119                     	;# 
   320     011A                     	;# 
   321     011B                     	;# 
   322     011D                     	;# 
   323     011E                     	;# 
   324     018C                     	;# 
   325     018D                     	;# 
   326     0191                     	;# 
   327     0191                     	;# 
   328     0192                     	;# 
   329     0193                     	;# 
   330     0193                     	;# 
   331     0193                     	;# 
   332     0194                     	;# 
   333     0195                     	;# 
   334     0196                     	;# 
   335     0199                     	;# 
   336     019A                     	;# 
   337     019B                     	;# 
   338     019B                     	;# 
   339     019B                     	;# 
   340     019B                     	;# 
   341     019C                     	;# 
   342     019C                     	;# 
   343     019D                     	;# 
   344     019E                     	;# 
   345     019F                     	;# 
   346     020C                     	;# 
   347     020D                     	;# 
   348     0211                     	;# 
   349     0211                     	;# 
   350     0212                     	;# 
   351     0212                     	;# 
   352     0213                     	;# 
   353     0213                     	;# 
   354     0214                     	;# 
   355     0214                     	;# 
   356     0215                     	;# 
   357     0215                     	;# 
   358     0215                     	;# 
   359     0216                     	;# 
   360     0216                     	;# 
   361     0217                     	;# 
   362     0217                     	;# 
   363     0219                     	;# 
   364     021A                     	;# 
   365     021B                     	;# 
   366     021C                     	;# 
   367     021D                     	;# 
   368     021E                     	;# 
   369     021F                     	;# 
   370     0291                     	;# 
   371     0291                     	;# 
   372     0292                     	;# 
   373     0293                     	;# 
   374     0294                     	;# 
   375     0295                     	;# 
   376     0295                     	;# 
   377     0296                     	;# 
   378     0298                     	;# 
   379     0298                     	;# 
   380     0299                     	;# 
   381     029A                     	;# 
   382     029B                     	;# 
   383     029C                     	;# 
   384     029C                     	;# 
   385     029D                     	;# 
   386     029E                     	;# 
   387     029E                     	;# 
   388     0311                     	;# 
   389     0311                     	;# 
   390     0312                     	;# 
   391     0313                     	;# 
   392     0318                     	;# 
   393     0318                     	;# 
   394     0319                     	;# 
   395     031A                     	;# 
   396     0394                     	;# 
   397     0395                     	;# 
   398     0396                     	;# 
   399     039A                     	;# 
   400     039C                     	;# 
   401     039D                     	;# 
   402     039E                     	;# 
   403     039F                     	;# 
   404     0415                     	;# 
   405     0416                     	;# 
   406     0417                     	;# 
   407     041C                     	;# 
   408     041D                     	;# 
   409     041E                     	;# 
   410     0FE4                     	;# 
   411     0FE5                     	;# 
   412     0FE6                     	;# 
   413     0FE7                     	;# 
   414     0FE8                     	;# 
   415     0FE9                     	;# 
   416     0FEA                     	;# 
   417     0FEB                     	;# 
   418     0FED                     	;# 
   419     0FEE                     	;# 
   420     0FEF                     	;# 
   421     0000                     	;# 
   422     0001                     	;# 
   423     0002                     	;# 
   424     0003                     	;# 
   425     0004                     	;# 
   426     0005                     	;# 
   427     0006                     	;# 
   428     0007                     	;# 
   429     0008                     	;# 
   430     0009                     	;# 
   431     000A                     	;# 
   432     000B                     	;# 
   433     000C                     	;# 
   434     000D                     	;# 
   435     0011                     	;# 
   436     0012                     	;# 
   437     0013                     	;# 
   438     0014                     	;# 
   439     0015                     	;# 
   440     0016                     	;# 
   441     0016                     	;# 
   442     0017                     	;# 
   443     0018                     	;# 
   444     0019                     	;# 
   445     001A                     	;# 
   446     001B                     	;# 
   447     001C                     	;# 
   448     001E                     	;# 
   449     001F                     	;# 
   450     008C                     	;# 
   451     008D                     	;# 
   452     0091                     	;# 
   453     0092                     	;# 
   454     0093                     	;# 
   455     0094                     	;# 
   456     0095                     	;# 
   457     0096                     	;# 
   458     0097                     	;# 
   459     0098                     	;# 
   460     0099                     	;# 
   461     009A                     	;# 
   462     009B                     	;# 
   463     009B                     	;# 
   464     009C                     	;# 
   465     009D                     	;# 
   466     009E                     	;# 
   467     010C                     	;# 
   468     010D                     	;# 
   469     0111                     	;# 
   470     0112                     	;# 
   471     0113                     	;# 
   472     0114                     	;# 
   473     0115                     	;# 
   474     0116                     	;# 
   475     0117                     	;# 
   476     0118                     	;# 
   477     0119                     	;# 
   478     011A                     	;# 
   479     011B                     	;# 
   480     011D                     	;# 
   481     011E                     	;# 
   482     018C                     	;# 
   483     018D                     	;# 
   484     0191                     	;# 
   485     0191                     	;# 
   486     0192                     	;# 
   487     0193                     	;# 
   488     0193                     	;# 
   489     0193                     	;# 
   490     0194                     	;# 
   491     0195                     	;# 
   492     0196                     	;# 
   493     0199                     	;# 
   494     019A                     	;# 
   495     019B                     	;# 
   496     019B                     	;# 
   497     019B                     	;# 
   498     019B                     	;# 
   499     019C                     	;# 
   500     019C                     	;# 
   501     019D                     	;# 
   502     019E                     	;# 
   503     019F                     	;# 
   504     020C                     	;# 
   505     020D                     	;# 
   506     0211                     	;# 
   507     0211                     	;# 
   508     0212                     	;# 
   509     0212                     	;# 
   510     0213                     	;# 
   511     0213                     	;# 
   512     0214                     	;# 
   513     0214                     	;# 
   514     0215                     	;# 
   515     0215                     	;# 
   516     0215                     	;# 
   517     0216                     	;# 
   518     0216                     	;# 
   519     0217                     	;# 
   520     0217                     	;# 
   521     0219                     	;# 
   522     021A                     	;# 
   523     021B                     	;# 
   524     021C                     	;# 
   525     021D                     	;# 
   526     021E                     	;# 
   527     021F                     	;# 
   528     0291                     	;# 
   529     0291                     	;# 
   530     0292                     	;# 
   531     0293                     	;# 
   532     0294                     	;# 
   533     0295                     	;# 
   534     0295                     	;# 
   535     0296                     	;# 
   536     0298                     	;# 
   537     0298                     	;# 
   538     0299                     	;# 
   539     029A                     	;# 
   540     029B                     	;# 
   541     029C                     	;# 
   542     029C                     	;# 
   543     029D                     	;# 
   544     029E                     	;# 
   545     029E                     	;# 
   546     0311                     	;# 
   547     0311                     	;# 
   548     0312                     	;# 
   549     0313                     	;# 
   550     0318                     	;# 
   551     0318                     	;# 
   552     0319                     	;# 
   553     031A                     	;# 
   554     0394                     	;# 
   555     0395                     	;# 
   556     0396                     	;# 
   557     039A                     	;# 
   558     039C                     	;# 
   559     039D                     	;# 
   560     039E                     	;# 
   561     039F                     	;# 
   562     0415                     	;# 
   563     0416                     	;# 
   564     0417                     	;# 
   565     041C                     	;# 
   566     041D                     	;# 
   567     041E                     	;# 
   568     0FE4                     	;# 
   569     0FE5                     	;# 
   570     0FE6                     	;# 
   571     0FE7                     	;# 
   572     0FE8                     	;# 
   573     0FE9                     	;# 
   574     0FEA                     	;# 
   575     0FEB                     	;# 
   576     0FED                     	;# 
   577     0FEE                     	;# 
   578     0FEF                     	;# 
   579     0000                     	;# 
   580     0001                     	;# 
   581     0002                     	;# 
   582     0003                     	;# 
   583     0004                     	;# 
   584     0005                     	;# 
   585     0006                     	;# 
   586     0007                     	;# 
   587     0008                     	;# 
   588     0009                     	;# 
   589     000A                     	;# 
   590     000B                     	;# 
   591     000C                     	;# 
   592     000D                     	;# 
   593     0011                     	;# 
   594     0012                     	;# 
   595     0013                     	;# 
   596     0014                     	;# 
   597     0015                     	;# 
   598     0016                     	;# 
   599     0016                     	;# 
   600     0017                     	;# 
   601     0018                     	;# 
   602     0019                     	;# 
   603     001A                     	;# 
   604     001B                     	;# 
   605     001C                     	;# 
   606     001E                     	;# 
   607     001F                     	;# 
   608     008C                     	;# 
   609     008D                     	;# 
   610     0091                     	;# 
   611     0092                     	;# 
   612     0093                     	;# 
   613     0094                     	;# 
   614     0095                     	;# 
   615     0096                     	;# 
   616     0097                     	;# 
   617     0098                     	;# 
   618     0099                     	;# 
   619     009A                     	;# 
   620     009B                     	;# 
   621     009B                     	;# 
   622     009C                     	;# 
   623     009D                     	;# 
   624     009E                     	;# 
   625     010C                     	;# 
   626     010D                     	;# 
   627     0111                     	;# 
   628     0112                     	;# 
   629     0113                     	;# 
   630     0114                     	;# 
   631     0115                     	;# 
   632     0116                     	;# 
   633     0117                     	;# 
   634     0118                     	;# 
   635     0119                     	;# 
   636     011A                     	;# 
   637     011B                     	;# 
   638     011D                     	;# 
   639     011E                     	;# 
   640     018C                     	;# 
   641     018D                     	;# 
   642     0191                     	;# 
   643     0191                     	;# 
   644     0192                     	;# 
   645     0193                     	;# 
   646     0193                     	;# 
   647     0193                     	;# 
   648     0194                     	;# 
   649     0195                     	;# 
   650     0196                     	;# 
   651     0199                     	;# 
   652     019A                     	;# 
   653     019B                     	;# 
   654     019B                     	;# 
   655     019B                     	;# 
   656     019B                     	;# 
   657     019C                     	;# 
   658     019C                     	;# 
   659     019D                     	;# 
   660     019E                     	;# 
   661     019F                     	;# 
   662     020C                     	;# 
   663     020D                     	;# 
   664     0211                     	;# 
   665     0211                     	;# 
   666     0212                     	;# 
   667     0212                     	;# 
   668     0213                     	;# 
   669     0213                     	;# 
   670     0214                     	;# 
   671     0214                     	;# 
   672     0215                     	;# 
   673     0215                     	;# 
   674     0215                     	;# 
   675     0216                     	;# 
   676     0216                     	;# 
   677     0217                     	;# 
   678     0217                     	;# 
   679     0219                     	;# 
   680     021A                     	;# 
   681     021B                     	;# 
   682     021C                     	;# 
   683     021D                     	;# 
   684     021E                     	;# 
   685     021F                     	;# 
   686     0291                     	;# 
   687     0291                     	;# 
   688     0292                     	;# 
   689     0293                     	;# 
   690     0294                     	;# 
   691     0295                     	;# 
   692     0295                     	;# 
   693     0296                     	;# 
   694     0298                     	;# 
   695     0298                     	;# 
   696     0299                     	;# 
   697     029A                     	;# 
   698     029B                     	;# 
   699     029C                     	;# 
   700     029C                     	;# 
   701     029D                     	;# 
   702     029E                     	;# 
   703     029E                     	;# 
   704     0311                     	;# 
   705     0311                     	;# 
   706     0312                     	;# 
   707     0313                     	;# 
   708     0318                     	;# 
   709     0318                     	;# 
   710     0319                     	;# 
   711     031A                     	;# 
   712     0394                     	;# 
   713     0395                     	;# 
   714     0396                     	;# 
   715     039A                     	;# 
   716     039C                     	;# 
   717     039D                     	;# 
   718     039E                     	;# 
   719     039F                     	;# 
   720     0415                     	;# 
   721     0416                     	;# 
   722     0417                     	;# 
   723     041C                     	;# 
   724     041D                     	;# 
   725     041E                     	;# 
   726     0FE4                     	;# 
   727     0FE5                     	;# 
   728     0FE6                     	;# 
   729     0FE7                     	;# 
   730     0FE8                     	;# 
   731     0FE9                     	;# 
   732     0FEA                     	;# 
   733     0FEB                     	;# 
   734     0FED                     	;# 
   735     0FEE                     	;# 
   736     0FEF                     	;# 
   737     0000                     	;# 
   738     0001                     	;# 
   739     0002                     	;# 
   740     0003                     	;# 
   741     0004                     	;# 
   742     0005                     	;# 
   743     0006                     	;# 
   744     0007                     	;# 
   745     0008                     	;# 
   746     0009                     	;# 
   747     000A                     	;# 
   748     000B                     	;# 
   749     000C                     	;# 
   750     000D                     	;# 
   751     0011                     	;# 
   752     0012                     	;# 
   753     0013                     	;# 
   754     0014                     	;# 
   755     0015                     	;# 
   756     0016                     	;# 
   757     0016                     	;# 
   758     0017                     	;# 
   759     0018                     	;# 
   760     0019                     	;# 
   761     001A                     	;# 
   762     001B                     	;# 
   763     001C                     	;# 
   764     001E                     	;# 
   765     001F                     	;# 
   766     008C                     	;# 
   767     008D                     	;# 
   768     0091                     	;# 
   769     0092                     	;# 
   770     0093                     	;# 
   771     0094                     	;# 
   772     0095                     	;# 
   773     0096                     	;# 
   774     0097                     	;# 
   775     0098                     	;# 
   776     0099                     	;# 
   777     009A                     	;# 
   778     009B                     	;# 
   779     009B                     	;# 
   780     009C                     	;# 
   781     009D                     	;# 
   782     009E                     	;# 
   783     010C                     	;# 
   784     010D                     	;# 
   785     0111                     	;# 
   786     0112                     	;# 
   787     0113                     	;# 
   788     0114                     	;# 
   789     0115                     	;# 
   790     0116                     	;# 
   791     0117                     	;# 
   792     0118                     	;# 
   793     0119                     	;# 
   794     011A                     	;# 
   795     011B                     	;# 
   796     011D                     	;# 
   797     011E                     	;# 
   798     018C                     	;# 
   799     018D                     	;# 
   800     0191                     	;# 
   801     0191                     	;# 
   802     0192                     	;# 
   803     0193                     	;# 
   804     0193                     	;# 
   805     0193                     	;# 
   806     0194                     	;# 
   807     0195                     	;# 
   808     0196                     	;# 
   809     0199                     	;# 
   810     019A                     	;# 
   811     019B                     	;# 
   812     019B                     	;# 
   813     019B                     	;# 
   814     019B                     	;# 
   815     019C                     	;# 
   816     019C                     	;# 
   817     019D                     	;# 
   818     019E                     	;# 
   819     019F                     	;# 
   820     020C                     	;# 
   821     020D                     	;# 
   822     0211                     	;# 
   823     0211                     	;# 
   824     0212                     	;# 
   825     0212                     	;# 
   826     0213                     	;# 
   827     0213                     	;# 
   828     0214                     	;# 
   829     0214                     	;# 
   830     0215                     	;# 
   831     0215                     	;# 
   832     0215                     	;# 
   833     0216                     	;# 
   834     0216                     	;# 
   835     0217                     	;# 
   836     0217                     	;# 
   837     0219                     	;# 
   838     021A                     	;# 
   839     021B                     	;# 
   840     021C                     	;# 
   841     021D                     	;# 
   842     021E                     	;# 
   843     021F                     	;# 
   844     0291                     	;# 
   845     0291                     	;# 
   846     0292                     	;# 
   847     0293                     	;# 
   848     0294                     	;# 
   849     0295                     	;# 
   850     0295                     	;# 
   851     0296                     	;# 
   852     0298                     	;# 
   853     0298                     	;# 
   854     0299                     	;# 
   855     029A                     	;# 
   856     029B                     	;# 
   857     029C                     	;# 
   858     029C                     	;# 
   859     029D                     	;# 
   860     029E                     	;# 
   861     029E                     	;# 
   862     0311                     	;# 
   863     0311                     	;# 
   864     0312                     	;# 
   865     0313                     	;# 
   866     0318                     	;# 
   867     0318                     	;# 
   868     0319                     	;# 
   869     031A                     	;# 
   870     0394                     	;# 
   871     0395                     	;# 
   872     0396                     	;# 
   873     039A                     	;# 
   874     039C                     	;# 
   875     039D                     	;# 
   876     039E                     	;# 
   877     039F                     	;# 
   878     0415                     	;# 
   879     0416                     	;# 
   880     0417                     	;# 
   881     041C                     	;# 
   882     041D                     	;# 
   883     041E                     	;# 
   884     0FE4                     	;# 
   885     0FE5                     	;# 
   886     0FE6                     	;# 
   887     0FE7                     	;# 
   888     0FE8                     	;# 
   889     0FE9                     	;# 
   890     0FEA                     	;# 
   891     0FEB                     	;# 
   892     0FED                     	;# 
   893     0FEE                     	;# 
   894     0FEF                     	;# 
   895     0000                     	;# 
   896     0001                     	;# 
   897     0002                     	;# 
   898     0003                     	;# 
   899     0004                     	;# 
   900     0005                     	;# 
   901     0006                     	;# 
   902     0007                     	;# 
   903     0008                     	;# 
   904     0009                     	;# 
   905     000A                     	;# 
   906     000B                     	;# 
   907     000C                     	;# 
   908     000D                     	;# 
   909     0011                     	;# 
   910     0012                     	;# 
   911     0013                     	;# 
   912     0014                     	;# 
   913     0015                     	;# 
   914     0016                     	;# 
   915     0016                     	;# 
   916     0017                     	;# 
   917     0018                     	;# 
   918     0019                     	;# 
   919     001A                     	;# 
   920     001B                     	;# 
   921     001C                     	;# 
   922     001E                     	;# 
   923     001F                     	;# 
   924     008C                     	;# 
   925     008D                     	;# 
   926     0091                     	;# 
   927     0092                     	;# 
   928     0093                     	;# 
   929     0094                     	;# 
   930     0095                     	;# 
   931     0096                     	;# 
   932     0097                     	;# 
   933     0098                     	;# 
   934     0099                     	;# 
   935     009A                     	;# 
   936     009B                     	;# 
   937     009B                     	;# 
   938     009C                     	;# 
   939     009D                     	;# 
   940     009E                     	;# 
   941     010C                     	;# 
   942     010D                     	;# 
   943     0111                     	;# 
   944     0112                     	;# 
   945     0113                     	;# 
   946     0114                     	;# 
   947     0115                     	;# 
   948     0116                     	;# 
   949     0117                     	;# 
   950     0118                     	;# 
   951     0119                     	;# 
   952     011A                     	;# 
   953     011B                     	;# 
   954     011D                     	;# 
   955     011E                     	;# 
   956     018C                     	;# 
   957     018D                     	;# 
   958     0191                     	;# 
   959     0191                     	;# 
   960     0192                     	;# 
   961     0193                     	;# 
   962     0193                     	;# 
   963     0193                     	;# 
   964     0194                     	;# 
   965     0195                     	;# 
   966     0196                     	;# 
   967     0199                     	;# 
   968     019A                     	;# 
   969     019B                     	;# 
   970     019B                     	;# 
   971     019B                     	;# 
   972     019B                     	;# 
   973     019C                     	;# 
   974     019C                     	;# 
   975     019D                     	;# 
   976     019E                     	;# 
   977     019F                     	;# 
   978     020C                     	;# 
   979     020D                     	;# 
   980     0211                     	;# 
   981     0211                     	;# 
   982     0212                     	;# 
   983     0212                     	;# 
   984     0213                     	;# 
   985     0213                     	;# 
   986     0214                     	;# 
   987     0214                     	;# 
   988     0215                     	;# 
   989     0215                     	;# 
   990     0215                     	;# 
   991     0216                     	;# 
   992     0216                     	;# 
   993     0217                     	;# 
   994     0217                     	;# 
   995     0219                     	;# 
   996     021A                     	;# 
   997     021B                     	;# 
   998     021C                     	;# 
   999     021D                     	;# 
  1000     021E                     	;# 
  1001     021F                     	;# 
  1002     0291                     	;# 
  1003     0291                     	;# 
  1004     0292                     	;# 
  1005     0293                     	;# 
  1006     0294                     	;# 
  1007     0295                     	;# 
  1008     0295                     	;# 
  1009     0296                     	;# 
  1010     0298                     	;# 
  1011     0298                     	;# 
  1012     0299                     	;# 
  1013     029A                     	;# 
  1014     029B                     	;# 
  1015     029C                     	;# 
  1016     029C                     	;# 
  1017     029D                     	;# 
  1018     029E                     	;# 
  1019     029E                     	;# 
  1020     0311                     	;# 
  1021     0311                     	;# 
  1022     0312                     	;# 
  1023     0313                     	;# 
  1024     0318                     	;# 
  1025     0318                     	;# 
  1026     0319                     	;# 
  1027     031A                     	;# 
  1028     0394                     	;# 
  1029     0395                     	;# 
  1030     0396                     	;# 
  1031     039A                     	;# 
  1032     039C                     	;# 
  1033     039D                     	;# 
  1034     039E                     	;# 
  1035     039F                     	;# 
  1036     0415                     	;# 
  1037     0416                     	;# 
  1038     0417                     	;# 
  1039     041C                     	;# 
  1040     041D                     	;# 
  1041     041E                     	;# 
  1042     0FE4                     	;# 
  1043     0FE5                     	;# 
  1044     0FE6                     	;# 
  1045     0FE7                     	;# 
  1046     0FE8                     	;# 
  1047     0FE9                     	;# 
  1048     0FEA                     	;# 
  1049     0FEB                     	;# 
  1050     0FED                     	;# 
  1051     0FEE                     	;# 
  1052     0FEF                     	;# 
  1053     0000                     	;# 
  1054     0001                     	;# 
  1055     0002                     	;# 
  1056     0003                     	;# 
  1057     0004                     	;# 
  1058     0005                     	;# 
  1059     0006                     	;# 
  1060     0007                     	;# 
  1061     0008                     	;# 
  1062     0009                     	;# 
  1063     000A                     	;# 
  1064     000B                     	;# 
  1065     000C                     	;# 
  1066     000D                     	;# 
  1067     0011                     	;# 
  1068     0012                     	;# 
  1069     0013                     	;# 
  1070     0014                     	;# 
  1071     0015                     	;# 
  1072     0016                     	;# 
  1073     0016                     	;# 
  1074     0017                     	;# 
  1075     0018                     	;# 
  1076     0019                     	;# 
  1077     001A                     	;# 
  1078     001B                     	;# 
  1079     001C                     	;# 
  1080     001E                     	;# 
  1081     001F                     	;# 
  1082     008C                     	;# 
  1083     008D                     	;# 
  1084     0091                     	;# 
  1085     0092                     	;# 
  1086     0093                     	;# 
  1087     0094                     	;# 
  1088     0095                     	;# 
  1089     0096                     	;# 
  1090     0097                     	;# 
  1091     0098                     	;# 
  1092     0099                     	;# 
  1093     009A                     	;# 
  1094     009B                     	;# 
  1095     009B                     	;# 
  1096     009C                     	;# 
  1097     009D                     	;# 
  1098     009E                     	;# 
  1099     010C                     	;# 
  1100     010D                     	;# 
  1101     0111                     	;# 
  1102     0112                     	;# 
  1103     0113                     	;# 
  1104     0114                     	;# 
  1105     0115                     	;# 
  1106     0116                     	;# 
  1107     0117                     	;# 
  1108     0118                     	;# 
  1109     0119                     	;# 
  1110     011A                     	;# 
  1111     011B                     	;# 
  1112     011D                     	;# 
  1113     011E                     	;# 
  1114     018C                     	;# 
  1115     018D                     	;# 
  1116     0191                     	;# 
  1117     0191                     	;# 
  1118     0192                     	;# 
  1119     0193                     	;# 
  1120     0193                     	;# 
  1121     0193                     	;# 
  1122     0194                     	;# 
  1123     0195                     	;# 
  1124     0196                     	;# 
  1125     0199                     	;# 
  1126     019A                     	;# 
  1127     019B                     	;# 
  1128     019B                     	;# 
  1129     019B                     	;# 
  1130     019B                     	;# 
  1131     019C                     	;# 
  1132     019C                     	;# 
  1133     019D                     	;# 
  1134     019E                     	;# 
  1135     019F                     	;# 
  1136     020C                     	;# 
  1137     020D                     	;# 
  1138     0211                     	;# 
  1139     0211                     	;# 
  1140     0212                     	;# 
  1141     0212                     	;# 
  1142     0213                     	;# 
  1143     0213                     	;# 
  1144     0214                     	;# 
  1145     0214                     	;# 
  1146     0215                     	;# 
  1147     0215                     	;# 
  1148     0215                     	;# 
  1149     0216                     	;# 
  1150     0216                     	;# 
  1151     0217                     	;# 
  1152     0217                     	;# 
  1153     0219                     	;# 
  1154     021A                     	;# 
  1155     021B                     	;# 
  1156     021C                     	;# 
  1157     021D                     	;# 
  1158     021E                     	;# 
  1159     021F                     	;# 
  1160     0291                     	;# 
  1161     0291                     	;# 
  1162     0292                     	;# 
  1163     0293                     	;# 
  1164     0294                     	;# 
  1165     0295                     	;# 
  1166     0295                     	;# 
  1167     0296                     	;# 
  1168     0298                     	;# 
  1169     0298                     	;# 
  1170     0299                     	;# 
  1171     029A                     	;# 
  1172     029B                     	;# 
  1173     029C                     	;# 
  1174     029C                     	;# 
  1175     029D                     	;# 
  1176     029E                     	;# 
  1177     029E                     	;# 
  1178     0311                     	;# 
  1179     0311                     	;# 
  1180     0312                     	;# 
  1181     0313                     	;# 
  1182     0318                     	;# 
  1183     0318                     	;# 
  1184     0319                     	;# 
  1185     031A                     	;# 
  1186     0394                     	;# 
  1187     0395                     	;# 
  1188     0396                     	;# 
  1189     039A                     	;# 
  1190     039C                     	;# 
  1191     039D                     	;# 
  1192     039E                     	;# 
  1193     039F                     	;# 
  1194     0415                     	;# 
  1195     0416                     	;# 
  1196     0417                     	;# 
  1197     041C                     	;# 
  1198     041D                     	;# 
  1199     041E                     	;# 
  1200     0FE4                     	;# 
  1201     0FE5                     	;# 
  1202     0FE6                     	;# 
  1203     0FE7                     	;# 
  1204     0FE8                     	;# 
  1205     0FE9                     	;# 
  1206     0FEA                     	;# 
  1207     0FEB                     	;# 
  1208     0FED                     	;# 
  1209     0FEE                     	;# 
  1210     0FEF                     	;# 
  1211     0000                     	;# 
  1212     0001                     	;# 
  1213     0002                     	;# 
  1214     0003                     	;# 
  1215     0004                     	;# 
  1216     0005                     	;# 
  1217     0006                     	;# 
  1218     0007                     	;# 
  1219     0008                     	;# 
  1220     0009                     	;# 
  1221     000A                     	;# 
  1222     000B                     	;# 
  1223     000C                     	;# 
  1224     000D                     	;# 
  1225     0011                     	;# 
  1226     0012                     	;# 
  1227     0013                     	;# 
  1228     0014                     	;# 
  1229     0015                     	;# 
  1230     0016                     	;# 
  1231     0016                     	;# 
  1232     0017                     	;# 
  1233     0018                     	;# 
  1234     0019                     	;# 
  1235     001A                     	;# 
  1236     001B                     	;# 
  1237     001C                     	;# 
  1238     001E                     	;# 
  1239     001F                     	;# 
  1240     008C                     	;# 
  1241     008D                     	;# 
  1242     0091                     	;# 
  1243     0092                     	;# 
  1244     0093                     	;# 
  1245     0094                     	;# 
  1246     0095                     	;# 
  1247     0096                     	;# 
  1248     0097                     	;# 
  1249     0098                     	;# 
  1250     0099                     	;# 
  1251     009A                     	;# 
  1252     009B                     	;# 
  1253     009B                     	;# 
  1254     009C                     	;# 
  1255     009D                     	;# 
  1256     009E                     	;# 
  1257     010C                     	;# 
  1258     010D                     	;# 
  1259     0111                     	;# 
  1260     0112                     	;# 
  1261     0113                     	;# 
  1262     0114                     	;# 
  1263     0115                     	;# 
  1264     0116                     	;# 
  1265     0117                     	;# 
  1266     0118                     	;# 
  1267     0119                     	;# 
  1268     011A                     	;# 
  1269     011B                     	;# 
  1270     011D                     	;# 
  1271     011E                     	;# 
  1272     018C                     	;# 
  1273     018D                     	;# 
  1274     0191                     	;# 
  1275     0191                     	;# 
  1276     0192                     	;# 
  1277     0193                     	;# 
  1278     0193                     	;# 
  1279     0193                     	;# 
  1280     0194                     	;# 
  1281     0195                     	;# 
  1282     0196                     	;# 
  1283     0199                     	;# 
  1284     019A                     	;# 
  1285     019B                     	;# 
  1286     019B                     	;# 
  1287     019B                     	;# 
  1288     019B                     	;# 
  1289     019C                     	;# 
  1290     019C                     	;# 
  1291     019D                     	;# 
  1292     019E                     	;# 
  1293     019F                     	;# 
  1294     020C                     	;# 
  1295     020D                     	;# 
  1296     0211                     	;# 
  1297     0211                     	;# 
  1298     0212                     	;# 
  1299     0212                     	;# 
  1300     0213                     	;# 
  1301     0213                     	;# 
  1302     0214                     	;# 
  1303     0214                     	;# 
  1304     0215                     	;# 
  1305     0215                     	;# 
  1306     0215                     	;# 
  1307     0216                     	;# 
  1308     0216                     	;# 
  1309     0217                     	;# 
  1310     0217                     	;# 
  1311     0219                     	;# 
  1312     021A                     	;# 
  1313     021B                     	;# 
  1314     021C                     	;# 
  1315     021D                     	;# 
  1316     021E                     	;# 
  1317     021F                     	;# 
  1318     0291                     	;# 
  1319     0291                     	;# 
  1320     0292                     	;# 
  1321     0293                     	;# 
  1322     0294                     	;# 
  1323     0295                     	;# 
  1324     0295                     	;# 
  1325     0296                     	;# 
  1326     0298                     	;# 
  1327     0298                     	;# 
  1328     0299                     	;# 
  1329     029A                     	;# 
  1330     029B                     	;# 
  1331     029C                     	;# 
  1332     029C                     	;# 
  1333     029D                     	;# 
  1334     029E                     	;# 
  1335     029E                     	;# 
  1336     0311                     	;# 
  1337     0311                     	;# 
  1338     0312                     	;# 
  1339     0313                     	;# 
  1340     0318                     	;# 
  1341     0318                     	;# 
  1342     0319                     	;# 
  1343     031A                     	;# 
  1344     0394                     	;# 
  1345     0395                     	;# 
  1346     0396                     	;# 
  1347     039A                     	;# 
  1348     039C                     	;# 
  1349     039D                     	;# 
  1350     039E                     	;# 
  1351     039F                     	;# 
  1352     0415                     	;# 
  1353     0416                     	;# 
  1354     0417                     	;# 
  1355     041C                     	;# 
  1356     041D                     	;# 
  1357     041E                     	;# 
  1358     0FE4                     	;# 
  1359     0FE5                     	;# 
  1360     0FE6                     	;# 
  1361     0FE7                     	;# 
  1362     0FE8                     	;# 
  1363     0FE9                     	;# 
  1364     0FEA                     	;# 
  1365     0FEB                     	;# 
  1366     0FED                     	;# 
  1367     0FEE                     	;# 
  1368     0FEF                     	;# 
  1369     0000                     	;# 
  1370     0001                     	;# 
  1371     0002                     	;# 
  1372     0003                     	;# 
  1373     0004                     	;# 
  1374     0005                     	;# 
  1375     0006                     	;# 
  1376     0007                     	;# 
  1377     0008                     	;# 
  1378     0009                     	;# 
  1379     000A                     	;# 
  1380     000B                     	;# 
  1381     000C                     	;# 
  1382     000D                     	;# 
  1383     0011                     	;# 
  1384     0012                     	;# 
  1385     0013                     	;# 
  1386     0014                     	;# 
  1387     0015                     	;# 
  1388     0016                     	;# 
  1389     0016                     	;# 
  1390     0017                     	;# 
  1391     0018                     	;# 
  1392     0019                     	;# 
  1393     001A                     	;# 
  1394     001B                     	;# 
  1395     001C                     	;# 
  1396     001E                     	;# 
  1397     001F                     	;# 
  1398     008C                     	;# 
  1399     008D                     	;# 
  1400     0091                     	;# 
  1401     0092                     	;# 
  1402     0093                     	;# 
  1403     0094                     	;# 
  1404     0095                     	;# 
  1405     0096                     	;# 
  1406     0097                     	;# 
  1407     0098                     	;# 
  1408     0099                     	;# 
  1409     009A                     	;# 
  1410     009B                     	;# 
  1411     009B                     	;# 
  1412     009C                     	;# 
  1413     009D                     	;# 
  1414     009E                     	;# 
  1415     010C                     	;# 
  1416     010D                     	;# 
  1417     0111                     	;# 
  1418     0112                     	;# 
  1419     0113                     	;# 
  1420     0114                     	;# 
  1421     0115                     	;# 
  1422     0116                     	;# 
  1423     0117                     	;# 
  1424     0118                     	;# 
  1425     0119                     	;# 
  1426     011A                     	;# 
  1427     011B                     	;# 
  1428     011D                     	;# 
  1429     011E                     	;# 
  1430     018C                     	;# 
  1431     018D                     	;# 
  1432     0191                     	;# 
  1433     0191                     	;# 
  1434     0192                     	;# 
  1435     0193                     	;# 
  1436     0193                     	;# 
  1437     0193                     	;# 
  1438     0194                     	;# 
  1439     0195                     	;# 
  1440     0196                     	;# 
  1441     0199                     	;# 
  1442     019A                     	;# 
  1443     019B                     	;# 
  1444     019B                     	;# 
  1445     019B                     	;# 
  1446     019B                     	;# 
  1447     019C                     	;# 
  1448     019C                     	;# 
  1449     019D                     	;# 
  1450     019E                     	;# 
  1451     019F                     	;# 
  1452     020C                     	;# 
  1453     020D                     	;# 
  1454     0211                     	;# 
  1455     0211                     	;# 
  1456     0212                     	;# 
  1457     0212                     	;# 
  1458     0213                     	;# 
  1459     0213                     	;# 
  1460     0214                     	;# 
  1461     0214                     	;# 
  1462     0215                     	;# 
  1463     0215                     	;# 
  1464     0215                     	;# 
  1465     0216                     	;# 
  1466     0216                     	;# 
  1467     0217                     	;# 
  1468     0217                     	;# 
  1469     0219                     	;# 
  1470     021A                     	;# 
  1471     021B                     	;# 
  1472     021C                     	;# 
  1473     021D                     	;# 
  1474     021E                     	;# 
  1475     021F                     	;# 
  1476     0291                     	;# 
  1477     0291                     	;# 
  1478     0292                     	;# 
  1479     0293                     	;# 
  1480     0294                     	;# 
  1481     0295                     	;# 
  1482     0295                     	;# 
  1483     0296                     	;# 
  1484     0298                     	;# 
  1485     0298                     	;# 
  1486     0299                     	;# 
  1487     029A                     	;# 
  1488     029B                     	;# 
  1489     029C                     	;# 
  1490     029C                     	;# 
  1491     029D                     	;# 
  1492     029E                     	;# 
  1493     029E                     	;# 
  1494     0311                     	;# 
  1495     0311                     	;# 
  1496     0312                     	;# 
  1497     0313                     	;# 
  1498     0318                     	;# 
  1499     0318                     	;# 
  1500     0319                     	;# 
  1501     031A                     	;# 
  1502     0394                     	;# 
  1503     0395                     	;# 
  1504     0396                     	;# 
  1505     039A                     	;# 
  1506     039C                     	;# 
  1507     039D                     	;# 
  1508     039E                     	;# 
  1509     039F                     	;# 
  1510     0415                     	;# 
  1511     0416                     	;# 
  1512     0417                     	;# 
  1513     041C                     	;# 
  1514     041D                     	;# 
  1515     041E                     	;# 
  1516     0FE4                     	;# 
  1517     0FE5                     	;# 
  1518     0FE6                     	;# 
  1519     0FE7                     	;# 
  1520     0FE8                     	;# 
  1521     0FE9                     	;# 
  1522     0FEA                     	;# 
  1523     0FEB                     	;# 
  1524     0FED                     	;# 
  1525     0FEE                     	;# 
  1526     0FEF                     	;# 
  1527     0000                     	;# 
  1528     0001                     	;# 
  1529     0002                     	;# 
  1530     0003                     	;# 
  1531     0004                     	;# 
  1532     0005                     	;# 
  1533     0006                     	;# 
  1534     0007                     	;# 
  1535     0008                     	;# 
  1536     0009                     	;# 
  1537     000A                     	;# 
  1538     000B                     	;# 
  1539     000C                     	;# 
  1540     000D                     	;# 
  1541     0011                     	;# 
  1542     0012                     	;# 
  1543     0013                     	;# 
  1544     0014                     	;# 
  1545     0015                     	;# 
  1546     0016                     	;# 
  1547     0016                     	;# 
  1548     0017                     	;# 
  1549     0018                     	;# 
  1550     0019                     	;# 
  1551     001A                     	;# 
  1552     001B                     	;# 
  1553     001C                     	;# 
  1554     001E                     	;# 
  1555     001F                     	;# 
  1556     008C                     	;# 
  1557     008D                     	;# 
  1558     0091                     	;# 
  1559     0092                     	;# 
  1560     0093                     	;# 
  1561     0094                     	;# 
  1562     0095                     	;# 
  1563     0096                     	;# 
  1564     0097                     	;# 
  1565     0098                     	;# 
  1566     0099                     	;# 
  1567     009A                     	;# 
  1568     009B                     	;# 
  1569     009B                     	;# 
  1570     009C                     	;# 
  1571     009D                     	;# 
  1572     009E                     	;# 
  1573     010C                     	;# 
  1574     010D                     	;# 
  1575     0111                     	;# 
  1576     0112                     	;# 
  1577     0113                     	;# 
  1578     0114                     	;# 
  1579     0115                     	;# 
  1580     0116                     	;# 
  1581     0117                     	;# 
  1582     0118                     	;# 
  1583     0119                     	;# 
  1584     011A                     	;# 
  1585     011B                     	;# 
  1586     011D                     	;# 
  1587     011E                     	;# 
  1588     018C                     	;# 
  1589     018D                     	;# 
  1590     0191                     	;# 
  1591     0191                     	;# 
  1592     0192                     	;# 
  1593     0193                     	;# 
  1594     0193                     	;# 
  1595     0193                     	;# 
  1596     0194                     	;# 
  1597     0195                     	;# 
  1598     0196                     	;# 
  1599     0199                     	;# 
  1600     019A                     	;# 
  1601     019B                     	;# 
  1602     019B                     	;# 
  1603     019B                     	;# 
  1604     019B                     	;# 
  1605     019C                     	;# 
  1606     019C                     	;# 
  1607     019D                     	;# 
  1608     019E                     	;# 
  1609     019F                     	;# 
  1610     020C                     	;# 
  1611     020D                     	;# 
  1612     0211                     	;# 
  1613     0211                     	;# 
  1614     0212                     	;# 
  1615     0212                     	;# 
  1616     0213                     	;# 
  1617     0213                     	;# 
  1618     0214                     	;# 
  1619     0214                     	;# 
  1620     0215                     	;# 
  1621     0215                     	;# 
  1622     0215                     	;# 
  1623     0216                     	;# 
  1624     0216                     	;# 
  1625     0217                     	;# 
  1626     0217                     	;# 
  1627     0219                     	;# 
  1628     021A                     	;# 
  1629     021B                     	;# 
  1630     021C                     	;# 
  1631     021D                     	;# 
  1632     021E                     	;# 
  1633     021F                     	;# 
  1634     0291                     	;# 
  1635     0291                     	;# 
  1636     0292                     	;# 
  1637     0293                     	;# 
  1638     0294                     	;# 
  1639     0295                     	;# 
  1640     0295                     	;# 
  1641     0296                     	;# 
  1642     0298                     	;# 
  1643     0298                     	;# 
  1644     0299                     	;# 
  1645     029A                     	;# 
  1646     029B                     	;# 
  1647     029C                     	;# 
  1648     029C                     	;# 
  1649     029D                     	;# 
  1650     029E                     	;# 
  1651     029E                     	;# 
  1652     0311                     	;# 
  1653     0311                     	;# 
  1654     0312                     	;# 
  1655     0313                     	;# 
  1656     0318                     	;# 
  1657     0318                     	;# 
  1658     0319                     	;# 
  1659     031A                     	;# 
  1660     0394                     	;# 
  1661     0395                     	;# 
  1662     0396                     	;# 
  1663     039A                     	;# 
  1664     039C                     	;# 
  1665     039D                     	;# 
  1666     039E                     	;# 
  1667     039F                     	;# 
  1668     0415                     	;# 
  1669     0416                     	;# 
  1670     0417                     	;# 
  1671     041C                     	;# 
  1672     041D                     	;# 
  1673     041E                     	;# 
  1674     0FE4                     	;# 
  1675     0FE5                     	;# 
  1676     0FE6                     	;# 
  1677     0FE7                     	;# 
  1678     0FE8                     	;# 
  1679     0FE9                     	;# 
  1680     0FEA                     	;# 
  1681     0FEB                     	;# 
  1682     0FED                     	;# 
  1683     0FEE                     	;# 
  1684     0FEF                     	;# 
  1685                           
  1686 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1687     0000                     
  1688 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1689     0000                     
  1690 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1691     0000                     
  1692                           	psect	idataBANK2
  1693     0003                     __pidataBANK2:
  1694                           
  1695                           ;initializer for __LastUpState
  1696     0003  3401               	retlw	1
  1697                           
  1698                           	psect	stringtext1
  1699     0800                     __pstringtext1:
  1700     0800                     _SETPOINTS:
  1701     0800  3441               	retlw	65
  1702     0801  3400               	retlw	0
  1703     0802  3444               	retlw	68
  1704     0803  3400               	retlw	0
  1705     0804  3447               	retlw	71
  1706     0805  3400               	retlw	0
  1707     0806  344A               	retlw	74
  1708     0807  3400               	retlw	0
  1709     0808  344D               	retlw	77
  1710     0809  3400               	retlw	0
  1711     080A                     __end_of_SETPOINTS:
  1712                           
  1713                           	psect	stringtext2
  1714     080A                     __pstringtext2:
  1715     080A                     _C:
  1716     080A  346C               	retlw	108
  1717     080B  34CF               	retlw	207
  1718     080C  3458               	retlw	88
  1719     080D  3434               	retlw	52
  1720     080E                     __end_of_C:
  1721                           
  1722                           	psect	stringtext3
  1723     080E                     __pstringtext3:
  1724     080E                     _B:
  1725     080E  34D6               	retlw	214
  1726     080F  3464               	retlw	100
  1727     0810  3479               	retlw	121
  1728     0811  3439               	retlw	57
  1729     0812                     __end_of_B:
  1730                           
  1731                           	psect	stringtext4
  1732     0812                     __pstringtext4:
  1733     0812                     _A:
  1734     0812  34CB               	retlw	203
  1735     0813  3448               	retlw	72
  1736     0814  3484               	retlw	132
  1737     0815  343A               	retlw	58
  1738     0816                     __end_of_A:
  1739                           
  1740                           	psect	stringtext5
  1741     0816                     __pstringtext5:
  1742     0816                     _ONE_SECOND:
  1743     0816  340A               	retlw	10
  1744     0817  3400               	retlw	0
  1745     0818                     __end_of_ONE_SECOND:
  1746                           
  1747                           	psect	stringtext6
  1748     0818                     __pstringtext6:
  1749     0818                     _TURN_ON:
  1750     0818  3401               	retlw	1
  1751     0819  3400               	retlw	0
  1752     081A                     __end_of_TURN_ON:
  1753                           
  1754                           	psect	stringtext7
  1755     081A                     __pstringtext7:
  1756     081A                     _SHUT_OFF:
  1757     081A  3402               	retlw	2
  1758     081B  3400               	retlw	0
  1759     081C                     __end_of_SHUT_OFF:
  1760                           
  1761                           	psect	stringtext8
  1762     081C                     __pstringtext8:
  1763     081C                     _MIN_IDLE_TIME:
  1764     081C  3403               	retlw	3
  1765     081D  3400               	retlw	0
  1766     081E                     __end_of_MIN_IDLE_TIME:
  1767                           
  1768                           	psect	stringtext9
  1769     081E                     __pstringtext9:
  1770     081E                     _MIN_RUN_TIME:
  1771     081E  3403               	retlw	3
  1772     081F  3400               	retlw	0
  1773     0820                     __end_of_MIN_RUN_TIME:
  1774                           
  1775                           	psect	nvBANK2
  1776     013C                     __pnvBANK2:
  1777     013C                     _EUSART_ErrorHandler:
  1778     013C                     	ds	2
  1779     013E                     _EUSART_OverrunErrorHandler:
  1780     013E                     	ds	2
  1781     0140                     _EUSART_FramingErrorHandler:
  1782     0140                     	ds	2
  1783     0142                     _TMR1_InterruptHandler:
  1784     0142                     	ds	2
  1785     0144                     _TMR0_InterruptHandler:
  1786     0144                     	ds	2
  1787     000D                     _PORTBbits	set	13
  1788     000C                     _PORTAbits	set	12
  1789     0019                     _T1GCONbits	set	25
  1790     0018                     _T1CONbits	set	24
  1791     0018                     _T1CON	set	24
  1792     0016                     _TMR1L	set	22
  1793     0017                     _TMR1H	set	23
  1794     0019                     _T1GCON	set	25
  1795     0011                     _PIR1bits	set	17
  1796     000B                     _INTCONbits	set	11
  1797     0015                     _TMR0	set	21
  1798     008D                     _TRISBbits	set	141
  1799     008C                     _TRISAbits	set	140
  1800     0091                     _PIE1bits	set	145
  1801     0095                     _OPTION_REG	set	149
  1802     009D                     _ADCON0bits	set	157
  1803     009D                     _ADCON0	set	157
  1804     009C                     _ADRESH	set	156
  1805     009B                     _ADRESL	set	155
  1806     009E                     _ADCON1	set	158
  1807     0097                     _WDTCON	set	151
  1808     0098                     _OSCTUNE	set	152
  1809     0099                     _OSCCON	set	153
  1810     0095                     _OPTION_REGbits	set	149
  1811     008D                     _TRISB	set	141
  1812     008C                     _TRISA	set	140
  1813     010D                     _LATBbits	set	269
  1814     010C                     _LATAbits	set	268
  1815     0116                     _BORCON	set	278
  1816     011E                     _APFCON1	set	286
  1817     011D                     _APFCON0	set	285
  1818     010D                     _LATB	set	269
  1819     010C                     _LATA	set	268
  1820     0196                     _EECON2	set	406
  1821     0193                     _EEDATL	set	403
  1822     0194                     _EEDATH	set	404
  1823     0195                     _EECON1bits	set	405
  1824     0192                     _EEADRH	set	402
  1825     0191                     _EEADRL	set	401
  1826     019A                     _TXREG	set	410
  1827     0199                     _RCREG	set	409
  1828     019D                     _RCSTAbits	set	413
  1829     019E                     _TXSTAbits	set	414
  1830     019C                     _SPBRGH	set	412
  1831     019B                     _SPBRGL	set	411
  1832     019E                     _TXSTA	set	414
  1833     019D                     _RCSTA	set	413
  1834     019F                     _BAUDCON	set	415
  1835     018C                     _ANSELA	set	396
  1836     018D                     _ANSELB	set	397
  1837     020C                     _WPUA	set	524
  1838     020D                     _WPUB	set	525
  1839                           
  1840                           	psect	cinit
  1841     001B                     start_initialization:	
  1842                           ; #config settings
  1843                           
  1844     001B                     __initialization:
  1845                           
  1846                           ; Initialize objects allocated to BANK2
  1847     001B  0022               	movlb	2	; select bank2
  1848     001C  3180  2003  3180   	fcall	__pidataBANK2	;fetch initializer
  1849     001F  00C6               	movwf	__pdataBANK2& (0+127)
  1850                           
  1851                           ; Clear objects allocated to COMMON
  1852     0020  01F8               	clrf	__pbssCOMMON& (0+127)
  1853     0021  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  1854     0022  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  1855                           
  1856                           ; Clear objects allocated to BANK0
  1857     0023  0020               	movlb	0	; select bank0
  1858     0024  01EE               	clrf	__pbssBANK0& (0+127)
  1859     0025  01EF               	clrf	(__pbssBANK0+1)& (0+127)
  1860                           
  1861                           ; Clear objects allocated to BANK1
  1862     0026  0021               	movlb	1	; select bank1
  1863     0027  01B8               	clrf	__pbssBANK1& (0+127)
  1864     0028  01B9               	clrf	(__pbssBANK1+1)& (0+127)
  1865     0029  01BA               	clrf	(__pbssBANK1+2)& (0+127)
  1866     002A  01BB               	clrf	(__pbssBANK1+3)& (0+127)
  1867     002B  01BC               	clrf	(__pbssBANK1+4)& (0+127)
  1868     002C  01BD               	clrf	(__pbssBANK1+5)& (0+127)
  1869                           
  1870                           ; Clear objects allocated to BANK2
  1871     002D  3020               	movlw	low __pbssBANK2
  1872     002E  0084               	movwf	4
  1873     002F  3001               	movlw	high __pbssBANK2
  1874     0030  0085               	movwf	5
  1875     0031  301C               	movlw	28
  1876     0032  318A  220D         	fcall	clear_ram0
  1877     0034                     end_of_initialization:	
  1878                           ;End of C runtime variable initialization code
  1879                           
  1880     0034                     __end_of__initialization:
  1881     0034  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1882     0035  0020               	movlb	0
  1883     0036  318B  2BEE         	ljmp	_main	;jump to C main() function
  1884                           
  1885                           	psect	bssCOMMON
  1886     0078                     __pbssCOMMON:
  1887     0078                     _CURRENT_MODE:
  1888     0078                     	ds	2
  1889     007A                     _timer0ReloadVal:
  1890     007A                     	ds	1
  1891                           
  1892                           	psect	bssBANK0
  1893     006E                     __pbssBANK0:
  1894     006E                     _LOGIC_TICK:
  1895     006E                     	ds	1
  1896     006F                     _RELAY_STATUS:
  1897     006F                     	ds	1
  1898                           
  1899                           	psect	bssBANK1
  1900     00B8                     __pbssBANK1:
  1901     00B8                     _HEAT_CALL_TICKS:
  1902     00B8                     	ds	2
  1903     00BA                     _TEMP:
  1904     00BA                     	ds	2
  1905     00BC                     _timer1ReloadVal:
  1906     00BC                     	ds	2
  1907                           
  1908                           	psect	bssBANK2
  1909     0120                     __pbssBANK2:
  1910     0120                     _READING_ITER:
  1911     0120                     	ds	2
  1912     0122                     _DISP_STATE:
  1913     0122                     	ds	2
  1914     0124                     _ADC_InterruptHandler:
  1915     0124                     	ds	2
  1916     0126                     _LOGIC_FLAG:
  1917     0126                     	ds	1
  1918     0127                     _UART_FLAG:
  1919     0127                     	ds	1
  1920     0128                     _READ_FLAG:
  1921     0128                     	ds	1
  1922     0129                     _FULL_SAMPLE:
  1923     0129                     	ds	1
  1924     012A                     __LastDownState:
  1925     012A                     	ds	1
  1926     012B                     _eusartRxLastError:
  1927     012B                     	ds	1
  1928     012C                     _displayString:
  1929     012C                     	ds	16
  1930                           
  1931                           	psect	dataBANK2
  1932     0146                     __pdataBANK2:
  1933     0146                     __LastUpState:
  1934     0146                     	ds	1
  1935                           
  1936                           	psect	clrtext
  1937     0A0D                     clear_ram0:	
  1938                           ;	Called with FSR0 containing the base address, and
  1939                           ;	WREG with the size to clear
  1940                           
  1941     0A0D  0064               	clrwdt	;clear the watchdog before getting into this loop
  1942     0A0E                     clrloop0:
  1943     0A0E  0180               	clrf	0	;clear RAM location pointed to by FSR
  1944     0A0F  3101               	addfsr 0,1
  1945     0A10  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1946     0A11  2A0E               	goto	clrloop0	;have we reached the end yet?
  1947     0A12  3400               	retlw	0	;all done for this memory range, return
  1948                           
  1949                           	psect	cstackBANK3
  1950     01A0                     __pcstackBANK3:
  1951     01A0                     __ReadSensor@Vout:
  1952                           
  1953                           ; 4 bytes @ 0x0
  1954     01A0                     	ds	4
  1955     01A4                     __ReadSensor@Rpullup:
  1956                           
  1957                           ; 4 bytes @ 0x4
  1958     01A4                     	ds	4
  1959     01A8                     __ReadSensor@Vcc:
  1960                           
  1961                           ; 4 bytes @ 0x8
  1962     01A8                     	ds	4
  1963     01AC                     __ReadSensor@Rntc:
  1964                           
  1965                           ; 4 bytes @ 0xC
  1966     01AC                     	ds	4
  1967     01B0                     __ReadSensor@invT:
  1968                           
  1969                           ; 4 bytes @ 0x10
  1970     01B0                     	ds	4
  1971     01B4                     __ReadSensor@T:
  1972                           
  1973                           ; 4 bytes @ 0x14
  1974     01B4                     	ds	4
  1975     01B8                     __ReadSensor@Tc:
  1976                           
  1977                           ; 4 bytes @ 0x18
  1978     01B8                     	ds	4
  1979     01BC                     __ReadSensor@Tf:
  1980                           
  1981                           ; 4 bytes @ 0x1C
  1982     01BC                     	ds	4
  1983     01C0                     __ReadSensor$1707:
  1984                           
  1985                           ; 4 bytes @ 0x20
  1986     01C0                     	ds	4
  1987     01C4                     __ReadSensor$1708:
  1988                           
  1989                           ; 4 bytes @ 0x24
  1990     01C4                     	ds	4
  1991     01C8                     __ReadSensor$1709:
  1992                           
  1993                           ; 4 bytes @ 0x28
  1994     01C8                     	ds	4
  1995     01CC                     __ReadSensor$1710:
  1996                           
  1997                           ; 4 bytes @ 0x2C
  1998     01CC                     	ds	4
  1999     01D0                     __ReadSensor@adcValue:
  2000                           
  2001                           ; 2 bytes @ 0x30
  2002     01D0                     	ds	2
  2003     01D2                     __ReadSensor@logR:
  2004                           
  2005                           ; 4 bytes @ 0x32
  2006     01D2                     	ds	4
  2007                           
  2008                           	psect	cstackBANK1
  2009     00A0                     __pcstackBANK1:
  2010     00A0                     ?___flsub:
  2011     00A0                     ___flsub@a:	
  2012                           ; 4 bytes @ 0x0
  2013                           
  2014                           
  2015                           ; 4 bytes @ 0x0
  2016     00A0                     	ds	4
  2017     00A4                     ___flsub@b:
  2018                           
  2019                           ; 4 bytes @ 0x4
  2020     00A4                     	ds	4
  2021     00A8                     ?_approximateLog:
  2022     00A8                     approximateLog@x:	
  2023                           ; 4 bytes @ 0x8
  2024                           
  2025                           
  2026                           ; 4 bytes @ 0x8
  2027     00A8                     	ds	4
  2028     00AC                     _approximateLog$1711:
  2029                           
  2030                           ; 4 bytes @ 0xC
  2031     00AC                     	ds	4
  2032     00B0                     _approximateLog$1712:
  2033                           
  2034                           ; 4 bytes @ 0x10
  2035     00B0                     	ds	4
  2036     00B4                     approximateLog@y:
  2037                           
  2038                           ; 4 bytes @ 0x14
  2039     00B4                     	ds	4
  2040                           
  2041                           	psect	cstackCOMMON
  2042     0070                     __pcstackCOMMON:
  2043     0070                     ?_OSCILLATOR_Initialize:
  2044     0070                     ?_WDT_Initialize:	
  2045                           ; 1 bytes @ 0x0
  2046                           
  2047     0070                     ?_ADC_Initialize:	
  2048                           ; 1 bytes @ 0x0
  2049                           
  2050     0070                     ?_TMR1_Initialize:	
  2051                           ; 1 bytes @ 0x0
  2052                           
  2053     0070                     ?_TMR0_Initialize:	
  2054                           ; 1 bytes @ 0x0
  2055                           
  2056     0070                     ?_EUSART_Initialize:	
  2057                           ; 1 bytes @ 0x0
  2058                           
  2059     0070                     ?_TMR0_DefaultInterruptHandler:	
  2060                           ; 1 bytes @ 0x0
  2061                           
  2062     0070                     ??_TMR0_DefaultInterruptHandler:	
  2063                           ; 1 bytes @ 0x0
  2064                           
  2065     0070                     ?_TMR0_CallBack:	
  2066                           ; 1 bytes @ 0x0
  2067                           
  2068     0070                     ?_TMR1_ISR:	
  2069                           ; 1 bytes @ 0x0
  2070                           
  2071     0070                     ?_TMR1_DefaultInterruptHandler:	
  2072                           ; 1 bytes @ 0x0
  2073                           
  2074     0070                     ??_TMR1_DefaultInterruptHandler:	
  2075                           ; 1 bytes @ 0x0
  2076                           
  2077     0070                     ?_TMR1_CallBack:	
  2078                           ; 1 bytes @ 0x0
  2079                           
  2080     0070                     ?__UIControlISR:	
  2081                           ; 1 bytes @ 0x0
  2082                           
  2083     0070                     ??__UIControlISR:	
  2084                           ; 1 bytes @ 0x0
  2085                           
  2086     0070                     ?__LogicControlISR:	
  2087                           ; 1 bytes @ 0x0
  2088                           
  2089     0070                     ??__LogicControlISR:	
  2090                           ; 1 bytes @ 0x0
  2091                           
  2092     0070                     ?__ReadSensor:	
  2093                           ; 1 bytes @ 0x0
  2094                           
  2095     0070                     ?__SendDataToConsole:	
  2096                           ; 1 bytes @ 0x0
  2097                           
  2098     0070                     ?__ControlHeat:	
  2099                           ; 1 bytes @ 0x0
  2100                           
  2101     0070                     ?_WriteString:	
  2102                           ; 1 bytes @ 0x0
  2103                           
  2104     0070                     ?_PIN_MANAGER_Initialize:	
  2105                           ; 1 bytes @ 0x0
  2106                           
  2107     0070                     ?_SYSTEM_Initialize:	
  2108                           ; 1 bytes @ 0x0
  2109                           
  2110     0070                     ?_TMR0_ISR:	
  2111                           ; 1 bytes @ 0x0
  2112                           
  2113     0070                     ?_INTERRUPT_InterruptManager:	
  2114                           ; 1 bytes @ 0x0
  2115                           
  2116     0070                     ?_TMR1_WriteTimer:	
  2117                           ; 1 bytes @ 0x0
  2118                           
  2119     0070                     ?_EUSART_Write:	
  2120                           ; 1 bytes @ 0x0
  2121                           
  2122     0070                     ?_main:	
  2123                           ; 1 bytes @ 0x0
  2124                           
  2125     0070                     TMR1_WriteTimer@timerVal:	
  2126                           ; 1 bytes @ 0x0
  2127                           
  2128                           
  2129                           ; 2 bytes @ 0x0
  2130     0070                     	ds	1
  2131     0071                     ??_TMR1_CallBack:
  2132     0071                     __UIControlISR@btnUpRead:	
  2133                           ; 1 bytes @ 0x1
  2134                           
  2135                           
  2136                           ; 1 bytes @ 0x1
  2137     0071                     	ds	1
  2138     0072                     ??_TMR1_ISR:
  2139     0072                     ??_TMR1_WriteTimer:	
  2140                           ; 1 bytes @ 0x2
  2141                           
  2142     0072                     __UIControlISR@btnDnRead:	
  2143                           ; 1 bytes @ 0x2
  2144                           
  2145                           
  2146                           ; 1 bytes @ 0x2
  2147     0072                     	ds	1
  2148     0073                     ??_OSCILLATOR_Initialize:
  2149     0073                     ??_WDT_Initialize:	
  2150                           ; 1 bytes @ 0x3
  2151                           
  2152     0073                     ??_ADC_Initialize:	
  2153                           ; 1 bytes @ 0x3
  2154                           
  2155     0073                     ?_TMR0_SetInterruptHandler:	
  2156                           ; 1 bytes @ 0x3
  2157                           
  2158     0073                     ??_TMR0_CallBack:	
  2159                           ; 1 bytes @ 0x3
  2160                           
  2161     0073                     ?_TMR1_SetInterruptHandler:	
  2162                           ; 1 bytes @ 0x3
  2163                           
  2164     0073                     ?_EUSART_SetFramingErrorHandler:	
  2165                           ; 1 bytes @ 0x3
  2166                           
  2167     0073                     ?_EUSART_SetOverrunErrorHandler:	
  2168                           ; 1 bytes @ 0x3
  2169                           
  2170     0073                     ?_EUSART_SetErrorHandler:	
  2171                           ; 1 bytes @ 0x3
  2172                           
  2173     0073                     ??__ControlHeat:	
  2174                           ; 1 bytes @ 0x3
  2175                           
  2176     0073                     ??_PIN_MANAGER_Initialize:	
  2177                           ; 1 bytes @ 0x3
  2178                           
  2179     0073                     ??_TMR0_ISR:	
  2180                           ; 1 bytes @ 0x3
  2181                           
  2182     0073                     ??_INTERRUPT_InterruptManager:	
  2183                           ; 1 bytes @ 0x3
  2184                           
  2185     0073                     ??_EUSART_Write:	
  2186                           ; 1 bytes @ 0x3
  2187                           
  2188     0073                     ?__Umul8_16:	
  2189                           ; 1 bytes @ 0x3
  2190                           
  2191     0073                     ?_ADC_GetConversion:	
  2192                           ; 2 bytes @ 0x3
  2193                           
  2194     0073                     ?___wmul:	
  2195                           ; 2 bytes @ 0x3
  2196                           
  2197     0073                     ?___fltol:	
  2198                           ; 2 bytes @ 0x3
  2199                           
  2200     0073                     ?___xxtofl:	
  2201                           ; 4 bytes @ 0x3
  2202                           
  2203     0073                     EUSART_Write@txData:	
  2204                           ; 4 bytes @ 0x3
  2205                           
  2206     0073                     __Umul8_16@multiplicand:	
  2207                           ; 1 bytes @ 0x3
  2208                           
  2209     0073                     TMR0_SetInterruptHandler@InterruptHandler:	
  2210                           ; 1 bytes @ 0x3
  2211                           
  2212     0073                     TMR1_SetInterruptHandler@InterruptHandler:	
  2213                           ; 2 bytes @ 0x3
  2214                           
  2215     0073                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2216                           ; 2 bytes @ 0x3
  2217                           
  2218     0073                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2219                           ; 2 bytes @ 0x3
  2220                           
  2221     0073                     EUSART_SetErrorHandler@interruptHandler:	
  2222                           ; 2 bytes @ 0x3
  2223                           
  2224     0073                     ___wmul@multiplier:	
  2225                           ; 2 bytes @ 0x3
  2226                           
  2227     0073                     ___fltol@f1:	
  2228                           ; 2 bytes @ 0x3
  2229                           
  2230     0073                     ___xxtofl@val:	
  2231                           ; 4 bytes @ 0x3
  2232                           
  2233                           
  2234                           ; 4 bytes @ 0x3
  2235     0073                     	ds	1
  2236     0074                     ??_WriteString:
  2237                           
  2238                           ; 1 bytes @ 0x4
  2239     0074                     	ds	1
  2240     0075                     ??_TMR1_Initialize:
  2241     0075                     ??_TMR0_Initialize:	
  2242                           ; 1 bytes @ 0x5
  2243                           
  2244     0075                     ??_EUSART_Initialize:	
  2245                           ; 1 bytes @ 0x5
  2246                           
  2247     0075                     ??_TMR0_SetInterruptHandler:	
  2248                           ; 1 bytes @ 0x5
  2249                           
  2250     0075                     ??_TMR1_SetInterruptHandler:	
  2251                           ; 1 bytes @ 0x5
  2252                           
  2253     0075                     ??_EUSART_SetFramingErrorHandler:	
  2254                           ; 1 bytes @ 0x5
  2255                           
  2256     0075                     ??_EUSART_SetOverrunErrorHandler:	
  2257                           ; 1 bytes @ 0x5
  2258                           
  2259     0075                     ??_EUSART_SetErrorHandler:	
  2260                           ; 1 bytes @ 0x5
  2261                           
  2262     0075                     ??__Umul8_16:	
  2263                           ; 1 bytes @ 0x5
  2264                           
  2265     0075                     ??_SYSTEM_Initialize:	
  2266                           ; 1 bytes @ 0x5
  2267                           
  2268     0075                     ??_ADC_GetConversion:	
  2269                           ; 1 bytes @ 0x5
  2270                           
  2271     0075                     WriteString@i:	
  2272                           ; 1 bytes @ 0x5
  2273                           
  2274     0075                     ___wmul@multiplicand:	
  2275                           ; 2 bytes @ 0x5
  2276                           
  2277                           
  2278                           ; 2 bytes @ 0x5
  2279     0075                     	ds	1
  2280     0076                     ADC_GetConversion@channel:
  2281                           
  2282                           ; 1 bytes @ 0x6
  2283     0076                     	ds	1
  2284     0077                     ??__ReadSensor:
  2285     0077                     ??_approximateLog:	
  2286                           ; 1 bytes @ 0x7
  2287                           
  2288     0077                     ??___wmul:	
  2289                           ; 1 bytes @ 0x7
  2290                           
  2291     0077                     ??___awdiv:	
  2292                           ; 1 bytes @ 0x7
  2293                           
  2294     0077                     ??___flsub:	
  2295                           ; 1 bytes @ 0x7
  2296                           
  2297     0077                     WriteString@input:	
  2298                           ; 1 bytes @ 0x7
  2299                           
  2300                           
  2301                           ; 1 bytes @ 0x7
  2302     0077                     	ds	1
  2303     0078                     ??_main:
  2304                           
  2305                           	psect	cstackBANK0
  2306     0020                     __pcstackBANK0:	
  2307                           ; 1 bytes @ 0x8
  2308                           
  2309     0020                     ??___fltol:
  2310     0020                     ??___xxtofl:	
  2311                           ; 1 bytes @ 0x0
  2312                           
  2313     0020                     ___wmul@product:	
  2314                           ; 1 bytes @ 0x0
  2315                           
  2316     0020                     __Umul8_16@product:	
  2317                           ; 2 bytes @ 0x0
  2318                           
  2319                           
  2320                           ; 2 bytes @ 0x0
  2321     0020                     	ds	2
  2322     0022                     ?___awdiv:
  2323     0022                     ___awdiv@divisor:	
  2324                           ; 2 bytes @ 0x2
  2325                           
  2326     0022                     __Umul8_16@word_mpld:	
  2327                           ; 2 bytes @ 0x2
  2328                           
  2329                           
  2330                           ; 2 bytes @ 0x2
  2331     0022                     	ds	2
  2332     0024                     ___fltol@sign1:
  2333     0024                     __Umul8_16@multiplier:	
  2334                           ; 1 bytes @ 0x4
  2335                           
  2336     0024                     ___xxtofl@sign:	
  2337                           ; 1 bytes @ 0x4
  2338                           
  2339     0024                     ___awdiv@dividend:	
  2340                           ; 1 bytes @ 0x4
  2341                           
  2342                           
  2343                           ; 2 bytes @ 0x4
  2344     0024                     	ds	1
  2345     0025                     ?___fldiv:
  2346     0025                     ___fltol@exp1:	
  2347                           ; 4 bytes @ 0x5
  2348                           
  2349     0025                     ___xxtofl@exp:	
  2350                           ; 1 bytes @ 0x5
  2351                           
  2352     0025                     ___fldiv@a:	
  2353                           ; 1 bytes @ 0x5
  2354                           
  2355                           
  2356                           ; 4 bytes @ 0x5
  2357     0025                     	ds	1
  2358     0026                     ___awdiv@counter:
  2359     0026                     ___xxtofl@arg:	
  2360                           ; 1 bytes @ 0x6
  2361                           
  2362                           
  2363                           ; 4 bytes @ 0x6
  2364     0026                     	ds	1
  2365     0027                     ___awdiv@sign:
  2366                           
  2367                           ; 1 bytes @ 0x7
  2368     0027                     	ds	1
  2369     0028                     ___awdiv@quotient:
  2370                           
  2371                           ; 2 bytes @ 0x8
  2372     0028                     	ds	1
  2373     0029                     ___fldiv@b:
  2374                           
  2375                           ; 4 bytes @ 0x9
  2376     0029                     	ds	1
  2377     002A                     ??__SendDataToConsole:
  2378                           
  2379                           ; 1 bytes @ 0xA
  2380     002A                     	ds	3
  2381     002D                     ??___fldiv:
  2382                           
  2383                           ; 1 bytes @ 0xD
  2384     002D                     	ds	1
  2385     002E                     __SendDataToConsole@ones:
  2386                           
  2387                           ; 2 bytes @ 0xE
  2388     002E                     	ds	2
  2389     0030                     __SendDataToConsole@tens:
  2390                           
  2391                           ; 2 bytes @ 0x10
  2392     0030                     	ds	2
  2393     0032                     __SendDataToConsole@huns:
  2394     0032                     ___fldiv@rem:	
  2395                           ; 2 bytes @ 0x12
  2396                           
  2397                           
  2398                           ; 4 bytes @ 0x12
  2399     0032                     	ds	4
  2400     0036                     ___fldiv@sign:
  2401                           
  2402                           ; 1 bytes @ 0x16
  2403     0036                     	ds	1
  2404     0037                     ___fldiv@new_exp:
  2405                           
  2406                           ; 2 bytes @ 0x17
  2407     0037                     	ds	2
  2408     0039                     ___fldiv@grs:
  2409                           
  2410                           ; 4 bytes @ 0x19
  2411     0039                     	ds	4
  2412     003D                     ___fldiv@bexp:
  2413                           
  2414                           ; 1 bytes @ 0x1D
  2415     003D                     	ds	1
  2416     003E                     ___fldiv@aexp:
  2417                           
  2418                           ; 1 bytes @ 0x1E
  2419     003E                     	ds	1
  2420     003F                     ?___fladd:
  2421     003F                     ___fladd@b:	
  2422                           ; 4 bytes @ 0x1F
  2423                           
  2424                           
  2425                           ; 4 bytes @ 0x1F
  2426     003F                     	ds	4
  2427     0043                     ___fladd@a:
  2428                           
  2429                           ; 4 bytes @ 0x23
  2430     0043                     	ds	4
  2431     0047                     ??___fladd:
  2432                           
  2433                           ; 1 bytes @ 0x27
  2434     0047                     	ds	8
  2435     004F                     ___fladd@signs:
  2436                           
  2437                           ; 1 bytes @ 0x2F
  2438     004F                     	ds	1
  2439     0050                     ___fladd@aexp:
  2440                           
  2441                           ; 1 bytes @ 0x30
  2442     0050                     	ds	1
  2443     0051                     ___fladd@bexp:
  2444                           
  2445                           ; 1 bytes @ 0x31
  2446     0051                     	ds	1
  2447     0052                     ___fladd@grs:
  2448                           
  2449                           ; 1 bytes @ 0x32
  2450     0052                     	ds	1
  2451     0053                     ?___flmul:
  2452     0053                     ___flmul@b:	
  2453                           ; 4 bytes @ 0x33
  2454                           
  2455                           
  2456                           ; 4 bytes @ 0x33
  2457     0053                     	ds	4
  2458     0057                     ___flmul@a:
  2459                           
  2460                           ; 4 bytes @ 0x37
  2461     0057                     	ds	4
  2462     005B                     ??___flmul:
  2463                           
  2464                           ; 1 bytes @ 0x3B
  2465     005B                     	ds	5
  2466     0060                     ___flmul@sign:
  2467                           
  2468                           ; 1 bytes @ 0x40
  2469     0060                     	ds	1
  2470     0061                     ___flmul@aexp:
  2471                           
  2472                           ; 1 bytes @ 0x41
  2473     0061                     	ds	1
  2474     0062                     ___flmul@grs:
  2475                           
  2476                           ; 4 bytes @ 0x42
  2477     0062                     	ds	4
  2478     0066                     ___flmul@bexp:
  2479                           
  2480                           ; 1 bytes @ 0x46
  2481     0066                     	ds	1
  2482     0067                     ___flmul@prod:
  2483                           
  2484                           ; 4 bytes @ 0x47
  2485     0067                     	ds	4
  2486     006B                     ___flmul@temp:
  2487                           
  2488                           ; 2 bytes @ 0x4B
  2489     006B                     	ds	2
  2490     006D                     main@savedRelay:
  2491                           
  2492                           ; 1 bytes @ 0x4D
  2493     006D                     	ds	1
  2494                           
  2495                           	psect	maintext
  2496     0BEE                     __pmaintext:	
  2497 ;;
  2498 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2499 ;;
  2500 ;; *************** function _main *****************
  2501 ;; Defined at:
  2502 ;;		line 51 in file "main.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;		None
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;  savedRelay      1   77[BANK0 ] _Bool 
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      void 
  2509 ;; Registers used:
  2510 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2511 ;; Tracked objects:
  2512 ;;		On entry : B1F/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2516 ;;      Params:         0       0       0       0       0       0
  2517 ;;      Locals:         0       1       0       0       0       0
  2518 ;;      Temps:          0       0       0       0       0       0
  2519 ;;      Totals:         0       1       0       0       0       0
  2520 ;;Total ram usage:        1 bytes
  2521 ;; Hardware stack levels required when called: 8
  2522 ;; This function calls:
  2523 ;;		_SYSTEM_Initialize
  2524 ;;		_TMR0_SetInterruptHandler
  2525 ;;		_TMR1_SetInterruptHandler
  2526 ;;		__ControlHeat
  2527 ;;		__ReadSensor
  2528 ;;		__SendDataToConsole
  2529 ;; This function is called by:
  2530 ;;		Startup code after reset
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534     0BEE                     _main:	
  2535                           ;psect for function _main
  2536                           
  2537                           
  2538                           ;main.c: 54:     SYSTEM_Initialize();
  2539                           
  2540                           ;incstack = 0
  2541                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2542     0BEE  318A  226B  318B   	fcall	_SYSTEM_Initialize
  2543                           
  2544                           ;main.c: 60:     (INTCONbits.GIE = 1);
  2545     0BF1  178B               	bsf	11,7	;volatile
  2546                           
  2547                           ;main.c: 63:     (INTCONbits.PEIE = 1);
  2548     0BF2  170B               	bsf	11,6	;volatile
  2549                           
  2550                           ;main.c: 71:     TMR0_SetInterruptHandler(_UIControlISR);
  2551     0BF3  302C               	movlw	low __UIControlISR
  2552     0BF4  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2553     0BF5  300E               	movlw	high __UIControlISR
  2554     0BF6  00F4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2555     0BF7  318A  2201  318B   	fcall	_TMR0_SetInterruptHandler
  2556                           
  2557                           ;main.c: 72:     TMR1_SetInterruptHandler(_LogicControlISR);
  2558     0BFA  3007               	movlw	low __LogicControlISR
  2559     0BFB  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  2560     0BFC  300B               	movlw	high __LogicControlISR
  2561     0BFD  00F4               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  2562     0BFE  318A  2207  318B   	fcall	_TMR1_SetInterruptHandler
  2563     0C01                     l4015:
  2564                           
  2565                           ;main.c: 75:     {;main.c: 76:         _Bool savedRelay;;main.c: 79:         if (READ_FL
      +                          AG)
  2566     0C01  0022               	movlb	2	; select bank2
  2567     0C02  0828               	movf	_READ_FLAG^(0+256),w
  2568     0C03  1903               	btfsc	3,2
  2569     0C04  2C09               	goto	l4021
  2570                           
  2571                           ;main.c: 80:         {;main.c: 81:             READ_FLAG = 0;
  2572     0C05  01A8               	clrf	_READ_FLAG^(0+256)
  2573                           
  2574                           ;main.c: 82:             _ReadSensor();
  2575     0C06  3180  2038  318B   	fcall	__ReadSensor
  2576     0C09                     l4021:
  2577                           
  2578                           ;main.c: 85:         if (UART_FLAG)
  2579     0C09  0022               	movlb	2	; select bank2
  2580     0C0A  0827               	movf	_UART_FLAG^(0+256),w
  2581     0C0B  1903               	btfsc	3,2
  2582     0C0C  2C11               	goto	l4027
  2583                           
  2584                           ;main.c: 88:             if (1)
  2585     0C0D  01A7               	clrf	_UART_FLAG^(0+256)
  2586                           
  2587                           ;main.c: 89:                 _SendDataToConsole();
  2588     0C0E  318D  2505  318B   	fcall	__SendDataToConsole
  2589     0C11                     l4027:
  2590                           
  2591                           ;main.c: 92:         if (LOGIC_FLAG)
  2592     0C11  0022               	movlb	2	; select bank2
  2593     0C12  0826               	movf	_LOGIC_FLAG^(0+256),w
  2594     0C13  1903               	btfsc	3,2
  2595     0C14  2C01               	goto	l4015
  2596                           
  2597                           ;main.c: 93:         {;main.c: 94:             LOGIC_FLAG = 0;
  2598     0C15  01A6               	clrf	_LOGIC_FLAG^(0+256)
  2599                           
  2600                           ;main.c: 96:             savedRelay = RELAY_STATUS;
  2601     0C16  0020               	movlb	0	; select bank0
  2602     0C17  086F               	movf	_RELAY_STATUS,w
  2603     0C18  00ED               	movwf	main@savedRelay
  2604                           
  2605                           ;main.c: 99:             HEAT_CALL_TICKS++;
  2606     0C19  3001               	movlw	1
  2607     0C1A  0021               	movlb	1	; select bank1
  2608     0C1B  07B8               	addwf	_HEAT_CALL_TICKS^(0+128),f
  2609     0C1C  3000               	movlw	0
  2610     0C1D  3DB9               	addwfc	(_HEAT_CALL_TICKS+1)^(0+128),f
  2611                           
  2612                           ;main.c: 100:             if (RELAY_STATUS)
  2613     0C1E  0020               	movlb	0	; select bank0
  2614     0C1F  086F               	movf	_RELAY_STATUS,w
  2615     0C20  3000               	movlw	0
  2616     0C21  0021               	movlb	1	; select bank1
  2617     0C22  0239               	subwf	(_HEAT_CALL_TICKS+1)^(0+128),w
  2618     0C23  30B5               	movlw	181
  2619     0C24  1903               	skipnz
  2620     0C25  0238               	subwf	_HEAT_CALL_TICKS^(0+128),w
  2621     0C26  1C03               	skipc
  2622     0C27  2C2C               	goto	l4045
  2623     0C28  30B4               	movlw	180
  2624     0C29  00B8               	movwf	_HEAT_CALL_TICKS^(0+128)
  2625     0C2A  3000               	movlw	0
  2626     0C2B  00B9               	movwf	(_HEAT_CALL_TICKS^(0+128)+1)
  2627     0C2C                     l4045:
  2628                           
  2629                           ;main.c: 114:             _ControlHeat();
  2630     0C2C  318C  2441  318B   	fcall	__ControlHeat
  2631                           
  2632                           ;main.c: 116:             if (savedRelay != RELAY_STATUS)
  2633     0C2F  0020               	movlb	0	; select bank0
  2634     0C30  086D               	movf	main@savedRelay,w
  2635     0C31  066F               	xorwf	_RELAY_STATUS,w
  2636     0C32  1903               	skipnz
  2637     0C33  2C37               	goto	l4051
  2638                           
  2639                           ;main.c: 117:             {;main.c: 119:                 HEAT_CALL_TICKS = 0;
  2640     0C34  0021               	movlb	1	; select bank1
  2641     0C35  01B8               	clrf	_HEAT_CALL_TICKS^(0+128)
  2642     0C36  01B9               	clrf	(_HEAT_CALL_TICKS+1)^(0+128)
  2643     0C37                     l4051:
  2644                           
  2645                           ;main.c: 122:             if (RELAY_STATUS)
  2646     0C37  0020               	movlb	0	; select bank0
  2647     0C38  086F               	movf	_RELAY_STATUS,w
  2648     0C39  1903               	btfsc	3,2
  2649     0C3A  2C3E               	goto	l465
  2650                           
  2651                           ;main.c: 123:                 do { LATAbits.LATA2 = 1; } while(0);
  2652     0C3B  0022               	movlb	2	; select bank2
  2653     0C3C  150C               	bsf	12,2	;volatile
  2654     0C3D  2C01               	goto	l4015
  2655     0C3E                     l465:	
  2656                           ;main.c: 125:                 do { LATAbits.LATA2 = 0; } while(0);
  2657                           
  2658     0C3E  0022               	movlb	2	; select bank2
  2659     0C3F  110C               	bcf	12,2	;volatile
  2660     0C40  2C01               	goto	l4015
  2661     0C41                     __end_of_main:
  2662                           
  2663                           	psect	text1
  2664     0D05                     __ptext1:	
  2665 ;; *************** function __SendDataToConsole *****************
  2666 ;; Defined at:
  2667 ;;		line 335 in file "main.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;		None
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  huns            2   18[BANK0 ] int 
  2672 ;;  tens            2   16[BANK0 ] int 
  2673 ;;  ones            2   14[BANK0 ] int 
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2683 ;;      Params:         0       0       0       0       0       0
  2684 ;;      Locals:         0       6       0       0       0       0
  2685 ;;      Temps:          0       4       0       0       0       0
  2686 ;;      Totals:         0      10       0       0       0       0
  2687 ;;Total ram usage:       10 bytes
  2688 ;; Hardware stack levels used: 1
  2689 ;; Hardware stack levels required when called: 6
  2690 ;; This function calls:
  2691 ;;		_WriteString
  2692 ;;		___awdiv
  2693 ;;		___wmul
  2694 ;; This function is called by:
  2695 ;;		_main
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           
  2699     0D05                     __SendDataToConsole:	
  2700                           ;psect for function __SendDataToConsole
  2701                           
  2702                           
  2703                           ;main.c: 339:     int huns, tens, ones;;main.c: 341:     huns = TEMP / 100;
  2704                           
  2705                           ;incstack = 0
  2706                           ; Regs used in __SendDataToConsole: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2707     0D05  3064               	movlw	100
  2708     0D06  0020               	movlb	0	; select bank0
  2709     0D07  00A2               	movwf	___awdiv@divisor
  2710     0D08  3000               	movlw	0
  2711     0D09  00A3               	movwf	___awdiv@divisor+1
  2712     0D0A  0021               	movlb	1	; select bank1
  2713     0D0B  083B               	movf	(_TEMP+1)^(0+128),w
  2714     0D0C  0020               	movlb	0	; select bank0
  2715     0D0D  00A5               	movwf	___awdiv@dividend+1
  2716     0D0E  0021               	movlb	1	; select bank1
  2717     0D0F  083A               	movf	_TEMP^(0+128),w
  2718     0D10  0020               	movlb	0	; select bank0
  2719     0D11  00A4               	movwf	___awdiv@dividend
  2720     0D12  318B  239C  318D   	fcall	___awdiv
  2721     0D15  0020               	movlb	0	; select bank0
  2722     0D16  0823               	movf	?___awdiv+1,w
  2723     0D17  00B3               	movwf	__SendDataToConsole@huns+1
  2724     0D18  0822               	movf	?___awdiv,w
  2725     0D19  00B2               	movwf	__SendDataToConsole@huns
  2726                           
  2727                           ;main.c: 342:     tens = (TEMP - huns * 100) / 10;
  2728     0D1A  300A               	movlw	10
  2729     0D1B  00A2               	movwf	___awdiv@divisor
  2730     0D1C  3000               	movlw	0
  2731     0D1D  00A3               	movwf	___awdiv@divisor+1
  2732     0D1E  0833               	movf	__SendDataToConsole@huns+1,w
  2733     0D1F  00F4               	movwf	___wmul@multiplier+1
  2734     0D20  0832               	movf	__SendDataToConsole@huns,w
  2735     0D21  00F3               	movwf	___wmul@multiplier
  2736     0D22  309C               	movlw	156
  2737     0D23  00F5               	movwf	___wmul@multiplicand
  2738     0D24  30FF               	movlw	255
  2739     0D25  00F6               	movwf	___wmul@multiplicand+1
  2740     0D26  318A  22E9  318D   	fcall	___wmul
  2741     0D29  0021               	movlb	1	; select bank1
  2742     0D2A  083A               	movf	_TEMP^(0+128),w
  2743     0D2B  0773               	addwf	?___wmul,w
  2744     0D2C  0020               	movlb	0	; select bank0
  2745     0D2D  00A4               	movwf	___awdiv@dividend
  2746     0D2E  0021               	movlb	1	; select bank1
  2747     0D2F  083B               	movf	(_TEMP+1)^(0+128),w
  2748     0D30  3D74               	addwfc	?___wmul+1,w
  2749     0D31  0020               	movlb	0	; select bank0
  2750     0D32  00A5               	movwf	___awdiv@dividend+1
  2751     0D33  318B  239C  318D   	fcall	___awdiv
  2752     0D36  0020               	movlb	0	; select bank0
  2753     0D37  0823               	movf	?___awdiv+1,w
  2754     0D38  00B1               	movwf	__SendDataToConsole@tens+1
  2755     0D39  0822               	movf	?___awdiv,w
  2756     0D3A  00B0               	movwf	__SendDataToConsole@tens
  2757                           
  2758                           ;main.c: 343:     ones = (TEMP - huns * 100 - tens * 10);
  2759     0D3B  0833               	movf	__SendDataToConsole@huns+1,w
  2760     0D3C  00F4               	movwf	___wmul@multiplier+1
  2761     0D3D  0832               	movf	__SendDataToConsole@huns,w
  2762     0D3E  00F3               	movwf	___wmul@multiplier
  2763     0D3F  309C               	movlw	156
  2764     0D40  00F5               	movwf	___wmul@multiplicand
  2765     0D41  30FF               	movlw	255
  2766     0D42  00F6               	movwf	___wmul@multiplicand+1
  2767     0D43  318A  22E9  318D   	fcall	___wmul
  2768     0D46  0873               	movf	?___wmul,w
  2769     0D47  0020               	movlb	0	; select bank0
  2770     0D48  00AA               	movwf	??__SendDataToConsole
  2771     0D49  0874               	movf	?___wmul+1,w
  2772     0D4A  00AB               	movwf	??__SendDataToConsole+1
  2773     0D4B  0831               	movf	__SendDataToConsole@tens+1,w
  2774     0D4C  00F4               	movwf	___wmul@multiplier+1
  2775     0D4D  0830               	movf	__SendDataToConsole@tens,w
  2776     0D4E  00F3               	movwf	___wmul@multiplier
  2777     0D4F  30F6               	movlw	246
  2778     0D50  00F5               	movwf	___wmul@multiplicand
  2779     0D51  30FF               	movlw	255
  2780     0D52  00F6               	movwf	___wmul@multiplicand+1
  2781     0D53  318A  22E9  318D   	fcall	___wmul
  2782     0D56  0873               	movf	?___wmul,w
  2783     0D57  0020               	movlb	0	; select bank0
  2784     0D58  072A               	addwf	??__SendDataToConsole,w
  2785     0D59  00AC               	movwf	??__SendDataToConsole+2
  2786     0D5A  0874               	movf	?___wmul+1,w
  2787     0D5B  3D2B               	addwfc	??__SendDataToConsole+1,w
  2788     0D5C  00AD               	movwf	??__SendDataToConsole+3
  2789     0D5D  0021               	movlb	1	; select bank1
  2790     0D5E  083A               	movf	_TEMP^(0+128),w
  2791     0D5F  0020               	movlb	0	; select bank0
  2792     0D60  072C               	addwf	??__SendDataToConsole+2,w
  2793     0D61  00AE               	movwf	__SendDataToConsole@ones
  2794     0D62  0021               	movlb	1	; select bank1
  2795     0D63  083B               	movf	(_TEMP+1)^(0+128),w
  2796     0D64  0020               	movlb	0	; select bank0
  2797     0D65  3D2D               	addwfc	??__SendDataToConsole+3,w
  2798     0D66  00AF               	movwf	__SendDataToConsole@ones+1
  2799                           
  2800                           ;main.c: 346:     displayString[0] = 'T';
  2801     0D67  3054               	movlw	84
  2802     0D68  0022               	movlb	2	; select bank2
  2803     0D69  00AC               	movwf	_displayString^(0+256)
  2804                           
  2805                           ;main.c: 347:     displayString[1] = ':';
  2806     0D6A  303A               	movlw	58
  2807     0D6B  00AD               	movwf	(_displayString^(0+256)+1)
  2808                           
  2809                           ;main.c: 348:     displayString[2] = huns + 48;
  2810     0D6C  0020               	movlb	0	; select bank0
  2811     0D6D  0832               	movf	__SendDataToConsole@huns,w
  2812     0D6E  3E30               	addlw	48
  2813     0D6F  0022               	movlb	2	; select bank2
  2814     0D70  00AE               	movwf	(_displayString^(0+256)+2)
  2815                           
  2816                           ;main.c: 349:     displayString[3] = tens + 48;
  2817     0D71  0020               	movlb	0	; select bank0
  2818     0D72  0830               	movf	__SendDataToConsole@tens,w
  2819     0D73  3E30               	addlw	48
  2820     0D74  0022               	movlb	2	; select bank2
  2821     0D75  00AF               	movwf	(_displayString^(0+256)+3)
  2822                           
  2823                           ;main.c: 350:     displayString[4] = ones + 48;
  2824     0D76  0020               	movlb	0	; select bank0
  2825     0D77  082E               	movf	__SendDataToConsole@ones,w
  2826     0D78  3E30               	addlw	48
  2827     0D79  0022               	movlb	2	; select bank2
  2828     0D7A  00B0               	movwf	(_displayString^(0+256)+4)
  2829                           
  2830                           ;main.c: 351:     displayString[5] = '\t';
  2831     0D7B  3009               	movlw	9
  2832     0D7C  00B1               	movwf	(_displayString^(0+256)+5)
  2833                           
  2834                           ;main.c: 352:     displayString[6] = 'M';
  2835     0D7D  304D               	movlw	77
  2836     0D7E  00B2               	movwf	(_displayString^(0+256)+6)
  2837                           
  2838                           ;main.c: 353:     displayString[7] = ':';
  2839     0D7F  303A               	movlw	58
  2840     0D80  00B3               	movwf	(_displayString^(0+256)+7)
  2841                           
  2842                           ;main.c: 354:     displayString[8] = CURRENT_MODE + 48;
  2843     0D81  0878               	movf	_CURRENT_MODE,w
  2844     0D82  3E30               	addlw	48
  2845     0D83  00B4               	movwf	(_displayString^(0+256)+8)
  2846                           
  2847                           ;main.c: 355:     displayString[9] = '\t';
  2848     0D84  3009               	movlw	9
  2849     0D85  00B5               	movwf	(_displayString^(0+256)+9)
  2850                           
  2851                           ;main.c: 356:     displayString[10] = 'H';
  2852     0D86  3048               	movlw	72
  2853     0D87  00B6               	movwf	(_displayString^(0+256)+10)
  2854                           
  2855                           ;main.c: 357:     displayString[11] = ':';
  2856     0D88  303A               	movlw	58
  2857     0D89  00B7               	movwf	(_displayString^(0+256)+11)
  2858                           
  2859                           ;main.c: 358:     displayString[12] = RELAY_STATUS + 48;
  2860     0D8A  0020               	movlb	0	; select bank0
  2861     0D8B  086F               	movf	_RELAY_STATUS,w
  2862     0D8C  3E30               	addlw	48
  2863     0D8D  0022               	movlb	2	; select bank2
  2864     0D8E  00B8               	movwf	(_displayString^(0+256)+12)
  2865                           
  2866                           ;main.c: 359:     displayString[13] = '\r';
  2867     0D8F  300D               	movlw	13
  2868     0D90  00B9               	movwf	(_displayString^(0+256)+13)
  2869                           
  2870                           ;main.c: 360:     displayString[14] = '\n';
  2871     0D91  300A               	movlw	10
  2872     0D92  00BA               	movwf	(_displayString^(0+256)+14)
  2873                           
  2874                           ;main.c: 361:     displayString[15] = '\0';
  2875     0D93  01BB               	clrf	(_displayString^(0+256)+15)
  2876                           
  2877                           ;main.c: 363:     WriteString(displayString);
  2878     0D94  302C               	movlw	(low (_displayString| (0+256)))& (0+255)
  2879     0D95  318A  22CC         	fcall	_WriteString
  2880     0D97  0008               	return
  2881     0D98                     __end_of__SendDataToConsole:
  2882                           
  2883                           	psect	text2
  2884     0AE9                     __ptext2:	
  2885 ;; *************** function ___wmul *****************
  2886 ;; Defined at:
  2887 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;  multiplier      2    3[COMMON] unsigned int 
  2890 ;;  multiplicand    2    5[COMMON] unsigned int 
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;  product         2    0[BANK0 ] unsigned int 
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  2    3[COMMON] unsigned int 
  2895 ;; Registers used:
  2896 ;;		wreg, status,2, status,0
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2902 ;;      Params:         4       0       0       0       0       0
  2903 ;;      Locals:         0       2       0       0       0       0
  2904 ;;      Temps:          0       0       0       0       0       0
  2905 ;;      Totals:         4       2       0       0       0       0
  2906 ;;Total ram usage:        6 bytes
  2907 ;; Hardware stack levels used: 1
  2908 ;; Hardware stack levels required when called: 4
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		__SendDataToConsole
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916     0AE9                     ___wmul:	
  2917                           ;psect for function ___wmul
  2918                           
  2919                           
  2920                           ;incstack = 0
  2921                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2922     0AE9  0020               	movlb	0	; select bank0
  2923     0AEA  01A0               	clrf	___wmul@product
  2924     0AEB  01A1               	clrf	___wmul@product+1
  2925     0AEC                     l3875:
  2926     0AEC  1C73               	btfss	___wmul@multiplier,0
  2927     0AED  2AF3               	goto	l713
  2928     0AEE  0875               	movf	___wmul@multiplicand,w
  2929     0AEF  0020               	movlb	0	; select bank0
  2930     0AF0  07A0               	addwf	___wmul@product,f
  2931     0AF1  0876               	movf	___wmul@multiplicand+1,w
  2932     0AF2  3DA1               	addwfc	___wmul@product+1,f
  2933     0AF3                     l713:
  2934     0AF3  3001               	movlw	1
  2935     0AF4                     u4705:
  2936     0AF4  35F5               	lslf	___wmul@multiplicand,f
  2937     0AF5  0DF6               	rlf	___wmul@multiplicand+1,f
  2938     0AF6  0B89               	decfsz	9,f
  2939     0AF7  2AF4               	goto	u4705
  2940     0AF8  3001               	movlw	1
  2941     0AF9                     u4715:
  2942     0AF9  36F4               	lsrf	___wmul@multiplier+1,f
  2943     0AFA  0CF3               	rrf	___wmul@multiplier,f
  2944     0AFB  0B89               	decfsz	9,f
  2945     0AFC  2AF9               	goto	u4715
  2946     0AFD  0873               	movf	___wmul@multiplier,w
  2947     0AFE  0474               	iorwf	___wmul@multiplier+1,w
  2948     0AFF  1D03               	btfss	3,2
  2949     0B00  2AEC               	goto	l3875
  2950     0B01  0020               	movlb	0	; select bank0
  2951     0B02  0821               	movf	___wmul@product+1,w
  2952     0B03  00F4               	movwf	?___wmul+1
  2953     0B04  0820               	movf	___wmul@product,w
  2954     0B05  00F3               	movwf	?___wmul
  2955     0B06  0008               	return
  2956     0B07                     __end_of___wmul:
  2957                           
  2958                           	psect	text3
  2959     0B9C                     __ptext3:	
  2960 ;; *************** function ___awdiv *****************
  2961 ;; Defined at:
  2962 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  divisor         2    2[BANK0 ] int 
  2965 ;;  dividend        2    4[BANK0 ] int 
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;  quotient        2    8[BANK0 ] int 
  2968 ;;  sign            1    7[BANK0 ] unsigned char 
  2969 ;;  counter         1    6[BANK0 ] unsigned char 
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  2    2[BANK0 ] int 
  2972 ;; Registers used:
  2973 ;;		wreg, status,2, status,0
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2979 ;;      Params:         0       4       0       0       0       0
  2980 ;;      Locals:         0       4       0       0       0       0
  2981 ;;      Temps:          1       0       0       0       0       0
  2982 ;;      Totals:         1       8       0       0       0       0
  2983 ;;Total ram usage:        9 bytes
  2984 ;; Hardware stack levels used: 1
  2985 ;; Hardware stack levels required when called: 4
  2986 ;; This function calls:
  2987 ;;		Nothing
  2988 ;; This function is called by:
  2989 ;;		__SendDataToConsole
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993     0B9C                     ___awdiv:	
  2994                           ;psect for function ___awdiv
  2995                           
  2996                           
  2997                           ;incstack = 0
  2998                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2999     0B9C  0020               	movlb	0	; select bank0
  3000     0B9D  01A7               	clrf	___awdiv@sign
  3001     0B9E  1FA3               	btfss	___awdiv@divisor+1,7
  3002     0B9F  2BA7               	goto	l3083
  3003     0BA0  09A2               	comf	___awdiv@divisor,f
  3004     0BA1  09A3               	comf	___awdiv@divisor+1,f
  3005     0BA2  0AA2               	incf	___awdiv@divisor,f
  3006     0BA3  1903               	skipnz
  3007     0BA4  0AA3               	incf	___awdiv@divisor+1,f
  3008     0BA5  01A7               	clrf	___awdiv@sign
  3009     0BA6  0AA7               	incf	___awdiv@sign,f
  3010     0BA7                     l3083:
  3011     0BA7  1FA5               	btfss	___awdiv@dividend+1,7
  3012     0BA8  2BB2               	goto	l3089
  3013     0BA9  09A4               	comf	___awdiv@dividend,f
  3014     0BAA  09A5               	comf	___awdiv@dividend+1,f
  3015     0BAB  0AA4               	incf	___awdiv@dividend,f
  3016     0BAC  1903               	skipnz
  3017     0BAD  0AA5               	incf	___awdiv@dividend+1,f
  3018     0BAE  3001               	movlw	1
  3019     0BAF  00F7               	movwf	??___awdiv
  3020     0BB0  0877               	movf	??___awdiv,w
  3021     0BB1  06A7               	xorwf	___awdiv@sign,f
  3022     0BB2                     l3089:
  3023     0BB2  01A8               	clrf	___awdiv@quotient
  3024     0BB3  01A9               	clrf	___awdiv@quotient+1
  3025     0BB4  0822               	movf	___awdiv@divisor,w
  3026     0BB5  0423               	iorwf	___awdiv@divisor+1,w
  3027     0BB6  1903               	btfsc	3,2
  3028     0BB7  2BE1               	goto	l3111
  3029     0BB8  01A6               	clrf	___awdiv@counter
  3030     0BB9  0AA6               	incf	___awdiv@counter,f
  3031     0BBA                     l3099:
  3032     0BBA  1BA3               	btfsc	___awdiv@divisor+1,7
  3033     0BBB  2BC6               	goto	l3101
  3034     0BBC  3001               	movlw	1
  3035     0BBD                     u3165:
  3036     0BBD  35A2               	lslf	___awdiv@divisor,f
  3037     0BBE  0DA3               	rlf	___awdiv@divisor+1,f
  3038     0BBF  0B89               	decfsz	9,f
  3039     0BC0  2BBD               	goto	u3165
  3040     0BC1  3001               	movlw	1
  3041     0BC2  00F7               	movwf	??___awdiv
  3042     0BC3  0877               	movf	??___awdiv,w
  3043     0BC4  07A6               	addwf	___awdiv@counter,f
  3044     0BC5  2BBA               	goto	l3099
  3045     0BC6                     l3101:
  3046     0BC6  3001               	movlw	1
  3047     0BC7                     u3185:
  3048     0BC7  35A8               	lslf	___awdiv@quotient,f
  3049     0BC8  0DA9               	rlf	___awdiv@quotient+1,f
  3050     0BC9  0B89               	decfsz	9,f
  3051     0BCA  2BC7               	goto	u3185
  3052     0BCB  0823               	movf	___awdiv@divisor+1,w
  3053     0BCC  0225               	subwf	___awdiv@dividend+1,w
  3054     0BCD  1D03               	skipz
  3055     0BCE  2BD1               	goto	u3195
  3056     0BCF  0822               	movf	___awdiv@divisor,w
  3057     0BD0  0224               	subwf	___awdiv@dividend,w
  3058     0BD1                     u3195:
  3059     0BD1  1C03               	skipc
  3060     0BD2  2BD8               	goto	l3107
  3061     0BD3  0822               	movf	___awdiv@divisor,w
  3062     0BD4  02A4               	subwf	___awdiv@dividend,f
  3063     0BD5  0823               	movf	___awdiv@divisor+1,w
  3064     0BD6  3BA5               	subwfb	___awdiv@dividend+1,f
  3065     0BD7  1428               	bsf	___awdiv@quotient,0
  3066     0BD8                     l3107:
  3067     0BD8  3001               	movlw	1
  3068     0BD9                     u3205:
  3069     0BD9  36A3               	lsrf	___awdiv@divisor+1,f
  3070     0BDA  0CA2               	rrf	___awdiv@divisor,f
  3071     0BDB  0B89               	decfsz	9,f
  3072     0BDC  2BD9               	goto	u3205
  3073     0BDD  3001               	movlw	1
  3074     0BDE  02A6               	subwf	___awdiv@counter,f
  3075     0BDF  1D03               	btfss	3,2
  3076     0BE0  2BC6               	goto	l3101
  3077     0BE1                     l3111:
  3078     0BE1  0827               	movf	___awdiv@sign,w
  3079     0BE2  1903               	btfsc	3,2
  3080     0BE3  2BE9               	goto	l3115
  3081     0BE4  09A8               	comf	___awdiv@quotient,f
  3082     0BE5  09A9               	comf	___awdiv@quotient+1,f
  3083     0BE6  0AA8               	incf	___awdiv@quotient,f
  3084     0BE7  1903               	skipnz
  3085     0BE8  0AA9               	incf	___awdiv@quotient+1,f
  3086     0BE9                     l3115:
  3087     0BE9  0829               	movf	___awdiv@quotient+1,w
  3088     0BEA  00A3               	movwf	?___awdiv+1
  3089     0BEB  0828               	movf	___awdiv@quotient,w
  3090     0BEC  00A2               	movwf	?___awdiv
  3091     0BED  0008               	return
  3092     0BEE                     __end_of___awdiv:
  3093                           
  3094                           	psect	text4
  3095     0ACC                     __ptext4:	
  3096 ;; *************** function _WriteString *****************
  3097 ;; Defined at:
  3098 ;;		line 366 in file "main.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;  input           1    wreg     PTR unsigned char 
  3101 ;;		 -> displayString(16), 
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;  input           1    7[COMMON] PTR unsigned char 
  3104 ;;		 -> displayString(16), 
  3105 ;;  i               2    5[COMMON] int 
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  1    wreg      void 
  3108 ;; Registers used:
  3109 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3115 ;;      Params:         0       0       0       0       0       0
  3116 ;;      Locals:         3       0       0       0       0       0
  3117 ;;      Temps:          1       0       0       0       0       0
  3118 ;;      Totals:         4       0       0       0       0       0
  3119 ;;Total ram usage:        4 bytes
  3120 ;; Hardware stack levels used: 1
  3121 ;; Hardware stack levels required when called: 5
  3122 ;; This function calls:
  3123 ;;		_EUSART_Write
  3124 ;; This function is called by:
  3125 ;;		__SendDataToConsole
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129     0ACC                     _WriteString:	
  3130                           ;psect for function _WriteString
  3131                           
  3132                           
  3133                           ;incstack = 0
  3134                           ; Regs used in _WriteString: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3135                           ;WriteString@input stored from wreg
  3136     0ACC  00F7               	movwf	WriteString@input
  3137                           
  3138                           ;main.c: 366: void WriteString(char * input);main.c: 367: {;main.c: 368:     int i = 0;
  3139     0ACD  01F5               	clrf	WriteString@i
  3140     0ACE  01F6               	clrf	WriteString@i+1
  3141     0ACF                     l3059:	
  3142                           ;main.c: 370:     while (input[i] != '\0')
  3143                           
  3144                           
  3145                           ;main.c: 370:     while (input[i] != '\0')
  3146     0ACF  0875               	movf	WriteString@i,w
  3147     0AD0  0777               	addwf	WriteString@input,w
  3148     0AD1  00F4               	movwf	??_WriteString
  3149     0AD2  0874               	movf	??_WriteString,w
  3150     0AD3  0086               	movwf	6
  3151     0AD4  3001               	movlw	1	; select bank2/3
  3152     0AD5  0087               	movwf	7
  3153     0AD6  0801               	movf	1,w
  3154     0AD7  1903               	btfsc	3,2
  3155     0AD8  0008               	return
  3156                           
  3157                           ;main.c: 371:     {;main.c: 372:         EUSART_Write(input[i]);
  3158     0AD9  0875               	movf	WriteString@i,w
  3159     0ADA  0777               	addwf	WriteString@input,w
  3160     0ADB  00F4               	movwf	??_WriteString
  3161     0ADC  0874               	movf	??_WriteString,w
  3162     0ADD  0086               	movwf	6
  3163     0ADE  3001               	movlw	1	; select bank2/3
  3164     0ADF  0087               	movwf	7
  3165     0AE0  0801               	movf	1,w
  3166     0AE1  318A  2229  318A   	fcall	_EUSART_Write
  3167                           
  3168                           ;main.c: 373:         i++;
  3169     0AE4  3001               	movlw	1
  3170     0AE5  07F5               	addwf	WriteString@i,f
  3171     0AE6  3000               	movlw	0
  3172     0AE7  3DF6               	addwfc	WriteString@i+1,f
  3173     0AE8  2ACF               	goto	l3059
  3174     0AE9                     __end_of_WriteString:
  3175                           
  3176                           	psect	text5
  3177     0A29                     __ptext5:	
  3178 ;; *************** function _EUSART_Write *****************
  3179 ;; Defined at:
  3180 ;;		line 132 in file "mcc_generated_files/eusart.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;  txData          1    wreg     unsigned char 
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;  txData          1    3[COMMON] unsigned char 
  3185 ;; Return value:  Size  Location     Type
  3186 ;;                  1    wreg      void 
  3187 ;; Registers used:
  3188 ;;		wreg
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3194 ;;      Params:         0       0       0       0       0       0
  3195 ;;      Locals:         1       0       0       0       0       0
  3196 ;;      Temps:          0       0       0       0       0       0
  3197 ;;      Totals:         1       0       0       0       0       0
  3198 ;;Total ram usage:        1 bytes
  3199 ;; Hardware stack levels used: 1
  3200 ;; Hardware stack levels required when called: 4
  3201 ;; This function calls:
  3202 ;;		Nothing
  3203 ;; This function is called by:
  3204 ;;		_WriteString
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208     0A29                     _EUSART_Write:	
  3209                           ;psect for function _EUSART_Write
  3210                           
  3211                           
  3212                           ;incstack = 0
  3213                           ; Regs used in _EUSART_Write: [wreg]
  3214                           ;EUSART_Write@txData stored from wreg
  3215     0A29  00F3               	movwf	EUSART_Write@txData
  3216     0A2A                     l291:	
  3217                           ;mcc_generated_files/eusart.c: 135:     {;mcc_generated_files/eusart.c: 136:     }
  3218                           
  3219                           
  3220                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TXIF)
  3221     0A2A  0020               	movlb	0	; select bank0
  3222     0A2B  1E11               	btfss	17,4	;volatile
  3223     0A2C  2A2A               	goto	l291
  3224                           
  3225                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  3226     0A2D  0873               	movf	EUSART_Write@txData,w
  3227     0A2E  0023               	movlb	3	; select bank3
  3228     0A2F  009A               	movwf	26	;volatile
  3229     0A30  0008               	return
  3230     0A31                     __end_of_EUSART_Write:
  3231                           
  3232                           	psect	text6
  3233     0038                     __ptext6:	
  3234 ;; *************** function __ReadSensor *****************
  3235 ;; Defined at:
  3236 ;;		line 278 in file "main.c"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;		None
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;  logR            4   50[BANK3 ] float 
  3241 ;;  Tf              4   28[BANK3 ] float 
  3242 ;;  Tc              4   24[BANK3 ] float 
  3243 ;;  T               4   20[BANK3 ] float 
  3244 ;;  invT            4   16[BANK3 ] float 
  3245 ;;  Rntc            4   12[BANK3 ] float 
  3246 ;;  Vcc             4    8[BANK3 ] float 
  3247 ;;  Rpullup         4    4[BANK3 ] float 
  3248 ;;  Vout            4    0[BANK3 ] float 
  3249 ;;  adcValue        2   48[BANK3 ] unsigned short 
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  1    wreg      void 
  3252 ;; Registers used:
  3253 ;;		wreg, status,2, status,0, pclath, cstack
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3259 ;;      Params:         0       0       0       0       0       0
  3260 ;;      Locals:         0       0       0       0      54       0
  3261 ;;      Temps:          0       0       0       0       0       0
  3262 ;;      Totals:         0       0       0       0      54       0
  3263 ;;Total ram usage:       54 bytes
  3264 ;; Hardware stack levels used: 1
  3265 ;; Hardware stack levels required when called: 7
  3266 ;; This function calls:
  3267 ;;		_ADC_GetConversion
  3268 ;;		___fladd
  3269 ;;		___fldiv
  3270 ;;		___flmul
  3271 ;;		___fltol
  3272 ;;		___xxtofl
  3273 ;;		_approximateLog
  3274 ;; This function is called by:
  3275 ;;		_main
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           
  3279     0038                     __ReadSensor:	
  3280                           ;psect for function __ReadSensor
  3281                           
  3282                           
  3283                           ;main.c: 281:     uint16_t adcValue = ADC_GetConversion(NTC);
  3284                           
  3285                           ;incstack = 0
  3286                           ; Regs used in __ReadSensor: [wreg+status,2+status,0+pclath+cstack]
  3287     0038  3006               	movlw	6
  3288     0039  318A  2299  3180   	fcall	_ADC_GetConversion
  3289     003C  0874               	movf	?_ADC_GetConversion+1,w
  3290     003D  0023               	movlb	3	; select bank3
  3291     003E  00D1               	movwf	(__ReadSensor@adcValue+1)^(0+384)
  3292     003F  0873               	movf	?_ADC_GetConversion,w
  3293     0040  00D0               	movwf	__ReadSensor@adcValue^(0+384)
  3294                           
  3295                           ;main.c: 282:     float Vout = adcValue * (5.0f / 1023.0f);
  3296     0041  303B               	movlw	59
  3297     0042  0020               	movlb	0	; select bank0
  3298     0043  00D6               	movwf	___flmul@b+3
  3299     0044  30A0               	movlw	160
  3300     0045  00D5               	movwf	___flmul@b+2
  3301     0046  3028               	movlw	40
  3302     0047  00D4               	movwf	___flmul@b+1
  3303     0048  300A               	movlw	10
  3304     0049  00D3               	movwf	___flmul@b
  3305     004A  0023               	movlb	3	; select bank3
  3306     004B  0850               	movf	__ReadSensor@adcValue^(0+384),w
  3307     004C  00F3               	movwf	___xxtofl@val
  3308     004D  0851               	movf	(__ReadSensor@adcValue+1)^(0+384),w
  3309     004E  00F4               	movwf	___xxtofl@val+1
  3310     004F  01F5               	clrf	___xxtofl@val+2
  3311     0050  01F6               	clrf	___xxtofl@val+3
  3312     0051  3000               	movlw	0
  3313     0052  318D  2598  3180   	fcall	___xxtofl
  3314     0055  0876               	movf	?___xxtofl+3,w
  3315     0056  0020               	movlb	0	; select bank0
  3316     0057  00DA               	movwf	___flmul@a+3
  3317     0058  0875               	movf	?___xxtofl+2,w
  3318     0059  00D9               	movwf	___flmul@a+2
  3319     005A  0874               	movf	?___xxtofl+1,w
  3320     005B  00D8               	movwf	___flmul@a+1
  3321     005C  0873               	movf	?___xxtofl,w
  3322     005D  00D7               	movwf	___flmul@a
  3323     005E  3182  22C3  3180   	fcall	___flmul
  3324     0061  0020               	movlb	0	; select bank0
  3325     0062  0856               	movf	?___flmul+3,w
  3326     0063  0023               	movlb	3	; select bank3
  3327     0064  00A3               	movwf	(__ReadSensor@Vout+3)^(0+384)
  3328     0065  0020               	movlb	0	; select bank0
  3329     0066  0855               	movf	?___flmul+2,w
  3330     0067  0023               	movlb	3	; select bank3
  3331     0068  00A2               	movwf	(__ReadSensor@Vout+2)^(0+384)
  3332     0069  0020               	movlb	0	; select bank0
  3333     006A  0854               	movf	?___flmul+1,w
  3334     006B  0023               	movlb	3	; select bank3
  3335     006C  00A1               	movwf	(__ReadSensor@Vout+1)^(0+384)
  3336     006D  0020               	movlb	0	; select bank0
  3337     006E  0853               	movf	?___flmul,w
  3338     006F  0023               	movlb	3	; select bank3
  3339     0070  00A0               	movwf	__ReadSensor@Vout^(0+384)
  3340                           
  3341                           ;main.c: 285:     float Rpullup = 10000.0;
  3342     0071  3046               	movlw	70
  3343     0072  00A7               	movwf	(__ReadSensor@Rpullup+3)^(0+384)
  3344     0073  301C               	movlw	28
  3345     0074  00A6               	movwf	(__ReadSensor@Rpullup+2)^(0+384)
  3346     0075  3040               	movlw	64
  3347     0076  00A5               	movwf	(__ReadSensor@Rpullup+1)^(0+384)
  3348     0077  3000               	movlw	0
  3349     0078  00A4               	movwf	__ReadSensor@Rpullup^(0+384)
  3350                           
  3351                           ;main.c: 286:     float Vcc = 5.0;
  3352     0079  3040               	movlw	64
  3353     007A  00AB               	movwf	(__ReadSensor@Vcc+3)^(0+384)
  3354     007B  30A0               	movlw	160
  3355     007C  00AA               	movwf	(__ReadSensor@Vcc+2)^(0+384)
  3356     007D  3000               	movlw	0
  3357     007E  00A9               	movwf	(__ReadSensor@Vcc+1)^(0+384)
  3358     007F  3000               	movlw	0
  3359     0080  00A8               	movwf	__ReadSensor@Vcc^(0+384)
  3360                           
  3361                           ;main.c: 287:     float Rntc = Rpullup * (Vcc / Vout - 1.0f);
  3362     0081  0827               	movf	(__ReadSensor@Rpullup+3)^(0+384),w
  3363     0082  0020               	movlb	0	; select bank0
  3364     0083  00D6               	movwf	___flmul@b+3
  3365     0084  0023               	movlb	3	; select bank3
  3366     0085  0826               	movf	(__ReadSensor@Rpullup+2)^(0+384),w
  3367     0086  0020               	movlb	0	; select bank0
  3368     0087  00D5               	movwf	___flmul@b+2
  3369     0088  0023               	movlb	3	; select bank3
  3370     0089  0825               	movf	(__ReadSensor@Rpullup+1)^(0+384),w
  3371     008A  0020               	movlb	0	; select bank0
  3372     008B  00D4               	movwf	___flmul@b+1
  3373     008C  0023               	movlb	3	; select bank3
  3374     008D  0824               	movf	__ReadSensor@Rpullup^(0+384),w
  3375     008E  0020               	movlb	0	; select bank0
  3376     008F  00D3               	movwf	___flmul@b
  3377     0090  30BF               	movlw	191
  3378     0091  00C2               	movwf	___fladd@b+3
  3379     0092  3080               	movlw	128
  3380     0093  00C1               	movwf	___fladd@b+2
  3381     0094  3000               	movlw	0
  3382     0095  00C0               	movwf	___fladd@b+1
  3383     0096  3000               	movlw	0
  3384     0097  00BF               	movwf	___fladd@b
  3385     0098  0023               	movlb	3	; select bank3
  3386     0099  0823               	movf	(__ReadSensor@Vout+3)^(0+384),w
  3387     009A  0020               	movlb	0	; select bank0
  3388     009B  00A8               	movwf	___fldiv@a+3
  3389     009C  0023               	movlb	3	; select bank3
  3390     009D  0822               	movf	(__ReadSensor@Vout+2)^(0+384),w
  3391     009E  0020               	movlb	0	; select bank0
  3392     009F  00A7               	movwf	___fldiv@a+2
  3393     00A0  0023               	movlb	3	; select bank3
  3394     00A1  0821               	movf	(__ReadSensor@Vout+1)^(0+384),w
  3395     00A2  0020               	movlb	0	; select bank0
  3396     00A3  00A6               	movwf	___fldiv@a+1
  3397     00A4  0023               	movlb	3	; select bank3
  3398     00A5  0820               	movf	__ReadSensor@Vout^(0+384),w
  3399     00A6  0020               	movlb	0	; select bank0
  3400     00A7  00A5               	movwf	___fldiv@a
  3401     00A8  0023               	movlb	3	; select bank3
  3402     00A9  082B               	movf	(__ReadSensor@Vcc+3)^(0+384),w
  3403     00AA  0020               	movlb	0	; select bank0
  3404     00AB  00AC               	movwf	___fldiv@b+3
  3405     00AC  0023               	movlb	3	; select bank3
  3406     00AD  082A               	movf	(__ReadSensor@Vcc+2)^(0+384),w
  3407     00AE  0020               	movlb	0	; select bank0
  3408     00AF  00AB               	movwf	___fldiv@b+2
  3409     00B0  0023               	movlb	3	; select bank3
  3410     00B1  0829               	movf	(__ReadSensor@Vcc+1)^(0+384),w
  3411     00B2  0020               	movlb	0	; select bank0
  3412     00B3  00AA               	movwf	___fldiv@b+1
  3413     00B4  0023               	movlb	3	; select bank3
  3414     00B5  0828               	movf	__ReadSensor@Vcc^(0+384),w
  3415     00B6  0020               	movlb	0	; select bank0
  3416     00B7  00A9               	movwf	___fldiv@b
  3417     00B8  3186  2685  3180   	fcall	___fldiv
  3418     00BB  0020               	movlb	0	; select bank0
  3419     00BC  0828               	movf	?___fldiv+3,w
  3420     00BD  00C6               	movwf	___fladd@a+3
  3421     00BE  0827               	movf	?___fldiv+2,w
  3422     00BF  00C5               	movwf	___fladd@a+2
  3423     00C0  0826               	movf	?___fldiv+1,w
  3424     00C1  00C4               	movwf	___fladd@a+1
  3425     00C2  0825               	movf	?___fldiv,w
  3426     00C3  00C3               	movwf	___fladd@a
  3427     00C4  3184  24D3  3180   	fcall	___fladd
  3428     00C7  0020               	movlb	0	; select bank0
  3429     00C8  0842               	movf	?___fladd+3,w
  3430     00C9  00DA               	movwf	___flmul@a+3
  3431     00CA  0841               	movf	?___fladd+2,w
  3432     00CB  00D9               	movwf	___flmul@a+2
  3433     00CC  0840               	movf	?___fladd+1,w
  3434     00CD  00D8               	movwf	___flmul@a+1
  3435     00CE  083F               	movf	?___fladd,w
  3436     00CF  00D7               	movwf	___flmul@a
  3437     00D0  3182  22C3  3180   	fcall	___flmul
  3438     00D3  0020               	movlb	0	; select bank0
  3439     00D4  0856               	movf	?___flmul+3,w
  3440     00D5  0023               	movlb	3	; select bank3
  3441     00D6  00AF               	movwf	(__ReadSensor@Rntc+3)^(0+384)
  3442     00D7  0020               	movlb	0	; select bank0
  3443     00D8  0855               	movf	?___flmul+2,w
  3444     00D9  0023               	movlb	3	; select bank3
  3445     00DA  00AE               	movwf	(__ReadSensor@Rntc+2)^(0+384)
  3446     00DB  0020               	movlb	0	; select bank0
  3447     00DC  0854               	movf	?___flmul+1,w
  3448     00DD  0023               	movlb	3	; select bank3
  3449     00DE  00AD               	movwf	(__ReadSensor@Rntc+1)^(0+384)
  3450     00DF  0020               	movlb	0	; select bank0
  3451     00E0  0853               	movf	?___flmul,w
  3452     00E1  0023               	movlb	3	; select bank3
  3453     00E2  00AC               	movwf	__ReadSensor@Rntc^(0+384)
  3454                           
  3455                           ;main.c: 290:     float logR = approximateLog(Rntc / 5000.0f);
  3456     00E3  3045               	movlw	69
  3457     00E4  0020               	movlb	0	; select bank0
  3458     00E5  00A8               	movwf	___fldiv@a+3
  3459     00E6  309C               	movlw	156
  3460     00E7  00A7               	movwf	___fldiv@a+2
  3461     00E8  3040               	movlw	64
  3462     00E9  00A6               	movwf	___fldiv@a+1
  3463     00EA  3000               	movlw	0
  3464     00EB  00A5               	movwf	___fldiv@a
  3465     00EC  0023               	movlb	3	; select bank3
  3466     00ED  082F               	movf	(__ReadSensor@Rntc+3)^(0+384),w
  3467     00EE  0020               	movlb	0	; select bank0
  3468     00EF  00AC               	movwf	___fldiv@b+3
  3469     00F0  0023               	movlb	3	; select bank3
  3470     00F1  082E               	movf	(__ReadSensor@Rntc+2)^(0+384),w
  3471     00F2  0020               	movlb	0	; select bank0
  3472     00F3  00AB               	movwf	___fldiv@b+2
  3473     00F4  0023               	movlb	3	; select bank3
  3474     00F5  082D               	movf	(__ReadSensor@Rntc+1)^(0+384),w
  3475     00F6  0020               	movlb	0	; select bank0
  3476     00F7  00AA               	movwf	___fldiv@b+1
  3477     00F8  0023               	movlb	3	; select bank3
  3478     00F9  082C               	movf	__ReadSensor@Rntc^(0+384),w
  3479     00FA  0020               	movlb	0	; select bank0
  3480     00FB  00A9               	movwf	___fldiv@b
  3481     00FC  3186  2685  3180   	fcall	___fldiv
  3482     00FF  0020               	movlb	0	; select bank0
  3483     0100  0828               	movf	?___fldiv+3,w
  3484     0101  0023               	movlb	3	; select bank3
  3485     0102  00C3               	movwf	(__ReadSensor$1707+3)^(0+384)
  3486     0103  0020               	movlb	0	; select bank0
  3487     0104  0827               	movf	?___fldiv+2,w
  3488     0105  0023               	movlb	3	; select bank3
  3489     0106  00C2               	movwf	(__ReadSensor$1707+2)^(0+384)
  3490     0107  0020               	movlb	0	; select bank0
  3491     0108  0826               	movf	?___fldiv+1,w
  3492     0109  0023               	movlb	3	; select bank3
  3493     010A  00C1               	movwf	(__ReadSensor$1707+1)^(0+384)
  3494     010B  0020               	movlb	0	; select bank0
  3495     010C  0825               	movf	?___fldiv,w
  3496     010D  0023               	movlb	3	; select bank3
  3497     010E  00C0               	movwf	__ReadSensor$1707^(0+384)
  3498                           
  3499                           ;main.c: 290:     float logR = approximateLog(Rntc / 5000.0f);
  3500     010F  0843               	movf	(__ReadSensor$1707+3)^(0+384),w
  3501     0110  0021               	movlb	1	; select bank1
  3502     0111  00AB               	movwf	(approximateLog@x+3)^(0+128)
  3503     0112  0023               	movlb	3	; select bank3
  3504     0113  0842               	movf	(__ReadSensor$1707+2)^(0+384),w
  3505     0114  0021               	movlb	1	; select bank1
  3506     0115  00AA               	movwf	(approximateLog@x+2)^(0+128)
  3507     0116  0023               	movlb	3	; select bank3
  3508     0117  0841               	movf	(__ReadSensor$1707+1)^(0+384),w
  3509     0118  0021               	movlb	1	; select bank1
  3510     0119  00A9               	movwf	(approximateLog@x+1)^(0+128)
  3511     011A  0023               	movlb	3	; select bank3
  3512     011B  0840               	movf	__ReadSensor$1707^(0+384),w
  3513     011C  0021               	movlb	1	; select bank1
  3514     011D  00A8               	movwf	approximateLog@x^(0+128)
  3515     011E  318E  26E2  3180   	fcall	_approximateLog
  3516     0121  0021               	movlb	1	; select bank1
  3517     0122  082B               	movf	(?_approximateLog+3)^(0+128),w
  3518     0123  0023               	movlb	3	; select bank3
  3519     0124  00D5               	movwf	(__ReadSensor@logR+3)^(0+384)
  3520     0125  0021               	movlb	1	; select bank1
  3521     0126  082A               	movf	(?_approximateLog+2)^(0+128),w
  3522     0127  0023               	movlb	3	; select bank3
  3523     0128  00D4               	movwf	(__ReadSensor@logR+2)^(0+384)
  3524     0129  0021               	movlb	1	; select bank1
  3525     012A  0829               	movf	(?_approximateLog+1)^(0+128),w
  3526     012B  0023               	movlb	3	; select bank3
  3527     012C  00D3               	movwf	(__ReadSensor@logR+1)^(0+384)
  3528     012D  0021               	movlb	1	; select bank1
  3529     012E  0828               	movf	?_approximateLog^(0+128),w
  3530     012F  0023               	movlb	3	; select bank3
  3531     0130  00D2               	movwf	__ReadSensor@logR^(0+384)
  3532     0131  3034               	movlw	52
  3533     0132  0020               	movlb	0	; select bank0
  3534     0133  00D6               	movwf	___flmul@b+3
  3535     0134  3058               	movlw	88
  3536     0135  00D5               	movwf	___flmul@b+2
  3537     0136  30CF               	movlw	207
  3538     0137  00D4               	movwf	___flmul@b+1
  3539     0138  306C               	movlw	108
  3540     0139  00D3               	movwf	___flmul@b
  3541     013A  0023               	movlb	3	; select bank3
  3542     013B  0855               	movf	(__ReadSensor@logR+3)^(0+384),w
  3543     013C  0020               	movlb	0	; select bank0
  3544     013D  00DA               	movwf	___flmul@a+3
  3545     013E  0023               	movlb	3	; select bank3
  3546     013F  0854               	movf	(__ReadSensor@logR+2)^(0+384),w
  3547     0140  0020               	movlb	0	; select bank0
  3548     0141  00D9               	movwf	___flmul@a+2
  3549     0142  0023               	movlb	3	; select bank3
  3550     0143  0853               	movf	(__ReadSensor@logR+1)^(0+384),w
  3551     0144  0020               	movlb	0	; select bank0
  3552     0145  00D8               	movwf	___flmul@a+1
  3553     0146  0023               	movlb	3	; select bank3
  3554     0147  0852               	movf	__ReadSensor@logR^(0+384),w
  3555     0148  0020               	movlb	0	; select bank0
  3556     0149  00D7               	movwf	___flmul@a
  3557     014A  3182  22C3  3180   	fcall	___flmul
  3558     014D  0020               	movlb	0	; select bank0
  3559     014E  0856               	movf	?___flmul+3,w
  3560     014F  0023               	movlb	3	; select bank3
  3561     0150  00C7               	movwf	(__ReadSensor$1708+3)^(0+384)
  3562     0151  0020               	movlb	0	; select bank0
  3563     0152  0855               	movf	?___flmul+2,w
  3564     0153  0023               	movlb	3	; select bank3
  3565     0154  00C6               	movwf	(__ReadSensor$1708+2)^(0+384)
  3566     0155  0020               	movlb	0	; select bank0
  3567     0156  0854               	movf	?___flmul+1,w
  3568     0157  0023               	movlb	3	; select bank3
  3569     0158  00C5               	movwf	(__ReadSensor$1708+1)^(0+384)
  3570     0159  0020               	movlb	0	; select bank0
  3571     015A  0853               	movf	?___flmul,w
  3572     015B  0023               	movlb	3	; select bank3
  3573     015C  00C4               	movwf	__ReadSensor$1708^(0+384)
  3574     015D  0855               	movf	(__ReadSensor@logR+3)^(0+384),w
  3575     015E  0020               	movlb	0	; select bank0
  3576     015F  00D6               	movwf	___flmul@b+3
  3577     0160  0023               	movlb	3	; select bank3
  3578     0161  0854               	movf	(__ReadSensor@logR+2)^(0+384),w
  3579     0162  0020               	movlb	0	; select bank0
  3580     0163  00D5               	movwf	___flmul@b+2
  3581     0164  0023               	movlb	3	; select bank3
  3582     0165  0853               	movf	(__ReadSensor@logR+1)^(0+384),w
  3583     0166  0020               	movlb	0	; select bank0
  3584     0167  00D4               	movwf	___flmul@b+1
  3585     0168  0023               	movlb	3	; select bank3
  3586     0169  0852               	movf	__ReadSensor@logR^(0+384),w
  3587     016A  0020               	movlb	0	; select bank0
  3588     016B  00D3               	movwf	___flmul@b
  3589     016C  0023               	movlb	3	; select bank3
  3590     016D  0847               	movf	(__ReadSensor$1708+3)^(0+384),w
  3591     016E  0020               	movlb	0	; select bank0
  3592     016F  00DA               	movwf	___flmul@a+3
  3593     0170  0023               	movlb	3	; select bank3
  3594     0171  0846               	movf	(__ReadSensor$1708+2)^(0+384),w
  3595     0172  0020               	movlb	0	; select bank0
  3596     0173  00D9               	movwf	___flmul@a+2
  3597     0174  0023               	movlb	3	; select bank3
  3598     0175  0845               	movf	(__ReadSensor$1708+1)^(0+384),w
  3599     0176  0020               	movlb	0	; select bank0
  3600     0177  00D8               	movwf	___flmul@a+1
  3601     0178  0023               	movlb	3	; select bank3
  3602     0179  0844               	movf	__ReadSensor$1708^(0+384),w
  3603     017A  0020               	movlb	0	; select bank0
  3604     017B  00D7               	movwf	___flmul@a
  3605     017C  3182  22C3  3180   	fcall	___flmul
  3606     017F  0020               	movlb	0	; select bank0
  3607     0180  0856               	movf	?___flmul+3,w
  3608     0181  0023               	movlb	3	; select bank3
  3609     0182  00CB               	movwf	(__ReadSensor$1709+3)^(0+384)
  3610     0183  0020               	movlb	0	; select bank0
  3611     0184  0855               	movf	?___flmul+2,w
  3612     0185  0023               	movlb	3	; select bank3
  3613     0186  00CA               	movwf	(__ReadSensor$1709+2)^(0+384)
  3614     0187  0020               	movlb	0	; select bank0
  3615     0188  0854               	movf	?___flmul+1,w
  3616     0189  0023               	movlb	3	; select bank3
  3617     018A  00C9               	movwf	(__ReadSensor$1709+1)^(0+384)
  3618     018B  0020               	movlb	0	; select bank0
  3619     018C  0853               	movf	?___flmul,w
  3620     018D  0023               	movlb	3	; select bank3
  3621     018E  00C8               	movwf	__ReadSensor$1709^(0+384)
  3622     018F  303A               	movlw	58
  3623     0190  0020               	movlb	0	; select bank0
  3624     0191  00C2               	movwf	___fladd@b+3
  3625     0192  3084               	movlw	132
  3626     0193  00C1               	movwf	___fladd@b+2
  3627     0194  3048               	movlw	72
  3628     0195  00C0               	movwf	___fladd@b+1
  3629     0196  30CB               	movlw	203
  3630     0197  00BF               	movwf	___fladd@b
  3631     0198  3039               	movlw	57
  3632     0199  00D6               	movwf	___flmul@b+3
  3633     019A  3079               	movlw	121
  3634     019B  00D5               	movwf	___flmul@b+2
  3635     019C  3064               	movlw	100
  3636     019D  00D4               	movwf	___flmul@b+1
  3637     019E  30D6               	movlw	214
  3638     019F  00D3               	movwf	___flmul@b
  3639     01A0  0023               	movlb	3	; select bank3
  3640     01A1  0855               	movf	(__ReadSensor@logR+3)^(0+384),w
  3641     01A2  0020               	movlb	0	; select bank0
  3642     01A3  00DA               	movwf	___flmul@a+3
  3643     01A4  0023               	movlb	3	; select bank3
  3644     01A5  0854               	movf	(__ReadSensor@logR+2)^(0+384),w
  3645     01A6  0020               	movlb	0	; select bank0
  3646     01A7  00D9               	movwf	___flmul@a+2
  3647     01A8  0023               	movlb	3	; select bank3
  3648     01A9  0853               	movf	(__ReadSensor@logR+1)^(0+384),w
  3649     01AA  0020               	movlb	0	; select bank0
  3650     01AB  00D8               	movwf	___flmul@a+1
  3651     01AC  0023               	movlb	3	; select bank3
  3652     01AD  0852               	movf	__ReadSensor@logR^(0+384),w
  3653     01AE  0020               	movlb	0	; select bank0
  3654     01AF  00D7               	movwf	___flmul@a
  3655     01B0  3182  22C3  3180   	fcall	___flmul
  3656     01B3  0020               	movlb	0	; select bank0
  3657     01B4  0856               	movf	?___flmul+3,w
  3658     01B5  00C6               	movwf	___fladd@a+3
  3659     01B6  0855               	movf	?___flmul+2,w
  3660     01B7  00C5               	movwf	___fladd@a+2
  3661     01B8  0854               	movf	?___flmul+1,w
  3662     01B9  00C4               	movwf	___fladd@a+1
  3663     01BA  0853               	movf	?___flmul,w
  3664     01BB  00C3               	movwf	___fladd@a
  3665     01BC  3184  24D3  3180   	fcall	___fladd
  3666     01BF  0020               	movlb	0	; select bank0
  3667     01C0  0842               	movf	?___fladd+3,w
  3668     01C1  0023               	movlb	3	; select bank3
  3669     01C2  00CF               	movwf	(__ReadSensor$1710+3)^(0+384)
  3670     01C3  0020               	movlb	0	; select bank0
  3671     01C4  0841               	movf	?___fladd+2,w
  3672     01C5  0023               	movlb	3	; select bank3
  3673     01C6  00CE               	movwf	(__ReadSensor$1710+2)^(0+384)
  3674     01C7  0020               	movlb	0	; select bank0
  3675     01C8  0840               	movf	?___fladd+1,w
  3676     01C9  0023               	movlb	3	; select bank3
  3677     01CA  00CD               	movwf	(__ReadSensor$1710+1)^(0+384)
  3678     01CB  0020               	movlb	0	; select bank0
  3679     01CC  083F               	movf	?___fladd,w
  3680     01CD  0023               	movlb	3	; select bank3
  3681     01CE  00CC               	movwf	__ReadSensor$1710^(0+384)
  3682     01CF  0855               	movf	(__ReadSensor@logR+3)^(0+384),w
  3683     01D0  0020               	movlb	0	; select bank0
  3684     01D1  00D6               	movwf	___flmul@b+3
  3685     01D2  0023               	movlb	3	; select bank3
  3686     01D3  0854               	movf	(__ReadSensor@logR+2)^(0+384),w
  3687     01D4  0020               	movlb	0	; select bank0
  3688     01D5  00D5               	movwf	___flmul@b+2
  3689     01D6  0023               	movlb	3	; select bank3
  3690     01D7  0853               	movf	(__ReadSensor@logR+1)^(0+384),w
  3691     01D8  0020               	movlb	0	; select bank0
  3692     01D9  00D4               	movwf	___flmul@b+1
  3693     01DA  0023               	movlb	3	; select bank3
  3694     01DB  0852               	movf	__ReadSensor@logR^(0+384),w
  3695     01DC  0020               	movlb	0	; select bank0
  3696     01DD  00D3               	movwf	___flmul@b
  3697     01DE  0023               	movlb	3	; select bank3
  3698     01DF  084B               	movf	(__ReadSensor$1709+3)^(0+384),w
  3699     01E0  0020               	movlb	0	; select bank0
  3700     01E1  00DA               	movwf	___flmul@a+3
  3701     01E2  0023               	movlb	3	; select bank3
  3702     01E3  084A               	movf	(__ReadSensor$1709+2)^(0+384),w
  3703     01E4  0020               	movlb	0	; select bank0
  3704     01E5  00D9               	movwf	___flmul@a+2
  3705     01E6  0023               	movlb	3	; select bank3
  3706     01E7  0849               	movf	(__ReadSensor$1709+1)^(0+384),w
  3707     01E8  0020               	movlb	0	; select bank0
  3708     01E9  00D8               	movwf	___flmul@a+1
  3709     01EA  0023               	movlb	3	; select bank3
  3710     01EB  0848               	movf	__ReadSensor$1709^(0+384),w
  3711     01EC  0020               	movlb	0	; select bank0
  3712     01ED  00D7               	movwf	___flmul@a
  3713     01EE  3182  22C3  3180   	fcall	___flmul
  3714     01F1  0020               	movlb	0	; select bank0
  3715     01F2  0856               	movf	?___flmul+3,w
  3716     01F3  00C2               	movwf	___fladd@b+3
  3717     01F4  0855               	movf	?___flmul+2,w
  3718     01F5  00C1               	movwf	___fladd@b+2
  3719     01F6  0854               	movf	?___flmul+1,w
  3720     01F7  00C0               	movwf	___fladd@b+1
  3721     01F8  0853               	movf	?___flmul,w
  3722     01F9  00BF               	movwf	___fladd@b
  3723     01FA  0023               	movlb	3	; select bank3
  3724     01FB  084F               	movf	(__ReadSensor$1710+3)^(0+384),w
  3725     01FC  0020               	movlb	0	; select bank0
  3726     01FD  00C6               	movwf	___fladd@a+3
  3727     01FE  0023               	movlb	3	; select bank3
  3728     01FF  084E               	movf	(__ReadSensor$1710+2)^(0+384),w
  3729     0200  0020               	movlb	0	; select bank0
  3730     0201  00C5               	movwf	___fladd@a+2
  3731     0202  0023               	movlb	3	; select bank3
  3732     0203  084D               	movf	(__ReadSensor$1710+1)^(0+384),w
  3733     0204  0020               	movlb	0	; select bank0
  3734     0205  00C4               	movwf	___fladd@a+1
  3735     0206  0023               	movlb	3	; select bank3
  3736     0207  084C               	movf	__ReadSensor$1710^(0+384),w
  3737     0208  0020               	movlb	0	; select bank0
  3738     0209  00C3               	movwf	___fladd@a
  3739     020A  3184  24D3  3180   	fcall	___fladd
  3740     020D  0020               	movlb	0	; select bank0
  3741     020E  0842               	movf	?___fladd+3,w
  3742     020F  0023               	movlb	3	; select bank3
  3743     0210  00B3               	movwf	(__ReadSensor@invT+3)^(0+384)
  3744     0211  0020               	movlb	0	; select bank0
  3745     0212  0841               	movf	?___fladd+2,w
  3746     0213  0023               	movlb	3	; select bank3
  3747     0214  00B2               	movwf	(__ReadSensor@invT+2)^(0+384)
  3748     0215  0020               	movlb	0	; select bank0
  3749     0216  0840               	movf	?___fladd+1,w
  3750     0217  0023               	movlb	3	; select bank3
  3751     0218  00B1               	movwf	(__ReadSensor@invT+1)^(0+384)
  3752     0219  0020               	movlb	0	; select bank0
  3753     021A  083F               	movf	?___fladd,w
  3754     021B  0023               	movlb	3	; select bank3
  3755     021C  00B0               	movwf	__ReadSensor@invT^(0+384)
  3756                           
  3757                           ;main.c: 294:     float T = 1.0f / invT;
  3758     021D  0833               	movf	(__ReadSensor@invT+3)^(0+384),w
  3759     021E  0020               	movlb	0	; select bank0
  3760     021F  00A8               	movwf	___fldiv@a+3
  3761     0220  0023               	movlb	3	; select bank3
  3762     0221  0832               	movf	(__ReadSensor@invT+2)^(0+384),w
  3763     0222  0020               	movlb	0	; select bank0
  3764     0223  00A7               	movwf	___fldiv@a+2
  3765     0224  0023               	movlb	3	; select bank3
  3766     0225  0831               	movf	(__ReadSensor@invT+1)^(0+384),w
  3767     0226  0020               	movlb	0	; select bank0
  3768     0227  00A6               	movwf	___fldiv@a+1
  3769     0228  0023               	movlb	3	; select bank3
  3770     0229  0830               	movf	__ReadSensor@invT^(0+384),w
  3771     022A  0020               	movlb	0	; select bank0
  3772     022B  00A5               	movwf	___fldiv@a
  3773     022C  303F               	movlw	63
  3774     022D  00AC               	movwf	___fldiv@b+3
  3775     022E  3080               	movlw	128
  3776     022F  00AB               	movwf	___fldiv@b+2
  3777     0230  3000               	movlw	0
  3778     0231  00AA               	movwf	___fldiv@b+1
  3779     0232  3000               	movlw	0
  3780     0233  00A9               	movwf	___fldiv@b
  3781     0234  3186  2685  3180   	fcall	___fldiv
  3782     0237  0020               	movlb	0	; select bank0
  3783     0238  0828               	movf	?___fldiv+3,w
  3784     0239  0023               	movlb	3	; select bank3
  3785     023A  00B7               	movwf	(__ReadSensor@T+3)^(0+384)
  3786     023B  0020               	movlb	0	; select bank0
  3787     023C  0827               	movf	?___fldiv+2,w
  3788     023D  0023               	movlb	3	; select bank3
  3789     023E  00B6               	movwf	(__ReadSensor@T+2)^(0+384)
  3790     023F  0020               	movlb	0	; select bank0
  3791     0240  0826               	movf	?___fldiv+1,w
  3792     0241  0023               	movlb	3	; select bank3
  3793     0242  00B5               	movwf	(__ReadSensor@T+1)^(0+384)
  3794     0243  0020               	movlb	0	; select bank0
  3795     0244  0825               	movf	?___fldiv,w
  3796     0245  0023               	movlb	3	; select bank3
  3797     0246  00B4               	movwf	__ReadSensor@T^(0+384)
  3798                           
  3799                           ;main.c: 295:     float Tc = T - 273.15f;
  3800     0247  30C3               	movlw	195
  3801     0248  0020               	movlb	0	; select bank0
  3802     0249  00C2               	movwf	___fladd@b+3
  3803     024A  3088               	movlw	136
  3804     024B  00C1               	movwf	___fladd@b+2
  3805     024C  3093               	movlw	147
  3806     024D  00C0               	movwf	___fladd@b+1
  3807     024E  3033               	movlw	51
  3808     024F  00BF               	movwf	___fladd@b
  3809     0250  0023               	movlb	3	; select bank3
  3810     0251  0837               	movf	(__ReadSensor@T+3)^(0+384),w
  3811     0252  0020               	movlb	0	; select bank0
  3812     0253  00C6               	movwf	___fladd@a+3
  3813     0254  0023               	movlb	3	; select bank3
  3814     0255  0836               	movf	(__ReadSensor@T+2)^(0+384),w
  3815     0256  0020               	movlb	0	; select bank0
  3816     0257  00C5               	movwf	___fladd@a+2
  3817     0258  0023               	movlb	3	; select bank3
  3818     0259  0835               	movf	(__ReadSensor@T+1)^(0+384),w
  3819     025A  0020               	movlb	0	; select bank0
  3820     025B  00C4               	movwf	___fladd@a+1
  3821     025C  0023               	movlb	3	; select bank3
  3822     025D  0834               	movf	__ReadSensor@T^(0+384),w
  3823     025E  0020               	movlb	0	; select bank0
  3824     025F  00C3               	movwf	___fladd@a
  3825     0260  3184  24D3  3180   	fcall	___fladd
  3826     0263  0020               	movlb	0	; select bank0
  3827     0264  0842               	movf	?___fladd+3,w
  3828     0265  0023               	movlb	3	; select bank3
  3829     0266  00BB               	movwf	(__ReadSensor@Tc+3)^(0+384)
  3830     0267  0020               	movlb	0	; select bank0
  3831     0268  0841               	movf	?___fladd+2,w
  3832     0269  0023               	movlb	3	; select bank3
  3833     026A  00BA               	movwf	(__ReadSensor@Tc+2)^(0+384)
  3834     026B  0020               	movlb	0	; select bank0
  3835     026C  0840               	movf	?___fladd+1,w
  3836     026D  0023               	movlb	3	; select bank3
  3837     026E  00B9               	movwf	(__ReadSensor@Tc+1)^(0+384)
  3838     026F  0020               	movlb	0	; select bank0
  3839     0270  083F               	movf	?___fladd,w
  3840     0271  0023               	movlb	3	; select bank3
  3841     0272  00B8               	movwf	__ReadSensor@Tc^(0+384)
  3842                           
  3843                           ;main.c: 296:     float Tf = (1.8f * Tc) + 32.0f;
  3844     0273  3042               	movlw	66
  3845     0274  0020               	movlb	0	; select bank0
  3846     0275  00C2               	movwf	___fladd@b+3
  3847     0276  3000               	movlw	0
  3848     0277  00C1               	movwf	___fladd@b+2
  3849     0278  3000               	movlw	0
  3850     0279  00C0               	movwf	___fladd@b+1
  3851     027A  3000               	movlw	0
  3852     027B  00BF               	movwf	___fladd@b
  3853     027C  303F               	movlw	63
  3854     027D  00D6               	movwf	___flmul@b+3
  3855     027E  30E6               	movlw	230
  3856     027F  00D5               	movwf	___flmul@b+2
  3857     0280  3066               	movlw	102
  3858     0281  00D4               	movwf	___flmul@b+1
  3859     0282  3066               	movlw	102
  3860     0283  00D3               	movwf	___flmul@b
  3861     0284  0023               	movlb	3	; select bank3
  3862     0285  083B               	movf	(__ReadSensor@Tc+3)^(0+384),w
  3863     0286  0020               	movlb	0	; select bank0
  3864     0287  00DA               	movwf	___flmul@a+3
  3865     0288  0023               	movlb	3	; select bank3
  3866     0289  083A               	movf	(__ReadSensor@Tc+2)^(0+384),w
  3867     028A  0020               	movlb	0	; select bank0
  3868     028B  00D9               	movwf	___flmul@a+2
  3869     028C  0023               	movlb	3	; select bank3
  3870     028D  0839               	movf	(__ReadSensor@Tc+1)^(0+384),w
  3871     028E  0020               	movlb	0	; select bank0
  3872     028F  00D8               	movwf	___flmul@a+1
  3873     0290  0023               	movlb	3	; select bank3
  3874     0291  0838               	movf	__ReadSensor@Tc^(0+384),w
  3875     0292  0020               	movlb	0	; select bank0
  3876     0293  00D7               	movwf	___flmul@a
  3877     0294  3182  22C3  3180   	fcall	___flmul
  3878     0297  0020               	movlb	0	; select bank0
  3879     0298  0856               	movf	?___flmul+3,w
  3880     0299  00C6               	movwf	___fladd@a+3
  3881     029A  0855               	movf	?___flmul+2,w
  3882     029B  00C5               	movwf	___fladd@a+2
  3883     029C  0854               	movf	?___flmul+1,w
  3884     029D  00C4               	movwf	___fladd@a+1
  3885     029E  0853               	movf	?___flmul,w
  3886     029F  00C3               	movwf	___fladd@a
  3887     02A0  3184  24D3  3180   	fcall	___fladd
  3888     02A3  0020               	movlb	0	; select bank0
  3889     02A4  0842               	movf	?___fladd+3,w
  3890     02A5  0023               	movlb	3	; select bank3
  3891     02A6  00BF               	movwf	(__ReadSensor@Tf+3)^(0+384)
  3892     02A7  0020               	movlb	0	; select bank0
  3893     02A8  0841               	movf	?___fladd+2,w
  3894     02A9  0023               	movlb	3	; select bank3
  3895     02AA  00BE               	movwf	(__ReadSensor@Tf+2)^(0+384)
  3896     02AB  0020               	movlb	0	; select bank0
  3897     02AC  0840               	movf	?___fladd+1,w
  3898     02AD  0023               	movlb	3	; select bank3
  3899     02AE  00BD               	movwf	(__ReadSensor@Tf+1)^(0+384)
  3900     02AF  0020               	movlb	0	; select bank0
  3901     02B0  083F               	movf	?___fladd,w
  3902     02B1  0023               	movlb	3	; select bank3
  3903     02B2  00BC               	movwf	__ReadSensor@Tf^(0+384)
  3904                           
  3905                           ;main.c: 298:     TEMP = (int)Tf;
  3906     02B3  083F               	movf	(__ReadSensor@Tf+3)^(0+384),w
  3907     02B4  00F6               	movwf	___fltol@f1+3
  3908     02B5  083E               	movf	(__ReadSensor@Tf+2)^(0+384),w
  3909     02B6  00F5               	movwf	___fltol@f1+2
  3910     02B7  083D               	movf	(__ReadSensor@Tf+1)^(0+384),w
  3911     02B8  00F4               	movwf	___fltol@f1+1
  3912     02B9  083C               	movf	__ReadSensor@Tf^(0+384),w
  3913     02BA  00F3               	movwf	___fltol@f1
  3914     02BB  318C  24A3         	fcall	___fltol
  3915     02BD  0874               	movf	?___fltol+1,w
  3916     02BE  0021               	movlb	1	; select bank1
  3917     02BF  00BB               	movwf	(_TEMP+1)^(0+128)
  3918     02C0  0873               	movf	?___fltol,w
  3919     02C1  00BA               	movwf	_TEMP^(0+128)
  3920     02C2  0008               	return
  3921     02C3                     __end_of__ReadSensor:
  3922                           
  3923                           	psect	text7
  3924     0EE2                     __ptext7:	
  3925 ;; *************** function _approximateLog *****************
  3926 ;; Defined at:
  3927 ;;		line 378 in file "main.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;  x               4    8[BANK1 ] float 
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;  y               4   20[BANK1 ] float 
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  4    8[BANK1 ] float 
  3934 ;; Registers used:
  3935 ;;		wreg, status,2, status,0, pclath, cstack
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3941 ;;      Params:         0       0       4       0       0       0
  3942 ;;      Locals:         0       0      12       0       0       0
  3943 ;;      Temps:          0       0       0       0       0       0
  3944 ;;      Totals:         0       0      16       0       0       0
  3945 ;;Total ram usage:       16 bytes
  3946 ;; Hardware stack levels used: 1
  3947 ;; Hardware stack levels required when called: 6
  3948 ;; This function calls:
  3949 ;;		___fladd
  3950 ;;		___fldiv
  3951 ;;		___flmul
  3952 ;;		___flsub
  3953 ;; This function is called by:
  3954 ;;		__ReadSensor
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958     0EE2                     _approximateLog:	
  3959                           ;psect for function _approximateLog
  3960                           
  3961                           
  3962                           ;main.c: 379:     float y = x - 1.0f;
  3963                           
  3964                           ;incstack = 0
  3965                           ; Regs used in _approximateLog: [wreg+status,2+status,0+pclath+cstack]
  3966     0EE2  30BF               	movlw	191
  3967     0EE3  0020               	movlb	0	; select bank0
  3968     0EE4  00C2               	movwf	___fladd@b+3
  3969     0EE5  3080               	movlw	128
  3970     0EE6  00C1               	movwf	___fladd@b+2
  3971     0EE7  3000               	movlw	0
  3972     0EE8  00C0               	movwf	___fladd@b+1
  3973     0EE9  3000               	movlw	0
  3974     0EEA  00BF               	movwf	___fladd@b
  3975     0EEB  0021               	movlb	1	; select bank1
  3976     0EEC  082B               	movf	(approximateLog@x+3)^(0+128),w
  3977     0EED  0020               	movlb	0	; select bank0
  3978     0EEE  00C6               	movwf	___fladd@a+3
  3979     0EEF  0021               	movlb	1	; select bank1
  3980     0EF0  082A               	movf	(approximateLog@x+2)^(0+128),w
  3981     0EF1  0020               	movlb	0	; select bank0
  3982     0EF2  00C5               	movwf	___fladd@a+2
  3983     0EF3  0021               	movlb	1	; select bank1
  3984     0EF4  0829               	movf	(approximateLog@x+1)^(0+128),w
  3985     0EF5  0020               	movlb	0	; select bank0
  3986     0EF6  00C4               	movwf	___fladd@a+1
  3987     0EF7  0021               	movlb	1	; select bank1
  3988     0EF8  0828               	movf	approximateLog@x^(0+128),w
  3989     0EF9  0020               	movlb	0	; select bank0
  3990     0EFA  00C3               	movwf	___fladd@a
  3991     0EFB  3184  24D3  318E   	fcall	___fladd
  3992     0EFE  0020               	movlb	0	; select bank0
  3993     0EFF  0842               	movf	?___fladd+3,w
  3994     0F00  0021               	movlb	1	; select bank1
  3995     0F01  00B7               	movwf	(approximateLog@y+3)^(0+128)
  3996     0F02  0020               	movlb	0	; select bank0
  3997     0F03  0841               	movf	?___fladd+2,w
  3998     0F04  0021               	movlb	1	; select bank1
  3999     0F05  00B6               	movwf	(approximateLog@y+2)^(0+128)
  4000     0F06  0020               	movlb	0	; select bank0
  4001     0F07  0840               	movf	?___fladd+1,w
  4002     0F08  0021               	movlb	1	; select bank1
  4003     0F09  00B5               	movwf	(approximateLog@y+1)^(0+128)
  4004     0F0A  0020               	movlb	0	; select bank0
  4005     0F0B  083F               	movf	?___fladd,w
  4006     0F0C  0021               	movlb	1	; select bank1
  4007     0F0D  00B4               	movwf	approximateLog@y^(0+128)
  4008                           
  4009                           ;main.c: 380:     return y - (y * y) / 2.0f + (y * y * y) / 3.0f;
  4010     0F0E  0837               	movf	(approximateLog@y+3)^(0+128),w
  4011     0F0F  0020               	movlb	0	; select bank0
  4012     0F10  00D6               	movwf	___flmul@b+3
  4013     0F11  0021               	movlb	1	; select bank1
  4014     0F12  0836               	movf	(approximateLog@y+2)^(0+128),w
  4015     0F13  0020               	movlb	0	; select bank0
  4016     0F14  00D5               	movwf	___flmul@b+2
  4017     0F15  0021               	movlb	1	; select bank1
  4018     0F16  0835               	movf	(approximateLog@y+1)^(0+128),w
  4019     0F17  0020               	movlb	0	; select bank0
  4020     0F18  00D4               	movwf	___flmul@b+1
  4021     0F19  0021               	movlb	1	; select bank1
  4022     0F1A  0834               	movf	approximateLog@y^(0+128),w
  4023     0F1B  0020               	movlb	0	; select bank0
  4024     0F1C  00D3               	movwf	___flmul@b
  4025     0F1D  0021               	movlb	1	; select bank1
  4026     0F1E  0837               	movf	(approximateLog@y+3)^(0+128),w
  4027     0F1F  0020               	movlb	0	; select bank0
  4028     0F20  00DA               	movwf	___flmul@a+3
  4029     0F21  0021               	movlb	1	; select bank1
  4030     0F22  0836               	movf	(approximateLog@y+2)^(0+128),w
  4031     0F23  0020               	movlb	0	; select bank0
  4032     0F24  00D9               	movwf	___flmul@a+2
  4033     0F25  0021               	movlb	1	; select bank1
  4034     0F26  0835               	movf	(approximateLog@y+1)^(0+128),w
  4035     0F27  0020               	movlb	0	; select bank0
  4036     0F28  00D8               	movwf	___flmul@a+1
  4037     0F29  0021               	movlb	1	; select bank1
  4038     0F2A  0834               	movf	approximateLog@y^(0+128),w
  4039     0F2B  0020               	movlb	0	; select bank0
  4040     0F2C  00D7               	movwf	___flmul@a
  4041     0F2D  3182  22C3  318E   	fcall	___flmul
  4042     0F30  0020               	movlb	0	; select bank0
  4043     0F31  0856               	movf	?___flmul+3,w
  4044     0F32  0021               	movlb	1	; select bank1
  4045     0F33  00AF               	movwf	(_approximateLog$1711+3)^(0+128)
  4046     0F34  0020               	movlb	0	; select bank0
  4047     0F35  0855               	movf	?___flmul+2,w
  4048     0F36  0021               	movlb	1	; select bank1
  4049     0F37  00AE               	movwf	(_approximateLog$1711+2)^(0+128)
  4050     0F38  0020               	movlb	0	; select bank0
  4051     0F39  0854               	movf	?___flmul+1,w
  4052     0F3A  0021               	movlb	1	; select bank1
  4053     0F3B  00AD               	movwf	(_approximateLog$1711+1)^(0+128)
  4054     0F3C  0020               	movlb	0	; select bank0
  4055     0F3D  0853               	movf	?___flmul,w
  4056     0F3E  0021               	movlb	1	; select bank1
  4057     0F3F  00AC               	movwf	_approximateLog$1711^(0+128)
  4058                           
  4059                           ;main.c: 380:     return y - (y * y) / 2.0f + (y * y * y) / 3.0f;
  4060     0F40  3040               	movlw	64
  4061     0F41  0020               	movlb	0	; select bank0
  4062     0F42  00A8               	movwf	___fldiv@a+3
  4063     0F43  3000               	movlw	0
  4064     0F44  00A7               	movwf	___fldiv@a+2
  4065     0F45  3000               	movlw	0
  4066     0F46  00A6               	movwf	___fldiv@a+1
  4067     0F47  3000               	movlw	0
  4068     0F48  00A5               	movwf	___fldiv@a
  4069     0F49  0021               	movlb	1	; select bank1
  4070     0F4A  0837               	movf	(approximateLog@y+3)^(0+128),w
  4071     0F4B  0020               	movlb	0	; select bank0
  4072     0F4C  00D6               	movwf	___flmul@b+3
  4073     0F4D  0021               	movlb	1	; select bank1
  4074     0F4E  0836               	movf	(approximateLog@y+2)^(0+128),w
  4075     0F4F  0020               	movlb	0	; select bank0
  4076     0F50  00D5               	movwf	___flmul@b+2
  4077     0F51  0021               	movlb	1	; select bank1
  4078     0F52  0835               	movf	(approximateLog@y+1)^(0+128),w
  4079     0F53  0020               	movlb	0	; select bank0
  4080     0F54  00D4               	movwf	___flmul@b+1
  4081     0F55  0021               	movlb	1	; select bank1
  4082     0F56  0834               	movf	approximateLog@y^(0+128),w
  4083     0F57  0020               	movlb	0	; select bank0
  4084     0F58  00D3               	movwf	___flmul@b
  4085     0F59  0021               	movlb	1	; select bank1
  4086     0F5A  0837               	movf	(approximateLog@y+3)^(0+128),w
  4087     0F5B  0020               	movlb	0	; select bank0
  4088     0F5C  00DA               	movwf	___flmul@a+3
  4089     0F5D  0021               	movlb	1	; select bank1
  4090     0F5E  0836               	movf	(approximateLog@y+2)^(0+128),w
  4091     0F5F  0020               	movlb	0	; select bank0
  4092     0F60  00D9               	movwf	___flmul@a+2
  4093     0F61  0021               	movlb	1	; select bank1
  4094     0F62  0835               	movf	(approximateLog@y+1)^(0+128),w
  4095     0F63  0020               	movlb	0	; select bank0
  4096     0F64  00D8               	movwf	___flmul@a+1
  4097     0F65  0021               	movlb	1	; select bank1
  4098     0F66  0834               	movf	approximateLog@y^(0+128),w
  4099     0F67  0020               	movlb	0	; select bank0
  4100     0F68  00D7               	movwf	___flmul@a
  4101     0F69  3182  22C3  318E   	fcall	___flmul
  4102     0F6C  0020               	movlb	0	; select bank0
  4103     0F6D  0856               	movf	?___flmul+3,w
  4104     0F6E  00AC               	movwf	___fldiv@b+3
  4105     0F6F  0855               	movf	?___flmul+2,w
  4106     0F70  00AB               	movwf	___fldiv@b+2
  4107     0F71  0854               	movf	?___flmul+1,w
  4108     0F72  00AA               	movwf	___fldiv@b+1
  4109     0F73  0853               	movf	?___flmul,w
  4110     0F74  00A9               	movwf	___fldiv@b
  4111     0F75  3186  2685  318E   	fcall	___fldiv
  4112     0F78  0020               	movlb	0	; select bank0
  4113     0F79  0828               	movf	?___fldiv+3,w
  4114     0F7A  0021               	movlb	1	; select bank1
  4115     0F7B  00A3               	movwf	(___flsub@a+3)^(0+128)
  4116     0F7C  0020               	movlb	0	; select bank0
  4117     0F7D  0827               	movf	?___fldiv+2,w
  4118     0F7E  0021               	movlb	1	; select bank1
  4119     0F7F  00A2               	movwf	(___flsub@a+2)^(0+128)
  4120     0F80  0020               	movlb	0	; select bank0
  4121     0F81  0826               	movf	?___fldiv+1,w
  4122     0F82  0021               	movlb	1	; select bank1
  4123     0F83  00A1               	movwf	(___flsub@a+1)^(0+128)
  4124     0F84  0020               	movlb	0	; select bank0
  4125     0F85  0825               	movf	?___fldiv,w
  4126     0F86  0021               	movlb	1	; select bank1
  4127     0F87  00A0               	movwf	___flsub@a^(0+128)
  4128     0F88  0837               	movf	(approximateLog@y+3)^(0+128),w
  4129     0F89  00A7               	movwf	(___flsub@b+3)^(0+128)
  4130     0F8A  0836               	movf	(approximateLog@y+2)^(0+128),w
  4131     0F8B  00A6               	movwf	(___flsub@b+2)^(0+128)
  4132     0F8C  0835               	movf	(approximateLog@y+1)^(0+128),w
  4133     0F8D  00A5               	movwf	(___flsub@b+1)^(0+128)
  4134     0F8E  0834               	movf	approximateLog@y^(0+128),w
  4135     0F8F  00A4               	movwf	___flsub@b^(0+128)
  4136     0F90  318B  2367  318E   	fcall	___flsub
  4137     0F93  0021               	movlb	1	; select bank1
  4138     0F94  0823               	movf	(?___flsub+3)^(0+128),w
  4139     0F95  00B3               	movwf	(_approximateLog$1712+3)^(0+128)
  4140     0F96  0822               	movf	(?___flsub+2)^(0+128),w
  4141     0F97  00B2               	movwf	(_approximateLog$1712+2)^(0+128)
  4142     0F98  0821               	movf	(?___flsub+1)^(0+128),w
  4143     0F99  00B1               	movwf	(_approximateLog$1712+1)^(0+128)
  4144     0F9A  0820               	movf	?___flsub^(0+128),w
  4145     0F9B  00B0               	movwf	_approximateLog$1712^(0+128)
  4146                           
  4147                           ;main.c: 380:     return y - (y * y) / 2.0f + (y * y * y) / 3.0f;
  4148     0F9C  3040               	movlw	64
  4149     0F9D  0020               	movlb	0	; select bank0
  4150     0F9E  00A8               	movwf	___fldiv@a+3
  4151     0F9F  3040               	movlw	64
  4152     0FA0  00A7               	movwf	___fldiv@a+2
  4153     0FA1  3000               	movlw	0
  4154     0FA2  00A6               	movwf	___fldiv@a+1
  4155     0FA3  3000               	movlw	0
  4156     0FA4  00A5               	movwf	___fldiv@a
  4157     0FA5  0021               	movlb	1	; select bank1
  4158     0FA6  0837               	movf	(approximateLog@y+3)^(0+128),w
  4159     0FA7  0020               	movlb	0	; select bank0
  4160     0FA8  00D6               	movwf	___flmul@b+3
  4161     0FA9  0021               	movlb	1	; select bank1
  4162     0FAA  0836               	movf	(approximateLog@y+2)^(0+128),w
  4163     0FAB  0020               	movlb	0	; select bank0
  4164     0FAC  00D5               	movwf	___flmul@b+2
  4165     0FAD  0021               	movlb	1	; select bank1
  4166     0FAE  0835               	movf	(approximateLog@y+1)^(0+128),w
  4167     0FAF  0020               	movlb	0	; select bank0
  4168     0FB0  00D4               	movwf	___flmul@b+1
  4169     0FB1  0021               	movlb	1	; select bank1
  4170     0FB2  0834               	movf	approximateLog@y^(0+128),w
  4171     0FB3  0020               	movlb	0	; select bank0
  4172     0FB4  00D3               	movwf	___flmul@b
  4173     0FB5  0021               	movlb	1	; select bank1
  4174     0FB6  082F               	movf	(_approximateLog$1711+3)^(0+128),w
  4175     0FB7  0020               	movlb	0	; select bank0
  4176     0FB8  00DA               	movwf	___flmul@a+3
  4177     0FB9  0021               	movlb	1	; select bank1
  4178     0FBA  082E               	movf	(_approximateLog$1711+2)^(0+128),w
  4179     0FBB  0020               	movlb	0	; select bank0
  4180     0FBC  00D9               	movwf	___flmul@a+2
  4181     0FBD  0021               	movlb	1	; select bank1
  4182     0FBE  082D               	movf	(_approximateLog$1711+1)^(0+128),w
  4183     0FBF  0020               	movlb	0	; select bank0
  4184     0FC0  00D8               	movwf	___flmul@a+1
  4185     0FC1  0021               	movlb	1	; select bank1
  4186     0FC2  082C               	movf	_approximateLog$1711^(0+128),w
  4187     0FC3  0020               	movlb	0	; select bank0
  4188     0FC4  00D7               	movwf	___flmul@a
  4189     0FC5  3182  22C3  318E   	fcall	___flmul
  4190     0FC8  0020               	movlb	0	; select bank0
  4191     0FC9  0856               	movf	?___flmul+3,w
  4192     0FCA  00AC               	movwf	___fldiv@b+3
  4193     0FCB  0855               	movf	?___flmul+2,w
  4194     0FCC  00AB               	movwf	___fldiv@b+2
  4195     0FCD  0854               	movf	?___flmul+1,w
  4196     0FCE  00AA               	movwf	___fldiv@b+1
  4197     0FCF  0853               	movf	?___flmul,w
  4198     0FD0  00A9               	movwf	___fldiv@b
  4199     0FD1  3186  2685  318E   	fcall	___fldiv
  4200     0FD4  0020               	movlb	0	; select bank0
  4201     0FD5  0828               	movf	?___fldiv+3,w
  4202     0FD6  00C2               	movwf	___fladd@b+3
  4203     0FD7  0827               	movf	?___fldiv+2,w
  4204     0FD8  00C1               	movwf	___fladd@b+2
  4205     0FD9  0826               	movf	?___fldiv+1,w
  4206     0FDA  00C0               	movwf	___fladd@b+1
  4207     0FDB  0825               	movf	?___fldiv,w
  4208     0FDC  00BF               	movwf	___fladd@b
  4209     0FDD  0021               	movlb	1	; select bank1
  4210     0FDE  0833               	movf	(_approximateLog$1712+3)^(0+128),w
  4211     0FDF  0020               	movlb	0	; select bank0
  4212     0FE0  00C6               	movwf	___fladd@a+3
  4213     0FE1  0021               	movlb	1	; select bank1
  4214     0FE2  0832               	movf	(_approximateLog$1712+2)^(0+128),w
  4215     0FE3  0020               	movlb	0	; select bank0
  4216     0FE4  00C5               	movwf	___fladd@a+2
  4217     0FE5  0021               	movlb	1	; select bank1
  4218     0FE6  0831               	movf	(_approximateLog$1712+1)^(0+128),w
  4219     0FE7  0020               	movlb	0	; select bank0
  4220     0FE8  00C4               	movwf	___fladd@a+1
  4221     0FE9  0021               	movlb	1	; select bank1
  4222     0FEA  0830               	movf	_approximateLog$1712^(0+128),w
  4223     0FEB  0020               	movlb	0	; select bank0
  4224     0FEC  00C3               	movwf	___fladd@a
  4225     0FED  3184  24D3         	fcall	___fladd
  4226     0FEF  0020               	movlb	0	; select bank0
  4227     0FF0  0842               	movf	?___fladd+3,w
  4228     0FF1  0021               	movlb	1	; select bank1
  4229     0FF2  00AB               	movwf	(?_approximateLog+3)^(0+128)
  4230     0FF3  0020               	movlb	0	; select bank0
  4231     0FF4  0841               	movf	?___fladd+2,w
  4232     0FF5  0021               	movlb	1	; select bank1
  4233     0FF6  00AA               	movwf	(?_approximateLog+2)^(0+128)
  4234     0FF7  0020               	movlb	0	; select bank0
  4235     0FF8  0840               	movf	?___fladd+1,w
  4236     0FF9  0021               	movlb	1	; select bank1
  4237     0FFA  00A9               	movwf	(?_approximateLog+1)^(0+128)
  4238     0FFB  0020               	movlb	0	; select bank0
  4239     0FFC  083F               	movf	?___fladd,w
  4240     0FFD  0021               	movlb	1	; select bank1
  4241     0FFE  00A8               	movwf	?_approximateLog^(0+128)
  4242     0FFF  0008               	return
  4243     1000                     __end_of_approximateLog:
  4244                           
  4245                           	psect	text8
  4246     0B67                     __ptext8:	
  4247 ;; *************** function ___flsub *****************
  4248 ;; Defined at:
  4249 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;  a               4    0[BANK1 ] float 
  4252 ;;  b               4    4[BANK1 ] float 
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;		None
  4255 ;; Return value:  Size  Location     Type
  4256 ;;                  4    0[BANK1 ] float 
  4257 ;; Registers used:
  4258 ;;		wreg, status,2, status,0, pclath, cstack
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4264 ;;      Params:         0       0       8       0       0       0
  4265 ;;      Locals:         0       0       0       0       0       0
  4266 ;;      Temps:          0       0       0       0       0       0
  4267 ;;      Totals:         0       0       8       0       0       0
  4268 ;;Total ram usage:        8 bytes
  4269 ;; Hardware stack levels used: 1
  4270 ;; Hardware stack levels required when called: 5
  4271 ;; This function calls:
  4272 ;;		___fladd
  4273 ;; This function is called by:
  4274 ;;		_approximateLog
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278     0B67                     ___flsub:	
  4279                           ;psect for function ___flsub
  4280                           
  4281                           
  4282                           ;incstack = 0
  4283                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  4284     0B67  3080               	movlw	128
  4285     0B68  0021               	movlb	1	; select bank1
  4286     0B69  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  4287     0B6A  0827               	movf	(___flsub@b+3)^(0+128),w
  4288     0B6B  0020               	movlb	0	; select bank0
  4289     0B6C  00C2               	movwf	___fladd@b+3
  4290     0B6D  0021               	movlb	1	; select bank1
  4291     0B6E  0826               	movf	(___flsub@b+2)^(0+128),w
  4292     0B6F  0020               	movlb	0	; select bank0
  4293     0B70  00C1               	movwf	___fladd@b+2
  4294     0B71  0021               	movlb	1	; select bank1
  4295     0B72  0825               	movf	(___flsub@b+1)^(0+128),w
  4296     0B73  0020               	movlb	0	; select bank0
  4297     0B74  00C0               	movwf	___fladd@b+1
  4298     0B75  0021               	movlb	1	; select bank1
  4299     0B76  0824               	movf	___flsub@b^(0+128),w
  4300     0B77  0020               	movlb	0	; select bank0
  4301     0B78  00BF               	movwf	___fladd@b
  4302     0B79  0021               	movlb	1	; select bank1
  4303     0B7A  0823               	movf	(___flsub@a+3)^(0+128),w
  4304     0B7B  0020               	movlb	0	; select bank0
  4305     0B7C  00C6               	movwf	___fladd@a+3
  4306     0B7D  0021               	movlb	1	; select bank1
  4307     0B7E  0822               	movf	(___flsub@a+2)^(0+128),w
  4308     0B7F  0020               	movlb	0	; select bank0
  4309     0B80  00C5               	movwf	___fladd@a+2
  4310     0B81  0021               	movlb	1	; select bank1
  4311     0B82  0821               	movf	(___flsub@a+1)^(0+128),w
  4312     0B83  0020               	movlb	0	; select bank0
  4313     0B84  00C4               	movwf	___fladd@a+1
  4314     0B85  0021               	movlb	1	; select bank1
  4315     0B86  0820               	movf	___flsub@a^(0+128),w
  4316     0B87  0020               	movlb	0	; select bank0
  4317     0B88  00C3               	movwf	___fladd@a
  4318     0B89  3184  24D3         	fcall	___fladd
  4319     0B8B  0020               	movlb	0	; select bank0
  4320     0B8C  0842               	movf	?___fladd+3,w
  4321     0B8D  0021               	movlb	1	; select bank1
  4322     0B8E  00A3               	movwf	(?___flsub+3)^(0+128)
  4323     0B8F  0020               	movlb	0	; select bank0
  4324     0B90  0841               	movf	?___fladd+2,w
  4325     0B91  0021               	movlb	1	; select bank1
  4326     0B92  00A2               	movwf	(?___flsub+2)^(0+128)
  4327     0B93  0020               	movlb	0	; select bank0
  4328     0B94  0840               	movf	?___fladd+1,w
  4329     0B95  0021               	movlb	1	; select bank1
  4330     0B96  00A1               	movwf	(?___flsub+1)^(0+128)
  4331     0B97  0020               	movlb	0	; select bank0
  4332     0B98  083F               	movf	?___fladd,w
  4333     0B99  0021               	movlb	1	; select bank1
  4334     0B9A  00A0               	movwf	?___flsub^(0+128)
  4335     0B9B  0008               	return
  4336     0B9C                     __end_of___flsub:
  4337                           
  4338                           	psect	text9
  4339     04D3                     __ptext9:	
  4340 ;; *************** function ___fladd *****************
  4341 ;; Defined at:
  4342 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;  b               4   31[BANK0 ] float 
  4345 ;;  a               4   35[BANK0 ] float 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;  grs             1   50[BANK0 ] unsigned char 
  4348 ;;  bexp            1   49[BANK0 ] unsigned char 
  4349 ;;  aexp            1   48[BANK0 ] unsigned char 
  4350 ;;  signs           1   47[BANK0 ] unsigned char 
  4351 ;; Return value:  Size  Location     Type
  4352 ;;                  4   31[BANK0 ] unsigned char 
  4353 ;; Registers used:
  4354 ;;		wreg, status,2, status,0
  4355 ;; Tracked objects:
  4356 ;;		On entry : 0/0
  4357 ;;		On exit  : 0/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4360 ;;      Params:         0       8       0       0       0       0
  4361 ;;      Locals:         0       4       0       0       0       0
  4362 ;;      Temps:          0       8       0       0       0       0
  4363 ;;      Totals:         0      20       0       0       0       0
  4364 ;;Total ram usage:       20 bytes
  4365 ;; Hardware stack levels used: 1
  4366 ;; Hardware stack levels required when called: 4
  4367 ;; This function calls:
  4368 ;;		Nothing
  4369 ;; This function is called by:
  4370 ;;		__ReadSensor
  4371 ;;		_approximateLog
  4372 ;;		___flsub
  4373 ;; This function uses a non-reentrant model
  4374 ;;
  4375                           
  4376     04D3                     ___fladd:	
  4377                           ;psect for function ___fladd
  4378                           
  4379                           
  4380                           ;incstack = 0
  4381                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  4382     04D3  0020               	movlb	0	; select bank0
  4383     04D4  0842               	movf	___fladd@b+3,w
  4384     04D5  3980               	andlw	128
  4385     04D6  00CF               	movwf	___fladd@signs
  4386     04D7  3542               	lslf	___fladd@b+3,w
  4387     04D8  00D1               	movwf	___fladd@bexp
  4388     04D9  1BC1               	btfsc	___fladd@b+2,7
  4389     04DA  1451               	bsf	___fladd@bexp,0
  4390     04DB  0851               	movf	___fladd@bexp,w
  4391     04DC  1903               	btfsc	3,2
  4392     04DD  2CEC               	goto	l3381
  4393     04DE  0A51               	incf	___fladd@bexp,w
  4394     04DF  1D03               	btfss	3,2
  4395     04E0  2CE9               	goto	l3377
  4396     04E1  3000               	movlw	0
  4397     04E2  00C2               	movwf	___fladd@b+3
  4398     04E3  3000               	movlw	0
  4399     04E4  00C1               	movwf	___fladd@b+2
  4400     04E5  3000               	movlw	0
  4401     04E6  00C0               	movwf	___fladd@b+1
  4402     04E7  3000               	movlw	0
  4403     04E8  00BF               	movwf	___fladd@b
  4404     04E9                     l3377:
  4405     04E9  17C1               	bsf	___fladd@b+2,7
  4406     04EA  01C2               	clrf	___fladd@b+3
  4407     04EB  2CF4               	goto	l3383
  4408     04EC                     l3381:
  4409     04EC  3000               	movlw	0
  4410     04ED  00C2               	movwf	___fladd@b+3
  4411     04EE  3000               	movlw	0
  4412     04EF  00C1               	movwf	___fladd@b+2
  4413     04F0  3000               	movlw	0
  4414     04F1  00C0               	movwf	___fladd@b+1
  4415     04F2  3000               	movlw	0
  4416     04F3  00BF               	movwf	___fladd@b
  4417     04F4                     l3383:
  4418     04F4  0846               	movf	___fladd@a+3,w
  4419     04F5  3980               	andlw	128
  4420     04F6  00D0               	movwf	___fladd@aexp
  4421     04F7  0850               	movf	___fladd@aexp,w
  4422     04F8  064F               	xorwf	___fladd@signs,w
  4423     04F9  1D03               	btfss	3,2
  4424     04FA  174F               	bsf	___fladd@signs,6
  4425     04FB  3546               	lslf	___fladd@a+3,w
  4426     04FC  00D0               	movwf	___fladd@aexp
  4427     04FD  1BC5               	btfsc	___fladd@a+2,7
  4428     04FE  1450               	bsf	___fladd@aexp,0
  4429     04FF  0850               	movf	___fladd@aexp,w
  4430     0500  1903               	btfsc	3,2
  4431     0501  2D10               	goto	l3405
  4432     0502  0A50               	incf	___fladd@aexp,w
  4433     0503  1D03               	btfss	3,2
  4434     0504  2D0D               	goto	l3401
  4435     0505  3000               	movlw	0
  4436     0506  00C6               	movwf	___fladd@a+3
  4437     0507  3000               	movlw	0
  4438     0508  00C5               	movwf	___fladd@a+2
  4439     0509  3000               	movlw	0
  4440     050A  00C4               	movwf	___fladd@a+1
  4441     050B  3000               	movlw	0
  4442     050C  00C3               	movwf	___fladd@a
  4443     050D                     l3401:
  4444     050D  17C5               	bsf	___fladd@a+2,7
  4445     050E  01C6               	clrf	___fladd@a+3
  4446     050F  2D18               	goto	l1014
  4447     0510                     l3405:
  4448     0510  3000               	movlw	0
  4449     0511  00C6               	movwf	___fladd@a+3
  4450     0512  3000               	movlw	0
  4451     0513  00C5               	movwf	___fladd@a+2
  4452     0514  3000               	movlw	0
  4453     0515  00C4               	movwf	___fladd@a+1
  4454     0516  3000               	movlw	0
  4455     0517  00C3               	movwf	___fladd@a
  4456     0518                     l1014:
  4457     0518  0851               	movf	___fladd@bexp,w
  4458     0519  0250               	subwf	___fladd@aexp,w
  4459     051A  1803               	skipnc
  4460     051B  2D40               	goto	l3441
  4461     051C  1F4F               	btfss	___fladd@signs,6
  4462     051D  2D22               	goto	l3411
  4463     051E  3080               	movlw	128
  4464     051F  00C7               	movwf	??___fladd
  4465     0520  0847               	movf	??___fladd,w
  4466     0521  06CF               	xorwf	___fladd@signs,f
  4467     0522                     l3411:
  4468     0522  0851               	movf	___fladd@bexp,w
  4469     0523  00D2               	movwf	___fladd@grs
  4470     0524  0850               	movf	___fladd@aexp,w
  4471     0525  00D1               	movwf	___fladd@bexp
  4472     0526  0852               	movf	___fladd@grs,w
  4473     0527  00D0               	movwf	___fladd@aexp
  4474     0528  083F               	movf	___fladd@b,w
  4475     0529  00D2               	movwf	___fladd@grs
  4476     052A  0843               	movf	___fladd@a,w
  4477     052B  00BF               	movwf	___fladd@b
  4478     052C  0852               	movf	___fladd@grs,w
  4479     052D  00C3               	movwf	___fladd@a
  4480     052E  0840               	movf	___fladd@b+1,w
  4481     052F  00D2               	movwf	___fladd@grs
  4482     0530  0844               	movf	___fladd@a+1,w
  4483     0531  00C0               	movwf	___fladd@b+1
  4484     0532  0852               	movf	___fladd@grs,w
  4485     0533  00C4               	movwf	___fladd@a+1
  4486     0534  0841               	movf	___fladd@b+2,w
  4487     0535  00D2               	movwf	___fladd@grs
  4488     0536  0845               	movf	___fladd@a+2,w
  4489     0537  00C1               	movwf	___fladd@b+2
  4490     0538  0852               	movf	___fladd@grs,w
  4491     0539  00C5               	movwf	___fladd@a+2
  4492     053A  0842               	movf	___fladd@b+3,w
  4493     053B  00D2               	movwf	___fladd@grs
  4494     053C  0846               	movf	___fladd@a+3,w
  4495     053D  00C2               	movwf	___fladd@b+3
  4496     053E  0852               	movf	___fladd@grs,w
  4497     053F  00C6               	movwf	___fladd@a+3
  4498     0540                     l3441:
  4499     0540  01D2               	clrf	___fladd@grs
  4500     0541  0850               	movf	___fladd@aexp,w
  4501     0542  00C7               	movwf	??___fladd
  4502     0543  01C8               	clrf	??___fladd+1
  4503     0544  0848               	movf	??___fladd+1,w
  4504     0545  00CA               	movwf	??___fladd+3
  4505     0546  0851               	movf	___fladd@bexp,w
  4506     0547  0247               	subwf	??___fladd,w
  4507     0548  00C9               	movwf	??___fladd+2
  4508     0549  1C03               	skipc
  4509     054A  03CA               	decf	??___fladd+3,f
  4510     054B  084A               	movf	??___fladd+3,w
  4511     054C  3A80               	xorlw	128
  4512     054D  00CB               	movwf	??___fladd+4
  4513     054E  3080               	movlw	128
  4514     054F  024B               	subwf	??___fladd+4,w
  4515     0550  1D03               	skipz
  4516     0551  2D54               	goto	u3765
  4517     0552  301A               	movlw	26
  4518     0553  0249               	subwf	??___fladd+2,w
  4519     0554                     u3765:
  4520     0554  1C03               	skipc
  4521     0555  2D82               	goto	l3459
  4522     0556  0020               	movlb	0	; select bank0
  4523     0557  0842               	movf	___fladd@b+3,w
  4524     0558  0441               	iorwf	___fladd@b+2,w
  4525     0559  0440               	iorwf	___fladd@b+1,w
  4526     055A  043F               	iorwf	___fladd@b,w
  4527     055B  1903               	btfsc	3,2
  4528     055C  2D5F               	goto	u3770
  4529     055D  3001               	movlw	1
  4530     055E  2D60               	goto	u3780
  4531     055F                     u3770:
  4532     055F  3000               	movlw	0
  4533     0560                     u3780:
  4534     0560  00D2               	movwf	___fladd@grs
  4535     0561  3000               	movlw	0
  4536     0562  00C2               	movwf	___fladd@b+3
  4537     0563  3000               	movlw	0
  4538     0564  00C1               	movwf	___fladd@b+2
  4539     0565  3000               	movlw	0
  4540     0566  00C0               	movwf	___fladd@b+1
  4541     0567  3000               	movlw	0
  4542     0568  00BF               	movwf	___fladd@b
  4543     0569  0850               	movf	___fladd@aexp,w
  4544     056A  00D1               	movwf	___fladd@bexp
  4545     056B  2D87               	goto	l1018
  4546     056C                     l1020:
  4547     056C  1C52               	btfss	___fladd@grs,0
  4548     056D  2D72               	goto	l3449
  4549     056E  3652               	lsrf	___fladd@grs,w
  4550     056F  3801               	iorlw	1
  4551     0570  00D2               	movwf	___fladd@grs
  4552     0571  2D74               	goto	l3451
  4553     0572                     l3449:
  4554     0572  1003               	clrc
  4555     0573  0CD2               	rrf	___fladd@grs,f
  4556     0574                     l3451:
  4557     0574  183F               	btfsc	___fladd@b,0
  4558     0575  17D2               	bsf	___fladd@grs,7
  4559     0576  3001               	movlw	1
  4560     0577  00C7               	movwf	??___fladd
  4561     0578                     u3815:
  4562     0578  37C2               	asrf	___fladd@b+3,f
  4563     0579  0CC1               	rrf	___fladd@b+2,f
  4564     057A  0CC0               	rrf	___fladd@b+1,f
  4565     057B  0CBF               	rrf	___fladd@b,f
  4566     057C  0BC7               	decfsz	??___fladd& (0+127),f
  4567     057D  2D78               	goto	u3815
  4568     057E  3001               	movlw	1
  4569     057F  00C7               	movwf	??___fladd
  4570     0580  0847               	movf	??___fladd,w
  4571     0581  07D1               	addwf	___fladd@bexp,f
  4572     0582                     l3459:
  4573     0582  0020               	movlb	0	; select bank0
  4574     0583  0850               	movf	___fladd@aexp,w
  4575     0584  0251               	subwf	___fladd@bexp,w
  4576     0585  1C03               	skipc
  4577     0586  2D6C               	goto	l1020
  4578     0587                     l1018:
  4579     0587  1B4F               	btfsc	___fladd@signs,6
  4580     0588  2DB6               	goto	l3485
  4581     0589  0851               	movf	___fladd@bexp,w
  4582     058A  1D03               	btfss	3,2
  4583     058B  2D95               	goto	l3467
  4584     058C  3000               	movlw	0
  4585     058D  00C2               	movwf	?___fladd+3
  4586     058E  3000               	movlw	0
  4587     058F  00C1               	movwf	?___fladd+2
  4588     0590  3000               	movlw	0
  4589     0591  00C0               	movwf	?___fladd+1
  4590     0592  3000               	movlw	0
  4591     0593  00BF               	movwf	?___fladd
  4592     0594  0008               	return
  4593     0595                     l3467:
  4594     0595  0843               	movf	___fladd@a,w
  4595     0596  07BF               	addwf	___fladd@b,f
  4596     0597  0844               	movf	___fladd@a+1,w
  4597     0598  3DC0               	addwfc	___fladd@b+1,f
  4598     0599  0845               	movf	___fladd@a+2,w
  4599     059A  3DC1               	addwfc	___fladd@b+2,f
  4600     059B  0846               	movf	___fladd@a+3,w
  4601     059C  3DC2               	addwfc	___fladd@b+3,f
  4602     059D  1C42               	btfss	___fladd@b+3,0
  4603     059E  2E30               	goto	l3519
  4604     059F  1C52               	btfss	___fladd@grs,0
  4605     05A0  2DA5               	goto	l3475
  4606     05A1  3652               	lsrf	___fladd@grs,w
  4607     05A2  3801               	iorlw	1
  4608     05A3  00D2               	movwf	___fladd@grs
  4609     05A4  2DA7               	goto	l3477
  4610     05A5                     l3475:
  4611     05A5  1003               	clrc
  4612     05A6  0CD2               	rrf	___fladd@grs,f
  4613     05A7                     l3477:
  4614     05A7  183F               	btfsc	___fladd@b,0
  4615     05A8  17D2               	bsf	___fladd@grs,7
  4616     05A9  3001               	movlw	1
  4617     05AA  00C7               	movwf	??___fladd
  4618     05AB                     u3885:
  4619     05AB  37C2               	asrf	___fladd@b+3,f
  4620     05AC  0CC1               	rrf	___fladd@b+2,f
  4621     05AD  0CC0               	rrf	___fladd@b+1,f
  4622     05AE  0CBF               	rrf	___fladd@b,f
  4623     05AF  0BC7               	decfsz	??___fladd& (0+127),f
  4624     05B0  2DAB               	goto	u3885
  4625     05B1  3001               	movlw	1
  4626     05B2  00C7               	movwf	??___fladd
  4627     05B3  0847               	movf	??___fladd,w
  4628     05B4  07D1               	addwf	___fladd@bexp,f
  4629     05B5  2E30               	goto	l3519
  4630     05B6                     l3485:
  4631     05B6  0842               	movf	___fladd@b+3,w
  4632     05B7  3A80               	xorlw	128
  4633     05B8  00C7               	movwf	??___fladd
  4634     05B9  0846               	movf	___fladd@a+3,w
  4635     05BA  3A80               	xorlw	128
  4636     05BB  0247               	subwf	??___fladd,w
  4637     05BC  1D03               	skipz
  4638     05BD  2DC8               	goto	u3893
  4639     05BE  0845               	movf	___fladd@a+2,w
  4640     05BF  0241               	subwf	___fladd@b+2,w
  4641     05C0  1D03               	skipz
  4642     05C1  2DC8               	goto	u3893
  4643     05C2  0844               	movf	___fladd@a+1,w
  4644     05C3  0240               	subwf	___fladd@b+1,w
  4645     05C4  1D03               	skipz
  4646     05C5  2DC8               	goto	u3893
  4647     05C6  0843               	movf	___fladd@a,w
  4648     05C7  023F               	subwf	___fladd@b,w
  4649     05C8                     u3893:
  4650     05C8  1803               	skipnc
  4651     05C9  2E00               	goto	l3495
  4652     05CA  30FF               	movlw	255
  4653     05CB  00C7               	movwf	??___fladd
  4654     05CC  30FF               	movlw	255
  4655     05CD  00C8               	movwf	??___fladd+1
  4656     05CE  30FF               	movlw	255
  4657     05CF  00C9               	movwf	??___fladd+2
  4658     05D0  30FF               	movlw	255
  4659     05D1  00CA               	movwf	??___fladd+3
  4660     05D2  083F               	movf	___fladd@b,w
  4661     05D3  0243               	subwf	___fladd@a,w
  4662     05D4  00CB               	movwf	??___fladd+4
  4663     05D5  0840               	movf	___fladd@b+1,w
  4664     05D6  3B44               	subwfb	___fladd@a+1,w
  4665     05D7  00CC               	movwf	??___fladd+5
  4666     05D8  0841               	movf	___fladd@b+2,w
  4667     05D9  3B45               	subwfb	___fladd@a+2,w
  4668     05DA  00CD               	movwf	??___fladd+6
  4669     05DB  0842               	movf	___fladd@b+3,w
  4670     05DC  3B46               	subwfb	___fladd@a+3,w
  4671     05DD  00CE               	movwf	??___fladd+7
  4672     05DE  084B               	movf	??___fladd+4,w
  4673     05DF  07C7               	addwf	??___fladd,f
  4674     05E0  084C               	movf	??___fladd+5,w
  4675     05E1  3DC8               	addwfc	??___fladd+1,f
  4676     05E2  084D               	movf	??___fladd+6,w
  4677     05E3  3DC9               	addwfc	??___fladd+2,f
  4678     05E4  084E               	movf	??___fladd+7,w
  4679     05E5  3DCA               	addwfc	??___fladd+3,f
  4680     05E6  084A               	movf	??___fladd+3,w
  4681     05E7  00C2               	movwf	___fladd@b+3
  4682     05E8  0849               	movf	??___fladd+2,w
  4683     05E9  00C1               	movwf	___fladd@b+2
  4684     05EA  0848               	movf	??___fladd+1,w
  4685     05EB  00C0               	movwf	___fladd@b+1
  4686     05EC  0847               	movf	??___fladd,w
  4687     05ED  00BF               	movwf	___fladd@b
  4688     05EE  3080               	movlw	128
  4689     05EF  00C7               	movwf	??___fladd
  4690     05F0  0847               	movf	??___fladd,w
  4691     05F1  06CF               	xorwf	___fladd@signs,f
  4692     05F2  09D2               	comf	___fladd@grs,f
  4693     05F3  0AD2               	incf	___fladd@grs,f
  4694     05F4  0852               	movf	___fladd@grs,w
  4695     05F5  1D03               	btfss	3,2
  4696     05F6  2E08               	goto	l1035
  4697     05F7  3001               	movlw	1
  4698     05F8  07BF               	addwf	___fladd@b,f
  4699     05F9  3000               	movlw	0
  4700     05FA  3DC0               	addwfc	___fladd@b+1,f
  4701     05FB  3000               	movlw	0
  4702     05FC  3DC1               	addwfc	___fladd@b+2,f
  4703     05FD  3000               	movlw	0
  4704     05FE  3DC2               	addwfc	___fladd@b+3,f
  4705     05FF  2E08               	goto	l1035
  4706     0600                     l3495:
  4707     0600  0843               	movf	___fladd@a,w
  4708     0601  02BF               	subwf	___fladd@b,f
  4709     0602  0844               	movf	___fladd@a+1,w
  4710     0603  3BC0               	subwfb	___fladd@b+1,f
  4711     0604  0845               	movf	___fladd@a+2,w
  4712     0605  3BC1               	subwfb	___fladd@b+2,f
  4713     0606  0846               	movf	___fladd@a+3,w
  4714     0607  3BC2               	subwfb	___fladd@b+3,f
  4715     0608                     l1035:
  4716     0608  0842               	movf	___fladd@b+3,w
  4717     0609  0441               	iorwf	___fladd@b+2,w
  4718     060A  0440               	iorwf	___fladd@b+1,w
  4719     060B  043F               	iorwf	___fladd@b,w
  4720     060C  1D03               	skipz
  4721     060D  2E2E               	goto	l3517
  4722     060E  0852               	movf	___fladd@grs,w
  4723     060F  1D03               	btfss	3,2
  4724     0610  2E2E               	goto	l3517
  4725     0611  3000               	movlw	0
  4726     0612  00C2               	movwf	?___fladd+3
  4727     0613  3000               	movlw	0
  4728     0614  00C1               	movwf	?___fladd+2
  4729     0615  3000               	movlw	0
  4730     0616  00C0               	movwf	?___fladd+1
  4731     0617  3000               	movlw	0
  4732     0618  00BF               	movwf	?___fladd
  4733     0619  0008               	return
  4734     061A                     l3503:
  4735     061A  3001               	movlw	1
  4736     061B                     u3935:
  4737     061B  35BF               	lslf	___fladd@b,f
  4738     061C  0DC0               	rlf	___fladd@b+1,f
  4739     061D  0DC1               	rlf	___fladd@b+2,f
  4740     061E  0DC2               	rlf	___fladd@b+3,f
  4741     061F  0B89               	decfsz	9,f
  4742     0620  2E1B               	goto	u3935
  4743     0621  1BD2               	btfsc	___fladd@grs,7
  4744     0622  143F               	bsf	___fladd@b,0
  4745     0623  1C52               	btfss	___fladd@grs,0
  4746     0624  2E27               	goto	l3511
  4747     0625  1403               	setc
  4748     0626  2E28               	goto	L1
  4749     0627                     l3511:
  4750     0627  1003               	clrc
  4751     0628                     L1:
  4752     0628  0DD2               	rlf	___fladd@grs,f
  4753     0629  0851               	movf	___fladd@bexp,w
  4754     062A  1903               	btfsc	3,2
  4755     062B  2E2E               	goto	l3517
  4756     062C  3001               	movlw	1
  4757     062D  02D1               	subwf	___fladd@bexp,f
  4758     062E                     l3517:
  4759     062E  1FC1               	btfss	___fladd@b+2,7
  4760     062F  2E1A               	goto	l3503
  4761     0630                     l3519:
  4762     0630  01D0               	clrf	___fladd@aexp
  4763     0631  1FD2               	btfss	___fladd@grs,7
  4764     0632  2E3B               	goto	l3529
  4765     0633  0852               	movf	___fladd@grs,w
  4766     0634  397F               	andlw	127
  4767     0635  1903               	btfsc	3,2
  4768     0636  183F               	btfsc	___fladd@b,0
  4769     0637  2E39               	goto	l3525
  4770     0638  2E3B               	goto	l3529
  4771     0639                     l3525:
  4772     0639  01D0               	clrf	___fladd@aexp
  4773     063A  0AD0               	incf	___fladd@aexp,f
  4774     063B                     l3529:
  4775     063B  0850               	movf	___fladd@aexp,w
  4776     063C  1903               	btfsc	3,2
  4777     063D  2E67               	goto	l1048
  4778     063E  3001               	movlw	1
  4779     063F  07BF               	addwf	___fladd@b,f
  4780     0640  3000               	movlw	0
  4781     0641  3DC0               	addwfc	___fladd@b+1,f
  4782     0642  3000               	movlw	0
  4783     0643  3DC1               	addwfc	___fladd@b+2,f
  4784     0644  3000               	movlw	0
  4785     0645  3DC2               	addwfc	___fladd@b+3,f
  4786     0646  1C42               	btfss	___fladd@b+3,0
  4787     0647  2E67               	goto	l1048
  4788     0648  083F               	movf	___fladd@b,w
  4789     0649  00C7               	movwf	??___fladd
  4790     064A  0840               	movf	___fladd@b+1,w
  4791     064B  00C8               	movwf	??___fladd+1
  4792     064C  0841               	movf	___fladd@b+2,w
  4793     064D  00C9               	movwf	??___fladd+2
  4794     064E  0842               	movf	___fladd@b+3,w
  4795     064F  00CA               	movwf	??___fladd+3
  4796     0650  3001               	movlw	1
  4797     0651  00CB               	movwf	??___fladd+4
  4798     0652                     u4035:
  4799     0652  37CA               	asrf	??___fladd+3,f
  4800     0653  0CC9               	rrf	??___fladd+2,f
  4801     0654  0CC8               	rrf	??___fladd+1,f
  4802     0655  0CC7               	rrf	??___fladd,f
  4803     0656  0BCB               	decfsz	??___fladd+4,f
  4804     0657  2E52               	goto	u4035
  4805     0658  084A               	movf	??___fladd+3,w
  4806     0659  00C2               	movwf	___fladd@b+3
  4807     065A  0849               	movf	??___fladd+2,w
  4808     065B  00C1               	movwf	___fladd@b+2
  4809     065C  0848               	movf	??___fladd+1,w
  4810     065D  00C0               	movwf	___fladd@b+1
  4811     065E  0847               	movf	??___fladd,w
  4812     065F  00BF               	movwf	___fladd@b
  4813     0660  0A51               	incf	___fladd@bexp,w
  4814     0661  1903               	btfsc	3,2
  4815     0662  2E67               	goto	l1048
  4816     0663  3001               	movlw	1
  4817     0664  00C7               	movwf	??___fladd
  4818     0665  0847               	movf	??___fladd,w
  4819     0666  07D1               	addwf	___fladd@bexp,f
  4820     0667                     l1048:
  4821     0667  0A51               	incf	___fladd@bexp,w
  4822     0668  1D03               	btfss	3,2
  4823     0669  0851               	movf	___fladd@bexp,w
  4824     066A  1D03               	btfss	3,2
  4825     066B  2E77               	goto	l3547
  4826     066C  3000               	movlw	0
  4827     066D  00C2               	movwf	___fladd@b+3
  4828     066E  3000               	movlw	0
  4829     066F  00C1               	movwf	___fladd@b+2
  4830     0670  3000               	movlw	0
  4831     0671  00C0               	movwf	___fladd@b+1
  4832     0672  3000               	movlw	0
  4833     0673  00BF               	movwf	___fladd@b
  4834     0674  0851               	movf	___fladd@bexp,w
  4835     0675  1903               	btfsc	3,2
  4836     0676  01CF               	clrf	___fladd@signs
  4837     0677                     l3547:
  4838     0677  1C51               	btfss	___fladd@bexp,0
  4839     0678  2E7B               	goto	l3551
  4840     0679  17C1               	bsf	___fladd@b+2,7
  4841     067A  2E7F               	goto	l1056
  4842     067B                     l3551:
  4843     067B  307F               	movlw	127
  4844     067C  00C7               	movwf	??___fladd
  4845     067D  0847               	movf	??___fladd,w
  4846     067E  05C1               	andwf	___fladd@b+2,f
  4847     067F                     l1056:
  4848     067F  3651               	lsrf	___fladd@bexp,w
  4849     0680  00C2               	movwf	___fladd@b+3
  4850     0681  1FCF               	btfss	___fladd@signs,7
  4851     0682  0008               	return
  4852     0683  17C2               	bsf	___fladd@b+3,7
  4853     0684  0008               	return
  4854     0685                     __end_of___fladd:
  4855                           
  4856                           	psect	text10
  4857     02C3                     __ptext10:	
  4858 ;; *************** function ___flmul *****************
  4859 ;; Defined at:
  4860 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;  b               4   51[BANK0 ] unsigned char 
  4863 ;;  a               4   55[BANK0 ] unsigned char 
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;  prod            4   71[BANK0 ] struct .
  4866 ;;  grs             4   66[BANK0 ] unsigned long 
  4867 ;;  temp            2   75[BANK0 ] struct .
  4868 ;;  bexp            1   70[BANK0 ] unsigned char 
  4869 ;;  aexp            1   65[BANK0 ] unsigned char 
  4870 ;;  sign            1   64[BANK0 ] unsigned char 
  4871 ;; Return value:  Size  Location     Type
  4872 ;;                  4   51[BANK0 ] unsigned char 
  4873 ;; Registers used:
  4874 ;;		wreg, status,2, status,0, pclath, cstack
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4880 ;;      Params:         0       8       0       0       0       0
  4881 ;;      Locals:         0      13       0       0       0       0
  4882 ;;      Temps:          0       5       0       0       0       0
  4883 ;;      Totals:         0      26       0       0       0       0
  4884 ;;Total ram usage:       26 bytes
  4885 ;; Hardware stack levels used: 1
  4886 ;; Hardware stack levels required when called: 5
  4887 ;; This function calls:
  4888 ;;		__Umul8_16
  4889 ;; This function is called by:
  4890 ;;		__ReadSensor
  4891 ;;		_approximateLog
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           
  4895     02C3                     ___flmul:	
  4896                           ;psect for function ___flmul
  4897                           
  4898                           
  4899                           ;incstack = 0
  4900                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  4901     02C3  0020               	movlb	0	; select bank0
  4902     02C4  0856               	movf	___flmul@b+3,w
  4903     02C5  3980               	andlw	128
  4904     02C6  00E0               	movwf	___flmul@sign
  4905     02C7  3556               	lslf	___flmul@b+3,w
  4906     02C8  00E6               	movwf	___flmul@bexp
  4907     02C9  1BD5               	btfsc	___flmul@b+2,7
  4908     02CA  1466               	bsf	___flmul@bexp,0
  4909     02CB  0866               	movf	___flmul@bexp,w
  4910     02CC  1903               	btfsc	3,2
  4911     02CD  2ADB               	goto	l3733
  4912     02CE  0A66               	incf	___flmul@bexp,w
  4913     02CF  1D03               	btfss	3,2
  4914     02D0  2AD9               	goto	l3731
  4915     02D1  3000               	movlw	0
  4916     02D2  00D6               	movwf	___flmul@b+3
  4917     02D3  3000               	movlw	0
  4918     02D4  00D5               	movwf	___flmul@b+2
  4919     02D5  3000               	movlw	0
  4920     02D6  00D4               	movwf	___flmul@b+1
  4921     02D7  3000               	movlw	0
  4922     02D8  00D3               	movwf	___flmul@b
  4923     02D9                     l3731:
  4924     02D9  17D5               	bsf	___flmul@b+2,7
  4925     02DA  2AE3               	goto	l3735
  4926     02DB                     l3733:
  4927     02DB  3000               	movlw	0
  4928     02DC  00D6               	movwf	___flmul@b+3
  4929     02DD  3000               	movlw	0
  4930     02DE  00D5               	movwf	___flmul@b+2
  4931     02DF  3000               	movlw	0
  4932     02E0  00D4               	movwf	___flmul@b+1
  4933     02E1  3000               	movlw	0
  4934     02E2  00D3               	movwf	___flmul@b
  4935     02E3                     l3735:
  4936     02E3  085A               	movf	___flmul@a+3,w
  4937     02E4  3980               	andlw	128
  4938     02E5  00DB               	movwf	??___flmul
  4939     02E6  085B               	movf	??___flmul,w
  4940     02E7  06E0               	xorwf	___flmul@sign,f
  4941     02E8  355A               	lslf	___flmul@a+3,w
  4942     02E9  00E1               	movwf	___flmul@aexp
  4943     02EA  1BD9               	btfsc	___flmul@a+2,7
  4944     02EB  1461               	bsf	___flmul@aexp,0
  4945     02EC  0861               	movf	___flmul@aexp,w
  4946     02ED  1903               	btfsc	3,2
  4947     02EE  2AFC               	goto	l3751
  4948     02EF  0A61               	incf	___flmul@aexp,w
  4949     02F0  1D03               	btfss	3,2
  4950     02F1  2AFA               	goto	l3749
  4951     02F2  3000               	movlw	0
  4952     02F3  00DA               	movwf	___flmul@a+3
  4953     02F4  3000               	movlw	0
  4954     02F5  00D9               	movwf	___flmul@a+2
  4955     02F6  3000               	movlw	0
  4956     02F7  00D8               	movwf	___flmul@a+1
  4957     02F8  3000               	movlw	0
  4958     02F9  00D7               	movwf	___flmul@a
  4959     02FA                     l3749:
  4960     02FA  17D9               	bsf	___flmul@a+2,7
  4961     02FB  2B04               	goto	l3753
  4962     02FC                     l3751:
  4963     02FC  3000               	movlw	0
  4964     02FD  00DA               	movwf	___flmul@a+3
  4965     02FE  3000               	movlw	0
  4966     02FF  00D9               	movwf	___flmul@a+2
  4967     0300  3000               	movlw	0
  4968     0301  00D8               	movwf	___flmul@a+1
  4969     0302  3000               	movlw	0
  4970     0303  00D7               	movwf	___flmul@a
  4971     0304                     l3753:
  4972     0304  0861               	movf	___flmul@aexp,w
  4973     0305  1D03               	btfss	3,2
  4974     0306  0866               	movf	___flmul@bexp,w
  4975     0307  1D03               	btfss	3,2
  4976     0308  2B12               	goto	l3761
  4977     0309  3000               	movlw	0
  4978     030A  00D6               	movwf	?___flmul+3
  4979     030B  3000               	movlw	0
  4980     030C  00D5               	movwf	?___flmul+2
  4981     030D  3000               	movlw	0
  4982     030E  00D4               	movwf	?___flmul+1
  4983     030F  3000               	movlw	0
  4984     0310  00D3               	movwf	?___flmul
  4985     0311  0008               	return
  4986     0312                     l3761:
  4987     0312  0853               	movf	___flmul@b,w
  4988     0313  00F3               	movwf	__Umul8_16@multiplicand
  4989     0314  0859               	movf	___flmul@a+2,w
  4990     0315  318B  2326  3182   	fcall	__Umul8_16
  4991     0318  0874               	movf	?__Umul8_16+1,w
  4992     0319  0020               	movlb	0	; select bank0
  4993     031A  00EC               	movwf	___flmul@temp+1
  4994     031B  0873               	movf	?__Umul8_16,w
  4995     031C  00EB               	movwf	___flmul@temp
  4996     031D  086B               	movf	___flmul@temp,w
  4997     031E  00DB               	movwf	??___flmul
  4998     031F  01DC               	clrf	??___flmul+1
  4999     0320  01DD               	clrf	??___flmul+2
  5000     0321  01DE               	clrf	??___flmul+3
  5001     0322  085E               	movf	??___flmul+3,w
  5002     0323  00E5               	movwf	___flmul@grs+3
  5003     0324  085D               	movf	??___flmul+2,w
  5004     0325  00E4               	movwf	___flmul@grs+2
  5005     0326  085C               	movf	??___flmul+1,w
  5006     0327  00E3               	movwf	___flmul@grs+1
  5007     0328  085B               	movf	??___flmul,w
  5008     0329  00E2               	movwf	___flmul@grs
  5009     032A  086C               	movf	___flmul@temp+1,w
  5010     032B  00DB               	movwf	??___flmul
  5011     032C  01DC               	clrf	??___flmul+1
  5012     032D  01DD               	clrf	??___flmul+2
  5013     032E  01DE               	clrf	??___flmul+3
  5014     032F  085E               	movf	??___flmul+3,w
  5015     0330  00EA               	movwf	___flmul@prod+3
  5016     0331  085D               	movf	??___flmul+2,w
  5017     0332  00E9               	movwf	___flmul@prod+2
  5018     0333  085C               	movf	??___flmul+1,w
  5019     0334  00E8               	movwf	___flmul@prod+1
  5020     0335  085B               	movf	??___flmul,w
  5021     0336  00E7               	movwf	___flmul@prod
  5022     0337  0854               	movf	___flmul@b+1,w
  5023     0338  00F3               	movwf	__Umul8_16@multiplicand
  5024     0339  0858               	movf	___flmul@a+1,w
  5025     033A  318B  2326  3182   	fcall	__Umul8_16
  5026     033D  0874               	movf	?__Umul8_16+1,w
  5027     033E  0020               	movlb	0	; select bank0
  5028     033F  00EC               	movwf	___flmul@temp+1
  5029     0340  0873               	movf	?__Umul8_16,w
  5030     0341  00EB               	movwf	___flmul@temp
  5031     0342  086B               	movf	___flmul@temp,w
  5032     0343  00DB               	movwf	??___flmul
  5033     0344  01DC               	clrf	??___flmul+1
  5034     0345  01DD               	clrf	??___flmul+2
  5035     0346  01DE               	clrf	??___flmul+3
  5036     0347  085B               	movf	??___flmul,w
  5037     0348  07E2               	addwf	___flmul@grs,f
  5038     0349  085C               	movf	??___flmul+1,w
  5039     034A  3DE3               	addwfc	___flmul@grs+1,f
  5040     034B  085D               	movf	??___flmul+2,w
  5041     034C  3DE4               	addwfc	___flmul@grs+2,f
  5042     034D  085E               	movf	??___flmul+3,w
  5043     034E  3DE5               	addwfc	___flmul@grs+3,f
  5044     034F  086C               	movf	___flmul@temp+1,w
  5045     0350  00DB               	movwf	??___flmul
  5046     0351  01DC               	clrf	??___flmul+1
  5047     0352  01DD               	clrf	??___flmul+2
  5048     0353  01DE               	clrf	??___flmul+3
  5049     0354  085B               	movf	??___flmul,w
  5050     0355  07E7               	addwf	___flmul@prod,f
  5051     0356  085C               	movf	??___flmul+1,w
  5052     0357  3DE8               	addwfc	___flmul@prod+1,f
  5053     0358  085D               	movf	??___flmul+2,w
  5054     0359  3DE9               	addwfc	___flmul@prod+2,f
  5055     035A  085E               	movf	??___flmul+3,w
  5056     035B  3DEA               	addwfc	___flmul@prod+3,f
  5057     035C  0855               	movf	___flmul@b+2,w
  5058     035D  00F3               	movwf	__Umul8_16@multiplicand
  5059     035E  0857               	movf	___flmul@a,w
  5060     035F  318B  2326  3182   	fcall	__Umul8_16
  5061     0362  0874               	movf	?__Umul8_16+1,w
  5062     0363  0020               	movlb	0	; select bank0
  5063     0364  00EC               	movwf	___flmul@temp+1
  5064     0365  0873               	movf	?__Umul8_16,w
  5065     0366  00EB               	movwf	___flmul@temp
  5066     0367  086B               	movf	___flmul@temp,w
  5067     0368  00DB               	movwf	??___flmul
  5068     0369  01DC               	clrf	??___flmul+1
  5069     036A  01DD               	clrf	??___flmul+2
  5070     036B  01DE               	clrf	??___flmul+3
  5071     036C  085B               	movf	??___flmul,w
  5072     036D  07E2               	addwf	___flmul@grs,f
  5073     036E  085C               	movf	??___flmul+1,w
  5074     036F  3DE3               	addwfc	___flmul@grs+1,f
  5075     0370  085D               	movf	??___flmul+2,w
  5076     0371  3DE4               	addwfc	___flmul@grs+2,f
  5077     0372  085E               	movf	??___flmul+3,w
  5078     0373  3DE5               	addwfc	___flmul@grs+3,f
  5079     0374  086C               	movf	___flmul@temp+1,w
  5080     0375  00DB               	movwf	??___flmul
  5081     0376  01DC               	clrf	??___flmul+1
  5082     0377  01DD               	clrf	??___flmul+2
  5083     0378  01DE               	clrf	??___flmul+3
  5084     0379  085B               	movf	??___flmul,w
  5085     037A  07E7               	addwf	___flmul@prod,f
  5086     037B  085C               	movf	??___flmul+1,w
  5087     037C  3DE8               	addwfc	___flmul@prod+1,f
  5088     037D  085D               	movf	??___flmul+2,w
  5089     037E  3DE9               	addwfc	___flmul@prod+2,f
  5090     037F  085E               	movf	??___flmul+3,w
  5091     0380  3DEA               	addwfc	___flmul@prod+3,f
  5092     0381  3008               	movlw	8
  5093     0382                     u4505:
  5094     0382  35E2               	lslf	___flmul@grs,f
  5095     0383  0DE3               	rlf	___flmul@grs+1,f
  5096     0384  0DE4               	rlf	___flmul@grs+2,f
  5097     0385  0DE5               	rlf	___flmul@grs+3,f
  5098     0386  0B89               	decfsz	9,f
  5099     0387  2B82               	goto	u4505
  5100     0388  0854               	movf	___flmul@b+1,w
  5101     0389  00F3               	movwf	__Umul8_16@multiplicand
  5102     038A  0857               	movf	___flmul@a,w
  5103     038B  318B  2326  3182   	fcall	__Umul8_16
  5104     038E  0874               	movf	?__Umul8_16+1,w
  5105     038F  0020               	movlb	0	; select bank0
  5106     0390  00EC               	movwf	___flmul@temp+1
  5107     0391  0873               	movf	?__Umul8_16,w
  5108     0392  00EB               	movwf	___flmul@temp
  5109     0393  086B               	movf	___flmul@temp,w
  5110     0394  07E2               	addwf	___flmul@grs,f
  5111     0395  086C               	movf	___flmul@temp+1,w
  5112     0396  3DE3               	addwfc	___flmul@grs+1,f
  5113     0397  3000               	movlw	0
  5114     0398  3DE4               	addwfc	___flmul@grs+2,f
  5115     0399  3DE5               	addwfc	___flmul@grs+3,f
  5116     039A  0853               	movf	___flmul@b,w
  5117     039B  00F3               	movwf	__Umul8_16@multiplicand
  5118     039C  0858               	movf	___flmul@a+1,w
  5119     039D  318B  2326  3182   	fcall	__Umul8_16
  5120     03A0  0874               	movf	?__Umul8_16+1,w
  5121     03A1  0020               	movlb	0	; select bank0
  5122     03A2  00EC               	movwf	___flmul@temp+1
  5123     03A3  0873               	movf	?__Umul8_16,w
  5124     03A4  00EB               	movwf	___flmul@temp
  5125     03A5  086B               	movf	___flmul@temp,w
  5126     03A6  07E2               	addwf	___flmul@grs,f
  5127     03A7  086C               	movf	___flmul@temp+1,w
  5128     03A8  3DE3               	addwfc	___flmul@grs+1,f
  5129     03A9  3000               	movlw	0
  5130     03AA  3DE4               	addwfc	___flmul@grs+2,f
  5131     03AB  3DE5               	addwfc	___flmul@grs+3,f
  5132     03AC  3008               	movlw	8
  5133     03AD                     u4515:
  5134     03AD  35E2               	lslf	___flmul@grs,f
  5135     03AE  0DE3               	rlf	___flmul@grs+1,f
  5136     03AF  0DE4               	rlf	___flmul@grs+2,f
  5137     03B0  0DE5               	rlf	___flmul@grs+3,f
  5138     03B1  0B89               	decfsz	9,f
  5139     03B2  2BAD               	goto	u4515
  5140     03B3  0853               	movf	___flmul@b,w
  5141     03B4  00F3               	movwf	__Umul8_16@multiplicand
  5142     03B5  0857               	movf	___flmul@a,w
  5143     03B6  318B  2326  3182   	fcall	__Umul8_16
  5144     03B9  0874               	movf	?__Umul8_16+1,w
  5145     03BA  0020               	movlb	0	; select bank0
  5146     03BB  00EC               	movwf	___flmul@temp+1
  5147     03BC  0873               	movf	?__Umul8_16,w
  5148     03BD  00EB               	movwf	___flmul@temp
  5149     03BE  086B               	movf	___flmul@temp,w
  5150     03BF  07E2               	addwf	___flmul@grs,f
  5151     03C0  086C               	movf	___flmul@temp+1,w
  5152     03C1  3DE3               	addwfc	___flmul@grs+1,f
  5153     03C2  3000               	movlw	0
  5154     03C3  3DE4               	addwfc	___flmul@grs+2,f
  5155     03C4  3DE5               	addwfc	___flmul@grs+3,f
  5156     03C5  0854               	movf	___flmul@b+1,w
  5157     03C6  00F3               	movwf	__Umul8_16@multiplicand
  5158     03C7  0859               	movf	___flmul@a+2,w
  5159     03C8  318B  2326  3182   	fcall	__Umul8_16
  5160     03CB  0874               	movf	?__Umul8_16+1,w
  5161     03CC  0020               	movlb	0	; select bank0
  5162     03CD  00EC               	movwf	___flmul@temp+1
  5163     03CE  0873               	movf	?__Umul8_16,w
  5164     03CF  00EB               	movwf	___flmul@temp
  5165     03D0  086B               	movf	___flmul@temp,w
  5166     03D1  07E7               	addwf	___flmul@prod,f
  5167     03D2  086C               	movf	___flmul@temp+1,w
  5168     03D3  3DE8               	addwfc	___flmul@prod+1,f
  5169     03D4  3000               	movlw	0
  5170     03D5  3DE9               	addwfc	___flmul@prod+2,f
  5171     03D6  3DEA               	addwfc	___flmul@prod+3,f
  5172     03D7  0855               	movf	___flmul@b+2,w
  5173     03D8  00F3               	movwf	__Umul8_16@multiplicand
  5174     03D9  0858               	movf	___flmul@a+1,w
  5175     03DA  318B  2326  3182   	fcall	__Umul8_16
  5176     03DD  0874               	movf	?__Umul8_16+1,w
  5177     03DE  0020               	movlb	0	; select bank0
  5178     03DF  00EC               	movwf	___flmul@temp+1
  5179     03E0  0873               	movf	?__Umul8_16,w
  5180     03E1  00EB               	movwf	___flmul@temp
  5181     03E2  086B               	movf	___flmul@temp,w
  5182     03E3  07E7               	addwf	___flmul@prod,f
  5183     03E4  086C               	movf	___flmul@temp+1,w
  5184     03E5  3DE8               	addwfc	___flmul@prod+1,f
  5185     03E6  3000               	movlw	0
  5186     03E7  3DE9               	addwfc	___flmul@prod+2,f
  5187     03E8  3DEA               	addwfc	___flmul@prod+3,f
  5188     03E9  0855               	movf	___flmul@b+2,w
  5189     03EA  00F3               	movwf	__Umul8_16@multiplicand
  5190     03EB  0859               	movf	___flmul@a+2,w
  5191     03EC  318B  2326  3182   	fcall	__Umul8_16
  5192     03EF  0874               	movf	?__Umul8_16+1,w
  5193     03F0  0020               	movlb	0	; select bank0
  5194     03F1  00EC               	movwf	___flmul@temp+1
  5195     03F2  0873               	movf	?__Umul8_16,w
  5196     03F3  00EB               	movwf	___flmul@temp
  5197     03F4  086B               	movf	___flmul@temp,w
  5198     03F5  00DB               	movwf	??___flmul
  5199     03F6  086C               	movf	___flmul@temp+1,w
  5200     03F7  00DC               	movwf	??___flmul+1
  5201     03F8  01DD               	clrf	??___flmul+2
  5202     03F9  01DE               	clrf	??___flmul+3
  5203     03FA  3008               	movlw	8
  5204     03FB                     u4525:
  5205     03FB  35DB               	lslf	??___flmul,f
  5206     03FC  0DDC               	rlf	??___flmul+1,f
  5207     03FD  0DDD               	rlf	??___flmul+2,f
  5208     03FE  0DDE               	rlf	??___flmul+3,f
  5209     03FF  0B89               	decfsz	9,f
  5210     0400  2BFB               	goto	u4525
  5211     0401  085B               	movf	??___flmul,w
  5212     0402  07E7               	addwf	___flmul@prod,f
  5213     0403  085C               	movf	??___flmul+1,w
  5214     0404  3DE8               	addwfc	___flmul@prod+1,f
  5215     0405  085D               	movf	??___flmul+2,w
  5216     0406  3DE9               	addwfc	___flmul@prod+2,f
  5217     0407  085E               	movf	??___flmul+3,w
  5218     0408  3DEA               	addwfc	___flmul@prod+3,f
  5219     0409  0862               	movf	___flmul@grs,w
  5220     040A  00DB               	movwf	??___flmul
  5221     040B  0863               	movf	___flmul@grs+1,w
  5222     040C  00DC               	movwf	??___flmul+1
  5223     040D  0864               	movf	___flmul@grs+2,w
  5224     040E  00DD               	movwf	??___flmul+2
  5225     040F  0865               	movf	___flmul@grs+3,w
  5226     0410  00DE               	movwf	??___flmul+3
  5227     0411  3018               	movlw	24
  5228     0412                     u4535:
  5229     0412  36DE               	lsrf	??___flmul+3,f
  5230     0413  0CDD               	rrf	??___flmul+2,f
  5231     0414  0CDC               	rrf	??___flmul+1,f
  5232     0415  0CDB               	rrf	??___flmul,f
  5233     0416  0B89               	decfsz	9,f
  5234     0417  2C12               	goto	u4535
  5235     0418  085B               	movf	??___flmul,w
  5236     0419  07E7               	addwf	___flmul@prod,f
  5237     041A  085C               	movf	??___flmul+1,w
  5238     041B  3DE8               	addwfc	___flmul@prod+1,f
  5239     041C  085D               	movf	??___flmul+2,w
  5240     041D  3DE9               	addwfc	___flmul@prod+2,f
  5241     041E  085E               	movf	??___flmul+3,w
  5242     041F  3DEA               	addwfc	___flmul@prod+3,f
  5243     0420  3008               	movlw	8
  5244     0421                     u4545:
  5245     0421  35E2               	lslf	___flmul@grs,f
  5246     0422  0DE3               	rlf	___flmul@grs+1,f
  5247     0423  0DE4               	rlf	___flmul@grs+2,f
  5248     0424  0DE5               	rlf	___flmul@grs+3,f
  5249     0425  0B89               	decfsz	9,f
  5250     0426  2C21               	goto	u4545
  5251     0427  0866               	movf	___flmul@bexp,w
  5252     0428  0761               	addwf	___flmul@aexp,w
  5253     0429  00DB               	movwf	??___flmul
  5254     042A  01DC               	clrf	??___flmul+1
  5255     042B  0DDC               	rlf	??___flmul+1,f
  5256     042C  085B               	movf	??___flmul,w
  5257     042D  3E82               	addlw	130
  5258     042E  00EB               	movwf	___flmul@temp
  5259     042F  30FF               	movlw	255
  5260     0430  3D5C               	addwfc	??___flmul+1,w
  5261     0431  00EC               	movwf	___flmul@temp+1
  5262     0432                     l3813:
  5263     0432  1BE9               	btfsc	___flmul@prod+2,7
  5264     0433  2C49               	goto	l3815
  5265     0434  3001               	movlw	1
  5266     0435                     u4555:
  5267     0435  35E7               	lslf	___flmul@prod,f
  5268     0436  0DE8               	rlf	___flmul@prod+1,f
  5269     0437  0DE9               	rlf	___flmul@prod+2,f
  5270     0438  0DEA               	rlf	___flmul@prod+3,f
  5271     0439  0B89               	decfsz	9,f
  5272     043A  2C35               	goto	u4555
  5273     043B  1BE5               	btfsc	___flmul@grs+3,7
  5274     043C  1467               	bsf	___flmul@prod,0
  5275     043D  3001               	movlw	1
  5276     043E                     u4575:
  5277     043E  35E2               	lslf	___flmul@grs,f
  5278     043F  0DE3               	rlf	___flmul@grs+1,f
  5279     0440  0DE4               	rlf	___flmul@grs+2,f
  5280     0441  0DE5               	rlf	___flmul@grs+3,f
  5281     0442  0B89               	decfsz	9,f
  5282     0443  2C3E               	goto	u4575
  5283     0444  30FF               	movlw	255
  5284     0445  07EB               	addwf	___flmul@temp,f
  5285     0446  30FF               	movlw	255
  5286     0447  3DEC               	addwfc	___flmul@temp+1,f
  5287     0448  2C32               	goto	l3813
  5288     0449                     l3815:
  5289     0449  01E1               	clrf	___flmul@aexp
  5290     044A  1FE5               	btfss	___flmul@grs+3,7
  5291     044B  2C62               	goto	l3825
  5292     044C  30FF               	movlw	255
  5293     044D  0562               	andwf	___flmul@grs,w
  5294     044E  00DB               	movwf	??___flmul
  5295     044F  30FF               	movlw	255
  5296     0450  0563               	andwf	___flmul@grs+1,w
  5297     0451  00DC               	movwf	??___flmul+1
  5298     0452  30FF               	movlw	255
  5299     0453  0564               	andwf	___flmul@grs+2,w
  5300     0454  00DD               	movwf	??___flmul+2
  5301     0455  307F               	movlw	127
  5302     0456  0565               	andwf	___flmul@grs+3,w
  5303     0457  00DE               	movwf	??___flmul+3
  5304     0458  085E               	movf	??___flmul+3,w
  5305     0459  045D               	iorwf	??___flmul+2,w
  5306     045A  045C               	iorwf	??___flmul+1,w
  5307     045B  045B               	iorwf	??___flmul,w
  5308     045C  1903               	skipnz
  5309     045D  1867               	btfsc	___flmul@prod,0
  5310     045E  2C60               	goto	l3821
  5311     045F  2C62               	goto	l3825
  5312     0460                     l3821:
  5313     0460  01E1               	clrf	___flmul@aexp
  5314     0461  0AE1               	incf	___flmul@aexp,f
  5315     0462                     l3825:
  5316     0462  0861               	movf	___flmul@aexp,w
  5317     0463  1903               	btfsc	3,2
  5318     0464  2C8B               	goto	l3835
  5319     0465  3001               	movlw	1
  5320     0466  07E7               	addwf	___flmul@prod,f
  5321     0467  3000               	movlw	0
  5322     0468  3DE8               	addwfc	___flmul@prod+1,f
  5323     0469  3000               	movlw	0
  5324     046A  3DE9               	addwfc	___flmul@prod+2,f
  5325     046B  3000               	movlw	0
  5326     046C  3DEA               	addwfc	___flmul@prod+3,f
  5327     046D  1C6A               	btfss	___flmul@prod+3,0
  5328     046E  2C8B               	goto	l3835
  5329     046F  0867               	movf	___flmul@prod,w
  5330     0470  00DB               	movwf	??___flmul
  5331     0471  0868               	movf	___flmul@prod+1,w
  5332     0472  00DC               	movwf	??___flmul+1
  5333     0473  0869               	movf	___flmul@prod+2,w
  5334     0474  00DD               	movwf	??___flmul+2
  5335     0475  086A               	movf	___flmul@prod+3,w
  5336     0476  00DE               	movwf	??___flmul+3
  5337     0477  3001               	movlw	1
  5338     0478  00DF               	movwf	??___flmul+4
  5339     0479                     u4645:
  5340     0479  37DE               	asrf	??___flmul+3,f
  5341     047A  0CDD               	rrf	??___flmul+2,f
  5342     047B  0CDC               	rrf	??___flmul+1,f
  5343     047C  0CDB               	rrf	??___flmul,f
  5344     047D  0BDF               	decfsz	??___flmul+4,f
  5345     047E  2C79               	goto	u4645
  5346     047F  085E               	movf	??___flmul+3,w
  5347     0480  00EA               	movwf	___flmul@prod+3
  5348     0481  085D               	movf	??___flmul+2,w
  5349     0482  00E9               	movwf	___flmul@prod+2
  5350     0483  085C               	movf	??___flmul+1,w
  5351     0484  00E8               	movwf	___flmul@prod+1
  5352     0485  085B               	movf	??___flmul,w
  5353     0486  00E7               	movwf	___flmul@prod
  5354     0487  3001               	movlw	1
  5355     0488  07EB               	addwf	___flmul@temp,f
  5356     0489  3000               	movlw	0
  5357     048A  3DEC               	addwfc	___flmul@temp+1,f
  5358     048B                     l3835:
  5359     048B  086C               	movf	___flmul@temp+1,w
  5360     048C  3A80               	xorlw	128
  5361     048D  00DB               	movwf	??___flmul
  5362     048E  3080               	movlw	128
  5363     048F  025B               	subwf	??___flmul,w
  5364     0490  1D03               	skipz
  5365     0491  2C94               	goto	u4655
  5366     0492  30FF               	movlw	255
  5367     0493  026B               	subwf	___flmul@temp,w
  5368     0494                     u4655:
  5369     0494  1C03               	skipc
  5370     0495  2CA0               	goto	l3839
  5371     0496  307F               	movlw	127
  5372     0497  0020               	movlb	0	; select bank0
  5373     0498  00EA               	movwf	___flmul@prod+3
  5374     0499  3080               	movlw	128
  5375     049A  00E9               	movwf	___flmul@prod+2
  5376     049B  3000               	movlw	0
  5377     049C  00E8               	movwf	___flmul@prod+1
  5378     049D  3000               	movlw	0
  5379     049E  00E7               	movwf	___flmul@prod
  5380     049F  2CC6               	goto	l1122
  5381     04A0                     l3839:
  5382     04A0  0020               	movlb	0	; select bank0
  5383     04A1  086C               	movf	___flmul@temp+1,w
  5384     04A2  3A80               	xorlw	128
  5385     04A3  00DB               	movwf	??___flmul
  5386     04A4  3080               	movlw	128
  5387     04A5  025B               	subwf	??___flmul,w
  5388     04A6  1D03               	skipz
  5389     04A7  2CAA               	goto	u4665
  5390     04A8  3001               	movlw	1
  5391     04A9  026B               	subwf	___flmul@temp,w
  5392     04AA                     u4665:
  5393     04AA  1803               	skipnc
  5394     04AB  2CB7               	goto	l3845
  5395     04AC  3000               	movlw	0
  5396     04AD  0020               	movlb	0	; select bank0
  5397     04AE  00EA               	movwf	___flmul@prod+3
  5398     04AF  3000               	movlw	0
  5399     04B0  00E9               	movwf	___flmul@prod+2
  5400     04B1  3000               	movlw	0
  5401     04B2  00E8               	movwf	___flmul@prod+1
  5402     04B3  3000               	movlw	0
  5403     04B4  00E7               	movwf	___flmul@prod
  5404     04B5  01E0               	clrf	___flmul@sign
  5405     04B6  2CC6               	goto	l1122
  5406     04B7                     l3845:
  5407     04B7  0020               	movlb	0	; select bank0
  5408     04B8  086B               	movf	___flmul@temp,w
  5409     04B9  00E6               	movwf	___flmul@bexp
  5410     04BA  30FF               	movlw	255
  5411     04BB  05E7               	andwf	___flmul@prod,f
  5412     04BC  30FF               	movlw	255
  5413     04BD  05E8               	andwf	___flmul@prod+1,f
  5414     04BE  307F               	movlw	127
  5415     04BF  05E9               	andwf	___flmul@prod+2,f
  5416     04C0  3000               	movlw	0
  5417     04C1  05EA               	andwf	___flmul@prod+3,f
  5418     04C2  1866               	btfsc	___flmul@bexp,0
  5419     04C3  17E9               	bsf	___flmul@prod+2,7
  5420     04C4  3666               	lsrf	___flmul@bexp,w
  5421     04C5  00EA               	movwf	___flmul@prod+3
  5422     04C6                     l1122:
  5423     04C6  0860               	movf	___flmul@sign,w
  5424     04C7  00DB               	movwf	??___flmul
  5425     04C8  085B               	movf	??___flmul,w
  5426     04C9  04EA               	iorwf	___flmul@prod+3,f
  5427     04CA  086A               	movf	___flmul@prod+3,w
  5428     04CB  00D6               	movwf	?___flmul+3
  5429     04CC  0869               	movf	___flmul@prod+2,w
  5430     04CD  00D5               	movwf	?___flmul+2
  5431     04CE  0868               	movf	___flmul@prod+1,w
  5432     04CF  00D4               	movwf	?___flmul+1
  5433     04D0  0867               	movf	___flmul@prod,w
  5434     04D1  00D3               	movwf	?___flmul
  5435     04D2  0008               	return
  5436     04D3                     __end_of___flmul:
  5437                           
  5438                           	psect	text11
  5439     0B26                     __ptext11:	
  5440 ;; *************** function __Umul8_16 *****************
  5441 ;; Defined at:
  5442 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul8_16.c"
  5443 ;; Parameters:    Size  Location     Type
  5444 ;;  multiplier      1    wreg     unsigned char 
  5445 ;;  multiplicand    1    3[COMMON] unsigned char 
  5446 ;; Auto vars:     Size  Location     Type
  5447 ;;  multiplier      1    4[BANK0 ] unsigned char 
  5448 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  5449 ;;  product         2    0[BANK0 ] unsigned int 
  5450 ;; Return value:  Size  Location     Type
  5451 ;;                  2    3[COMMON] unsigned int 
  5452 ;; Registers used:
  5453 ;;		wreg, status,2, status,0
  5454 ;; Tracked objects:
  5455 ;;		On entry : 0/0
  5456 ;;		On exit  : 0/0
  5457 ;;		Unchanged: 0/0
  5458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5459 ;;      Params:         2       0       0       0       0       0
  5460 ;;      Locals:         0       5       0       0       0       0
  5461 ;;      Temps:          2       0       0       0       0       0
  5462 ;;      Totals:         4       5       0       0       0       0
  5463 ;;Total ram usage:        9 bytes
  5464 ;; Hardware stack levels used: 1
  5465 ;; Hardware stack levels required when called: 4
  5466 ;; This function calls:
  5467 ;;		Nothing
  5468 ;; This function is called by:
  5469 ;;		___flmul
  5470 ;; This function uses a non-reentrant model
  5471 ;;
  5472                           
  5473     0B26                     __Umul8_16:	
  5474                           ;psect for function __Umul8_16
  5475                           
  5476                           
  5477                           ;incstack = 0
  5478                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5479                           ;__Umul8_16@multiplier stored from wreg
  5480     0B26  0020               	movlb	0	; select bank0
  5481     0B27  00A4               	movwf	__Umul8_16@multiplier
  5482     0B28  01A0               	clrf	__Umul8_16@product
  5483     0B29  01A1               	clrf	__Umul8_16@product+1
  5484     0B2A  0873               	movf	__Umul8_16@multiplicand,w
  5485     0B2B  00F5               	movwf	??__Umul8_16
  5486     0B2C  01F6               	clrf	??__Umul8_16+1
  5487     0B2D  0875               	movf	??__Umul8_16,w
  5488     0B2E  00A2               	movwf	__Umul8_16@word_mpld
  5489     0B2F  0876               	movf	??__Umul8_16+1,w
  5490     0B30  00A3               	movwf	__Umul8_16@word_mpld+1
  5491     0B31                     l3561:
  5492     0B31  1C24               	btfss	__Umul8_16@multiplier,0
  5493     0B32  2B37               	goto	l1129
  5494     0B33  0822               	movf	__Umul8_16@word_mpld,w
  5495     0B34  07A0               	addwf	__Umul8_16@product,f
  5496     0B35  0823               	movf	__Umul8_16@word_mpld+1,w
  5497     0B36  3DA1               	addwfc	__Umul8_16@product+1,f
  5498     0B37                     l1129:
  5499     0B37  3001               	movlw	1
  5500     0B38                     u4115:
  5501     0B38  35A2               	lslf	__Umul8_16@word_mpld,f
  5502     0B39  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  5503     0B3A  0B89               	decfsz	9,f
  5504     0B3B  2B38               	goto	u4115
  5505     0B3C  1003               	clrc
  5506     0B3D  0CA4               	rrf	__Umul8_16@multiplier,f
  5507     0B3E  0824               	movf	__Umul8_16@multiplier,w
  5508     0B3F  1D03               	btfss	3,2
  5509     0B40  2B31               	goto	l3561
  5510     0B41  0821               	movf	__Umul8_16@product+1,w
  5511     0B42  00F4               	movwf	?__Umul8_16+1
  5512     0B43  0820               	movf	__Umul8_16@product,w
  5513     0B44  00F3               	movwf	?__Umul8_16
  5514     0B45  0008               	return
  5515     0B46                     __end_of__Umul8_16:
  5516                           
  5517                           	psect	text12
  5518     0685                     __ptext12:	
  5519 ;; *************** function ___fldiv *****************
  5520 ;; Defined at:
  5521 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;  a               4    5[BANK0 ] unsigned int 
  5524 ;;  b               4    9[BANK0 ] unsigned int 
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;  grs             4   25[BANK0 ] unsigned long 
  5527 ;;  rem             4   18[BANK0 ] unsigned long 
  5528 ;;  new_exp         2   23[BANK0 ] int 
  5529 ;;  aexp            1   30[BANK0 ] unsigned char 
  5530 ;;  bexp            1   29[BANK0 ] unsigned char 
  5531 ;;  sign            1   22[BANK0 ] unsigned char 
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  4    5[BANK0 ] unsigned char 
  5534 ;; Registers used:
  5535 ;;		wreg, status,2, status,0
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5541 ;;      Params:         0       8       0       0       0       0
  5542 ;;      Locals:         0      13       0       0       0       0
  5543 ;;      Temps:          0       5       0       0       0       0
  5544 ;;      Totals:         0      26       0       0       0       0
  5545 ;;Total ram usage:       26 bytes
  5546 ;; Hardware stack levels used: 1
  5547 ;; Hardware stack levels required when called: 4
  5548 ;; This function calls:
  5549 ;;		Nothing
  5550 ;; This function is called by:
  5551 ;;		__ReadSensor
  5552 ;;		_approximateLog
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556     0685                     ___fldiv:	
  5557                           ;psect for function ___fldiv
  5558                           
  5559                           
  5560                           ;incstack = 0
  5561                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  5562     0685  0020               	movlb	0	; select bank0
  5563     0686  082C               	movf	___fldiv@b+3,w
  5564     0687  3980               	andlw	128
  5565     0688  00B6               	movwf	___fldiv@sign
  5566     0689  352C               	lslf	___fldiv@b+3,w
  5567     068A  00BD               	movwf	___fldiv@bexp
  5568     068B  1BAB               	btfsc	___fldiv@b+2,7
  5569     068C  143D               	bsf	___fldiv@bexp,0
  5570     068D  083D               	movf	___fldiv@bexp,w
  5571     068E  1903               	btfsc	3,2
  5572     068F  2E9E               	goto	l3595
  5573     0690  0A3D               	incf	___fldiv@bexp,w
  5574     0691  1D03               	btfss	3,2
  5575     0692  2E9B               	goto	l3591
  5576     0693  3000               	movlw	0
  5577     0694  00AC               	movwf	___fldiv@b+3
  5578     0695  3000               	movlw	0
  5579     0696  00AB               	movwf	___fldiv@b+2
  5580     0697  3000               	movlw	0
  5581     0698  00AA               	movwf	___fldiv@b+1
  5582     0699  3000               	movlw	0
  5583     069A  00A9               	movwf	___fldiv@b
  5584     069B                     l3591:
  5585     069B  17AB               	bsf	___fldiv@b+2,7
  5586     069C  01AC               	clrf	___fldiv@b+3
  5587     069D  2EA6               	goto	l3597
  5588     069E                     l3595:
  5589     069E  3000               	movlw	0
  5590     069F  00AC               	movwf	___fldiv@b+3
  5591     06A0  3000               	movlw	0
  5592     06A1  00AB               	movwf	___fldiv@b+2
  5593     06A2  3000               	movlw	0
  5594     06A3  00AA               	movwf	___fldiv@b+1
  5595     06A4  3000               	movlw	0
  5596     06A5  00A9               	movwf	___fldiv@b
  5597     06A6                     l3597:
  5598     06A6  0828               	movf	___fldiv@a+3,w
  5599     06A7  3980               	andlw	128
  5600     06A8  00AD               	movwf	??___fldiv
  5601     06A9  082D               	movf	??___fldiv,w
  5602     06AA  06B6               	xorwf	___fldiv@sign,f
  5603     06AB  3528               	lslf	___fldiv@a+3,w
  5604     06AC  00BE               	movwf	___fldiv@aexp
  5605     06AD  1BA7               	btfsc	___fldiv@a+2,7
  5606     06AE  143E               	bsf	___fldiv@aexp,0
  5607     06AF  083E               	movf	___fldiv@aexp,w
  5608     06B0  1903               	btfsc	3,2
  5609     06B1  2EC0               	goto	l3615
  5610     06B2  0A3E               	incf	___fldiv@aexp,w
  5611     06B3  1D03               	btfss	3,2
  5612     06B4  2EBD               	goto	l3611
  5613     06B5  3000               	movlw	0
  5614     06B6  00A8               	movwf	___fldiv@a+3
  5615     06B7  3000               	movlw	0
  5616     06B8  00A7               	movwf	___fldiv@a+2
  5617     06B9  3000               	movlw	0
  5618     06BA  00A6               	movwf	___fldiv@a+1
  5619     06BB  3000               	movlw	0
  5620     06BC  00A5               	movwf	___fldiv@a
  5621     06BD                     l3611:
  5622     06BD  17A7               	bsf	___fldiv@a+2,7
  5623     06BE  01A8               	clrf	___fldiv@a+3
  5624     06BF  2EC8               	goto	l1070
  5625     06C0                     l3615:
  5626     06C0  3000               	movlw	0
  5627     06C1  00A8               	movwf	___fldiv@a+3
  5628     06C2  3000               	movlw	0
  5629     06C3  00A7               	movwf	___fldiv@a+2
  5630     06C4  3000               	movlw	0
  5631     06C5  00A6               	movwf	___fldiv@a+1
  5632     06C6  3000               	movlw	0
  5633     06C7  00A5               	movwf	___fldiv@a
  5634     06C8                     l1070:
  5635     06C8  0828               	movf	___fldiv@a+3,w
  5636     06C9  0427               	iorwf	___fldiv@a+2,w
  5637     06CA  0426               	iorwf	___fldiv@a+1,w
  5638     06CB  0425               	iorwf	___fldiv@a,w
  5639     06CC  1D03               	skipz
  5640     06CD  2EE7               	goto	l3625
  5641     06CE  3000               	movlw	0
  5642     06CF  00AC               	movwf	___fldiv@b+3
  5643     06D0  3000               	movlw	0
  5644     06D1  00AB               	movwf	___fldiv@b+2
  5645     06D2  3000               	movlw	0
  5646     06D3  00AA               	movwf	___fldiv@b+1
  5647     06D4  3000               	movlw	0
  5648     06D5  00A9               	movwf	___fldiv@b
  5649     06D6  3080               	movlw	128
  5650     06D7  04AB               	iorwf	___fldiv@b+2,f
  5651     06D8  307F               	movlw	127
  5652     06D9  04AC               	iorwf	___fldiv@b+3,f
  5653     06DA                     L2:
  5654     06DA  0836               	movf	___fldiv@sign,w
  5655     06DB  00AD               	movwf	??___fldiv
  5656     06DC  082D               	movf	??___fldiv,w
  5657     06DD  04AC               	iorwf	___fldiv@b+3,f
  5658     06DE  082C               	movf	___fldiv@b+3,w
  5659     06DF  00A8               	movwf	?___fldiv+3
  5660     06E0  082B               	movf	___fldiv@b+2,w
  5661     06E1  00A7               	movwf	?___fldiv+2
  5662     06E2  082A               	movf	___fldiv@b+1,w
  5663     06E3  00A6               	movwf	?___fldiv+1
  5664     06E4  0829               	movf	___fldiv@b,w
  5665     06E5  00A5               	movwf	?___fldiv
  5666     06E6  0008               	return
  5667     06E7                     l3625:
  5668     06E7  083D               	movf	___fldiv@bexp,w
  5669     06E8  1D03               	btfss	3,2
  5670     06E9  2EF3               	goto	l3631
  5671     06EA  3000               	movlw	0
  5672     06EB  00A8               	movwf	?___fldiv+3
  5673     06EC  3000               	movlw	0
  5674     06ED  00A7               	movwf	?___fldiv+2
  5675     06EE  3000               	movlw	0
  5676     06EF  00A6               	movwf	?___fldiv+1
  5677     06F0  3000               	movlw	0
  5678     06F1  00A5               	movwf	?___fldiv
  5679     06F2  0008               	return
  5680     06F3                     l3631:
  5681     06F3  083D               	movf	___fldiv@bexp,w
  5682     06F4  00AD               	movwf	??___fldiv
  5683     06F5  01AE               	clrf	??___fldiv+1
  5684     06F6  082E               	movf	??___fldiv+1,w
  5685     06F7  00B0               	movwf	??___fldiv+3
  5686     06F8  083E               	movf	___fldiv@aexp,w
  5687     06F9  022D               	subwf	??___fldiv,w
  5688     06FA  00AF               	movwf	??___fldiv+2
  5689     06FB  1C03               	skipc
  5690     06FC  03B0               	decf	??___fldiv+3,f
  5691     06FD  082F               	movf	??___fldiv+2,w
  5692     06FE  3E7F               	addlw	127
  5693     06FF  00B7               	movwf	___fldiv@new_exp
  5694     0700  3000               	movlw	0
  5695     0701  3D30               	addwfc	??___fldiv+3,w
  5696     0702  00B8               	movwf	___fldiv@new_exp+1
  5697     0703  082C               	movf	___fldiv@b+3,w
  5698     0704  00B5               	movwf	___fldiv@rem+3
  5699     0705  082B               	movf	___fldiv@b+2,w
  5700     0706  00B4               	movwf	___fldiv@rem+2
  5701     0707  082A               	movf	___fldiv@b+1,w
  5702     0708  00B3               	movwf	___fldiv@rem+1
  5703     0709  0829               	movf	___fldiv@b,w
  5704     070A  00B2               	movwf	___fldiv@rem
  5705     070B  3000               	movlw	0
  5706     070C  00AC               	movwf	___fldiv@b+3
  5707     070D  3000               	movlw	0
  5708     070E  00AB               	movwf	___fldiv@b+2
  5709     070F  3000               	movlw	0
  5710     0710  00AA               	movwf	___fldiv@b+1
  5711     0711  3000               	movlw	0
  5712     0712  00A9               	movwf	___fldiv@b
  5713     0713  3000               	movlw	0
  5714     0714  00BC               	movwf	___fldiv@grs+3
  5715     0715  3000               	movlw	0
  5716     0716  00BB               	movwf	___fldiv@grs+2
  5717     0717  3000               	movlw	0
  5718     0718  00BA               	movwf	___fldiv@grs+1
  5719     0719  3000               	movlw	0
  5720     071A  00B9               	movwf	___fldiv@grs
  5721     071B  01BE               	clrf	___fldiv@aexp
  5722     071C                     l3659:
  5723     071C  301A               	movlw	26
  5724     071D  023E               	subwf	___fldiv@aexp,w
  5725     071E  1803               	btfsc	3,0
  5726     071F  2F58               	goto	l3661
  5727     0720  083E               	movf	___fldiv@aexp,w
  5728     0721  1903               	btfsc	3,2
  5729     0722  2F3A               	goto	l3651
  5730     0723  3001               	movlw	1
  5731     0724                     u4225:
  5732     0724  35B2               	lslf	___fldiv@rem,f
  5733     0725  0DB3               	rlf	___fldiv@rem+1,f
  5734     0726  0DB4               	rlf	___fldiv@rem+2,f
  5735     0727  0DB5               	rlf	___fldiv@rem+3,f
  5736     0728  0B89               	decfsz	9,f
  5737     0729  2F24               	goto	u4225
  5738     072A  3001               	movlw	1
  5739     072B                     u4235:
  5740     072B  35A9               	lslf	___fldiv@b,f
  5741     072C  0DAA               	rlf	___fldiv@b+1,f
  5742     072D  0DAB               	rlf	___fldiv@b+2,f
  5743     072E  0DAC               	rlf	___fldiv@b+3,f
  5744     072F  0B89               	decfsz	9,f
  5745     0730  2F2B               	goto	u4235
  5746     0731  1BBC               	btfsc	___fldiv@grs+3,7
  5747     0732  1429               	bsf	___fldiv@b,0
  5748     0733  3001               	movlw	1
  5749     0734                     u4255:
  5750     0734  35B9               	lslf	___fldiv@grs,f
  5751     0735  0DBA               	rlf	___fldiv@grs+1,f
  5752     0736  0DBB               	rlf	___fldiv@grs+2,f
  5753     0737  0DBC               	rlf	___fldiv@grs+3,f
  5754     0738  0B89               	decfsz	9,f
  5755     0739  2F34               	goto	u4255
  5756     073A                     l3651:
  5757     073A  0828               	movf	___fldiv@a+3,w
  5758     073B  0235               	subwf	___fldiv@rem+3,w
  5759     073C  1D03               	skipz
  5760     073D  2F48               	goto	u4265
  5761     073E  0827               	movf	___fldiv@a+2,w
  5762     073F  0234               	subwf	___fldiv@rem+2,w
  5763     0740  1D03               	skipz
  5764     0741  2F48               	goto	u4265
  5765     0742  0826               	movf	___fldiv@a+1,w
  5766     0743  0233               	subwf	___fldiv@rem+1,w
  5767     0744  1D03               	skipz
  5768     0745  2F48               	goto	u4265
  5769     0746  0825               	movf	___fldiv@a,w
  5770     0747  0232               	subwf	___fldiv@rem,w
  5771     0748                     u4265:
  5772     0748  1C03               	skipc
  5773     0749  2F53               	goto	l3657
  5774     074A  173C               	bsf	___fldiv@grs+3,6
  5775     074B  0825               	movf	___fldiv@a,w
  5776     074C  02B2               	subwf	___fldiv@rem,f
  5777     074D  0826               	movf	___fldiv@a+1,w
  5778     074E  3BB3               	subwfb	___fldiv@rem+1,f
  5779     074F  0827               	movf	___fldiv@a+2,w
  5780     0750  3BB4               	subwfb	___fldiv@rem+2,f
  5781     0751  0828               	movf	___fldiv@a+3,w
  5782     0752  3BB5               	subwfb	___fldiv@rem+3,f
  5783     0753                     l3657:
  5784     0753  3001               	movlw	1
  5785     0754  00AD               	movwf	??___fldiv
  5786     0755  082D               	movf	??___fldiv,w
  5787     0756  07BE               	addwf	___fldiv@aexp,f
  5788     0757  2F1C               	goto	l3659
  5789     0758                     l3661:
  5790     0758  0835               	movf	___fldiv@rem+3,w
  5791     0759  0434               	iorwf	___fldiv@rem+2,w
  5792     075A  0433               	iorwf	___fldiv@rem+1,w
  5793     075B  0432               	iorwf	___fldiv@rem,w
  5794     075C  1D03               	btfss	3,2
  5795     075D  1439               	bsf	___fldiv@grs,0
  5796     075E                     l3675:
  5797     075E  1BAB               	btfsc	___fldiv@b+2,7
  5798     075F  2F75               	goto	l3677
  5799     0760  3001               	movlw	1
  5800     0761                     u4295:
  5801     0761  35A9               	lslf	___fldiv@b,f
  5802     0762  0DAA               	rlf	___fldiv@b+1,f
  5803     0763  0DAB               	rlf	___fldiv@b+2,f
  5804     0764  0DAC               	rlf	___fldiv@b+3,f
  5805     0765  0B89               	decfsz	9,f
  5806     0766  2F61               	goto	u4295
  5807     0767  1BBC               	btfsc	___fldiv@grs+3,7
  5808     0768  1429               	bsf	___fldiv@b,0
  5809     0769  3001               	movlw	1
  5810     076A                     u4315:
  5811     076A  35B9               	lslf	___fldiv@grs,f
  5812     076B  0DBA               	rlf	___fldiv@grs+1,f
  5813     076C  0DBB               	rlf	___fldiv@grs+2,f
  5814     076D  0DBC               	rlf	___fldiv@grs+3,f
  5815     076E  0B89               	decfsz	9,f
  5816     076F  2F6A               	goto	u4315
  5817     0770  30FF               	movlw	255
  5818     0771  07B7               	addwf	___fldiv@new_exp,f
  5819     0772  30FF               	movlw	255
  5820     0773  3DB8               	addwfc	___fldiv@new_exp+1,f
  5821     0774  2F5E               	goto	l3675
  5822     0775                     l3677:
  5823     0775  01BE               	clrf	___fldiv@aexp
  5824     0776  1FBC               	btfss	___fldiv@grs+3,7
  5825     0777  2F8E               	goto	l3687
  5826     0778  30FF               	movlw	255
  5827     0779  0539               	andwf	___fldiv@grs,w
  5828     077A  00AD               	movwf	??___fldiv
  5829     077B  30FF               	movlw	255
  5830     077C  053A               	andwf	___fldiv@grs+1,w
  5831     077D  00AE               	movwf	??___fldiv+1
  5832     077E  30FF               	movlw	255
  5833     077F  053B               	andwf	___fldiv@grs+2,w
  5834     0780  00AF               	movwf	??___fldiv+2
  5835     0781  307F               	movlw	127
  5836     0782  053C               	andwf	___fldiv@grs+3,w
  5837     0783  00B0               	movwf	??___fldiv+3
  5838     0784  0830               	movf	??___fldiv+3,w
  5839     0785  042F               	iorwf	??___fldiv+2,w
  5840     0786  042E               	iorwf	??___fldiv+1,w
  5841     0787  042D               	iorwf	??___fldiv,w
  5842     0788  1903               	skipnz
  5843     0789  1829               	btfsc	___fldiv@b,0
  5844     078A  2F8C               	goto	l3683
  5845     078B  2F8E               	goto	l3687
  5846     078C                     l3683:
  5847     078C  01BE               	clrf	___fldiv@aexp
  5848     078D  0ABE               	incf	___fldiv@aexp,f
  5849     078E                     l3687:
  5850     078E  083E               	movf	___fldiv@aexp,w
  5851     078F  1903               	btfsc	3,2
  5852     0790  2FB7               	goto	l3697
  5853     0791  3001               	movlw	1
  5854     0792  07A9               	addwf	___fldiv@b,f
  5855     0793  3000               	movlw	0
  5856     0794  3DAA               	addwfc	___fldiv@b+1,f
  5857     0795  3000               	movlw	0
  5858     0796  3DAB               	addwfc	___fldiv@b+2,f
  5859     0797  3000               	movlw	0
  5860     0798  3DAC               	addwfc	___fldiv@b+3,f
  5861     0799  1C2C               	btfss	___fldiv@b+3,0
  5862     079A  2FB7               	goto	l3697
  5863     079B  0829               	movf	___fldiv@b,w
  5864     079C  00AD               	movwf	??___fldiv
  5865     079D  082A               	movf	___fldiv@b+1,w
  5866     079E  00AE               	movwf	??___fldiv+1
  5867     079F  082B               	movf	___fldiv@b+2,w
  5868     07A0  00AF               	movwf	??___fldiv+2
  5869     07A1  082C               	movf	___fldiv@b+3,w
  5870     07A2  00B0               	movwf	??___fldiv+3
  5871     07A3  3001               	movlw	1
  5872     07A4  00B1               	movwf	??___fldiv+4
  5873     07A5                     u4385:
  5874     07A5  37B0               	asrf	??___fldiv+3,f
  5875     07A6  0CAF               	rrf	??___fldiv+2,f
  5876     07A7  0CAE               	rrf	??___fldiv+1,f
  5877     07A8  0CAD               	rrf	??___fldiv,f
  5878     07A9  0BB1               	decfsz	??___fldiv+4,f
  5879     07AA  2FA5               	goto	u4385
  5880     07AB  0830               	movf	??___fldiv+3,w
  5881     07AC  00AC               	movwf	___fldiv@b+3
  5882     07AD  082F               	movf	??___fldiv+2,w
  5883     07AE  00AB               	movwf	___fldiv@b+2
  5884     07AF  082E               	movf	??___fldiv+1,w
  5885     07B0  00AA               	movwf	___fldiv@b+1
  5886     07B1  082D               	movf	??___fldiv,w
  5887     07B2  00A9               	movwf	___fldiv@b
  5888     07B3  3001               	movlw	1
  5889     07B4  07B7               	addwf	___fldiv@new_exp,f
  5890     07B5  3000               	movlw	0
  5891     07B6  3DB8               	addwfc	___fldiv@new_exp+1,f
  5892     07B7                     l3697:
  5893     07B7  0838               	movf	___fldiv@new_exp+1,w
  5894     07B8  3A80               	xorlw	128
  5895     07B9  00AD               	movwf	??___fldiv
  5896     07BA  3080               	movlw	128
  5897     07BB  022D               	subwf	??___fldiv,w
  5898     07BC  1D03               	skipz
  5899     07BD  2FC0               	goto	u4395
  5900     07BE  30FF               	movlw	255
  5901     07BF  0237               	subwf	___fldiv@new_exp,w
  5902     07C0                     u4395:
  5903     07C0  1C03               	skipc
  5904     07C1  2FCF               	goto	l1091
  5905     07C2  30FF               	movlw	255
  5906     07C3  0020               	movlb	0	; select bank0
  5907     07C4  00B7               	movwf	___fldiv@new_exp
  5908     07C5  3000               	movlw	0
  5909     07C6  00B8               	movwf	___fldiv@new_exp+1
  5910     07C7  3000               	movlw	0
  5911     07C8  00AC               	movwf	___fldiv@b+3
  5912     07C9  3000               	movlw	0
  5913     07CA  00AB               	movwf	___fldiv@b+2
  5914     07CB  3000               	movlw	0
  5915     07CC  00AA               	movwf	___fldiv@b+1
  5916     07CD  3000               	movlw	0
  5917     07CE  00A9               	movwf	___fldiv@b
  5918     07CF                     l1091:
  5919     07CF  0020               	movlb	0	; select bank0
  5920     07D0  0838               	movf	___fldiv@new_exp+1,w
  5921     07D1  3A80               	xorlw	128
  5922     07D2  00AD               	movwf	??___fldiv
  5923     07D3  3080               	movlw	128
  5924     07D4  022D               	subwf	??___fldiv,w
  5925     07D5  1D03               	skipz
  5926     07D6  2FD9               	goto	u4405
  5927     07D7  3001               	movlw	1
  5928     07D8  0237               	subwf	___fldiv@new_exp,w
  5929     07D9                     u4405:
  5930     07D9  1803               	skipnc
  5931     07DA  2FE7               	goto	l1092
  5932     07DB  0020               	movlb	0	; select bank0
  5933     07DC  01B7               	clrf	___fldiv@new_exp
  5934     07DD  01B8               	clrf	___fldiv@new_exp+1
  5935     07DE  3000               	movlw	0
  5936     07DF  00AC               	movwf	___fldiv@b+3
  5937     07E0  3000               	movlw	0
  5938     07E1  00AB               	movwf	___fldiv@b+2
  5939     07E2  3000               	movlw	0
  5940     07E3  00AA               	movwf	___fldiv@b+1
  5941     07E4  3000               	movlw	0
  5942     07E5  00A9               	movwf	___fldiv@b
  5943     07E6  01B6               	clrf	___fldiv@sign
  5944     07E7                     l1092:
  5945     07E7  0020               	movlb	0	; select bank0
  5946     07E8  0837               	movf	___fldiv@new_exp,w
  5947     07E9  00BD               	movwf	___fldiv@bexp
  5948     07EA  1C3D               	btfss	___fldiv@bexp,0
  5949     07EB  2FEE               	goto	l3711
  5950     07EC  17AB               	bsf	___fldiv@b+2,7
  5951     07ED  2FF2               	goto	l1094
  5952     07EE                     l3711:
  5953     07EE  307F               	movlw	127
  5954     07EF  00AD               	movwf	??___fldiv
  5955     07F0  082D               	movf	??___fldiv,w
  5956     07F1  05AB               	andwf	___fldiv@b+2,f
  5957     07F2                     l1094:
  5958     07F2  363D               	lsrf	___fldiv@bexp,w
  5959     07F3  00AC               	movwf	___fldiv@b+3
  5960     07F4  2EDA               	goto	L2
  5961     07F5                     __end_of___fldiv:
  5962                           
  5963                           	psect	text13
  5964     0D98                     __ptext13:	
  5965 ;; *************** function ___xxtofl *****************
  5966 ;; Defined at:
  5967 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  5968 ;; Parameters:    Size  Location     Type
  5969 ;;  sign            1    wreg     unsigned char 
  5970 ;;  val             4    3[COMMON] long 
  5971 ;; Auto vars:     Size  Location     Type
  5972 ;;  sign            1    4[BANK0 ] unsigned char 
  5973 ;;  arg             4    6[BANK0 ] unsigned long 
  5974 ;;  exp             1    5[BANK0 ] unsigned char 
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  4    3[COMMON] unsigned char 
  5977 ;; Registers used:
  5978 ;;		wreg, status,2, status,0
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5984 ;;      Params:         4       0       0       0       0       0
  5985 ;;      Locals:         0       6       0       0       0       0
  5986 ;;      Temps:          0       4       0       0       0       0
  5987 ;;      Totals:         4      10       0       0       0       0
  5988 ;;Total ram usage:       14 bytes
  5989 ;; Hardware stack levels used: 1
  5990 ;; Hardware stack levels required when called: 4
  5991 ;; This function calls:
  5992 ;;		Nothing
  5993 ;; This function is called by:
  5994 ;;		__ReadSensor
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998     0D98                     ___xxtofl:	
  5999                           ;psect for function ___xxtofl
  6000                           
  6001                           
  6002                           ;incstack = 0
  6003                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6004                           ;___xxtofl@sign stored from wreg
  6005     0D98  0020               	movlb	0	; select bank0
  6006     0D99  00A4               	movwf	___xxtofl@sign
  6007     0D9A  0824               	movf	___xxtofl@sign,w
  6008     0D9B  1D03               	btfss	3,2
  6009     0D9C  1FF6               	btfss	___xxtofl@val+3,7
  6010     0D9D  2DAE               	goto	l3929
  6011     0D9E  0973               	comf	___xxtofl@val,w
  6012     0D9F  00A6               	movwf	___xxtofl@arg
  6013     0DA0  0974               	comf	___xxtofl@val+1,w
  6014     0DA1  00A7               	movwf	___xxtofl@arg+1
  6015     0DA2  0975               	comf	___xxtofl@val+2,w
  6016     0DA3  00A8               	movwf	___xxtofl@arg+2
  6017     0DA4  0976               	comf	___xxtofl@val+3,w
  6018     0DA5  00A9               	movwf	___xxtofl@arg+3
  6019     0DA6  0AA6               	incf	___xxtofl@arg,f
  6020     0DA7  1903               	skipnz
  6021     0DA8  0AA7               	incf	___xxtofl@arg+1,f
  6022     0DA9  1903               	skipnz
  6023     0DAA  0AA8               	incf	___xxtofl@arg+2,f
  6024     0DAB  1903               	skipnz
  6025     0DAC  0AA9               	incf	___xxtofl@arg+3,f
  6026     0DAD  2DB6               	goto	l1154
  6027     0DAE                     l3929:
  6028     0DAE  0876               	movf	___xxtofl@val+3,w
  6029     0DAF  00A9               	movwf	___xxtofl@arg+3
  6030     0DB0  0875               	movf	___xxtofl@val+2,w
  6031     0DB1  00A8               	movwf	___xxtofl@arg+2
  6032     0DB2  0874               	movf	___xxtofl@val+1,w
  6033     0DB3  00A7               	movwf	___xxtofl@arg+1
  6034     0DB4  0873               	movf	___xxtofl@val,w
  6035     0DB5  00A6               	movwf	___xxtofl@arg
  6036     0DB6                     l1154:
  6037     0DB6  0876               	movf	___xxtofl@val+3,w
  6038     0DB7  0475               	iorwf	___xxtofl@val+2,w
  6039     0DB8  0474               	iorwf	___xxtofl@val+1,w
  6040     0DB9  0473               	iorwf	___xxtofl@val,w
  6041     0DBA  1D03               	skipz
  6042     0DBB  2DC5               	goto	l3935
  6043     0DBC  3000               	movlw	0
  6044     0DBD  00F6               	movwf	?___xxtofl+3
  6045     0DBE  3000               	movlw	0
  6046     0DBF  00F5               	movwf	?___xxtofl+2
  6047     0DC0  3000               	movlw	0
  6048     0DC1  00F4               	movwf	?___xxtofl+1
  6049     0DC2  3000               	movlw	0
  6050     0DC3  00F3               	movwf	?___xxtofl
  6051     0DC4  0008               	return
  6052     0DC5                     l3935:
  6053     0DC5  3096               	movlw	150
  6054     0DC6  00A5               	movwf	___xxtofl@exp
  6055     0DC7                     l3939:
  6056     0DC7  30FE               	movlw	254
  6057     0DC8  0529               	andwf	___xxtofl@arg+3,w
  6058     0DC9  1903               	btfsc	3,2
  6059     0DCA  2DEA               	goto	l1160
  6060     0DCB  3001               	movlw	1
  6061     0DCC  00A0               	movwf	??___xxtofl
  6062     0DCD  0820               	movf	??___xxtofl,w
  6063     0DCE  07A5               	addwf	___xxtofl@exp,f
  6064     0DCF  3001               	movlw	1
  6065     0DD0                     u4865:
  6066     0DD0  36A9               	lsrf	___xxtofl@arg+3,f
  6067     0DD1  0CA8               	rrf	___xxtofl@arg+2,f
  6068     0DD2  0CA7               	rrf	___xxtofl@arg+1,f
  6069     0DD3  0CA6               	rrf	___xxtofl@arg,f
  6070     0DD4  0B89               	decfsz	9,f
  6071     0DD5  2DD0               	goto	u4865
  6072     0DD6  2DC7               	goto	l3939
  6073     0DD7                     l3941:
  6074     0DD7  3001               	movlw	1
  6075     0DD8  00A0               	movwf	??___xxtofl
  6076     0DD9  0820               	movf	??___xxtofl,w
  6077     0DDA  07A5               	addwf	___xxtofl@exp,f
  6078     0DDB  3001               	movlw	1
  6079     0DDC  07A6               	addwf	___xxtofl@arg,f
  6080     0DDD  3000               	movlw	0
  6081     0DDE  3DA7               	addwfc	___xxtofl@arg+1,f
  6082     0DDF  3000               	movlw	0
  6083     0DE0  3DA8               	addwfc	___xxtofl@arg+2,f
  6084     0DE1  3000               	movlw	0
  6085     0DE2  3DA9               	addwfc	___xxtofl@arg+3,f
  6086     0DE3  3001               	movlw	1
  6087     0DE4                     u4885:
  6088     0DE4  36A9               	lsrf	___xxtofl@arg+3,f
  6089     0DE5  0CA8               	rrf	___xxtofl@arg+2,f
  6090     0DE6  0CA7               	rrf	___xxtofl@arg+1,f
  6091     0DE7  0CA6               	rrf	___xxtofl@arg,f
  6092     0DE8  0B89               	decfsz	9,f
  6093     0DE9  2DE4               	goto	u4885
  6094     0DEA                     l1160:
  6095     0DEA  30FF               	movlw	255
  6096     0DEB  0529               	andwf	___xxtofl@arg+3,w
  6097     0DEC  1903               	btfsc	3,2
  6098     0DED  2DFC               	goto	l3949
  6099     0DEE  2DD7               	goto	l3941
  6100     0DEF                     l3951:
  6101     0DEF  3002               	movlw	2
  6102     0DF0  0225               	subwf	___xxtofl@exp,w
  6103     0DF1  1C03               	btfss	3,0
  6104     0DF2  2DFE               	goto	l1167
  6105     0DF3  3001               	movlw	1
  6106     0DF4  02A5               	subwf	___xxtofl@exp,f
  6107     0DF5  3001               	movlw	1
  6108     0DF6                     u4905:
  6109     0DF6  35A6               	lslf	___xxtofl@arg,f
  6110     0DF7  0DA7               	rlf	___xxtofl@arg+1,f
  6111     0DF8  0DA8               	rlf	___xxtofl@arg+2,f
  6112     0DF9  0DA9               	rlf	___xxtofl@arg+3,f
  6113     0DFA  0B89               	decfsz	9,f
  6114     0DFB  2DF6               	goto	u4905
  6115     0DFC                     l3949:
  6116     0DFC  1FA8               	btfss	___xxtofl@arg+2,7
  6117     0DFD  2DEF               	goto	l3951
  6118     0DFE                     l1167:
  6119     0DFE  1825               	btfsc	___xxtofl@exp,0
  6120     0DFF  2E08               	goto	l1168
  6121     0E00  30FF               	movlw	255
  6122     0E01  05A6               	andwf	___xxtofl@arg,f
  6123     0E02  30FF               	movlw	255
  6124     0E03  05A7               	andwf	___xxtofl@arg+1,f
  6125     0E04  307F               	movlw	127
  6126     0E05  05A8               	andwf	___xxtofl@arg+2,f
  6127     0E06  30FF               	movlw	255
  6128     0E07  05A9               	andwf	___xxtofl@arg+3,f
  6129     0E08                     l1168:
  6130     0E08  1003               	clrc
  6131     0E09  0CA5               	rrf	___xxtofl@exp,f
  6132     0E0A  0825               	movf	___xxtofl@exp,w
  6133     0E0B  00A0               	movwf	??___xxtofl
  6134     0E0C  01A1               	clrf	??___xxtofl+1
  6135     0E0D  01A2               	clrf	??___xxtofl+2
  6136     0E0E  01A3               	clrf	??___xxtofl+3
  6137     0E0F  3018               	movlw	24
  6138     0E10                     u4945:
  6139     0E10  35A0               	lslf	??___xxtofl,f
  6140     0E11  0DA1               	rlf	??___xxtofl+1,f
  6141     0E12  0DA2               	rlf	??___xxtofl+2,f
  6142     0E13  0DA3               	rlf	??___xxtofl+3,f
  6143     0E14  0B89               	decfsz	9,f
  6144     0E15  2E10               	goto	u4945
  6145     0E16  0820               	movf	??___xxtofl,w
  6146     0E17  04A6               	iorwf	___xxtofl@arg,f
  6147     0E18  0821               	movf	??___xxtofl+1,w
  6148     0E19  04A7               	iorwf	___xxtofl@arg+1,f
  6149     0E1A  0822               	movf	??___xxtofl+2,w
  6150     0E1B  04A8               	iorwf	___xxtofl@arg+2,f
  6151     0E1C  0823               	movf	??___xxtofl+3,w
  6152     0E1D  04A9               	iorwf	___xxtofl@arg+3,f
  6153     0E1E  0824               	movf	___xxtofl@sign,w
  6154     0E1F  1D03               	btfss	3,2
  6155     0E20  1FF6               	btfss	___xxtofl@val+3,7
  6156     0E21  2E23               	goto	l3963
  6157     0E22  17A9               	bsf	___xxtofl@arg+3,7
  6158     0E23                     l3963:
  6159     0E23  0829               	movf	___xxtofl@arg+3,w
  6160     0E24  00F6               	movwf	?___xxtofl+3
  6161     0E25  0828               	movf	___xxtofl@arg+2,w
  6162     0E26  00F5               	movwf	?___xxtofl+2
  6163     0E27  0827               	movf	___xxtofl@arg+1,w
  6164     0E28  00F4               	movwf	?___xxtofl+1
  6165     0E29  0826               	movf	___xxtofl@arg,w
  6166     0E2A  00F3               	movwf	?___xxtofl
  6167     0E2B  0008               	return
  6168     0E2C                     __end_of___xxtofl:
  6169                           
  6170                           	psect	text14
  6171     0CA3                     __ptext14:	
  6172 ;; *************** function ___fltol *****************
  6173 ;; Defined at:
  6174 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  6175 ;; Parameters:    Size  Location     Type
  6176 ;;  f1              4    3[COMMON] unsigned char 
  6177 ;; Auto vars:     Size  Location     Type
  6178 ;;  exp1            1    5[BANK0 ] unsigned char 
  6179 ;;  sign1           1    4[BANK0 ] unsigned char 
  6180 ;; Return value:  Size  Location     Type
  6181 ;;                  4    3[COMMON] long 
  6182 ;; Registers used:
  6183 ;;		wreg, status,2, status,0
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6189 ;;      Params:         4       0       0       0       0       0
  6190 ;;      Locals:         0       2       0       0       0       0
  6191 ;;      Temps:          0       4       0       0       0       0
  6192 ;;      Totals:         4       6       0       0       0       0
  6193 ;;Total ram usage:       10 bytes
  6194 ;; Hardware stack levels used: 1
  6195 ;; Hardware stack levels required when called: 4
  6196 ;; This function calls:
  6197 ;;		Nothing
  6198 ;; This function is called by:
  6199 ;;		__ReadSensor
  6200 ;; This function uses a non-reentrant model
  6201 ;;
  6202                           
  6203     0CA3                     ___fltol:	
  6204                           ;psect for function ___fltol
  6205                           
  6206                           
  6207                           ;incstack = 0
  6208                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6209     0CA3  1003               	clrc
  6210     0CA4  0D75               	rlf	___fltol@f1+2,w
  6211     0CA5  0D76               	rlf	___fltol@f1+3,w
  6212     0CA6  0020               	movlb	0	; select bank0
  6213     0CA7  00A5               	movwf	___fltol@exp1
  6214     0CA8  0825               	movf	___fltol@exp1,w
  6215     0CA9  1D03               	btfss	3,2
  6216     0CAA  2CB4               	goto	l3893
  6217     0CAB                     l3889:
  6218     0CAB  3000               	movlw	0
  6219     0CAC  00F6               	movwf	?___fltol+3
  6220     0CAD  3000               	movlw	0
  6221     0CAE  00F5               	movwf	?___fltol+2
  6222     0CAF  3000               	movlw	0
  6223     0CB0  00F4               	movwf	?___fltol+1
  6224     0CB1  3000               	movlw	0
  6225     0CB2  00F3               	movwf	?___fltol
  6226     0CB3  0008               	return
  6227     0CB4                     l3893:
  6228     0CB4  0873               	movf	___fltol@f1,w
  6229     0CB5  00A0               	movwf	??___fltol
  6230     0CB6  0874               	movf	___fltol@f1+1,w
  6231     0CB7  00A1               	movwf	??___fltol+1
  6232     0CB8  0875               	movf	___fltol@f1+2,w
  6233     0CB9  00A2               	movwf	??___fltol+2
  6234     0CBA  0876               	movf	___fltol@f1+3,w
  6235     0CBB  00A3               	movwf	??___fltol+3
  6236     0CBC  301F               	movlw	31
  6237     0CBD                     u4745:
  6238     0CBD  36A3               	lsrf	??___fltol+3,f
  6239     0CBE  0CA2               	rrf	??___fltol+2,f
  6240     0CBF  0CA1               	rrf	??___fltol+1,f
  6241     0CC0  0CA0               	rrf	??___fltol,f
  6242     0CC1  0B89               	decfsz	9,f
  6243     0CC2  2CBD               	goto	u4745
  6244     0CC3  0820               	movf	??___fltol,w
  6245     0CC4  00A4               	movwf	___fltol@sign1
  6246     0CC5  17F5               	bsf	___fltol@f1+2,7
  6247     0CC6  30FF               	movlw	255
  6248     0CC7  05F3               	andwf	___fltol@f1,f
  6249     0CC8  30FF               	movlw	255
  6250     0CC9  05F4               	andwf	___fltol@f1+1,f
  6251     0CCA  30FF               	movlw	255
  6252     0CCB  05F5               	andwf	___fltol@f1+2,f
  6253     0CCC  3000               	movlw	0
  6254     0CCD  05F6               	andwf	___fltol@f1+3,f
  6255     0CCE  3096               	movlw	150
  6256     0CCF  02A5               	subwf	___fltol@exp1,f
  6257     0CD0  1FA5               	btfss	___fltol@exp1,7
  6258     0CD1  2CE5               	goto	l3911
  6259     0CD2  0825               	movf	___fltol@exp1,w
  6260     0CD3  3A80               	xorlw	128
  6261     0CD4  3E97               	addlw	151
  6262     0CD5  1C03               	btfss	3,0
  6263     0CD6  2CAB               	goto	l3889
  6264     0CD7                     l3909:
  6265     0CD7  3001               	movlw	1
  6266     0CD8                     u4775:
  6267     0CD8  36F6               	lsrf	___fltol@f1+3,f
  6268     0CD9  0CF5               	rrf	___fltol@f1+2,f
  6269     0CDA  0CF4               	rrf	___fltol@f1+1,f
  6270     0CDB  0CF3               	rrf	___fltol@f1,f
  6271     0CDC  0B89               	decfsz	9,f
  6272     0CDD  2CD8               	goto	u4775
  6273     0CDE  3001               	movlw	1
  6274     0CDF  00A0               	movwf	??___fltol
  6275     0CE0  0820               	movf	??___fltol,w
  6276     0CE1  07A5               	addwf	___fltol@exp1,f
  6277     0CE2  1903               	btfsc	3,2
  6278     0CE3  2CF6               	goto	l3919
  6279     0CE4  2CD7               	goto	l3909
  6280     0CE5                     l3911:
  6281     0CE5  3020               	movlw	32
  6282     0CE6  0225               	subwf	___fltol@exp1,w
  6283     0CE7  1803               	btfsc	3,0
  6284     0CE8  2CAB               	goto	l3889
  6285     0CE9                     l914:
  6286     0CE9  0825               	movf	___fltol@exp1,w
  6287     0CEA  1903               	btfsc	3,2
  6288     0CEB  2CF6               	goto	l3919
  6289     0CEC  3001               	movlw	1
  6290     0CED                     u4805:
  6291     0CED  35F3               	lslf	___fltol@f1,f
  6292     0CEE  0DF4               	rlf	___fltol@f1+1,f
  6293     0CEF  0DF5               	rlf	___fltol@f1+2,f
  6294     0CF0  0DF6               	rlf	___fltol@f1+3,f
  6295     0CF1  0B89               	decfsz	9,f
  6296     0CF2  2CED               	goto	u4805
  6297     0CF3  3001               	movlw	1
  6298     0CF4  02A5               	subwf	___fltol@exp1,f
  6299     0CF5  2CE9               	goto	l914
  6300     0CF6                     l3919:
  6301     0CF6  0824               	movf	___fltol@sign1,w
  6302     0CF7  1903               	btfsc	3,2
  6303     0CF8  0008               	return
  6304     0CF9  09F3               	comf	___fltol@f1,f
  6305     0CFA  09F4               	comf	___fltol@f1+1,f
  6306     0CFB  09F5               	comf	___fltol@f1+2,f
  6307     0CFC  09F6               	comf	___fltol@f1+3,f
  6308     0CFD  0AF3               	incf	___fltol@f1,f
  6309     0CFE  1903               	skipnz
  6310     0CFF  0AF4               	incf	___fltol@f1+1,f
  6311     0D00  1903               	skipnz
  6312     0D01  0AF5               	incf	___fltol@f1+2,f
  6313     0D02  1903               	skipnz
  6314     0D03  0AF6               	incf	___fltol@f1+3,f
  6315     0D04  0008               	return
  6316     0D05                     __end_of___fltol:
  6317                           
  6318                           	psect	text15
  6319     0A99                     __ptext15:	
  6320 ;; *************** function _ADC_GetConversion *****************
  6321 ;; Defined at:
  6322 ;;		line 112 in file "mcc_generated_files/adc.c"
  6323 ;; Parameters:    Size  Location     Type
  6324 ;;  channel         1    wreg     enum E2485
  6325 ;; Auto vars:     Size  Location     Type
  6326 ;;  channel         1    6[COMMON] enum E2485
  6327 ;; Return value:  Size  Location     Type
  6328 ;;                  2    3[COMMON] unsigned short 
  6329 ;; Registers used:
  6330 ;;		wreg, status,2, status,0
  6331 ;; Tracked objects:
  6332 ;;		On entry : 0/0
  6333 ;;		On exit  : 0/0
  6334 ;;		Unchanged: 0/0
  6335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6336 ;;      Params:         2       0       0       0       0       0
  6337 ;;      Locals:         1       0       0       0       0       0
  6338 ;;      Temps:          1       0       0       0       0       0
  6339 ;;      Totals:         4       0       0       0       0       0
  6340 ;;Total ram usage:        4 bytes
  6341 ;; Hardware stack levels used: 1
  6342 ;; Hardware stack levels required when called: 4
  6343 ;; This function calls:
  6344 ;;		Nothing
  6345 ;; This function is called by:
  6346 ;;		__ReadSensor
  6347 ;; This function uses a non-reentrant model
  6348 ;;
  6349                           
  6350     0A99                     _ADC_GetConversion:	
  6351                           ;psect for function _ADC_GetConversion
  6352                           
  6353                           
  6354                           ;incstack = 0
  6355                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  6356                           ;ADC_GetConversion@channel stored from wreg
  6357     0A99  00F6               	movwf	ADC_GetConversion@channel
  6358                           
  6359                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
  6360     0A9A  0876               	movf	ADC_GetConversion@channel,w
  6361     0A9B  00F5               	movwf	??_ADC_GetConversion
  6362     0A9C  0DF5               	rlf	??_ADC_GetConversion,f
  6363     0A9D  0DF5               	rlf	??_ADC_GetConversion,f
  6364     0A9E  0021               	movlb	1	; select bank1
  6365     0A9F  081D               	movf	29,w	;volatile
  6366     0AA0  0675               	xorwf	??_ADC_GetConversion,w
  6367     0AA1  3983               	andlw	-125
  6368     0AA2  0675               	xorwf	??_ADC_GetConversion,w
  6369     0AA3  009D               	movwf	29	;volatile
  6370                           
  6371                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  6372     0AA4  141D               	bsf	29,0	;volatile
  6373                           
  6374                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(8000000/4000000.0)));
  6375     0AA5  3003               	movlw	3
  6376     0AA6                     u5057:
  6377     0AA6  0B89               	decfsz	9,f
  6378     0AA7  2AA6               	goto	u5057
  6379     0AA8  0000               	nop
  6380                           
  6381                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  6382     0AA9  0021               	movlb	1	; select bank1
  6383     0AAA  149D               	bsf	29,1	;volatile
  6384     0AAB                     l91:	
  6385                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  6386                           
  6387                           
  6388                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  6389     0AAB  189D               	btfsc	29,1	;volatile
  6390     0AAC  2AAB               	goto	l91
  6391                           
  6392                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  6393     0AAD  081C               	movf	28,w	;volatile
  6394     0AAE  00F4               	movwf	?_ADC_GetConversion+1
  6395     0AAF  081B               	movf	27,w	;volatile
  6396     0AB0  00F3               	movwf	?_ADC_GetConversion
  6397     0AB1  0008               	return
  6398     0AB2                     __end_of_ADC_GetConversion:
  6399                           
  6400                           	psect	text16
  6401     0C41                     __ptext16:	
  6402 ;; *************** function __ControlHeat *****************
  6403 ;; Defined at:
  6404 ;;		line 300 in file "main.c"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;		None
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;		None
  6409 ;; Return value:  Size  Location     Type
  6410 ;;                  1    wreg      void 
  6411 ;; Registers used:
  6412 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6418 ;;      Params:         0       0       0       0       0       0
  6419 ;;      Locals:         0       0       0       0       0       0
  6420 ;;      Temps:          5       0       0       0       0       0
  6421 ;;      Totals:         5       0       0       0       0       0
  6422 ;;Total ram usage:        5 bytes
  6423 ;; Hardware stack levels used: 1
  6424 ;; Hardware stack levels required when called: 4
  6425 ;; This function calls:
  6426 ;;		Nothing
  6427 ;; This function is called by:
  6428 ;;		_main
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432     0C41                     __ControlHeat:	
  6433                           ;psect for function __ControlHeat
  6434                           
  6435                           
  6436                           ;main.c: 302:     if (CURRENT_MODE == HEAT_MODE_0)
  6437                           
  6438                           ;incstack = 0
  6439                           ; Regs used in __ControlHeat: [wreg-fsr0h+status,2+status,0+pclath]
  6440     0C41  0878               	movf	_CURRENT_MODE,w
  6441     0C42  0479               	iorwf	_CURRENT_MODE+1,w
  6442     0C43  1903               	btfsc	3,2
  6443     0C44  2C4E               	goto	l3255
  6444     0C45  2C51               	goto	l3259
  6445     0C46                     l3261:
  6446     0C46  3000               	movlw	0
  6447     0C47  0021               	movlb	1	; select bank1
  6448     0C48  0239               	subwf	(_HEAT_CALL_TICKS+1)^(0+128),w
  6449     0C49  30B5               	movlw	181
  6450     0C4A  1903               	skipnz
  6451     0C4B  0238               	subwf	_HEAT_CALL_TICKS^(0+128),w
  6452     0C4C  1C03               	skipc
  6453     0C4D  2C74               	goto	l3267
  6454     0C4E                     l3255:
  6455                           
  6456                           ;main.c: 303:     {;main.c: 304:         RELAY_STATUS = 0;
  6457     0C4E  0020               	movlb	0	; select bank0
  6458     0C4F  01EF               	clrf	_RELAY_STATUS
  6459     0C50  0008               	return
  6460     0C51                     l3259:
  6461     0C51  0879               	movf	_CURRENT_MODE+1,w
  6462     0C52  0085               	movwf	5
  6463     0C53  0878               	movf	_CURRENT_MODE,w
  6464     0C54  0084               	movwf	4
  6465     0C55  3584               	lslf	4,f
  6466     0C56  0D85               	rlf	5,f
  6467     0C57  3000               	movlw	low _SETPOINTS
  6468     0C58  0784               	addwf	4,f
  6469     0C59  3008               	movlw	high _SETPOINTS
  6470     0C5A  3D05               	addwfc	5,w
  6471     0C5B  3880               	iorlw	128
  6472     0C5C  0085               	movwf	5
  6473     0C5D  3F00               	moviw [0]fsr0
  6474     0C5E  00F3               	movwf	??__ControlHeat
  6475     0C5F  3F01               	moviw [1]fsr0
  6476     0C60  00F4               	movwf	??__ControlHeat+1
  6477     0C61  0873               	movf	??__ControlHeat,w
  6478     0C62  3E02               	addlw	2
  6479     0C63  00F5               	movwf	??__ControlHeat+2
  6480     0C64  3000               	movlw	0
  6481     0C65  3D74               	addwfc	??__ControlHeat+1,w
  6482     0C66  00F6               	movwf	??__ControlHeat+3
  6483     0C67  0876               	movf	??__ControlHeat+3,w
  6484     0C68  3A80               	xorlw	128
  6485     0C69  00F7               	movwf	??__ControlHeat+4
  6486     0C6A  0021               	movlb	1	; select bank1
  6487     0C6B  083B               	movf	(_TEMP+1)^(0+128),w
  6488     0C6C  3A80               	xorlw	128
  6489     0C6D  0277               	subwf	??__ControlHeat+4,w
  6490     0C6E  1D03               	skipz
  6491     0C6F  2C72               	goto	u3485
  6492     0C70  083A               	movf	_TEMP^(0+128),w
  6493     0C71  0275               	subwf	??__ControlHeat+2,w
  6494     0C72                     u3485:
  6495     0C72  1C03               	btfss	3,0
  6496     0C73  2C46               	goto	l3261
  6497     0C74                     l3267:
  6498     0C74  0879               	movf	_CURRENT_MODE+1,w
  6499     0C75  0085               	movwf	5
  6500     0C76  0878               	movf	_CURRENT_MODE,w
  6501     0C77  0084               	movwf	4
  6502     0C78  3584               	lslf	4,f
  6503     0C79  0D85               	rlf	5,f
  6504     0C7A  3000               	movlw	low _SETPOINTS
  6505     0C7B  0784               	addwf	4,f
  6506     0C7C  3008               	movlw	high _SETPOINTS
  6507     0C7D  3D05               	addwfc	5,w
  6508     0C7E  3880               	iorlw	128
  6509     0C7F  0085               	movwf	5
  6510     0C80  3F00               	moviw [0]fsr0
  6511     0C81  00F3               	movwf	??__ControlHeat
  6512     0C82  3F01               	moviw [1]fsr0
  6513     0C83  00F4               	movwf	??__ControlHeat+1
  6514     0C84  0873               	movf	??__ControlHeat,w
  6515     0C85  3EFF               	addlw	255
  6516     0C86  00F5               	movwf	??__ControlHeat+2
  6517     0C87  30FF               	movlw	255
  6518     0C88  3D74               	addwfc	??__ControlHeat+1,w
  6519     0C89  00F6               	movwf	??__ControlHeat+3
  6520     0C8A  0021               	movlb	1	; select bank1
  6521     0C8B  083B               	movf	(_TEMP+1)^(0+128),w
  6522     0C8C  3A80               	xorlw	128
  6523     0C8D  00F7               	movwf	??__ControlHeat+4
  6524     0C8E  0876               	movf	??__ControlHeat+3,w
  6525     0C8F  3A80               	xorlw	128
  6526     0C90  0277               	subwf	??__ControlHeat+4,w
  6527     0C91  1D03               	skipz
  6528     0C92  2C95               	goto	u3505
  6529     0C93  0875               	movf	??__ControlHeat+2,w
  6530     0C94  023A               	subwf	_TEMP^(0+128),w
  6531     0C95                     u3505:
  6532     0C95  1803               	skipnc
  6533     0C96  0008               	return
  6534     0C97  3000               	movlw	0
  6535     0C98  0021               	movlb	1	; select bank1
  6536     0C99  0239               	subwf	(_HEAT_CALL_TICKS+1)^(0+128),w
  6537     0C9A  30B5               	movlw	181
  6538     0C9B  1903               	skipnz
  6539     0C9C  0238               	subwf	_HEAT_CALL_TICKS^(0+128),w
  6540     0C9D  1C03               	skipc
  6541     0C9E  0008               	return
  6542                           
  6543                           ;main.c: 326:         {;main.c: 327:             RELAY_STATUS = 1;
  6544     0C9F  0020               	movlb	0	; select bank0
  6545     0CA0  01EF               	clrf	_RELAY_STATUS
  6546     0CA1  0AEF               	incf	_RELAY_STATUS,f
  6547                           
  6548                           ;main.c: 328:             return;
  6549     0CA2  0008               	return
  6550     0CA3                     __end_of__ControlHeat:
  6551                           
  6552                           	psect	text17
  6553     0A6B                     __ptext17:	
  6554 ;; *************** function _SYSTEM_Initialize *****************
  6555 ;; Defined at:
  6556 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6557 ;; Parameters:    Size  Location     Type
  6558 ;;		None
  6559 ;; Auto vars:     Size  Location     Type
  6560 ;;		None
  6561 ;; Return value:  Size  Location     Type
  6562 ;;                  1    wreg      void 
  6563 ;; Registers used:
  6564 ;;		wreg, status,2, status,0, pclath, cstack
  6565 ;; Tracked objects:
  6566 ;;		On entry : 0/0
  6567 ;;		On exit  : 0/0
  6568 ;;		Unchanged: 0/0
  6569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6570 ;;      Params:         0       0       0       0       0       0
  6571 ;;      Locals:         0       0       0       0       0       0
  6572 ;;      Temps:          0       0       0       0       0       0
  6573 ;;      Totals:         0       0       0       0       0       0
  6574 ;;Total ram usage:        0 bytes
  6575 ;; Hardware stack levels used: 1
  6576 ;; Hardware stack levels required when called: 6
  6577 ;; This function calls:
  6578 ;;		_ADC_Initialize
  6579 ;;		_EUSART_Initialize
  6580 ;;		_OSCILLATOR_Initialize
  6581 ;;		_PIN_MANAGER_Initialize
  6582 ;;		_TMR0_Initialize
  6583 ;;		_TMR1_Initialize
  6584 ;;		_WDT_Initialize
  6585 ;; This function is called by:
  6586 ;;		_main
  6587 ;; This function uses a non-reentrant model
  6588 ;;
  6589                           
  6590     0A6B                     _SYSTEM_Initialize:	
  6591                           ;psect for function _SYSTEM_Initialize
  6592                           
  6593                           
  6594                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  6595                           
  6596                           ;incstack = 0
  6597                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6598     0A6B  318A  22B2  318A   	fcall	_PIN_MANAGER_Initialize
  6599                           
  6600                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  6601     0A6E  318A  221A  318A   	fcall	_OSCILLATOR_Initialize
  6602                           
  6603                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  6604     0A71  3189  21EB  318A   	fcall	_WDT_Initialize
  6605                           
  6606                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  6607     0A74  318A  2221  318A   	fcall	_ADC_Initialize
  6608                           
  6609                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
  6610     0A77  318A  2280  318A   	fcall	_TMR1_Initialize
  6611                           
  6612                           ;mcc_generated_files/mcc.c: 58:     TMR0_Initialize();
  6613     0A7A  318A  2258  318A   	fcall	_TMR0_Initialize
  6614                           
  6615                           ;mcc_generated_files/mcc.c: 59:     EUSART_Initialize();
  6616     0A7D  318B  2346         	fcall	_EUSART_Initialize
  6617     0A7F  0008               	return
  6618     0A80                     __end_of_SYSTEM_Initialize:
  6619                           
  6620                           	psect	text18
  6621     09EB                     __ptext18:	
  6622 ;; *************** function _WDT_Initialize *****************
  6623 ;; Defined at:
  6624 ;;		line 72 in file "mcc_generated_files/mcc.c"
  6625 ;; Parameters:    Size  Location     Type
  6626 ;;		None
  6627 ;; Auto vars:     Size  Location     Type
  6628 ;;		None
  6629 ;; Return value:  Size  Location     Type
  6630 ;;                  1    wreg      void 
  6631 ;; Registers used:
  6632 ;;		wreg
  6633 ;; Tracked objects:
  6634 ;;		On entry : 0/0
  6635 ;;		On exit  : 0/0
  6636 ;;		Unchanged: 0/0
  6637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6638 ;;      Params:         0       0       0       0       0       0
  6639 ;;      Locals:         0       0       0       0       0       0
  6640 ;;      Temps:          0       0       0       0       0       0
  6641 ;;      Totals:         0       0       0       0       0       0
  6642 ;;Total ram usage:        0 bytes
  6643 ;; Hardware stack levels used: 1
  6644 ;; Hardware stack levels required when called: 4
  6645 ;; This function calls:
  6646 ;;		Nothing
  6647 ;; This function is called by:
  6648 ;;		_SYSTEM_Initialize
  6649 ;; This function uses a non-reentrant model
  6650 ;;
  6651                           
  6652     09EB                     _WDT_Initialize:	
  6653                           ;psect for function _WDT_Initialize
  6654                           
  6655                           
  6656                           ;mcc_generated_files/mcc.c: 75:     WDTCON = 0x16;
  6657                           
  6658                           ;incstack = 0
  6659                           ; Regs used in _WDT_Initialize: [wreg]
  6660     09EB  3016               	movlw	22
  6661     09EC  0021               	movlb	1	; select bank1
  6662     09ED  0097               	movwf	23	;volatile
  6663     09EE  0008               	return
  6664     09EF                     __end_of_WDT_Initialize:
  6665                           
  6666                           	psect	text19
  6667     0A80                     __ptext19:	
  6668 ;; *************** function _TMR1_Initialize *****************
  6669 ;; Defined at:
  6670 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  6671 ;; Parameters:    Size  Location     Type
  6672 ;;		None
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;		None
  6675 ;; Return value:  Size  Location     Type
  6676 ;;                  1    wreg      void 
  6677 ;; Registers used:
  6678 ;;		wreg, status,2, status,0, pclath, cstack
  6679 ;; Tracked objects:
  6680 ;;		On entry : 0/0
  6681 ;;		On exit  : 0/0
  6682 ;;		Unchanged: 0/0
  6683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6684 ;;      Params:         0       0       0       0       0       0
  6685 ;;      Locals:         0       0       0       0       0       0
  6686 ;;      Temps:          0       0       0       0       0       0
  6687 ;;      Totals:         0       0       0       0       0       0
  6688 ;;Total ram usage:        0 bytes
  6689 ;; Hardware stack levels used: 1
  6690 ;; Hardware stack levels required when called: 5
  6691 ;; This function calls:
  6692 ;;		_TMR1_SetInterruptHandler
  6693 ;; This function is called by:
  6694 ;;		_SYSTEM_Initialize
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698     0A80                     _TMR1_Initialize:	
  6699                           ;psect for function _TMR1_Initialize
  6700                           
  6701                           
  6702                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  6703                           
  6704                           ;incstack = 0
  6705                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6706     0A80  0020               	movlb	0	; select bank0
  6707     0A81  0199               	clrf	25	;volatile
  6708                           
  6709                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0x9E;
  6710     0A82  309E               	movlw	158
  6711     0A83  0097               	movwf	23	;volatile
  6712                           
  6713                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x58;
  6714     0A84  3058               	movlw	88
  6715     0A85  0096               	movwf	22	;volatile
  6716                           
  6717                           ;mcc_generated_files/tmr1.c: 78:     PIR1bits.TMR1IF = 0;
  6718     0A86  1011               	bcf	17,0	;volatile
  6719                           
  6720                           ;mcc_generated_files/tmr1.c: 81:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  6721     0A87  0817               	movf	23,w	;volatile
  6722     0A88  0021               	movlb	1	; select bank1
  6723     0A89  00BD               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  6724     0A8A  0020               	movlb	0	; select bank0
  6725     0A8B  0816               	movf	22,w	;volatile
  6726     0A8C  0021               	movlb	1	; select bank1
  6727     0A8D  00BC               	movwf	_timer1ReloadVal^(0+128)	;volatile
  6728                           
  6729                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  6730     0A8E  1411               	bsf	17,0	;volatile
  6731                           
  6732                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  6733     0A8F  3002               	movlw	low _TMR1_DefaultInterruptHandler
  6734     0A90  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  6735     0A91  3000               	movlw	high _TMR1_DefaultInterruptHandler
  6736     0A92  00F4               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  6737     0A93  318A  2207         	fcall	_TMR1_SetInterruptHandler
  6738                           
  6739                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x31;
  6740     0A95  3031               	movlw	49
  6741     0A96  0020               	movlb	0	; select bank0
  6742     0A97  0098               	movwf	24	;volatile
  6743     0A98  0008               	return
  6744     0A99                     __end_of_TMR1_Initialize:
  6745                           
  6746                           	psect	text20
  6747     0A07                     __ptext20:	
  6748 ;; *************** function _TMR1_SetInterruptHandler *****************
  6749 ;; Defined at:
  6750 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  6751 ;; Parameters:    Size  Location     Type
  6752 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  6753 ;;		 -> _LogicControlISR(1), TMR1_DefaultInterruptHandler(1), 
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;		None
  6756 ;; Return value:  Size  Location     Type
  6757 ;;                  1    wreg      void 
  6758 ;; Registers used:
  6759 ;;		wreg
  6760 ;; Tracked objects:
  6761 ;;		On entry : 0/0
  6762 ;;		On exit  : 0/0
  6763 ;;		Unchanged: 0/0
  6764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6765 ;;      Params:         2       0       0       0       0       0
  6766 ;;      Locals:         0       0       0       0       0       0
  6767 ;;      Temps:          0       0       0       0       0       0
  6768 ;;      Totals:         2       0       0       0       0       0
  6769 ;;Total ram usage:        2 bytes
  6770 ;; Hardware stack levels used: 1
  6771 ;; Hardware stack levels required when called: 4
  6772 ;; This function calls:
  6773 ;;		Nothing
  6774 ;; This function is called by:
  6775 ;;		_TMR1_Initialize
  6776 ;;		_main
  6777 ;; This function uses a non-reentrant model
  6778 ;;
  6779                           
  6780     0A07                     _TMR1_SetInterruptHandler:	
  6781                           ;psect for function _TMR1_SetInterruptHandler
  6782                           
  6783                           
  6784                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  6785                           
  6786                           ;incstack = 0
  6787                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  6788     0A07  0874               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  6789     0A08  0022               	movlb	2	; select bank2
  6790     0A09  00C3               	movwf	(_TMR1_InterruptHandler+1)^(0+256)
  6791     0A0A  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  6792     0A0B  00C2               	movwf	_TMR1_InterruptHandler^(0+256)
  6793     0A0C  0008               	return
  6794     0A0D                     __end_of_TMR1_SetInterruptHandler:
  6795                           
  6796                           	psect	text21
  6797     0A58                     __ptext21:	
  6798 ;; *************** function _TMR0_Initialize *****************
  6799 ;; Defined at:
  6800 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;		None
  6803 ;; Auto vars:     Size  Location     Type
  6804 ;;		None
  6805 ;; Return value:  Size  Location     Type
  6806 ;;                  1    wreg      void 
  6807 ;; Registers used:
  6808 ;;		wreg, status,2, status,0, pclath, cstack
  6809 ;; Tracked objects:
  6810 ;;		On entry : 0/0
  6811 ;;		On exit  : 0/0
  6812 ;;		Unchanged: 0/0
  6813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6814 ;;      Params:         0       0       0       0       0       0
  6815 ;;      Locals:         0       0       0       0       0       0
  6816 ;;      Temps:          0       0       0       0       0       0
  6817 ;;      Totals:         0       0       0       0       0       0
  6818 ;;Total ram usage:        0 bytes
  6819 ;; Hardware stack levels used: 1
  6820 ;; Hardware stack levels required when called: 5
  6821 ;; This function calls:
  6822 ;;		_TMR0_SetInterruptHandler
  6823 ;; This function is called by:
  6824 ;;		_SYSTEM_Initialize
  6825 ;; This function uses a non-reentrant model
  6826 ;;
  6827                           
  6828     0A58                     _TMR0_Initialize:	
  6829                           ;psect for function _TMR0_Initialize
  6830                           
  6831                           
  6832                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  6833                           
  6834                           ;incstack = 0
  6835                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6836     0A58  0021               	movlb	1	; select bank1
  6837     0A59  0815               	movf	21,w	;volatile
  6838     0A5A  39C0               	andlw	192
  6839     0A5B  3817               	iorlw	23
  6840     0A5C  0095               	movwf	21	;volatile
  6841                           
  6842                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0xB2;
  6843     0A5D  30B2               	movlw	178
  6844     0A5E  0020               	movlb	0	; select bank0
  6845     0A5F  0095               	movwf	21	;volatile
  6846                           
  6847                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 178;
  6848     0A60  30B2               	movlw	178
  6849     0A61  00FA               	movwf	_timer0ReloadVal	;volatile
  6850                           
  6851                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  6852     0A62  110B               	bcf	11,2	;volatile
  6853                           
  6854                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  6855     0A63  168B               	bsf	11,5	;volatile
  6856                           
  6857                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  6858     0A64  30EA               	movlw	low _TMR0_DefaultInterruptHandler
  6859     0A65  00F3               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  6860     0A66  3009               	movlw	high _TMR0_DefaultInterruptHandler
  6861     0A67  00F4               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  6862     0A68  318A  2201         	fcall	_TMR0_SetInterruptHandler
  6863     0A6A  0008               	return
  6864     0A6B                     __end_of_TMR0_Initialize:
  6865                           
  6866                           	psect	text22
  6867     0A01                     __ptext22:	
  6868 ;; *************** function _TMR0_SetInterruptHandler *****************
  6869 ;; Defined at:
  6870 ;;		line 133 in file "mcc_generated_files/tmr0.c"
  6871 ;; Parameters:    Size  Location     Type
  6872 ;;  InterruptHan    2    3[COMMON] PTR FTN()void 
  6873 ;;		 -> _UIControlISR(1), TMR0_DefaultInterruptHandler(1), 
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;		None
  6876 ;; Return value:  Size  Location     Type
  6877 ;;                  1    wreg      void 
  6878 ;; Registers used:
  6879 ;;		wreg
  6880 ;; Tracked objects:
  6881 ;;		On entry : 0/0
  6882 ;;		On exit  : 0/0
  6883 ;;		Unchanged: 0/0
  6884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6885 ;;      Params:         2       0       0       0       0       0
  6886 ;;      Locals:         0       0       0       0       0       0
  6887 ;;      Temps:          0       0       0       0       0       0
  6888 ;;      Totals:         2       0       0       0       0       0
  6889 ;;Total ram usage:        2 bytes
  6890 ;; Hardware stack levels used: 1
  6891 ;; Hardware stack levels required when called: 4
  6892 ;; This function calls:
  6893 ;;		Nothing
  6894 ;; This function is called by:
  6895 ;;		_TMR0_Initialize
  6896 ;;		_main
  6897 ;; This function uses a non-reentrant model
  6898 ;;
  6899                           
  6900     0A01                     _TMR0_SetInterruptHandler:	
  6901                           ;psect for function _TMR0_SetInterruptHandler
  6902                           
  6903                           
  6904                           ;mcc_generated_files/tmr0.c: 134:     TMR0_InterruptHandler = InterruptHandler;
  6905                           
  6906                           ;incstack = 0
  6907                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  6908     0A01  0874               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  6909     0A02  0022               	movlb	2	; select bank2
  6910     0A03  00C5               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
  6911     0A04  0873               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  6912     0A05  00C4               	movwf	_TMR0_InterruptHandler^(0+256)
  6913     0A06  0008               	return
  6914     0A07                     __end_of_TMR0_SetInterruptHandler:
  6915                           
  6916                           	psect	text23
  6917     0AB2                     __ptext23:	
  6918 ;; *************** function _PIN_MANAGER_Initialize *****************
  6919 ;; Defined at:
  6920 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6921 ;; Parameters:    Size  Location     Type
  6922 ;;		None
  6923 ;; Auto vars:     Size  Location     Type
  6924 ;;		None
  6925 ;; Return value:  Size  Location     Type
  6926 ;;                  1    wreg      void 
  6927 ;; Registers used:
  6928 ;;		wreg, status,2
  6929 ;; Tracked objects:
  6930 ;;		On entry : 0/0
  6931 ;;		On exit  : 0/0
  6932 ;;		Unchanged: 0/0
  6933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6934 ;;      Params:         0       0       0       0       0       0
  6935 ;;      Locals:         0       0       0       0       0       0
  6936 ;;      Temps:          0       0       0       0       0       0
  6937 ;;      Totals:         0       0       0       0       0       0
  6938 ;;Total ram usage:        0 bytes
  6939 ;; Hardware stack levels used: 1
  6940 ;; Hardware stack levels required when called: 4
  6941 ;; This function calls:
  6942 ;;		Nothing
  6943 ;; This function is called by:
  6944 ;;		_SYSTEM_Initialize
  6945 ;; This function uses a non-reentrant model
  6946 ;;
  6947                           
  6948     0AB2                     _PIN_MANAGER_Initialize:	
  6949                           ;psect for function _PIN_MANAGER_Initialize
  6950                           
  6951                           
  6952                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x04;
  6953                           
  6954                           ;incstack = 0
  6955                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6956     0AB2  3004               	movlw	4
  6957     0AB3  0022               	movlb	2	; select bank2
  6958     0AB4  008C               	movwf	12	;volatile
  6959                           
  6960                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x40;
  6961     0AB5  3040               	movlw	64
  6962     0AB6  008D               	movwf	13	;volatile
  6963                           
  6964                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xF1;
  6965     0AB7  30F1               	movlw	241
  6966     0AB8  0021               	movlb	1	; select bank1
  6967     0AB9  008C               	movwf	12	;volatile
  6968                           
  6969                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xB1;
  6970     0ABA  30B1               	movlw	177
  6971     0ABB  008D               	movwf	13	;volatile
  6972                           
  6973                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xDE;
  6974     0ABC  30DE               	movlw	222
  6975     0ABD  0023               	movlb	3	; select bank3
  6976     0ABE  008D               	movwf	13	;volatile
  6977                           
  6978                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x0F;
  6979     0ABF  300F               	movlw	15
  6980     0AC0  008C               	movwf	12	;volatile
  6981                           
  6982                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x05;
  6983     0AC1  3005               	movlw	5
  6984     0AC2  0024               	movlb	4	; select bank4
  6985     0AC3  008D               	movwf	13	;volatile
  6986                           
  6987                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  6988     0AC4  018C               	clrf	12	;volatile
  6989                           
  6990                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 0;
  6991     0AC5  0021               	movlb	1	; select bank1
  6992     0AC6  1395               	bcf	21,7	;volatile
  6993                           
  6994                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  6995     0AC7  0022               	movlb	2	; select bank2
  6996     0AC8  019D               	clrf	29	;volatile
  6997                           
  6998                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x01;
  6999     0AC9  3001               	movlw	1
  7000     0ACA  009E               	movwf	30	;volatile
  7001     0ACB  0008               	return
  7002     0ACC                     __end_of_PIN_MANAGER_Initialize:
  7003                           
  7004                           	psect	text24
  7005     0A1A                     __ptext24:	
  7006 ;; *************** function _OSCILLATOR_Initialize *****************
  7007 ;; Defined at:
  7008 ;;		line 62 in file "mcc_generated_files/mcc.c"
  7009 ;; Parameters:    Size  Location     Type
  7010 ;;		None
  7011 ;; Auto vars:     Size  Location     Type
  7012 ;;		None
  7013 ;; Return value:  Size  Location     Type
  7014 ;;                  1    wreg      void 
  7015 ;; Registers used:
  7016 ;;		wreg, status,2
  7017 ;; Tracked objects:
  7018 ;;		On entry : 0/0
  7019 ;;		On exit  : 0/0
  7020 ;;		Unchanged: 0/0
  7021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7022 ;;      Params:         0       0       0       0       0       0
  7023 ;;      Locals:         0       0       0       0       0       0
  7024 ;;      Temps:          0       0       0       0       0       0
  7025 ;;      Totals:         0       0       0       0       0       0
  7026 ;;Total ram usage:        0 bytes
  7027 ;; Hardware stack levels used: 1
  7028 ;; Hardware stack levels required when called: 4
  7029 ;; This function calls:
  7030 ;;		Nothing
  7031 ;; This function is called by:
  7032 ;;		_SYSTEM_Initialize
  7033 ;; This function uses a non-reentrant model
  7034 ;;
  7035                           
  7036     0A1A                     _OSCILLATOR_Initialize:	
  7037                           ;psect for function _OSCILLATOR_Initialize
  7038                           
  7039                           
  7040                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x70;
  7041                           
  7042                           ;incstack = 0
  7043                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  7044     0A1A  3070               	movlw	112
  7045     0A1B  0021               	movlb	1	; select bank1
  7046     0A1C  0099               	movwf	25	;volatile
  7047                           
  7048                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  7049     0A1D  0198               	clrf	24	;volatile
  7050                           
  7051                           ;mcc_generated_files/mcc.c: 69:     BORCON = 0x00;
  7052     0A1E  0022               	movlb	2	; select bank2
  7053     0A1F  0196               	clrf	22	;volatile
  7054     0A20  0008               	return
  7055     0A21                     __end_of_OSCILLATOR_Initialize:
  7056                           
  7057                           	psect	text25
  7058     0B46                     __ptext25:	
  7059 ;; *************** function _EUSART_Initialize *****************
  7060 ;; Defined at:
  7061 ;;		line 66 in file "mcc_generated_files/eusart.c"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;		None
  7064 ;; Auto vars:     Size  Location     Type
  7065 ;;		None
  7066 ;; Return value:  Size  Location     Type
  7067 ;;                  1    wreg      void 
  7068 ;; Registers used:
  7069 ;;		wreg, status,2, status,0, pclath, cstack
  7070 ;; Tracked objects:
  7071 ;;		On entry : 0/0
  7072 ;;		On exit  : 0/0
  7073 ;;		Unchanged: 0/0
  7074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7075 ;;      Params:         0       0       0       0       0       0
  7076 ;;      Locals:         0       0       0       0       0       0
  7077 ;;      Temps:          0       0       0       0       0       0
  7078 ;;      Totals:         0       0       0       0       0       0
  7079 ;;Total ram usage:        0 bytes
  7080 ;; Hardware stack levels used: 1
  7081 ;; Hardware stack levels required when called: 5
  7082 ;; This function calls:
  7083 ;;		_EUSART_SetErrorHandler
  7084 ;;		_EUSART_SetFramingErrorHandler
  7085 ;;		_EUSART_SetOverrunErrorHandler
  7086 ;; This function is called by:
  7087 ;;		_SYSTEM_Initialize
  7088 ;; This function uses a non-reentrant model
  7089 ;;
  7090                           
  7091     0B46                     _EUSART_Initialize:	
  7092                           ;psect for function _EUSART_Initialize
  7093                           
  7094                           
  7095                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  7096                           
  7097                           ;incstack = 0
  7098                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7099     0B46  3008               	movlw	8
  7100     0B47  0023               	movlb	3	; select bank3
  7101     0B48  009F               	movwf	31	;volatile
  7102                           
  7103                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x80;
  7104     0B49  3080               	movlw	128
  7105     0B4A  009D               	movwf	29	;volatile
  7106                           
  7107                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  7108     0B4B  3024               	movlw	36
  7109     0B4C  009E               	movwf	30	;volatile
  7110                           
  7111                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0xCF;
  7112     0B4D  30CF               	movlw	207
  7113     0B4E  009B               	movwf	27	;volatile
  7114                           
  7115                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  7116     0B4F  019C               	clrf	28	;volatile
  7117                           
  7118                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  7119     0B50  3000               	movlw	0
  7120     0B51  00F3               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  7121     0B52  3000               	movlw	0
  7122     0B53  00F4               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  7123     0B54  3189  21F5  318B   	fcall	_EUSART_SetFramingErrorHandler
  7124                           
  7125                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  7126     0B57  3000               	movlw	0
  7127     0B58  00F3               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  7128     0B59  3000               	movlw	0
  7129     0B5A  00F4               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  7130     0B5B  3189  21FB  318B   	fcall	_EUSART_SetOverrunErrorHandler
  7131                           
  7132                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  7133     0B5E  3000               	movlw	0
  7134     0B5F  00F3               	movwf	EUSART_SetErrorHandler@interruptHandler
  7135     0B60  3000               	movlw	0
  7136     0B61  00F4               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  7137     0B62  3189  21EF         	fcall	_EUSART_SetErrorHandler
  7138                           
  7139                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  7140     0B64  0022               	movlb	2	; select bank2
  7141     0B65  01AB               	clrf	_eusartRxLastError^(0+256)	;volatile
  7142     0B66  0008               	return
  7143     0B67                     __end_of_EUSART_Initialize:
  7144                           
  7145                           	psect	text26
  7146     09FB                     __ptext26:	
  7147 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  7148 ;; Defined at:
  7149 ;;		line 161 in file "mcc_generated_files/eusart.c"
  7150 ;; Parameters:    Size  Location     Type
  7151 ;;  interruptHan    2    3[COMMON] PTR FTN()void 
  7152 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  7153 ;; Auto vars:     Size  Location     Type
  7154 ;;		None
  7155 ;; Return value:  Size  Location     Type
  7156 ;;                  1    wreg      void 
  7157 ;; Registers used:
  7158 ;;		wreg
  7159 ;; Tracked objects:
  7160 ;;		On entry : 0/0
  7161 ;;		On exit  : 0/0
  7162 ;;		Unchanged: 0/0
  7163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7164 ;;      Params:         2       0       0       0       0       0
  7165 ;;      Locals:         0       0       0       0       0       0
  7166 ;;      Temps:          0       0       0       0       0       0
  7167 ;;      Totals:         2       0       0       0       0       0
  7168 ;;Total ram usage:        2 bytes
  7169 ;; Hardware stack levels used: 1
  7170 ;; Hardware stack levels required when called: 4
  7171 ;; This function calls:
  7172 ;;		Nothing
  7173 ;; This function is called by:
  7174 ;;		_EUSART_Initialize
  7175 ;; This function uses a non-reentrant model
  7176 ;;
  7177                           
  7178     09FB                     _EUSART_SetOverrunErrorHandler:	
  7179                           ;psect for function _EUSART_SetOverrunErrorHandler
  7180                           
  7181                           
  7182                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  7183                           
  7184                           ;incstack = 0
  7185                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  7186     09FB  0874               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  7187     09FC  0022               	movlb	2	; select bank2
  7188     09FD  00BF               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+256)
  7189     09FE  0873               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  7190     09FF  00BE               	movwf	_EUSART_OverrunErrorHandler^(0+256)
  7191     0A00  0008               	return
  7192     0A01                     __end_of_EUSART_SetOverrunErrorHandler:
  7193                           
  7194                           	psect	text27
  7195     09F5                     __ptext27:	
  7196 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  7197 ;; Defined at:
  7198 ;;		line 157 in file "mcc_generated_files/eusart.c"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;  interruptHan    2    3[COMMON] PTR FTN()void 
  7201 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;		None
  7204 ;; Return value:  Size  Location     Type
  7205 ;;                  1    wreg      void 
  7206 ;; Registers used:
  7207 ;;		wreg
  7208 ;; Tracked objects:
  7209 ;;		On entry : 0/0
  7210 ;;		On exit  : 0/0
  7211 ;;		Unchanged: 0/0
  7212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7213 ;;      Params:         2       0       0       0       0       0
  7214 ;;      Locals:         0       0       0       0       0       0
  7215 ;;      Temps:          0       0       0       0       0       0
  7216 ;;      Totals:         2       0       0       0       0       0
  7217 ;;Total ram usage:        2 bytes
  7218 ;; Hardware stack levels used: 1
  7219 ;; Hardware stack levels required when called: 4
  7220 ;; This function calls:
  7221 ;;		Nothing
  7222 ;; This function is called by:
  7223 ;;		_EUSART_Initialize
  7224 ;; This function uses a non-reentrant model
  7225 ;;
  7226                           
  7227     09F5                     _EUSART_SetFramingErrorHandler:	
  7228                           ;psect for function _EUSART_SetFramingErrorHandler
  7229                           
  7230                           
  7231                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  7232                           
  7233                           ;incstack = 0
  7234                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  7235     09F5  0874               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  7236     09F6  0022               	movlb	2	; select bank2
  7237     09F7  00C1               	movwf	(_EUSART_FramingErrorHandler+1)^(0+256)
  7238     09F8  0873               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  7239     09F9  00C0               	movwf	_EUSART_FramingErrorHandler^(0+256)
  7240     09FA  0008               	return
  7241     09FB                     __end_of_EUSART_SetFramingErrorHandler:
  7242                           
  7243                           	psect	text28
  7244     09EF                     __ptext28:	
  7245 ;; *************** function _EUSART_SetErrorHandler *****************
  7246 ;; Defined at:
  7247 ;;		line 165 in file "mcc_generated_files/eusart.c"
  7248 ;; Parameters:    Size  Location     Type
  7249 ;;  interruptHan    2    3[COMMON] PTR FTN()void 
  7250 ;;		 -> EUSART_DefaultErrorHandler(1), 
  7251 ;; Auto vars:     Size  Location     Type
  7252 ;;		None
  7253 ;; Return value:  Size  Location     Type
  7254 ;;                  1    wreg      void 
  7255 ;; Registers used:
  7256 ;;		wreg
  7257 ;; Tracked objects:
  7258 ;;		On entry : 0/0
  7259 ;;		On exit  : 0/0
  7260 ;;		Unchanged: 0/0
  7261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7262 ;;      Params:         2       0       0       0       0       0
  7263 ;;      Locals:         0       0       0       0       0       0
  7264 ;;      Temps:          0       0       0       0       0       0
  7265 ;;      Totals:         2       0       0       0       0       0
  7266 ;;Total ram usage:        2 bytes
  7267 ;; Hardware stack levels used: 1
  7268 ;; Hardware stack levels required when called: 4
  7269 ;; This function calls:
  7270 ;;		Nothing
  7271 ;; This function is called by:
  7272 ;;		_EUSART_Initialize
  7273 ;; This function uses a non-reentrant model
  7274 ;;
  7275                           
  7276     09EF                     _EUSART_SetErrorHandler:	
  7277                           ;psect for function _EUSART_SetErrorHandler
  7278                           
  7279                           
  7280                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  7281                           
  7282                           ;incstack = 0
  7283                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  7284     09EF  0874               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  7285     09F0  0022               	movlb	2	; select bank2
  7286     09F1  00BD               	movwf	(_EUSART_ErrorHandler+1)^(0+256)
  7287     09F2  0873               	movf	EUSART_SetErrorHandler@interruptHandler,w
  7288     09F3  00BC               	movwf	_EUSART_ErrorHandler^(0+256)
  7289     09F4  0008               	return
  7290     09F5                     __end_of_EUSART_SetErrorHandler:
  7291                           
  7292                           	psect	text29
  7293     0A21                     __ptext29:	
  7294 ;; *************** function _ADC_Initialize *****************
  7295 ;; Defined at:
  7296 ;;		line 67 in file "mcc_generated_files/adc.c"
  7297 ;; Parameters:    Size  Location     Type
  7298 ;;		None
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;		None
  7301 ;; Return value:  Size  Location     Type
  7302 ;;                  1    wreg      void 
  7303 ;; Registers used:
  7304 ;;		wreg, status,2
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/0
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7310 ;;      Params:         0       0       0       0       0       0
  7311 ;;      Locals:         0       0       0       0       0       0
  7312 ;;      Temps:          0       0       0       0       0       0
  7313 ;;      Totals:         0       0       0       0       0       0
  7314 ;;Total ram usage:        0 bytes
  7315 ;; Hardware stack levels used: 1
  7316 ;; Hardware stack levels required when called: 4
  7317 ;; This function calls:
  7318 ;;		Nothing
  7319 ;; This function is called by:
  7320 ;;		_SYSTEM_Initialize
  7321 ;; This function uses a non-reentrant model
  7322 ;;
  7323                           
  7324     0A21                     _ADC_Initialize:	
  7325                           ;psect for function _ADC_Initialize
  7326                           
  7327                           
  7328                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xA0;
  7329                           
  7330                           ;incstack = 0
  7331                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  7332     0A21  30A0               	movlw	160
  7333     0A22  0021               	movlb	1	; select bank1
  7334     0A23  009E               	movwf	30	;volatile
  7335                           
  7336                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  7337     0A24  019B               	clrf	27	;volatile
  7338                           
  7339                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  7340     0A25  019C               	clrf	28	;volatile
  7341                           
  7342                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  7343     0A26  3001               	movlw	1
  7344     0A27  009D               	movwf	29	;volatile
  7345     0A28  0008               	return
  7346     0A29                     __end_of_ADC_Initialize:
  7347                           
  7348                           	psect	intentry
  7349     0004                     __pintentry:	
  7350 ;; *************** function _INTERRUPT_InterruptManager *****************
  7351 ;; Defined at:
  7352 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;		None
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;		None
  7357 ;; Return value:  Size  Location     Type
  7358 ;;                  1    wreg      void 
  7359 ;; Registers used:
  7360 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7361 ;; Tracked objects:
  7362 ;;		On entry : 0/0
  7363 ;;		On exit  : 0/0
  7364 ;;		Unchanged: 0/0
  7365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7366 ;;      Params:         0       0       0       0       0       0
  7367 ;;      Locals:         0       0       0       0       0       0
  7368 ;;      Temps:          0       0       0       0       0       0
  7369 ;;      Totals:         0       0       0       0       0       0
  7370 ;;Total ram usage:        0 bytes
  7371 ;; Hardware stack levels used: 1
  7372 ;; Hardware stack levels required when called: 3
  7373 ;; This function calls:
  7374 ;;		_TMR0_ISR
  7375 ;;		_TMR1_ISR
  7376 ;; This function is called by:
  7377 ;;		Interrupt level 1
  7378 ;; This function uses a non-reentrant model
  7379 ;;
  7380                           
  7381     0004                     _INTERRUPT_InterruptManager:
  7382                           
  7383                           ;incstack = 0
  7384     0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  7385                           
  7386                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7387     0005  3180               	pagesel	$
  7388                           
  7389                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  7390     0006  1A8B               	btfsc	11,5	;volatile
  7391     0007  1D0B               	btfss	11,2	;volatile
  7392     0008  280D               	goto	i1l153
  7393                           
  7394                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  7395     0009  318A  2213  3180   	fcall	_TMR0_ISR
  7396                           
  7397                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  7398     000C  2817               	goto	i1l159
  7399     000D                     i1l153:	
  7400                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  7401                           
  7402     000D  1F0B               	btfss	11,6	;volatile
  7403     000E  2817               	goto	i1l159
  7404                           
  7405                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  7406     000F  0021               	movlb	1	; select bank1
  7407     0010  1C11               	btfss	17,0	;volatile
  7408     0011  2817               	goto	i1l159
  7409     0012  0020               	movlb	0	; select bank0
  7410     0013  1C11               	btfss	17,0	;volatile
  7411     0014  2817               	goto	i1l159
  7412                           
  7413                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR1_ISR();
  7414     0015  318A  223C         	fcall	_TMR1_ISR
  7415     0017                     i1l159:	
  7416                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  7417                           
  7418                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  7419                           
  7420     0017  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7421     0018  0009               	retfie
  7422     0019                     __end_of_INTERRUPT_InterruptManager:
  7423                           
  7424                           	psect	text31
  7425     0A3C                     __ptext31:	
  7426 ;; *************** function _TMR1_ISR *****************
  7427 ;; Defined at:
  7428 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  7429 ;; Parameters:    Size  Location     Type
  7430 ;;		None
  7431 ;; Auto vars:     Size  Location     Type
  7432 ;;		None
  7433 ;; Return value:  Size  Location     Type
  7434 ;;                  1    wreg      void 
  7435 ;; Registers used:
  7436 ;;		wreg, status,2, status,0, pclath, cstack
  7437 ;; Tracked objects:
  7438 ;;		On entry : 0/0
  7439 ;;		On exit  : 0/0
  7440 ;;		Unchanged: 0/0
  7441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7442 ;;      Params:         0       0       0       0       0       0
  7443 ;;      Locals:         0       0       0       0       0       0
  7444 ;;      Temps:          0       0       0       0       0       0
  7445 ;;      Totals:         0       0       0       0       0       0
  7446 ;;Total ram usage:        0 bytes
  7447 ;; Hardware stack levels used: 1
  7448 ;; Hardware stack levels required when called: 2
  7449 ;; This function calls:
  7450 ;;		_TMR1_CallBack
  7451 ;;		_TMR1_WriteTimer
  7452 ;; This function is called by:
  7453 ;;		_INTERRUPT_InterruptManager
  7454 ;; This function uses a non-reentrant model
  7455 ;;
  7456                           
  7457     0A3C                     _TMR1_ISR:	
  7458                           ;psect for function _TMR1_ISR
  7459                           
  7460                           
  7461                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  7462                           
  7463                           ;incstack = 0
  7464                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  7465     0A3C  0020               	movlb	0	; select bank0
  7466     0A3D  1011               	bcf	17,0	;volatile
  7467                           
  7468                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  7469     0A3E  0021               	movlb	1	; select bank1
  7470     0A3F  083D               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
  7471     0A40  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  7472     0A41  083C               	movf	_timer1ReloadVal^(0+128),w	;volatile
  7473     0A42  00F0               	movwf	TMR1_WriteTimer@timerVal
  7474     0A43  318A  2249  318A   	fcall	_TMR1_WriteTimer
  7475                           
  7476                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  7477     0A46  3187  27F5         	fcall	_TMR1_CallBack
  7478     0A48  0008               	return
  7479     0A49                     __end_of_TMR1_ISR:
  7480                           
  7481                           	psect	text32
  7482     0A49                     __ptext32:	
  7483 ;; *************** function _TMR1_WriteTimer *****************
  7484 ;; Defined at:
  7485 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  7486 ;; Parameters:    Size  Location     Type
  7487 ;;  timerVal        2    0[COMMON] unsigned short 
  7488 ;; Auto vars:     Size  Location     Type
  7489 ;;		None
  7490 ;; Return value:  Size  Location     Type
  7491 ;;                  1    wreg      void 
  7492 ;; Registers used:
  7493 ;;		wreg, status,2
  7494 ;; Tracked objects:
  7495 ;;		On entry : 0/0
  7496 ;;		On exit  : 0/0
  7497 ;;		Unchanged: 0/0
  7498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7499 ;;      Params:         2       0       0       0       0       0
  7500 ;;      Locals:         0       0       0       0       0       0
  7501 ;;      Temps:          0       0       0       0       0       0
  7502 ;;      Totals:         2       0       0       0       0       0
  7503 ;;Total ram usage:        2 bytes
  7504 ;; Hardware stack levels used: 1
  7505 ;; This function calls:
  7506 ;;		Nothing
  7507 ;; This function is called by:
  7508 ;;		_TMR1_ISR
  7509 ;;		_TMR1_Reload
  7510 ;; This function uses a non-reentrant model
  7511 ;;
  7512                           
  7513     0A49                     _TMR1_WriteTimer:	
  7514                           ;psect for function _TMR1_WriteTimer
  7515                           
  7516                           
  7517                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  7518                           
  7519                           ;incstack = 0
  7520                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  7521     0A49  0020               	movlb	0	; select bank0
  7522     0A4A  1D18               	btfss	24,2	;volatile
  7523     0A4B  2A53               	goto	i1l3041
  7524                           
  7525                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  7526     0A4C  1018               	bcf	24,0	;volatile
  7527                           
  7528                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (uint8_t)(timerVal >> 8);
  7529     0A4D  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  7530     0A4E  0097               	movwf	23	;volatile
  7531                           
  7532                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  7533     0A4F  0870               	movf	TMR1_WriteTimer@timerVal,w
  7534     0A50  0096               	movwf	22	;volatile
  7535                           
  7536                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  7537     0A51  1418               	bsf	24,0	;volatile
  7538                           
  7539                           ;mcc_generated_files/tmr1.c: 133:     }
  7540     0A52  0008               	return
  7541     0A53                     i1l3041:
  7542                           
  7543                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  7544     0A53  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  7545     0A54  0097               	movwf	23	;volatile
  7546                           
  7547                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = (uint8_t)timerVal;
  7548     0A55  0870               	movf	TMR1_WriteTimer@timerVal,w
  7549     0A56  0096               	movwf	22	;volatile
  7550     0A57  0008               	return
  7551     0A58                     __end_of_TMR1_WriteTimer:
  7552                           
  7553                           	psect	text33
  7554     07F5                     __ptext33:	
  7555 ;; *************** function _TMR1_CallBack *****************
  7556 ;; Defined at:
  7557 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  7558 ;; Parameters:    Size  Location     Type
  7559 ;;		None
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;		None
  7562 ;; Return value:  Size  Location     Type
  7563 ;;                  1    wreg      void 
  7564 ;; Registers used:
  7565 ;;		wreg, status,2, status,0, pclath, cstack
  7566 ;; Tracked objects:
  7567 ;;		On entry : 0/0
  7568 ;;		On exit  : 0/0
  7569 ;;		Unchanged: 0/0
  7570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7571 ;;      Params:         0       0       0       0       0       0
  7572 ;;      Locals:         0       0       0       0       0       0
  7573 ;;      Temps:          0       0       0       0       0       0
  7574 ;;      Totals:         0       0       0       0       0       0
  7575 ;;Total ram usage:        0 bytes
  7576 ;; Hardware stack levels used: 1
  7577 ;; Hardware stack levels required when called: 1
  7578 ;; This function calls:
  7579 ;;		NULL
  7580 ;;		_TMR1_DefaultInterruptHandler
  7581 ;;		__LogicControlISR
  7582 ;; This function is called by:
  7583 ;;		_TMR1_ISR
  7584 ;; This function uses a non-reentrant model
  7585 ;;
  7586                           
  7587     07F5                     _TMR1_CallBack:	
  7588                           ;psect for function _TMR1_CallBack
  7589                           
  7590                           
  7591                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  7592                           
  7593                           ;incstack = 0
  7594                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  7595     07F5  0022               	movlb	2	; select bank2
  7596     07F6  0842               	movf	_TMR1_InterruptHandler^(0+256),w
  7597     07F7  0443               	iorwf	(_TMR1_InterruptHandler+1)^(0+256),w
  7598     07F8  1903               	btfsc	3,2
  7599     07F9  0008               	return
  7600                           
  7601                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  7602     07FA  0843               	movf	(_TMR1_InterruptHandler+1)^(0+256),w
  7603     07FB  008A               	movwf	10
  7604     07FC  0842               	movf	_TMR1_InterruptHandler^(0+256),w
  7605     07FD  000A               	callw
  7606     07FE  3187               	pagesel	$
  7607     07FF  0008               	return
  7608     0800                     __end_of_TMR1_CallBack:
  7609                           
  7610                           	psect	text34
  7611     0002                     __ptext34:	
  7612 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  7613 ;; Defined at:
  7614 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  7615 ;; Parameters:    Size  Location     Type
  7616 ;;		None
  7617 ;; Auto vars:     Size  Location     Type
  7618 ;;		None
  7619 ;; Return value:  Size  Location     Type
  7620 ;;                  1    wreg      void 
  7621 ;; Registers used:
  7622 ;;		None
  7623 ;; Tracked objects:
  7624 ;;		On entry : 0/0
  7625 ;;		On exit  : 0/0
  7626 ;;		Unchanged: 0/0
  7627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7628 ;;      Params:         0       0       0       0       0       0
  7629 ;;      Locals:         0       0       0       0       0       0
  7630 ;;      Temps:          0       0       0       0       0       0
  7631 ;;      Totals:         0       0       0       0       0       0
  7632 ;;Total ram usage:        0 bytes
  7633 ;; Hardware stack levels used: 1
  7634 ;; This function calls:
  7635 ;;		Nothing
  7636 ;; This function is called by:
  7637 ;;		_TMR1_Initialize
  7638 ;;		_TMR1_CallBack
  7639 ;; This function uses a non-reentrant model
  7640 ;;
  7641                           
  7642     0002                     _TMR1_DefaultInterruptHandler:	
  7643                           ;psect for function _TMR1_DefaultInterruptHandler
  7644                           
  7645                           
  7646                           ;incstack = 0
  7647                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  7648     0002  0008               	return
  7649     0003                     __end_of_TMR1_DefaultInterruptHandler:
  7650                           
  7651                           	psect	text35
  7652     0B07                     __ptext35:	
  7653 ;; *************** function __LogicControlISR *****************
  7654 ;; Defined at:
  7655 ;;		line 260 in file "main.c"
  7656 ;; Parameters:    Size  Location     Type
  7657 ;;		None
  7658 ;; Auto vars:     Size  Location     Type
  7659 ;;		None
  7660 ;; Return value:  Size  Location     Type
  7661 ;;                  1    wreg      void 
  7662 ;; Registers used:
  7663 ;;		wreg, status,2, status,0
  7664 ;; Tracked objects:
  7665 ;;		On entry : 0/0
  7666 ;;		On exit  : 0/0
  7667 ;;		Unchanged: 0/0
  7668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7669 ;;      Params:         0       0       0       0       0       0
  7670 ;;      Locals:         0       0       0       0       0       0
  7671 ;;      Temps:          1       0       0       0       0       0
  7672 ;;      Totals:         1       0       0       0       0       0
  7673 ;;Total ram usage:        1 bytes
  7674 ;; Hardware stack levels used: 1
  7675 ;; This function calls:
  7676 ;;		Nothing
  7677 ;; This function is called by:
  7678 ;;		_main
  7679 ;;		_TMR1_CallBack
  7680 ;; This function uses a non-reentrant model
  7681 ;;
  7682                           
  7683     0B07                     __LogicControlISR:	
  7684                           ;psect for function __LogicControlISR
  7685                           
  7686                           
  7687                           ;main.c: 263:     LOGIC_TICK++;
  7688                           
  7689                           ;incstack = 0
  7690                           ; Regs used in __LogicControlISR: [wreg+status,2+status,0]
  7691     0B07  3001               	movlw	1
  7692     0B08  00F0               	movwf	??__LogicControlISR
  7693     0B09  0870               	movf	??__LogicControlISR,w
  7694     0B0A  0020               	movlb	0	; select bank0
  7695     0B0B  07EE               	addwf	_LOGIC_TICK,f
  7696                           
  7697                           ;main.c: 265:     if (LOGIC_TICK >= 3)
  7698     0B0C  3003               	movlw	3
  7699     0B0D  026E               	subwf	_LOGIC_TICK,w
  7700     0B0E  1C03               	skipc
  7701     0B0F  2B13               	goto	i1l2657
  7702                           
  7703                           ;main.c: 266:         READ_FLAG = 1;
  7704     0B10  0022               	movlb	2	; select bank2
  7705     0B11  01A8               	clrf	_READ_FLAG^(0+256)
  7706     0B12  0AA8               	incf	_READ_FLAG^(0+256),f
  7707     0B13                     i1l2657:
  7708                           
  7709                           ;main.c: 268:     if (LOGIC_TICK >= 5)
  7710     0B13  3005               	movlw	5
  7711     0B14  0020               	movlb	0	; select bank0
  7712     0B15  026E               	subwf	_LOGIC_TICK,w
  7713     0B16  1C03               	skipc
  7714     0B17  2B1B               	goto	i1l2661
  7715                           
  7716                           ;main.c: 269:         UART_FLAG = 1;
  7717     0B18  0022               	movlb	2	; select bank2
  7718     0B19  01A7               	clrf	_UART_FLAG^(0+256)
  7719     0B1A  0AA7               	incf	_UART_FLAG^(0+256),f
  7720     0B1B                     i1l2661:
  7721     0B1B  300A               	movlw	10
  7722     0B1C  0020               	movlb	0	; select bank0
  7723     0B1D  026E               	subwf	_LOGIC_TICK,w
  7724     0B1E  1C03               	skipc
  7725     0B1F  0008               	return
  7726                           
  7727                           ;main.c: 272:     {;main.c: 273:         LOGIC_FLAG = 1;
  7728     0B20  0022               	movlb	2	; select bank2
  7729     0B21  01A6               	clrf	_LOGIC_FLAG^(0+256)
  7730     0B22  0AA6               	incf	_LOGIC_FLAG^(0+256),f
  7731                           
  7732                           ;main.c: 274:         LOGIC_TICK = 0;
  7733     0B23  0020               	movlb	0	; select bank0
  7734     0B24  01EE               	clrf	_LOGIC_TICK
  7735     0B25  0008               	return
  7736     0B26                     __end_of__LogicControlISR:
  7737                           
  7738                           	psect	text36
  7739     0A13                     __ptext36:	
  7740 ;; *************** function _TMR0_ISR *****************
  7741 ;; Defined at:
  7742 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  7743 ;; Parameters:    Size  Location     Type
  7744 ;;		None
  7745 ;; Auto vars:     Size  Location     Type
  7746 ;;		None
  7747 ;; Return value:  Size  Location     Type
  7748 ;;                  1    wreg      void 
  7749 ;; Registers used:
  7750 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7751 ;; Tracked objects:
  7752 ;;		On entry : 0/0
  7753 ;;		On exit  : 0/0
  7754 ;;		Unchanged: 0/0
  7755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7756 ;;      Params:         0       0       0       0       0       0
  7757 ;;      Locals:         0       0       0       0       0       0
  7758 ;;      Temps:          0       0       0       0       0       0
  7759 ;;      Totals:         0       0       0       0       0       0
  7760 ;;Total ram usage:        0 bytes
  7761 ;; Hardware stack levels used: 1
  7762 ;; Hardware stack levels required when called: 2
  7763 ;; This function calls:
  7764 ;;		_TMR0_CallBack
  7765 ;; This function is called by:
  7766 ;;		_INTERRUPT_InterruptManager
  7767 ;; This function uses a non-reentrant model
  7768 ;;
  7769                           
  7770     0A13                     _TMR0_ISR:	
  7771                           ;psect for function _TMR0_ISR
  7772                           
  7773                           
  7774                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  7775                           
  7776                           ;incstack = 0
  7777                           ; Regs used in _TMR0_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7778     0A13  110B               	bcf	11,2	;volatile
  7779                           
  7780                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  7781     0A14  087A               	movf	_timer0ReloadVal,w	;volatile
  7782     0A15  0020               	movlb	0	; select bank0
  7783     0A16  0095               	movwf	21	;volatile
  7784                           
  7785                           ;mcc_generated_files/tmr0.c: 118:     TMR0_CallBack();
  7786     0A17  318A  2231         	fcall	_TMR0_CallBack
  7787     0A19  0008               	return
  7788     0A1A                     __end_of_TMR0_ISR:
  7789                           
  7790                           	psect	text37
  7791     0A31                     __ptext37:	
  7792 ;; *************** function _TMR0_CallBack *****************
  7793 ;; Defined at:
  7794 ;;		line 123 in file "mcc_generated_files/tmr0.c"
  7795 ;; Parameters:    Size  Location     Type
  7796 ;;		None
  7797 ;; Auto vars:     Size  Location     Type
  7798 ;;		None
  7799 ;; Return value:  Size  Location     Type
  7800 ;;                  1    wreg      void 
  7801 ;; Registers used:
  7802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7803 ;; Tracked objects:
  7804 ;;		On entry : 0/0
  7805 ;;		On exit  : 0/0
  7806 ;;		Unchanged: 0/0
  7807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7808 ;;      Params:         0       0       0       0       0       0
  7809 ;;      Locals:         0       0       0       0       0       0
  7810 ;;      Temps:          0       0       0       0       0       0
  7811 ;;      Totals:         0       0       0       0       0       0
  7812 ;;Total ram usage:        0 bytes
  7813 ;; Hardware stack levels used: 1
  7814 ;; Hardware stack levels required when called: 1
  7815 ;; This function calls:
  7816 ;;		NULL
  7817 ;;		_TMR0_DefaultInterruptHandler
  7818 ;;		__UIControlISR
  7819 ;; This function is called by:
  7820 ;;		_TMR0_ISR
  7821 ;; This function uses a non-reentrant model
  7822 ;;
  7823                           
  7824     0A31                     _TMR0_CallBack:	
  7825                           ;psect for function _TMR0_CallBack
  7826                           
  7827                           
  7828                           ;mcc_generated_files/tmr0.c: 127:     if(TMR0_InterruptHandler)
  7829                           
  7830                           ;incstack = 0
  7831                           ; Regs used in _TMR0_CallBack: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7832     0A31  0022               	movlb	2	; select bank2
  7833     0A32  0844               	movf	_TMR0_InterruptHandler^(0+256),w
  7834     0A33  0445               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
  7835     0A34  1903               	btfsc	3,2
  7836     0A35  0008               	return
  7837                           
  7838                           ;mcc_generated_files/tmr0.c: 128:     {;mcc_generated_files/tmr0.c: 129:         TMR0_In
      +                          terruptHandler();
  7839     0A36  0845               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
  7840     0A37  008A               	movwf	10
  7841     0A38  0844               	movf	_TMR0_InterruptHandler^(0+256),w
  7842     0A39  000A               	callw
  7843     0A3A  318A               	pagesel	$
  7844     0A3B  0008               	return
  7845     0A3C                     __end_of_TMR0_CallBack:
  7846                           
  7847                           	psect	text38
  7848     09EA                     __ptext38:	
  7849 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  7850 ;; Defined at:
  7851 ;;		line 137 in file "mcc_generated_files/tmr0.c"
  7852 ;; Parameters:    Size  Location     Type
  7853 ;;		None
  7854 ;; Auto vars:     Size  Location     Type
  7855 ;;		None
  7856 ;; Return value:  Size  Location     Type
  7857 ;;                  1    wreg      void 
  7858 ;; Registers used:
  7859 ;;		None
  7860 ;; Tracked objects:
  7861 ;;		On entry : 0/0
  7862 ;;		On exit  : 0/0
  7863 ;;		Unchanged: 0/0
  7864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7865 ;;      Params:         0       0       0       0       0       0
  7866 ;;      Locals:         0       0       0       0       0       0
  7867 ;;      Temps:          0       0       0       0       0       0
  7868 ;;      Totals:         0       0       0       0       0       0
  7869 ;;Total ram usage:        0 bytes
  7870 ;; Hardware stack levels used: 1
  7871 ;; This function calls:
  7872 ;;		Nothing
  7873 ;; This function is called by:
  7874 ;;		_TMR0_Initialize
  7875 ;;		_TMR0_CallBack
  7876 ;; This function uses a non-reentrant model
  7877 ;;
  7878                           
  7879     09EA                     _TMR0_DefaultInterruptHandler:	
  7880                           ;psect for function _TMR0_DefaultInterruptHandler
  7881                           
  7882                           
  7883                           ;incstack = 0
  7884                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  7885     09EA  0008               	return
  7886     09EB                     __end_of_TMR0_DefaultInterruptHandler:
  7887                           
  7888                           	psect	text39
  7889     0E2C                     __ptext39:	
  7890 ;; *************** function __UIControlISR *****************
  7891 ;; Defined at:
  7892 ;;		line 132 in file "main.c"
  7893 ;; Parameters:    Size  Location     Type
  7894 ;;		None
  7895 ;; Auto vars:     Size  Location     Type
  7896 ;;  btnDnRead       1    2[COMMON] _Bool 
  7897 ;;  btnUpRead       1    1[COMMON] _Bool 
  7898 ;; Return value:  Size  Location     Type
  7899 ;;                  1    wreg      void 
  7900 ;; Registers used:
  7901 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7902 ;; Tracked objects:
  7903 ;;		On entry : 0/0
  7904 ;;		On exit  : 0/0
  7905 ;;		Unchanged: 0/0
  7906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  7907 ;;      Params:         0       0       0       0       0       0
  7908 ;;      Locals:         2       0       0       0       0       0
  7909 ;;      Temps:          1       0       0       0       0       0
  7910 ;;      Totals:         3       0       0       0       0       0
  7911 ;;Total ram usage:        3 bytes
  7912 ;; Hardware stack levels used: 1
  7913 ;; This function calls:
  7914 ;;		Nothing
  7915 ;; This function is called by:
  7916 ;;		_main
  7917 ;;		_TMR0_CallBack
  7918 ;; This function uses a non-reentrant model
  7919 ;;
  7920                           
  7921     0E2C                     __UIControlISR:	
  7922                           ;psect for function __UIControlISR
  7923                           
  7924                           
  7925                           ;main.c: 134:     _Bool btnUpRead, btnDnRead;;main.c: 137:     switch(DISP_STATE)
  7926                           
  7927                           ;incstack = 0
  7928                           ; Regs used in __UIControlISR: [wreg-fsr0h+status,2+status,0]
  7929     0E2C  2ED0               	goto	i1l2645
  7930     0E2D                     i1l2599:
  7931                           
  7932                           ;main.c: 141:             btnUpRead = PORTAbits.RA4;
  7933     0E2D  3000               	movlw	0
  7934     0E2E  0020               	movlb	0	; select bank0
  7935     0E2F  1A0C               	btfsc	12,4	;volatile
  7936     0E30  3001               	movlw	1
  7937     0E31  00F1               	movwf	__UIControlISR@btnUpRead
  7938                           
  7939                           ;main.c: 142:             btnDnRead = PORTBbits.RB0;
  7940     0E32  3000               	movlw	0
  7941     0E33  180D               	btfsc	13,0	;volatile
  7942     0E34  3001               	movlw	1
  7943     0E35  00F2               	movwf	__UIControlISR@btnDnRead
  7944                           
  7945                           ;main.c: 144:             if (!btnUpRead)
  7946     0E36  0871               	movf	__UIControlISR@btnUpRead,w
  7947     0E37  1D03               	btfss	3,2
  7948     0E38  2E4C               	goto	i1l2609
  7949                           
  7950                           ;main.c: 145:             {;main.c: 147:                 if (_LastUpState)
  7951     0E39  0022               	movlb	2	; select bank2
  7952     0E3A  0846               	movf	__LastUpState^(0+256),w
  7953     0E3B  1903               	btfsc	3,2
  7954     0E3C  2E4C               	goto	i1l2609
  7955                           
  7956                           ;main.c: 148:                 {;main.c: 151:                     if (CURRENT_MODE > HEAT
      +                          _MODE_0)
  7957     0E3D  0879               	movf	_CURRENT_MODE+1,w
  7958     0E3E  3A80               	xorlw	128
  7959     0E3F  00F0               	movwf	??__UIControlISR
  7960     0E40  3080               	movlw	128
  7961     0E41  0270               	subwf	??__UIControlISR,w
  7962     0E42  1D03               	skipz
  7963     0E43  2E46               	goto	u237_25
  7964     0E44  3001               	movlw	1
  7965     0E45  0278               	subwf	_CURRENT_MODE,w
  7966     0E46                     u237_25:
  7967     0E46  1C03               	skipc
  7968     0E47  2E4C               	goto	i1l2609
  7969                           
  7970                           ;main.c: 152:                         CURRENT_MODE--;
  7971     0E48  30FF               	movlw	255
  7972     0E49  07F8               	addwf	_CURRENT_MODE,f
  7973     0E4A  30FF               	movlw	255
  7974     0E4B  3DF9               	addwfc	_CURRENT_MODE+1,f
  7975     0E4C                     i1l2609:
  7976                           
  7977                           ;main.c: 164:             _LastUpState = btnUpRead;
  7978     0E4C  0871               	movf	__UIControlISR@btnUpRead,w
  7979     0E4D  0022               	movlb	2	; select bank2
  7980     0E4E  00C6               	movwf	__LastUpState^(0+256)
  7981                           
  7982                           ;main.c: 166:             if (!btnDnRead)
  7983     0E4F  0872               	movf	__UIControlISR@btnDnRead,w
  7984     0E50  1D03               	btfss	3,2
  7985     0E51  2E64               	goto	i1l2619
  7986                           
  7987                           ;main.c: 167:             {;main.c: 169:                 if (_LastDownState)
  7988     0E52  082A               	movf	__LastDownState^(0+256),w
  7989     0E53  1903               	btfsc	3,2
  7990     0E54  2E64               	goto	i1l2619
  7991                           
  7992                           ;main.c: 170:                 {;main.c: 173:                     if (CURRENT_MODE < HEAT
      +                          _MODE_5)
  7993     0E55  0879               	movf	_CURRENT_MODE+1,w
  7994     0E56  3A80               	xorlw	128
  7995     0E57  00F0               	movwf	??__UIControlISR
  7996     0E58  3080               	movlw	128
  7997     0E59  0270               	subwf	??__UIControlISR,w
  7998     0E5A  1D03               	skipz
  7999     0E5B  2E5E               	goto	u240_25
  8000     0E5C  3005               	movlw	5
  8001     0E5D  0278               	subwf	_CURRENT_MODE,w
  8002     0E5E                     u240_25:
  8003     0E5E  1803               	skipnc
  8004     0E5F  2E64               	goto	i1l2619
  8005                           
  8006                           ;main.c: 174:                         CURRENT_MODE++;
  8007     0E60  3001               	movlw	1
  8008     0E61  07F8               	addwf	_CURRENT_MODE,f
  8009     0E62  3000               	movlw	0
  8010     0E63  3DF9               	addwfc	_CURRENT_MODE+1,f
  8011     0E64                     i1l2619:
  8012                           
  8013                           ;main.c: 186:             _LastDownState = btnDnRead;
  8014     0E64  0872               	movf	__UIControlISR@btnDnRead,w
  8015     0E65  0022               	movlb	2	; select bank2
  8016     0E66  00AA               	movwf	__LastDownState^(0+256)
  8017                           
  8018                           ;main.c: 189:             DISP_STATE = DISP_STATE_2;
  8019     0E67  3001               	movlw	1
  8020     0E68  00A2               	movwf	_DISP_STATE^(0+256)
  8021     0E69  3000               	movlw	0
  8022     0E6A  00A3               	movwf	(_DISP_STATE^(0+256)+1)
  8023     0E6B  148D               	bsf	13,1	;volatile
  8024     0E6C  118C               	bcf	12,3	;volatile
  8025                           
  8026                           ;main.c: 195:             if (CURRENT_MODE > HEAT_MODE_1)
  8027     0E6D  0879               	movf	_CURRENT_MODE+1,w
  8028     0E6E  3A80               	xorlw	128
  8029     0E6F  00F0               	movwf	??__UIControlISR
  8030     0E70  3080               	movlw	128
  8031     0E71  0270               	subwf	??__UIControlISR,w
  8032     0E72  1D03               	skipz
  8033     0E73  2E76               	goto	u241_25
  8034     0E74  3002               	movlw	2
  8035     0E75  0278               	subwf	_CURRENT_MODE,w
  8036     0E76                     u241_25:
  8037     0E76  1C03               	skipc
  8038     0E77  2E8A               	goto	i1l496
  8039                           
  8040                           ;main.c: 196:             {;main.c: 197:                 do { LATAbits.LATA4 = 0; } whil
      +                          e(0);
  8041     0E78  0022               	movlb	2	; select bank2
  8042     0E79  120C               	bcf	12,4	;volatile
  8043                           
  8044                           ;main.c: 199:                 if (CURRENT_MODE > HEAT_MODE_2)
  8045     0E7A  0879               	movf	_CURRENT_MODE+1,w
  8046     0E7B  3A80               	xorlw	128
  8047     0E7C  00F0               	movwf	??__UIControlISR
  8048     0E7D  3080               	movlw	128
  8049     0E7E  0270               	subwf	??__UIControlISR,w
  8050     0E7F  1D03               	skipz
  8051     0E80  2E83               	goto	u242_25
  8052     0E81  3003               	movlw	3
  8053     0E82  0278               	subwf	_CURRENT_MODE,w
  8054     0E83                     u242_25:
  8055     0E83  1C03               	skipc
  8056     0E84  2E88               	goto	i1l493
  8057                           
  8058                           ;main.c: 200:                     do { LATBbits.LATB0 = 0; } while(0);
  8059     0E85  0022               	movlb	2	; select bank2
  8060     0E86  100D               	bcf	13,0	;volatile
  8061     0E87  2E8D               	goto	i1l500
  8062     0E88                     i1l493:	
  8063                           ;main.c: 202:                     do { LATBbits.LATB0 = 1; } while(0);
  8064                           
  8065     0E88  0022               	movlb	2	; select bank2
  8066     0E89  2E8C               	goto	i1l498
  8067     0E8A                     i1l496:	
  8068                           ;main.c: 205:             {;main.c: 206:                 do { LATAbits.LATA4 = 1; } whil
      +                          e(0);
  8069                           
  8070     0E8A  0022               	movlb	2	; select bank2
  8071     0E8B  160C               	bsf	12,4	;volatile
  8072     0E8C                     i1l498:	
  8073                           ;main.c: 207:                 do { LATBbits.LATB0 = 1; } while(0);
  8074                           
  8075     0E8C  140D               	bsf	13,0	;volatile
  8076     0E8D                     i1l500:	
  8077                           ;main.c: 211:             do { LATBbits.LATB2 = 1; } while(0);
  8078                           
  8079     0E8D  150D               	bsf	13,2	;volatile
  8080     0E8E  0008               	return
  8081     0E8F                     i1l2627:
  8082                           
  8083                           ;main.c: 216:             DISP_STATE = DISP_STATE_3;
  8084     0E8F  3002               	movlw	2
  8085     0E90  00A2               	movwf	_DISP_STATE^(0+256)
  8086     0E91  3000               	movlw	0
  8087     0E92  00A3               	movwf	(_DISP_STATE^(0+256)+1)
  8088     0E93  108D               	bcf	13,1	;volatile
  8089     0E94  158C               	bsf	12,3	;volatile
  8090                           
  8091                           ;main.c: 222:             if (CURRENT_MODE > HEAT_MODE_3)
  8092     0E95  0879               	movf	_CURRENT_MODE+1,w
  8093     0E96  3A80               	xorlw	128
  8094     0E97  00F0               	movwf	??__UIControlISR
  8095     0E98  3080               	movlw	128
  8096     0E99  0270               	subwf	??__UIControlISR,w
  8097     0E9A  1D03               	skipz
  8098     0E9B  2E9E               	goto	u243_25
  8099     0E9C  3004               	movlw	4
  8100     0E9D  0278               	subwf	_CURRENT_MODE,w
  8101     0E9E                     u243_25:
  8102     0E9E  1C03               	skipc
  8103     0E9F  2EB3               	goto	i1l518
  8104                           
  8105                           ;main.c: 223:             {;main.c: 224:                 do { LATBbits.LATB0 = 0; } whil
      +                          e(0);
  8106     0EA0  0022               	movlb	2	; select bank2
  8107     0EA1  100D               	bcf	13,0	;volatile
  8108                           
  8109                           ;main.c: 226:                 if (CURRENT_MODE > HEAT_MODE_4)
  8110     0EA2  0879               	movf	_CURRENT_MODE+1,w
  8111     0EA3  3A80               	xorlw	128
  8112     0EA4  00F0               	movwf	??__UIControlISR
  8113     0EA5  3080               	movlw	128
  8114     0EA6  0270               	subwf	??__UIControlISR,w
  8115     0EA7  1D03               	skipz
  8116     0EA8  2EAB               	goto	u244_25
  8117     0EA9  3005               	movlw	5
  8118     0EAA  0278               	subwf	_CURRENT_MODE,w
  8119     0EAB                     u244_25:
  8120     0EAB  1C03               	skipc
  8121     0EAC  2EB0               	goto	i1l515
  8122                           
  8123                           ;main.c: 227:                     do { LATAbits.LATA4 = 0; } while(0);
  8124     0EAD  0022               	movlb	2	; select bank2
  8125     0EAE  120C               	bcf	12,4	;volatile
  8126     0EAF  0008               	return
  8127     0EB0                     i1l515:	
  8128                           ;main.c: 229:                     do { LATAbits.LATA4 = 1; } while(0);
  8129                           
  8130     0EB0  0022               	movlb	2	; select bank2
  8131     0EB1  160C               	bsf	12,4	;volatile
  8132     0EB2  0008               	return
  8133     0EB3                     i1l518:	
  8134                           ;main.c: 232:             {;main.c: 233:                 do { LATAbits.LATA4 = 1; } whil
      +                          e(0);
  8135                           
  8136     0EB3  0022               	movlb	2	; select bank2
  8137     0EB4  160C               	bsf	12,4	;volatile
  8138                           
  8139                           ;main.c: 234:                 do { LATBbits.LATB0 = 1; } while(0);
  8140     0EB5  140D               	bsf	13,0	;volatile
  8141     0EB6  0008               	return
  8142     0EB7                     i1l2635:
  8143                           
  8144                           ;main.c: 240:             DISP_STATE = DISP_STATE_1;
  8145     0EB7  01A2               	clrf	_DISP_STATE^(0+256)
  8146     0EB8  01A3               	clrf	(_DISP_STATE+1)^(0+256)
  8147     0EB9  0021               	movlb	1	; select bank1
  8148     0EBA  160C               	bsf	12,4	;volatile
  8149     0EBB  140D               	bsf	13,0	;volatile
  8150                           
  8151                           ;main.c: 245:             if (CURRENT_MODE > HEAT_MODE_0)
  8152     0EBC  0879               	movf	_CURRENT_MODE+1,w
  8153     0EBD  3A80               	xorlw	128
  8154     0EBE  00F0               	movwf	??__UIControlISR
  8155     0EBF  3080               	movlw	128
  8156     0EC0  0270               	subwf	??__UIControlISR,w
  8157     0EC1  1D03               	skipz
  8158     0EC2  2EC5               	goto	u245_25
  8159     0EC3  3001               	movlw	1
  8160     0EC4  0278               	subwf	_CURRENT_MODE,w
  8161     0EC5                     u245_25:
  8162     0EC5  1C03               	skipc
  8163     0EC6  2ECA               	goto	i1l531
  8164                           
  8165                           ;main.c: 246:                 do { LATBbits.LATB2 = 0; } while(0);
  8166     0EC7  0022               	movlb	2	; select bank2
  8167     0EC8  110D               	bcf	13,2	;volatile
  8168     0EC9  0008               	return
  8169     0ECA                     i1l531:	
  8170                           ;main.c: 248:                 do { LATBbits.LATB2 = 1; } while(0);
  8171                           
  8172     0ECA  0022               	movlb	2	; select bank2
  8173     0ECB  150D               	bsf	13,2	;volatile
  8174     0ECC  0008               	return
  8175     0ECD                     i1l2643:
  8176                           
  8177                           ;main.c: 253:             DISP_STATE = DISP_STATE_1;
  8178     0ECD  01A2               	clrf	_DISP_STATE^(0+256)
  8179     0ECE  01A3               	clrf	(_DISP_STATE+1)^(0+256)
  8180                           
  8181                           ;main.c: 254:     }
  8182     0ECF  0008               	return
  8183     0ED0                     i1l2645:
  8184                           
  8185                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8186                           ; Switch size 1, requested type "simple"
  8187                           ; Number of cases is 1, Range of values is 0 to 0
  8188                           ; switch strategies available:
  8189                           ; Name         Instructions Cycles
  8190                           ; simple_byte            4     3 (average)
  8191                           ; direct_byte            8     6 (fixed)
  8192                           ; jumptable            260     6 (fixed)
  8193                           ;	Chosen strategy is simple_byte
  8194     0ED0  0022               	movlb	2	; select bank2
  8195     0ED1  0823               	movf	(_DISP_STATE+1)^(0+256),w
  8196     0ED2  3A00               	xorlw	0	; case 0
  8197     0ED3  1903               	skipnz
  8198     0ED4  2ED6               	goto	i1l4073
  8199     0ED5  2ECD               	goto	i1l2643
  8200     0ED6                     i1l4073:
  8201                           
  8202                           ; Switch size 1, requested type "simple"
  8203                           ; Number of cases is 3, Range of values is 0 to 2
  8204                           ; switch strategies available:
  8205                           ; Name         Instructions Cycles
  8206                           ; simple_byte           10     6 (average)
  8207                           ; direct_byte           12     6 (fixed)
  8208                           ; jumptable            260     6 (fixed)
  8209                           ;	Chosen strategy is simple_byte
  8210     0ED6  0822               	movf	_DISP_STATE^(0+256),w
  8211     0ED7  3A00               	xorlw	0	; case 0
  8212     0ED8  1903               	skipnz
  8213     0ED9  2E2D               	goto	i1l2599
  8214     0EDA  3A01               	xorlw	1	; case 1
  8215     0EDB  1903               	skipnz
  8216     0EDC  2E8F               	goto	i1l2627
  8217     0EDD  3A03               	xorlw	3	; case 2
  8218     0EDE  1903               	skipnz
  8219     0EDF  2EB7               	goto	i1l2635
  8220     0EE0  2ECD               	goto	i1l2643
  8221     0EE1  0008               	return
  8222     0EE2                     __end_of__UIControlISR:
  8223     007E                     btemp	set	126	;btemp
  8224     007E                     int$flags	set	126
  8225     007E                     wtemp0	set	126
  8226                           
  8227                           	psect	idloc
  8228                           
  8229                           ;Config register IDLOC0 @ 0x8000
  8230                           ;	unspecified, using default values
  8231     8000                     	org	32768
  8232     8000  3FFF               	dw	16383
  8233                           
  8234                           ;Config register IDLOC1 @ 0x8001
  8235                           ;	unspecified, using default values
  8236     8001                     	org	32769
  8237     8001  3FFF               	dw	16383
  8238                           
  8239                           ;Config register IDLOC2 @ 0x8002
  8240                           ;	unspecified, using default values
  8241     8002                     	org	32770
  8242     8002  3FFF               	dw	16383
  8243                           
  8244                           ;Config register IDLOC3 @ 0x8003
  8245                           ;	unspecified, using default values
  8246     8003                     	org	32771
  8247     8003  3FFF               	dw	16383
  8248                           
  8249                           	psect	config
  8250                           
  8251                           ;Config register CONFIG1 @ 0x8007
  8252                           ;	Oscillator Selection
  8253                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  8254                           ;	Watchdog Timer Enable
  8255                           ;	WDTE = OFF, WDT disabled
  8256                           ;	Power-up Timer Enable
  8257                           ;	PWRTE = OFF, PWRT disabled
  8258                           ;	MCLR Pin Function Select
  8259                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  8260                           ;	Flash Program Memory Code Protection
  8261                           ;	CP = OFF, Program memory code protection is disabled
  8262                           ;	Data Memory Code Protection
  8263                           ;	CPD = OFF, Data memory code protection is disabled
  8264                           ;	Brown-out Reset Enable
  8265                           ;	BOREN = ON, Brown-out Reset enabled
  8266                           ;	Clock Out Enable
  8267                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  8268                           ;	Internal/External Switchover
  8269                           ;	IESO = ON, Internal/External Switchover mode is enabled
  8270                           ;	Fail-Safe Clock Monitor Enable
  8271                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  8272     8007                     	org	32775
  8273     8007  3FE4               	dw	16356
  8274                           
  8275                           ;Config register CONFIG2 @ 0x8008
  8276                           ;	Flash Memory Self-Write Protection
  8277                           ;	WRT = OFF, Write protection off
  8278                           ;	PLL Enable
  8279                           ;	PLLEN = OFF, 4x PLL disabled
  8280                           ;	Stack Overflow/Underflow Reset Enable
  8281                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  8282                           ;	Brown-out Reset Voltage Selection
  8283                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  8284                           ;	Low-Voltage Programming Enable
  8285                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  8286     8008                     	org	32776
  8287     8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    32
    Data        1
    BSS         39
    Persistent  42
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     78      80
    BANK1            80     24      30
    BANK2            80      0      39
    BANK3            80     54      54
    BANK4            48      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    WriteString@input	PTR unsigned char  size(1) Largest target is 16
		 -> displayString(BANK2[16]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), NULL(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), NULL(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), NULL(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _LogicControlISR(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _LogicControlISR(), TMR1_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _UIControlISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> _UIControlISR(), NULL(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->__ControlHeat
    __SendDataToConsole->_WriteString
    __SendDataToConsole->___awdiv
    ___awdiv->___wmul
    _WriteString->_EUSART_Write
    __ReadSensor->_ADC_GetConversion
    __ReadSensor->___fltol
    __ReadSensor->___xxtofl
    ___fladd->__Umul8_16
    ___flmul->__Umul8_16
    ___flmul->___xxtofl
    ___fldiv->__Umul8_16
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer
    _TMR1_CallBack->__LogicControlISR
    _TMR0_CallBack->__UIControlISR

Critical Paths under _main in BANK0

    __SendDataToConsole->___awdiv
    ___awdiv->___wmul
    __ReadSensor->___flmul
    _approximateLog->___flmul
    ___flsub->___flmul
    ___fladd->___fldiv
    ___flmul->___fladd
    ___fldiv->__Umul8_16

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    __ReadSensor->_approximateLog
    _approximateLog->___flsub

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _main->__ReadSensor

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   33118
                                             77 BANK0      1     1      0
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR1_SetInterruptHandler
                       __ControlHeat
                        __ReadSensor
                 __SendDataToConsole
 ---------------------------------------------------------------------------------
 (1) __SendDataToConsole                                  10    10      0    1620
                                             10 BANK0     10    10      0
                        _WriteString
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     676
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              7 COMMON     1     1      0
                                              2 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _WriteString                                          4     4      0     145
                                              4 COMMON     4     4      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) __ReadSensor                                         54    54      0   30474
                                              0 BANK3     54    54      0
                  _ADC_GetConversion
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                     _approximateLog
 ---------------------------------------------------------------------------------
 (2) _approximateLog                                      16    12      4   16943
                                              8 BANK1     16    12      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    4627
                                              0 BANK1      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    4382
                                             31 BANK0     20    12      8
                          __Umul8_16 (ARG)
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4973
                                             51 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     980
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    2583
                                              5 BANK0     26    18      8
                          __Umul8_16 (ARG)
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     566
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     427
                                              3 COMMON     4     0      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    4     2      2      31
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) __ControlHeat                                         5     5      0       0
                                              3 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     642
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0     330
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_CallBack                                        0     0      0       0
                                NULL *
       _TMR1_DefaultInterruptHandler *
                   __LogicControlISR *
 ---------------------------------------------------------------------------------
 (8) __LogicControlISR                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0      90
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR0_CallBack                                        0     0      0      90
                                NULL *
       _TMR0_DefaultInterruptHandler *
                      __UIControlISR *
 ---------------------------------------------------------------------------------
 (8) __UIControlISR                                        3     3      0      90
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR0_SetInterruptHandler
   _TMR1_SetInterruptHandler
   __ControlHeat
   __ReadSensor
     _ADC_GetConversion
     ___fladd
       __Umul8_16 (ARG)
       ___fldiv (ARG)
         __Umul8_16 (ARG)
     ___fldiv
     ___flmul
       __Umul8_16
       ___fladd (ARG)
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
     _approximateLog
       ___fladd
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
   __SendDataToConsole
     _WriteString
       _EUSART_Write
     ___awdiv
       ___wmul (ARG)
     ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       NULL(Fake) *
       _TMR0_DefaultInterruptHandler *
       __UIControlISR *
   _TMR1_ISR
     _TMR1_CallBack
       NULL(Fake) *
       _TMR1_DefaultInterruptHandler *
       __LogicControlISR *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      D6       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     4E      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     18      1E       8       37.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      27      10       48.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50     36      36      12       67.5%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      D6      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon May 20 22:38:47 2024

                                            _A 0812                                              _B 080E  
                                            _C 080A                                   ___fldiv@aexp 003E  
                                 ___fldiv@bexp 003D                                   ___fldiv@sign 0036  
                                           l91 0AAB                                   ___awdiv@sign 0027  
                          ___wmul@multiplicand 0075                                _timer0ReloadVal 007A  
                          __Umul8_16@word_mpld 0022                                            l291 0A2A  
                                          l713 0AF3                                            l465 0C3E  
                                          l914 0CE9                                _timer1ReloadVal 00BC  
               ?_EUSART_SetFramingErrorHandler 0073                                            wreg 0009  
                                 ___flmul@aexp 0061                                   ___flmul@bexp 0066  
                                 ___flmul@sign 0060                                   ___flmul@temp 006B  
                                 ___flmul@prod 0067                                   ___fltol@exp1 0025  
                                         l1020 056C                                           l1014 0518  
                                         l1122 04C6                                           l1018 0587  
                                         l1035 0608                                           l1070 06C8  
                                         l1160 0DEA                                           l1056 067F  
                                         l1048 0667                                           l1129 0B37  
                                         l1154 0DB6                                           l1091 07CF  
                                         l1092 07E7                                           l3101 0BC6  
                                         l1094 07F2                                           l1167 0DFE  
                                         l3111 0BE1                                           l1168 0E08  
                                         l3115 0BE9                                           l3107 0BD8  
                                         l4021 0C09                                           l4015 0C01  
                                         l3401 050D                                           l3411 0522  
                                         l3059 0ACF                                           l3083 0BA7  
                                         l4051 0C37                                           l4027 0C11  
                                         l3261 0C46                                           l3405 0510  
                                         l4045 0C2C                                           l3255 0C4E  
                                         l3511 0627                                           l3503 061A  
                                         l3441 0540                                           l3089 0BB2  
                                         l3267 0C74                                           l3259 0C51  
                                         l3611 06BD                                           l3451 0574  
                                         l3099 0BBA                                           l3525 0639  
                                         l3517 062E                                           l3381 04EC  
                                         l3711 07EE                                           l3631 06F3  
                                         l3615 06C0                                           l3551 067B  
                                         l3519 0630                                           l3383 04F4  
                                         l3625 06E7                                           l3561 0B31  
                                         l3529 063B                                           l3449 0572  
                                         l3377 04E9                                           l3651 073A  
                                         l3731 02D9                                           l3547 0677  
                                         l3475 05A5                                           l3467 0595  
                                         l3459 0582                                           l3661 0758  
                                         l3821 0460                                           l3813 0432  
                                         l3733 02DB                                           l3477 05A7  
                                         l3485 05B6                                           l3911 0CE5  
                                         l3591 069B                                           l3815 0449  
                                         l3751 02FC                                           l3735 02E3  
                                         l3495 0600                                           l3657 0753  
                                         l3825 0462                                           l3761 0312  
                                         l3753 0304                                           l3683 078C  
                                         l3675 075E                                           l3659 071C  
                                         l3595 069E                                           l3835 048B  
                                         l3909 0CD7                                           l3941 0DD7  
                                         l3677 0775                                           l3597 06A6  
                                         l3845 04B7                                           l3749 02FA  
                                         l3919 0CF6                                           l3951 0DEF  
                                         l3935 0DC5                                           l3687 078E  
                                         l3839 04A0                                           l3929 0DAE  
                                         l3697 07B7                                           l3963 0E23  
                                         l3939 0DC7                                           l3875 0AEC  
                                         l3893 0CB4                                           l3949 0DFC  
                                         l3889 0CAB                                           _LATA 010C  
                                         _LATB 010D                                           u3205 0BD9  
                                         u4115 0B38                                           u4035 0652  
                                         u3165 0BBD                                           u3505 0C95  
                                         u4225 0724                                           u3185 0BC7  
                                         u4315 076A                                           u4235 072B  
                                         u3195 0BD1                                           u4405 07D9  
                                         u4255 0734                                           u5057 0AA6  
                                         u4265 0748                                           u4505 0382  
                                         u4515 03AD                                           u3485 0C72  
                                         u4525 03FB                                           u4295 0761  
                                         u4535 0412                                           u3815 0578  
                                         u4385 07A5                                           u4545 0421  
                                         u4705 0AF4                                           u3770 055F  
                                         u4395 07C0                                           u4555 0435  
                                         u4715 0AF9                                           u3780 0560  
                                         u4805 0CED                                           u4645 0479  
                                         u3765 0554                                           u4655 0494  
                                         u4575 043E                                           u3935 061B  
                                         u4745 0CBD                                           u4905 0DF6  
                                         u4665 04AA                                           u3893 05C8  
                                         u3885 05AB                                           u4775 0CD8  
                                         u4945 0E10                                           u4865 0DD0  
                                         u4885 0DE4                                           _TEMP 00BA  
                                         _TMR0 0015                                           _WPUA 020C  
                                         _WPUB 020D                                           _main 0BEE  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                __end_of_TURN_ON 081A  
                                         start 0019                                ___fldiv@new_exp 0037  
                               _approximateLog 0EE2                     ??_TMR1_SetInterruptHandler 0075  
                      __end_of_TMR0_Initialize 0A6B                 ??_TMR0_DefaultInterruptHandler 0070  
                                ?_EUSART_Write 0070                  __end_of_OSCILLATOR_Initialize 0A21  
                                ___fltol@sign1 0024                                __end_of___fladd 0685  
                                        ?_main 0070                                __end_of___fldiv 07F5  
                              __end_of___awdiv 0BEE                                __end_of___flmul 04D3  
                              __end_of___flsub 0B9C                                __end_of___fltol 0D05  
                              ___awdiv@divisor 0022                                          _T1CON 0018  
                                        i1l153 000D                                          i1l500 0E8D  
                                        i1l159 0017                                          i1l531 0ECA  
                                        i1l515 0EB0                                          i1l518 0EB3  
                                        i1l493 0E88                                          i1l496 0E8A  
                                        i1l498 0E8C                                ___awdiv@counter 0026  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        _TMR1H 0017                                          _TMR1L 0016  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
                    ?_TMR0_SetInterruptHandler 0073                               __end_of_TMR0_ISR 0A1A  
                             __end_of_TMR1_ISR 0A49                               __end_of_SHUT_OFF 081C  
                               _WDT_Initialize 09EB                                ??__UIControlISR 0070  
                      __end_of_TMR1_Initialize 0A99                                          pclath 000A  
                                        status 0003                                          wtemp0 007E  
                       __end_of_approximateLog 1000                                _TMR1_WriteTimer 0A49  
                              __initialization 001B                                   __end_of_main 0C41  
                               ??_EUSART_Write 0073                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 0078                                  ??__ReadSensor 0077  
                       __end_of_WDT_Initialize 09EF              _EUSART_DefaultFramingErrorHandler 0000  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 013E                                         _ADRESH 009C  
                                       _EEADRH 0192                                         _ADRESL 009B  
                                       _EEADRL 0191                                         _EEDATH 0194  
                                       _EEDATL 0193                                         _EECON2 0196  
                             ___awdiv@dividend 0024                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _BORCON 0116  
                                       _T1GCON 0019                        TMR1_WriteTimer@timerVal 0070  
                                       i1l3041 0A53                                         i1l4073 0ED6  
                                       i1l2609 0E4C                                         i1l2643 0ECD  
                                       i1l2635 0EB7                                         i1l2627 0E8F  
                                       i1l2619 0E64                                         i1l2645 0ED0  
                                       i1l2661 0B1B                                         i1l2657 0B13  
                                       i1l2599 0E2D                                         u240_25 0E5E  
                                       u241_25 0E76                                         u242_25 0E83  
                                       u243_25 0E9E                                         u244_25 0EAB  
                                       u245_25 0EC5                                         u237_25 0E46  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                             __end_of___xxtofl 0E2C                                ?_approximateLog 00A8  
                            __end_of_SETPOINTS 080A                                  ?__ControlHeat 0070  
         __end_of_TMR1_DefaultInterruptHandler 0003                   _TMR1_DefaultInterruptHandler 0002  
                                    ??___fladd 0047                                         ___wmul 0AE9  
                                    ??___fldiv 002D                                      ??___awdiv 0077  
                                    ??___flmul 005B                                      ??___flsub 0077  
                                    ??___fltol 0020                              ?__LogicControlISR 0070  
                             ?_TMR0_Initialize 0070                               ___awdiv@quotient 0028  
                           ??__LogicControlISR 0070                                ?_WDT_Initialize 0070  
                     ADC_GetConversion@channel 0076                          __end_of_TMR0_CallBack 0A3C  
                          __end_of__ReadSensor 02C3       TMR1_SetInterruptHandler@InterruptHandler 0073  
     TMR0_SetInterruptHandler@InterruptHandler 0073                        __end_of_TMR1_WriteTimer 0A58  
                        __end_of_TMR1_CallBack 0800                               ?_TMR1_Initialize 0070  
                                 ___xxtofl@arg 0026                                   ___xxtofl@exp 0025  
                            _SYSTEM_Initialize 0A6B                                   ___xxtofl@val 0073  
                      __end_of__initialization 0034                             ?_SYSTEM_Initialize 0070  
                               ??__ControlHeat 0073                                     ___fltol@f1 0073  
                          __ReadSensor@Rpullup 01A4                                 __pcstackCOMMON 0070  
                                 __pidataBANK2 0003                            ??_SYSTEM_Initialize 0075  
                                    ?_TMR0_ISR 0070                                      ?_TMR1_ISR 0070  
                ?_TMR1_DefaultInterruptHandler 0070                                  _MIN_IDLE_TIME 081C  
                               _OPTION_REGbits 0095                ??_EUSART_SetOverrunErrorHandler 0075  
                    __end_of_SYSTEM_Initialize 0A80                                     __pbssBANK0 006E  
                                   __pbssBANK1 00B8                                     __pbssBANK2 0120  
                         __end_of_EUSART_Write 0A31                              __end_of__Umul8_16 0B46  
                              approximateLog@x 00A8                                approximateLog@y 00B4  
                              _HEAT_CALL_TICKS 00B8                                     __pmaintext 0BEE  
             __end_of_TMR0_SetInterruptHandler 0A07                                        ?___wmul 0073  
                                   ??_TMR0_ISR 0073                                     ??_TMR1_ISR 0072  
                                   __pintentry 0004                                        _BAUDCON 019F  
                                      _APFCON0 011D                                        _APFCON1 011E  
                                 WriteString@i 0075                                  ??_WriteString 0074  
                                  __ReadSensor 0038                                      ?___xxtofl 0073  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 0075  
                           __end_of_ONE_SECOND 0818                               ?_TMR1_WriteTimer 0070  
                                      _TURN_ON 0818                               __ReadSensor$1710 01CC  
                             __ReadSensor$1707 01C0                               __ReadSensor$1708 01C4  
                             __ReadSensor$1709 01C8                           _ADC_InterruptHandler 0124  
                      __UIControlISR@btnDnRead 0072                                        ___fladd 04D3  
                                      ___fldiv 0685                                        ___awdiv 0B9C  
                                      ___flmul 02C3                                        ___flsub 0B67  
                                      ___fltol 0CA3                        __UIControlISR@btnUpRead 0071  
                             __ReadSensor@Rntc 01AC                               __ReadSensor@Vout 01A0  
                             __ReadSensor@logR 01D2                               __ReadSensor@invT 01B0  
                               main@savedRelay 006D                                        __ptext1 0D05  
                                      __ptext2 0AE9                                        __ptext3 0B9C  
                                      __ptext4 0ACC                                        __ptext5 0A29  
                                      __ptext6 0038                                        __ptext7 0EE2  
                                      __ptext8 0B67                                        __ptext9 04D3  
               ??_TMR1_DefaultInterruptHandler 0070                                      _T1CONbits 0018  
                        _OSCILLATOR_Initialize 0A1A                                  __ReadSensor@T 01B4  
                                   ??___xxtofl 0020                           __end_of__ControlHeat 0CA3  
                     ??_PIN_MANAGER_Initialize 0073                      ?_TMR1_SetInterruptHandler 0073  
                          __end_of_WriteString 0AE9                                        clrloop0 0A0E  
                             ??_approximateLog 0077                           end_of_initialization 0034  
                                    _READ_FLAG 0128                          __end_of__UIControlISR 0EE2  
        __end_of_EUSART_SetOverrunErrorHandler 0A01                  _EUSART_SetOverrunErrorHandler 09FB  
                         __end_of_MIN_RUN_TIME 0820                              _EUSART_Initialize 0B46  
                           ?_EUSART_Initialize 0070                                      _RCSTAbits 019D  
                                    _SETPOINTS 0800                                      _UART_FLAG 0127  
                          ??_EUSART_Initialize 0075                               ??_WDT_Initialize 0073  
                     _TMR0_SetInterruptHandler 0A01                                      _PORTAbits 000C  
                                    _PORTBbits 000D                                    ___fladd@grs 0052  
                                ___xxtofl@sign 0024                                      _TRISAbits 008C  
                                    _TRISBbits 008D                                   _CURRENT_MODE 0078  
                                  ___fldiv@grs 0039                                    ___fldiv@rem 0032  
                                  ___flmul@grs 0062                      __end_of_EUSART_Initialize 0B67  
                                    _TXSTAbits 019E                                   _READING_ITER 0120  
                         __ReadSensor@adcValue 01D0                     _EUSART_DefaultErrorHandler 0000  
                               __end_of___wmul 0B07                                   _EUSART_Write 0A29  
                               _ADC_Initialize 0A21                         ?_OSCILLATOR_Initialize 0070  
                                  _WriteString 0ACC                            start_initialization 001B  
               ?_EUSART_SetOverrunErrorHandler 0073                     _EUSART_FramingErrorHandler 0140  
                             WriteString@input 0077                                       ??___wmul 0077  
                       _EUSART_SetErrorHandler 09EF                         __end_of_ADC_Initialize 0A29  
                                    __Umul8_16 0B26                                    __pdataBANK2 0146  
                                 ?__ReadSensor 0070                                      ___fladd@a 0043  
                                    ___fladd@b 003F                                      ___fldiv@a 0025  
                                    ___fldiv@b 0029                                      ___flmul@a 0057  
                                    ___flmul@b 0053                                    __pbssCOMMON 0078  
                                    ___flsub@a 00A0                                      ___flsub@b 00A4  
                                    ___latbits 0001                                  __pcstackBANK0 0020  
                                __pcstackBANK1 00A0                                  __pcstackBANK3 01A0  
                   __end_of__SendDataToConsole 0D98                                      __end_of_A 0816  
                                    __end_of_B 0812                                      __end_of_C 080E  
                        _TMR0_InterruptHandler 0144                                      __pnvBANK2 013C  
                                 __ControlHeat 0C41                         _PIN_MANAGER_Initialize 0AB2  
                                 _RELAY_STATUS 006F               __end_of_TMR1_SetInterruptHandler 0A0D  
                                     ?___fladd 003F                                       ?___fldiv 0025  
                                     ?___awdiv 0022                                       ?___flmul 0053  
                                     ?___flsub 00A0                                       ?___fltol 0073  
                                   ?__Umul8_16 0073                                ?_ADC_Initialize 0070  
                 ??_INTERRUPT_InterruptManager 0073                                   _MIN_RUN_TIME 081E  
                                 __LastUpState 0146                                __ReadSensor@Vcc 01A8  
                             __LogicControlISR 0B07                                  _TMR0_CallBack 0A31  
                               __LastDownState 012A                                  _TMR1_CallBack 07F5  
                            ??_TMR0_Initialize 0075                                 ___wmul@product 0020  
                                     _LATAbits 010C         EUSART_SetErrorHandler@interruptHandler 0073  
                                     _LATBbits 010D                                      clear_ram0 0A0D  
                                     _PIE1bits 0091                              _eusartRxLastError 012B  
                   ??_TMR0_SetInterruptHandler 0075                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0075                                       _TMR0_ISR 0A13  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR1_ISR 0A3C  
                                     _SHUT_OFF 081A                              ??_TMR1_Initialize 0075  
                                   _ADCON0bits 009D                              ___wmul@multiplier 0073  
                               ?_TMR0_CallBack 0070                                 ?_TMR1_CallBack 0070  
                                  _FULL_SAMPLE 0129                                     _EECON1bits 0195  
                            _ADC_GetConversion 0A99                        ??_OSCILLATOR_Initialize 0073  
                                  ??__Umul8_16 0075                            _EUSART_ErrorHandler 013C  
                           ?_ADC_GetConversion 0073                       _TMR1_SetInterruptHandler 0A07  
                                 ?_WriteString 0070                          __end_of_MIN_IDLE_TIME 081E  
                        _TMR1_InterruptHandler 0142                            ??_ADC_GetConversion 0075  
                                     ___xxtofl 0D98                                       __ptext10 02C3  
                                     __ptext11 0B26                                       __ptext20 0A07  
                                     __ptext12 0685                                       __ptext21 0A58  
                                     __ptext13 0D98                                     _T1GCONbits 0019  
                                     __ptext22 0A01                                       __ptext14 0CA3  
                                     __ptext31 0A3C                                       __ptext23 0AB2  
                                     __ptext15 0A99                                       __ptext32 0A49  
                                     __ptext24 0A1A                                       __ptext16 0C41  
                                     __ptext33 07F5                                       __ptext25 0B46  
                                     __ptext17 0A6B                                       __ptext34 0002  
                                     __ptext26 09FB                                       __ptext18 09EB  
                                     __ptext35 0B07                                       __ptext27 09F5  
                                     __ptext19 0A80                                       __ptext36 0A13  
                                     __ptext28 09EF                                       __ptext37 0A31  
                                     __ptext29 0A21                                       __ptext38 09EA  
                                     __ptext39 0E2C                                     _DISP_STATE 0122  
                               __ReadSensor@Tc 01B8                                 __ReadSensor@Tf 01BC  
                      __SendDataToConsole@huns 0032                        __SendDataToConsole@ones 002E  
                      __SendDataToConsole@tens 0030           __end_of_TMR0_DefaultInterruptHandler 09EB  
                 _TMR0_DefaultInterruptHandler 09EA                      __end_of_ADC_GetConversion 0AB2  
                      ?_EUSART_SetErrorHandler 0073  EUSART_SetOverrunErrorHandler@interruptHandler 0073  
                                     int$flags 007E             __end_of_INTERRUPT_InterruptManager 0019  
                   _INTERRUPT_InterruptManager 0004          __end_of_EUSART_SetFramingErrorHandler 09FB  
                _EUSART_SetFramingErrorHandler 09F5                              ??_TMR1_WriteTimer 0072  
                                   _LOGIC_FLAG 0126                                     _INTCONbits 000B  
                                   _LOGIC_TICK 006E                                ??_TMR0_CallBack 0073  
                              ??_TMR1_CallBack 0071                                       intlevel1 0000  
                                __UIControlISR 0E2C                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 09F5                               ??_ADC_Initialize 0073  
                ?_TMR0_DefaultInterruptHandler 0070                             __SendDataToConsole 0D05  
                                   _ONE_SECOND 0816                       __end_of__LogicControlISR 0B26  
EUSART_SetFramingErrorHandler@interruptHandler 0073                            ?__SendDataToConsole 0070  
                                __pstringtext1 0800                                  __pstringtext2 080A  
                                __pstringtext3 080E                                  __pstringtext4 0812  
                                __pstringtext5 0816                                  __pstringtext6 0818  
                                __pstringtext7 081A                                  __pstringtext8 081C  
                                __pstringtext9 081E                         __Umul8_16@multiplicand 0073  
                                   _OPTION_REG 0095                                _TMR0_Initialize 0A58  
                                ___fladd@signs 004F                             EUSART_Write@txData 0073  
                                _displayString 012C                 __end_of_PIN_MANAGER_Initialize 0ACC  
                               ?__UIControlISR 0070                           ??__SendDataToConsole 002A  
                                 ___fladd@aexp 0050                                   ___fladd@bexp 0051  
                          _approximateLog$1711 00AC                            _approximateLog$1712 00B0  
                         __Umul8_16@multiplier 0024                                _TMR1_Initialize 0A80  
                            __Umul8_16@product 0020  
